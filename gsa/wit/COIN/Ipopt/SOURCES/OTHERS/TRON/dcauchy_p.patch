--- dcauchy.f	Mon Apr 22 18:14:28 2002
+++ dcauchy_p.f	Mon Apr 22 18:14:19 2002
@@ -1,5 +1,39 @@
       subroutine dcauchy(n,x,xl,xu,a,diag,col_ptr,row_ind,g,delta,
-     +                   alpha,s,wa)
+     +                   alpha,s,wa,
+     1     IPITER, IPN, NIND, M, NORIG, XORIG, CSCALE, IVAR,
+     1     NFIX, IFIX, SOFLAG, C,
+     1     NLB, ILB, NUB, IUB, S_L, S_U,
+     1     KCONSTR, LRS, RS, LIS, IS, LRW, RW, LIW, IW, IERR)
+      IMPLICIT NONE
+      integer IPITER
+      integer IPN
+      integer NIND
+      integer M
+      integer NORIG
+      double precision XORIG(NORIG)
+      double precision CSCALE(*)
+      integer IVAR(IPN)
+      integer NFIX
+      integer IFIX(NFIX)
+      logical SOFLAG
+      double precision C(M)
+      integer NLB
+      integer ILB(NLB)
+      integer NUB
+      integer IUB(NUB)
+      double precision S_L(NLB)
+      double precision S_U(NUB)
+      integer KCONSTR(6)
+      integer LRS
+      double precision RS(LRS)
+      integer LIS
+      integer IS(LIS)
+      integer LRW
+      double precision RW(LRW)
+      integer LIW
+      integer IW(LIW)
+      integer IERR
+
       integer n
       integer col_ptr(n+1), row_ind(*)
       double precision delta, alpha
@@ -125,9 +159,15 @@
       logical search, interp
       integer nbrpt
       double precision alphas, brptmax, brptmin, gts, q
+      double precision snrm, gnrm, macheps, precfact
+      parameter( precfact = 1.d1 )
+
+      double precision dnrm2, ddot, d1mach
+      external dnrm2, ddot, d1mach
+
+      include 'IPOPT.INC'
 
-      double precision dnrm2, ddot
-      external dnrm2, ddot
+      macheps = d1mach(4)
 
 c     Find the minimal and maximal break-point on x - alpha*g.
 
@@ -141,8 +181,16 @@
       call dgpstep(n,x,xl,xu,-alpha,g,s)
       if (dnrm2(n,s,1) .gt. delta) then
          interp = .true.
-      else 
-         call dssyax(n,a,diag,col_ptr,row_ind,s,wa)
+      else
+         if( QTRONHESS.eq.0 ) then
+            call RES_HV(IPITER, IPN, NIND, M, NORIG, XORIG, CSCALE,
+     1           IVAR, NFIX, IFIX, SOFLAG, C, s, wa,
+     1           NLB, ILB, NUB, IUB, S_L, S_U,
+     1           KCONSTR, LRS, RS, LIS, IS, LRW, RW, LIW, IW, IERR)
+            if( IERR.ne.0 ) return
+         else
+            call dssyax(n,a,diag,col_ptr,row_ind,s,wa)
+         endif
          gts = ddot(n,g,1,s,1)
          q = p5*ddot(n,s,1,wa,1) + gts
          interp = (q .ge. mu0*gts) 
@@ -159,12 +207,28 @@
 
 c           This is a crude interpolation procedure that
 c           will be replaced in future versions of the code.
-
             alpha = interpf*alpha
+            if( alpha.eq.0.d0 ) then
+               call C_OUT(2,0,1,'dcauchy(tron): alpha is 0.d0')
+               IERR = 572
+               return
+            endif
             call dgpstep(n,x,xl,xu,-alpha,g,s)
-            if (dnrm2(n,s,1) .le. delta) then
-               call dssyax(n,a,diag,col_ptr,row_ind,s,wa)
+            snrm = dnrm2(n,s,1)
+            if (snrm .le. delta) then
+               if( QTRONHESS.eq.0 ) then
+                  call RES_HV(IPITER, IPN, NIND, M, NORIG, XORIG,
+     1                 CSCALE, IVAR, NFIX, IFIX, SOFLAG, C, s, wa,
+     1                 NLB, ILB, NUB, IUB, S_L, S_U,
+     1                 KCONSTR, LRS, RS, LIS, IS, LRW, RW, LIW, IW,
+     1                 IERR)
+                  if( IERR.ne.0 ) return
+               else
+                  call dssyax(n,a,diag,col_ptr,row_ind,s,wa)
+               endif
+               gnrm = dnrm2(n,g,1)
                gts = ddot(n,g,1,s,1)
+     1              - precfact*macheps*max(snrm,gnrm) ! for round off error
                q = p5*ddot(n,s,1,wa,1) + gts
                search = (q .gt. mu0*gts)
             end if
@@ -183,9 +247,21 @@
 
             alpha = extrapf*alpha
             call dgpstep(n,x,xl,xu,-alpha,g,s)
-            if (dnrm2(n,s,1) .le. delta) then
-               call dssyax(n,a,diag,col_ptr,row_ind,s,wa)
+            snrm = dnrm2(n,s,1)
+            if (snrm .le. delta) then
+               if( QTRONHESS.eq.0 ) then
+                  call RES_HV(IPITER, IPN, NIND, M, NORIG, XORIG,
+     1                 CSCALE, IVAR, NFIX, IFIX, SOFLAG, C, s, wa,
+     1                 NLB, ILB, NUB, IUB, S_L, S_U,
+     1                 KCONSTR, LRS, RS, LIS, IS, LRW, RW, LIW, IW,
+     1                 IERR)
+                  if( IERR.ne.0 ) return
+               else
+                  call dssyax(n,a,diag,col_ptr,row_ind,s,wa)
+               endif
+               gnrm = dnrm2(n,g,1)
                gts = ddot(n,g,1,s,1)
+     1              + precfact*macheps*max(snrm,gnrm) ! for round off error
                q = p5*ddot(n,s,1,wa,1) + gts
                if (q .lt. mu0*gts) then
                   search = .true.
