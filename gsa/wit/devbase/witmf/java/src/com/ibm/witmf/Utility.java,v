head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2011.05.02.22.01.14;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Added class Utility.
Revised imports.
@
text
@
//==============================================================================
// WIT-MF Source File Utility.java.
//==============================================================================

package com.ibm.witmf;

/*******************************************************************************
 * Contains various static utility methods.
 * Noninstantiatable class.
 *******************************************************************************
 */
final class Utility
{
//==============================================================================
// Package-Internal Methods
//==============================================================================

/*******************************************************************************
 * Verifies that an argument to a method is non-null.
 * 
 * @@param theArg   The argument being checked.
 * @@param argName  The name of the argument being checked.
 * @@param methName The name of the method.
 *******************************************************************************
 */
   static void mustBeNonNull (Object theArg, String argName, String methName)
      {
      if (theArg == null)
         throw
            new RuntimeException (
               "   A method was called with a null argument "
             +    "where this is not allowed.\n"
             + "\n"
             + "      Method:   " + methName + "\n"
             + "      Argument: " + argName  + "\n");
      }

//==============================================================================
// Private Methods
//==============================================================================

/*******************************************************************************
 * Private Constructor (Not to be called).
 *******************************************************************************
 */
   private Utility ()
      {
      throw new AssertionError ();
      }

//==============================================================================
}
@
