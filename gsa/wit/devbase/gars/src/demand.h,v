head	1.2;
access;
symbols
	start:1.1.1.1 IBM:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2001.04.10.17.04.59;	author fasano;	state Exp;
branches;
next	1.1;

1.1
date	2001.02.22.16.46.43;	author fasano;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.02.22.16.46.43;	author fasano;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Updated with code from windows platform
@
text
@#ifndef demand_h
#define demand_h

#include "scoFile.h"


class GARSdemandFile : public SCOcsvFormatFile {
public:

  // fields
  std::string partName( unsigned int recNum ) const;
  std::string internal1DemQty( unsigned int recNum ) const;
  std::string internal4DemQty( unsigned int recNum ) const;
  std::string internal1Or4DemQty( unsigned int recNum ) const;
  std::string externalDemQty( unsigned int recNum ) const;
  std::string noSourceDemQty( unsigned int recNum ) const;
  std::string period( unsigned int recNum ) const;

  std::string partName( std::string key ) const;
  std::string internal1DemQty( std::string key ) const;
  std::string internal4DemQty( std::string key ) const;
  std::string internal1Or4DemQty( std::string key ) const;
  std::string externalDemQty( std::string key ) const;
  std::string noSourceDemQty( std::string key ) const;
  std::string period( std::string key) const;

  float internal1DemQtyAsFloat( unsigned int recNum ) const;
  float internal1DemQtyAsFloat( std::string key ) const;

  float internal4DemQtyAsFloat( unsigned int recNum ) const;
  float internal4DemQtyAsFloat( std::string key ) const;

  float internal1Or4DemQtyAsFloat( unsigned int recNum ) const;
  float internal1Or4DemQtyAsFloat( std::string key ) const;

  float externalDemQtyAsFloat( unsigned int recNum ) const;
  float externalDemQtyAsFloat( std::string key ) const;

  float noSourceDemQtyAsFloat( unsigned int recNum ) const;
  float noSourceDemQtyAsFloat( std::string key ) const;

  int periodAsInt( unsigned int recNum ) const;
  int periodAsInt( std::string key ) const;
  
  // preferred constructor
  GARSdemandFile(std::string filename);
  
  // destructor
  ~GARSdemandFile();
  
  // Self-test
  static void test();
  
protected:
  
  // compute key for storing record in dictionary
  virtual
    std::string
      key( unsigned int ) const;

private:
  
  
  // default constructor -- don't use!
  GARSdemandFile();
  
  // copy constructor  -- don't use!
  GARSdemandFile( const GARSdemandFile& source );
  
  // assignment operator -- don't use!
  GARSdemandFile&
  operator=(const GARSdemandFile& rhs);

  
};



class GARSdemandFileIterator : public SCOfileIterator {
public:
  
  // fields
  
  std::string partName() const;
  std::string internal1DemQty() const;
  std::string internal4DemQty() const;
  std::string internal1Or4DemQty() const;
  std::string externalDemQty() const;
  std::string noSourceDemQty() const;
  std::string period() const;
 
  int periodAsInt() const;

  float internal1DemQtyAsFloat() const;
  float internal4DemQtyAsFloat() const;
  float internal1Or4DemQtyAsFloat() const;
  float externalDemQtyAsFloat() const;
  float noSourceDemQtyAsFloat() const;

  // preferred constructor
  GARSdemandFileIterator(const GARSdemandFile &);
  
  // destructor
  ~GARSdemandFileIterator();
  
  // Self-test
  static void test();

private:
  
  
  // default constructor -- don't use!
  GARSdemandFileIterator();
  
  // copy constructor  -- don't use!
  GARSdemandFileIterator( const GARSdemandFileIterator& source );
  
  // assignment operator -- don't use!
  GARSdemandFileIterator&
  operator=(const GARSdemandFileIterator& rhs);

  
};
#endif@


1.1
log
@Initial revision
@
text
@d12 3
a14 1
  std::string internalDemQty( unsigned int recNum ) const;
d20 3
a22 1
  std::string internalDemQty( std::string key ) const;
d27 8
a34 2
  float internalDemQtyAsFloat( unsigned int recNum ) const;
  float internalDemQtyAsFloat( std::string key ) const;
d85 3
a87 1
  std::string internalDemQty() const;
d94 3
a96 1
  float internalDemQtyAsFloat() const;
@


1.1.1.1
log
@Gars
@
text
@@
