head	1.2;
access;
symbols
	start:1.1.1.1 IBM:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2001.04.10.17.04.59;	author fasano;	state Exp;
branches;
next	1.1;

1.1
date	2001.02.22.16.46.43;	author fasano;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.02.22.16.46.43;	author fasano;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Updated with code from windows platform
@
text
@#ifndef bomFile_h
#define bomFile_h

#include "scoFile.h"


class GARSbomFile : public SCOcsvFormatFile {
public:

  // fields
  std::string type( unsigned int recNum ) const;
  std::string model( unsigned int recNum ) const;
  std::string partName( unsigned int recNum ) const;
  std::string yieldType1( unsigned int recNum ) const;
  std::string yieldType4( unsigned int recNum ) const;
  std::string yieldTypeAfs( unsigned int recNum ) const;

  std::string type( std::string key ) const;
  std::string model( std::string key ) const;
  std::string partName( std::string key ) const;
  std::string yieldType1( std::string key ) const;
  std::string yieldType4( std::string key ) const;
  std::string yieldTypeAfs( std::string key ) const;

  float yieldType1AsFloat( unsigned int recNum ) const;
  float yieldType1AsFloat( std::string key ) const;
  
  float yieldType4AsFloat( unsigned int recNum ) const;
  float yieldType4AsFloat( std::string key ) const;

  float yieldTypeAfsAsFloat( unsigned int recNum ) const;
  float yieldTypeAfsAsFloat( std::string key ) const;
  
  // preferred constructor
  GARSbomFile(std::string filename);
  
  // destructor
  ~GARSbomFile();
  
  // Self-test
  static void test();
  
protected:
  
  // compute key for storing record in dictionary
  virtual
    std::string
      key( unsigned int ) const;

private:
  
  
  // default constructor -- don't use!
  GARSbomFile();
  
  // copy constructor  -- don't use!
  GARSbomFile( const GARSbomFile& source );
  
  // assignment operator -- don't use!
  GARSbomFile&
  operator=(const GARSbomFile& rhs);

  
};



class GARSbomFileIterator : public SCOfileIterator {
public:
  
  // fields
  std::string type() const;
  std::string model() const;
  std::string partName() const;
  std::string yieldType1() const;
  std::string yieldType4() const;
  std::string yieldTypeAfs() const;
  std::string newBuy() const;
  
  float yieldType1AsFloat() const;
  float yieldType4AsFloat() const;
  float yieldTypeAfsAsFloat() const;

  // preferred constructor
  GARSbomFileIterator(const GARSbomFile &);
  
  // destructor
  ~GARSbomFileIterator();
  
  // Self-test
  static void test();

private:
  
  
  // default constructor -- don't use!
  GARSbomFileIterator();
  
  // copy constructor  -- don't use!
  GARSbomFileIterator( const GARSbomFileIterator& source );
  
  // assignment operator -- don't use!
  GARSbomFileIterator&
  operator=(const GARSbomFileIterator& rhs);

  
};
#endif@


1.1
log
@Initial revision
@
text
@d14 3
a16 2
  std::string yield( unsigned int recNum ) const;
  std::string newBuy( unsigned int recNum ) const;
d21 3
a23 2
  std::string yield( std::string key ) const;
  std::string newBuy( std::string key ) const;
d25 5
a29 2
  float yieldAsFloat( unsigned int recNum ) const;
  float yieldAsFloat( std::string key ) const;
d31 2
a32 2
  float newBuyAsFloat( unsigned int recNum ) const;
  float newBuyAsFloat( std::string key ) const;
d75 3
a77 1
  std::string yield() const;
d80 3
a82 2
  float yieldAsFloat() const;
  float newBuyAsFloat() const;
@


1.1.1.1
log
@Gars
@
text
@@
