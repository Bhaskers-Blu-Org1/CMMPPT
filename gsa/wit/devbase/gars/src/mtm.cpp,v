head	1.2;
access;
symbols
	start:1.1.1.1 IBM:1.1.1;
locks; strict;
comment	@// @;


1.2
date	2001.04.10.17.05.00;	author fasano;	state Exp;
branches;
next	1.1;

1.1
date	2001.02.22.16.46.43;	author fasano;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.02.22.16.46.43;	author fasano;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Updated with code from windows platform
@
text
@#if defined(_MSC_VER)
  #pragma warning(disable:4786)
  #pragma warning(disable:4503)
#endif

#include <assert.h>
#include <stdlib.h>

#include <math.h>

#include "OsiFloatEqual.h"
#include "mtm.h"


// Use macro to define body of get methods
getFieldFileWithIterator(GARSmtmFile, type);
getFieldFileWithIterator(GARSmtmFile, model);
getFloatFieldFileWithIterator(GARSmtmFile, mtmSalePrice);
getFloatFieldFileWithIterator(GARSmtmFile, mtmNibPrice);


//------------------------------------------------------------------------------
std::string
  GARSmtmFile::key( unsigned int recNum )
const
{
  std::string retVal = type(recNum)+model(recNum);
  return retVal;
}



//------------------------------------------------------------------------------
// preferred constructor
//------------------------------------------------------------------------------
GARSmtmFile::GARSmtmFile (
  std::string filename
    ) 
    : SCOcsvFormatFile(filename)
{  
  insertField("type");  
  insertField("model");
  insertField("mtmSalePrice"); 
  insertField("mtmNibPrice"); 
  strip(true);
  fieldSeperator(' ');
}
 
  
//------------------------------------------------------------------------------
// destructor
//------------------------------------------------------------------------------
GARSmtmFile::~GARSmtmFile()
{
 // Nothing to do here
}

//------------------------------------------------------------------------------
// Iterator Methods
//------------------------------------------------------------------------------

GARSmtmFileIterator::GARSmtmFileIterator (
  const GARSmtmFile  & file )
  :
  SCOfileIterator(file)
{  
  // Nothing to do here
}
  
GARSmtmFileIterator::~GARSmtmFileIterator()
{
  // nothing to do here
}

#ifdef NDEBUG
#undef NDEBUG
#endif

//------------------------------------------------------------------------------
// Test function
//------------------------------------------------------------------------------
void
GARSmtmFile::test()
{  
  OsiRelFltEq eq(1.e-06);

  // test constructor and numRecords methods
  GARSmtmFile file("../data/01Mar23/mtm");
  assert( file.numRecords() == 717 );

  assert( file.type(2)== "2153" );
  assert( file.model(2)== "E3U" );

  double mtmSalePrice = file.mtmSalePriceAsFloat("2153E3U");
  assert( eq(mtmSalePrice,235.) );

  assert( eq(file.mtmNibPriceAsFloat("2153E3U"),117.5) );

} 
@


1.1
log
@Initial revision
@
text
@d11 1
d18 2
a19 1
getFloatFieldFileWithIterator(GARSmtmFile, mtmsales);
d43 2
a44 1
  insertField("mtmsales"); 
d84 2
a85 1
{
d87 3
a89 1
  float flt_eps = 0.01f;
d91 2
a92 3
  // test constructor and numRecords methods
  GARSmtmFile file("../data/original2000/mtm");
  assert( file.numRecords() == 20 );
d94 2
a95 2
  assert( file.type(2)== "2635" );
  assert( file.model(2)== "6AU" );
d97 1
a97 2
  double mtmsales = file.mtmsalesAsFloat("9546U9B");
  assert( fabs(mtmsales-187.81) < flt_eps );
@


1.1.1.1
log
@Gars
@
text
@@
