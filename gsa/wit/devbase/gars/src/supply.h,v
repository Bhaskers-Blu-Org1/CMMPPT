head     1.1;
branch   1.1.1;
access   ;
symbols  start:1.1.1.1 IBM:1.1.1;
locks    ; strict;
comment  @ * @;


1.1
date     2001.02.22.16.46.43;  author fasano;  state Exp;
branches 1.1.1.1;
next     ;

1.1.1.1
date     2001.02.22.16.46.43;  author fasano;  state Exp;
branches ;
next     ;


desc
@@



1.1
log
@Initial revision
@
text
@#ifndef supply_h
#define supply_h

#include "scoFile.h"


class GARSsupplyFile : public SCOcsvFormatFile {
public:

  // fields
  std::string type( unsigned int recNum ) const;
  std::string model( unsigned int recNum ) const;
  std::string mo0( unsigned int recNum ) const;
  std::string mo1( unsigned int recNum ) const;
  std::string mo2( unsigned int recNum ) const;
  std::string mo3( unsigned int recNum ) const;
  std::string mo4( unsigned int recNum ) const;
  std::string mo5( unsigned int recNum ) const;
  std::string mo6( unsigned int recNum ) const;
  std::string mo7( unsigned int recNum ) const;
  std::string mo8( unsigned int recNum ) const;
  std::string mo9( unsigned int recNum ) const;
  std::string mo10( unsigned int recNum ) const;
  std::string mo11( unsigned int recNum ) const;

  std::string type( std::string key ) const;
  std::string model( std::string key ) const;
  std::string mo0( std::string key ) const;
  std::string mo1( std::string key ) const;
  std::string mo2( std::string key ) const;
  std::string mo3( std::string key ) const;
  std::string mo4( std::string key ) const;
  std::string mo5( std::string key ) const;
  std::string mo6( std::string key ) const;
  std::string mo7( std::string key ) const;
  std::string mo8( std::string key ) const;
  std::string mo9( std::string key ) const;
  std::string mo10( std::string key ) const;
  std::string mo11( std::string key ) const;


  float mo0AsFloat( unsigned int recNum ) const;
  float mo0AsFloat( std::string key ) const;

  float mo1AsFloat( unsigned int recNum ) const;
  float mo1AsFloat( std::string key ) const;

  float mo2AsFloat( unsigned int recNum ) const;
  float mo2AsFloat( std::string key ) const;

  float mo3AsFloat( unsigned int recNum ) const;
  float mo3AsFloat( std::string key ) const;

  float mo4AsFloat( unsigned int recNum ) const;
  float mo4AsFloat( std::string key ) const;

  float mo5AsFloat( unsigned int recNum ) const;
  float mo5AsFloat( std::string key ) const;

  float mo6AsFloat( unsigned int recNum ) const;
  float mo6AsFloat( std::string key ) const;

  float mo7AsFloat( unsigned int recNum ) const;
  float mo7AsFloat( std::string key ) const;

  float mo8AsFloat( unsigned int recNum ) const;
  float mo8AsFloat( std::string key ) const;

  float mo9AsFloat( unsigned int recNum ) const;
  float mo9AsFloat( std::string key ) const;

  float mo10AsFloat( unsigned int recNum ) const;
  float mo10AsFloat( std::string key ) const;

  float mo11AsFloat( unsigned int recNum ) const;
  float mo11AsFloat( std::string key ) const;

  
  // preferred constructor
  GARSsupplyFile(std::string filename);
  
  // destructor
  ~GARSsupplyFile();
  
  // Self-test
  static void test();
  
protected:
  
  // compute key for storing record in dictionary
  virtual
    std::string
      key( unsigned int ) const;

private:
  
  
  // default constructor -- don't use!
  GARSsupplyFile();
  
  // copy constructor  -- don't use!
  GARSsupplyFile( const GARSsupplyFile& source );
  
  // assignment operator -- don't use!
  GARSsupplyFile&
  operator=(const GARSsupplyFile& rhs);

  
};



class GARSsupplyFileIterator : public SCOfileIterator {
public:
  
  // fields
  std::string type() const;
  std::string model() const;
  std::string mo0() const;
  std::string mo1() const;
  std::string mo2() const;
  std::string mo3() const;
  std::string mo4() const;
  std::string mo5() const;
  std::string mo6() const;
  std::string mo7() const;
  std::string mo8() const;
  std::string mo9() const;
  std::string mo10() const;
  std::string mo11() const;
  
  float mo0AsFloat() const;
  float mo1AsFloat() const;
  float mo2AsFloat() const;
  float mo3AsFloat() const;
  float mo4AsFloat() const;
  float mo5AsFloat() const;
  float mo6AsFloat() const;
  float mo7AsFloat() const;
  float mo8AsFloat() const;
  float mo9AsFloat() const;
  float mo10AsFloat() const;
  float mo11AsFloat() const;

  // preferred constructor
  GARSsupplyFileIterator(const GARSsupplyFile &);
  
  // destructor
  ~GARSsupplyFileIterator();
  
  // Self-test
  static void test();

private:
  
  
  // default constructor -- don't use!
  GARSsupplyFileIterator();
  
  // copy constructor  -- don't use!
  GARSsupplyFileIterator( const GARSsupplyFileIterator& source );
  
  // assignment operator -- don't use!
  GARSsupplyFileIterator&
  operator=(const GARSsupplyFileIterator& rhs);

  
};
#endif@


1.1.1.1
log
@Gars
@
text
@@
