head	1.3;
access;
symbols
	start:1.1.1.1 IBM:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2001.06.08.16.27.39;	author fasano;	state Exp;
branches;
next	1.2;

1.2
date	2001.04.10.17.04.58;	author fasano;	state Exp;
branches;
next	1.1;

1.1
date	2001.02.22.16.46.42;	author fasano;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.02.22.16.46.42;	author fasano;	state Exp;
branches;
next	;


desc
@@


1.3
log
@updated files
@
text
@# Make file for compiling and linking WIT

# Notes:
# This makefile is included in makefiles in this directory and in 
# the ../$(platform) directories, so don't assume that the current
# directory is the one this makefile is in.

# $Header: /u/wit/devbase/gars/src/appl.mk,v 1.1.1.1 2001/02/22 16:46:42 fasano Exp $

include $(config_dir)ds.mk


lib_objects = \
	bom.$(obj_suffix) \
	demand.$(obj_suffix) \
	garsProblem.$(obj_suffix) \
	loosep.$(obj_suffix) \
	mtm.$(obj_suffix) \
	partRevenue.$(obj_suffix) \
	scoFile.$(obj_suffix) \
	solnDemand.$(obj_suffix) \
	supply.$(obj_suffix) 

objects = \
	gars.$(obj_suffix) \
	unitTest.$(obj_suffix) \
	$(lib_objects) 

# Get list of source files
cxx_suffix=cpp
sources = $(objects:.$(obj_suffix)=.$(cxx_suffix))


headers =        \
	OsiFloatEqual.h   \
	appData.h   \
	bom.h   \
	demand.h   \
	garsProblem.h   \
	loosep.h   \
	mtm.h   \
	partRevenue.h   \
	solDemand.h   \
	scoFile.h   \
	supply.h

ld_path_flags = -L.

# CPPFLAGS - for C Pre-Processor
# CXXFLAGS - for C++ Compiler
CXX=/usr/vacpp/bin/xlC
CC=/usr/vacpp/bin/xlC
CPPFLAGS	= -I$(src_dir). -I$(wituse_includes_dir) -I$(wit_api_includes_dir) -I$(rw_include_dir) -I../.. 
CFLAGS		= $(ds_comp_flags)
CXXFLAGS	= $(ds_comp_flags)
LDFLAGS1 	= $(ds_link_flags) $(ld_path_flags) 
reloc_ld=/usr/vacpp/bin/xlC
ds_make_depend_flags        = -I/usr/vacpp/include

ifeq ($(platform),sun4)
LDFLAGS2 	= -L..$(sep)..$(sep)wit$(sep)$(platform) \
		  -L..$(sep)..$(sep)mcl$(sep)$(platform) \
		  -L$(rw_library_dir)
else
LDFLAGS2 	= -L..$(sep)..$(sep)wit$(sep)$(platform) \
		  -L$(rw_library_dir)
endif

# last line above added by wally 5/23/96 because libwit.a currently needs
# RW code that isn't in libwit.a (especially on Sun's)
LDFLAGS 	= $(LDFLAGS1) $(LDFLAGS2) 
# LOADLIBES	= $(wit_api_lib) $(ds_math_lib)  \
# 		  $(ds_fortran_lib) \
# 		  $(lex_yacc_lib) \
# 		  $(ds_osl_lib) \
# 		  $(rw_lib)

ifeq ($(platform),sun4)
	# Use -lrwtoolgs for now ... 
#	LOADLIBES	= -lwitnl \
	LOADLIBES	= -lwit \
			  -lmcl \
			  $(ds_osl_lib) \
			  $(ds_math_lib) $(rw_lib) $(ds_fortran_lib) \
			  $(lex_yacc_lib)
else
LOADLIBES	= $(wit_api_lib) $(ds_math_lib)  \
		  $(ds_fortran_lib) \
		  $(lex_yacc_lib) \
		  $(ds_osl_lib) \
		  $(rw_lib)
endif

# last two above added by wally 5/23/96 because libwit.a currently needs
# RW code that isn't in libwit.a (especially on Sun's)

# $(ds_fortran_lib) $(rw_lib)
# PTRPATH is to be used with cfront-based compilers
PTRPATHOPTS	= -ptr./ptrepository -ptr../../wit/$(platform)/ptrepository

vpath %.$(cxx_suffix) $(src_dir)

libgars.a:	$(lib_objects) 
	$(AR) $(ds_ar_update_flags) $@@ $^
	$(RANLIB) $@@

gars:		$(lib_objects) ../../wit/$(platform)/libwit.a 
unitTest:	$(lib_objects) ../../wit/$(platform)/libwitnl.a 

@


1.2
log
@Updated with code from windows platform
@
text
@d19 1
d21 2
a22 2
	supply.$(obj_suffix) \
	partRevenue.$(obj_suffix) 
d41 1
d43 1
a43 1
	mtm.h   \
@


1.1
log
@Initial revision
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/witutil/src/appl.mk,v 1.1.1.1 2000/02/24 15:35:15 wit Exp $
d20 2
a21 1
	supply.$(obj_suffix) 
d34 1
d40 1
@


1.1.1.1
log
@Gars
@
text
@@
