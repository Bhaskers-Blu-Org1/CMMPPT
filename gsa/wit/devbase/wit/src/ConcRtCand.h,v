head	1.15;
access;
symbols
	sce_5_01_20080919:1.12
	latest_sce_4_20_20060523:1.12.0.2
	sce_4_20_20060523:1.12
	latest_sce4_20_OSL:1.11.0.2
	sce_4_20_OSL:1.11
	sce_410_withVa:1.11
	sce_4_05_20040511:1.8
	sce_4_00_20040201:1.8
	nextGenBranch:1.8.0.2
	nextGenRoot:1.8
	sce_3_30_20030627:1.8;
locks; strict;
comment	@ * @;


1.15
date	2011.09.28.23.49.09;	author rjw;	state Exp;
branches;
next	1.14;

1.14
date	2011.09.24.00.27.26;	author rjw;	state Exp;
branches;
next	1.13;

1.13
date	2011.08.30.20.17.21;	author rjw;	state Exp;
branches;
next	1.12;

1.12
date	2006.05.02.17.33.56;	author rjw;	state Exp;
branches;
next	1.11;

1.11
date	2005.01.26.23.50.31;	author rjw;	state Exp;
branches;
next	1.10;

1.10
date	2004.12.09.21.34.11;	author rjw;	state Exp;
branches;
next	1.9;

1.9
date	2004.11.11.21.25.08;	author rjw;	state Exp;
branches;
next	1.8;

1.8
date	2003.03.19.16.48.14;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2003.03.06.20.28.17;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2003.02.28.20.47.33;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2003.02.27.19.20.17;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2003.02.26.23.51.30;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2003.02.26.21.42.52;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2003.02.25.22.17.06;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2003.02.24.23.44.29;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.15
log
@Revised the source code proprietary statement.
@
text
@//==============================================================================
// IBM Confidential
//
// OCO Source Materials
//
// Watson Implosion Technology
//
// (C) Copyright IBM Corp. 1993, 2011  All Rights Reserved
//
// The Source code for this program is not published or otherwise divested of
// its trade secrets, irrespective of what has been deposited with the U. S.
// Copyright office.
//==============================================================================

#ifndef ConcRtCandH
#define ConcRtCandH

//------------------------------------------------------------------------------
// Header file: "ConcRtCand.h"
//
// Contains the declaration of the following classes:
//
//    ProdRtCand.
//    ConsRtCand.
//
// These are the "concrete" RtCand classes.
//------------------------------------------------------------------------------

#include <RtCand.h>

//------------------------------------------------------------------------------
// Class ProdRtCand
//
// "Production Routing Candidate"
// Represents a BopEntry in its role as a candidate for production routing.
//
// Class Hierarchy:
//
// ProbAssoc
//    RtCand
//       ProdRtCand
//
// Implemented in Routing.C.
//------------------------------------------------------------------------------

class WitProdRtCand: public WitRtCand
   {
   public:

      //------------------------------------------------------------------------
      // Public member functions.
      //------------------------------------------------------------------------

      static WitProdRtCand * newInstance (WitBopEntry *, WitRtMgr *);
         //
         // Constructs and returns a new ProdRtCand for the arguments.

   private:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitProdRtCand (WitBopEntry *, WitRtSite *, WitRtMgr *);

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      virtual ~WitProdRtCand ();

      //------------------------------------------------------------------------
      // Overrides from class RtCand.
      //------------------------------------------------------------------------

      virtual bool usedByMr   ();
      virtual void printID    (int, int);
      virtual bool isEligible (WitPeriod);

      //------------------------------------------------------------------------
      // Other private member functions.
      //------------------------------------------------------------------------

      noCopyCtorAssign (WitProdRtCand);

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      WitBopEntry * const myBopEnt_;
         //
         // The BopEntry represented by this ProdRtCand.
   };

//------------------------------------------------------------------------------
// Class ConsRtCand
//
// "Consumption Routing Candidate"
// Represents a ConsEntry in its role as a candidate for production routing.
//
// Class Hierarchy:
//
// ProbAssoc
//    RtCand
//       ConsRtCand
//
// Implemented in Routing.C.
//------------------------------------------------------------------------------

class WitConsRtCand: public WitRtCand
   {
   public:

      //------------------------------------------------------------------------
      // Public member functions.
      //------------------------------------------------------------------------

      static WitConsRtCand * newInstance (WitConsEntry *, WitRtMgr *);
         //
         // Constructs and returns a new ConsRtCand for the arguments.

   private:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitConsRtCand (WitConsEntry *, WitRtSite *, WitRtMgr *);

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      virtual ~WitConsRtCand ();

      //------------------------------------------------------------------------
      // Overrides from class RtCand.
      //------------------------------------------------------------------------

      virtual bool usedByMr   ();
      virtual void printID    (int, int);
      virtual bool isEligible (WitPeriod);

      //------------------------------------------------------------------------
      // Other private member functions.
      //------------------------------------------------------------------------

      noCopyCtorAssign (WitConsRtCand);

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      WitConsEntry * const myConsEnt_;
         //
         // The ConsEntry represented by this ConsRtCand.
   };

#endif
@


1.14
log
@Reverted to the version of 8-30-2011, which has the following differences:
   Release 7.0
   Old copyright dates (2006)
   The leading blanks in each line, which were lost with the 2011 copyright
      update, are restored.
Restored release # as 8.0.
@
text
@d1 8
a8 1
//------------------------------------------------------------------------------
d10 4
a13 6
//     (c) Copyright IBM Corp. 2006.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
// 
//------------------------------------------------------------------------------
@


1.13
log
@Revised the copyright date.
@
text
@d3 1
a3 1
//     (c) Copyright IBM Corp. 2011.
d6 2
a7 2
//     IBM Confidential
//
d42 2
a43 2
{
public:
d45 3
a47 3
//------------------------------------------------------------------------
// Public member functions.
//------------------------------------------------------------------------
d49 3
a51 3
static WitProdRtCand * newInstance (WitBopEntry *, WitRtMgr *);
//
// Constructs and returns a new ProdRtCand for the arguments.
d53 1
a53 1
private:
d55 3
a57 3
//------------------------------------------------------------------------
// Constructor functions.
//------------------------------------------------------------------------
d59 1
a59 1
WitProdRtCand (WitBopEntry *, WitRtSite *, WitRtMgr *);
d61 3
a63 3
//------------------------------------------------------------------------
// Destructor function.
//------------------------------------------------------------------------
d65 1
a65 1
virtual ~WitProdRtCand ();
d67 3
a69 3
//------------------------------------------------------------------------
// Overrides from class RtCand.
//------------------------------------------------------------------------
d71 3
a73 3
virtual bool usedByMr   ();
virtual void printID    (int, int);
virtual bool isEligible (WitPeriod);
d75 3
a77 3
//------------------------------------------------------------------------
// Other private member functions.
//------------------------------------------------------------------------
d79 1
a79 1
noCopyCtorAssign (WitProdRtCand);
d81 3
a83 3
//------------------------------------------------------------------------
// Private member data.
//------------------------------------------------------------------------
d85 4
a88 4
WitBopEntry * const myBopEnt_;
//
// The BopEntry represented by this ProdRtCand.
};
d106 2
a107 2
{
public:
d109 3
a111 3
//------------------------------------------------------------------------
// Public member functions.
//------------------------------------------------------------------------
d113 3
a115 3
static WitConsRtCand * newInstance (WitConsEntry *, WitRtMgr *);
//
// Constructs and returns a new ConsRtCand for the arguments.
d117 1
a117 1
private:
d119 3
a121 3
//------------------------------------------------------------------------
// Constructor functions.
//------------------------------------------------------------------------
d123 1
a123 1
WitConsRtCand (WitConsEntry *, WitRtSite *, WitRtMgr *);
d125 3
a127 3
//------------------------------------------------------------------------
// Destructor function.
//------------------------------------------------------------------------
d129 1
a129 1
virtual ~WitConsRtCand ();
d131 3
a133 3
//------------------------------------------------------------------------
// Overrides from class RtCand.
//------------------------------------------------------------------------
d135 3
a137 3
virtual bool usedByMr   ();
virtual void printID    (int, int);
virtual bool isEligible (WitPeriod);
d139 3
a141 3
//------------------------------------------------------------------------
// Other private member functions.
//------------------------------------------------------------------------
d143 1
a143 1
noCopyCtorAssign (WitConsRtCand);
d145 3
a147 3
//------------------------------------------------------------------------
// Private member data.
//------------------------------------------------------------------------
d149 4
a152 4
WitConsEntry * const myConsEnt_;
//
// The ConsEntry represented by this ConsRtCand.
};
@


1.12
log
@Updated the copyright date on all source files.
@
text
@d3 1
a3 1
//     (c) Copyright IBM Corp. 2006.
d6 2
a7 2
//     IBM Confidential 
// 
d42 2
a43 2
   {
   public:
d45 3
a47 3
      //------------------------------------------------------------------------
      // Public member functions.
      //------------------------------------------------------------------------
d49 3
a51 3
      static WitProdRtCand * newInstance (WitBopEntry *, WitRtMgr *);
         //
         // Constructs and returns a new ProdRtCand for the arguments.
d53 1
a53 1
   private:
d55 3
a57 3
      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------
d59 1
a59 1
      WitProdRtCand (WitBopEntry *, WitRtSite *, WitRtMgr *);
d61 3
a63 3
      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------
d65 1
a65 1
      virtual ~WitProdRtCand ();
d67 3
a69 3
      //------------------------------------------------------------------------
      // Overrides from class RtCand.
      //------------------------------------------------------------------------
d71 3
a73 3
      virtual bool usedByMr   ();
      virtual void printID    (int, int);
      virtual bool isEligible (WitPeriod);
d75 3
a77 3
      //------------------------------------------------------------------------
      // Other private member functions.
      //------------------------------------------------------------------------
d79 1
a79 1
      noCopyCtorAssign (WitProdRtCand);
d81 3
a83 3
      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------
d85 4
a88 4
      WitBopEntry * const myBopEnt_;
         //
         // The BopEntry represented by this ProdRtCand.
   };
d106 2
a107 2
   {
   public:
d109 3
a111 3
      //------------------------------------------------------------------------
      // Public member functions.
      //------------------------------------------------------------------------
d113 3
a115 3
      static WitConsRtCand * newInstance (WitConsEntry *, WitRtMgr *);
         //
         // Constructs and returns a new ConsRtCand for the arguments.
d117 1
a117 1
   private:
d119 3
a121 3
      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------
d123 1
a123 1
      WitConsRtCand (WitConsEntry *, WitRtSite *, WitRtMgr *);
d125 3
a127 3
      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------
d129 1
a129 1
      virtual ~WitConsRtCand ();
d131 3
a133 3
      //------------------------------------------------------------------------
      // Overrides from class RtCand.
      //------------------------------------------------------------------------
d135 3
a137 3
      virtual bool usedByMr   ();
      virtual void printID    (int, int);
      virtual bool isEligible (WitPeriod);
d139 3
a141 3
      //------------------------------------------------------------------------
      // Other private member functions.
      //------------------------------------------------------------------------
d143 1
a143 1
      noCopyCtorAssign (WitConsRtCand);
d145 3
a147 3
      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------
d149 4
a152 4
      WitConsEntry * const myConsEnt_;
         //
         // The ConsEntry represented by this ConsRtCand.
   };
@


1.11
log
@Pegged critical list.
@
text
@d3 1
a3 1
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
@


1.10
log
@Low-Pri Prop-Rt.
@
text
@d46 1
a46 1
      // Constructor functions.
d49 3
a51 1
      WitProdRtCand (WitBopEntry *, WitRtMgr *);
d56 6
d110 1
a110 1
      // Constructor functions.
d113 3
a115 1
      WitConsRtCand (WitConsEntry *, WitRtMgr *);
d120 6
@


1.9
log
@Low-Pri Prop-Rt.
@
text
@d63 3
a65 3
      virtual bool needsMrCand ();
      virtual void printID     (int, int);
      virtual bool isEligible  (WitPeriod);
d119 3
a121 3
      virtual bool needsMrCand ();
      virtual void printID     (int, int);
      virtual bool isEligible  (WitPeriod);
@


1.8
log
@Continued implementation of proportionate routing.
@
text
@d64 1
a64 1
      virtual void printID     (int);
d120 1
a120 1
      virtual void printID     (int);
@


1.7
log
@Continued implementation of proportionate routing.
@
text
@d63 3
a65 5
      virtual void printID        (int);
      virtual bool isEligible     (WitPeriod);
      virtual bool prodCase       ();
      virtual bool valid          (WitPeriod);
      virtual void beSelectedByMR (WitPeriod);
d119 3
a121 5
      virtual void printID        (int);
      virtual bool isEligible     (WitPeriod);
      virtual bool prodCase       ();
      virtual bool valid          (WitPeriod);
      virtual void beSelectedByMR (WitPeriod);
@


1.6
log
@Continued implementation of proportionate routing.
@
text
@d63 5
a67 3
      virtual void prtPrPtID  ();
      virtual bool isEligible (WitPeriod);
      virtual bool prodCase   ();
d121 5
a125 3
      virtual void prtPrPtID  ();
      virtual bool isEligible (WitPeriod);
      virtual bool prodCase   ();
@


1.5
log
@Continued implementation of proportionate routing.
@
text
@d34 3
a36 2
// RtCand
//    ProdRtCand
d63 1
d65 1
d90 3
a92 2
// RtCand
//    ConsRtCand
d119 1
d121 1
@


1.4
log
@Continued implementation of proportionate routing.
@
text
@a61 1
      virtual void prtPrPtID  ();
a114 1
      virtual void prtPrPtID  ();
@


1.3
log
@Continued implementation of proportionate routing.
@
text
@d48 1
a48 1
      WitProdRtCand (WitBopEntry *);
d102 1
a102 1
      WitConsRtCand (WitConsEntry *);
@


1.2
log
@Continued implementation of proportionate routing.
@
text
@d15 7
d23 110
@


1.1
log
@Continued implementation of proportionate routing.
@
text
@a14 7
//
// Contains the declaration of the following classes:
//
//    ProdRtCand.
//    ConsRtCand.
//
// These are the "concrete" RtCand classes.
a15 112

#include <RtCand.h>

//------------------------------------------------------------------------------
// Class ProdRtCand
//
// "Production Routing Candidate"
// Represents a BopEntry in its role as a candidate for production routing.
//
// Class Hierarchy:
//
// RtCand
//    ProdRtCand
//
// Implemented in Routing.C.
//------------------------------------------------------------------------------

class WitProdRtCand: public WitRtCand
   {
   public:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitProdRtCand (WitBopEntry *, WitProdRtMgr *);

   private:

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      virtual ~WitProdRtCand ();

      //------------------------------------------------------------------------
      // Overrides from class RtCand.
      //------------------------------------------------------------------------

      virtual void           prtPrPtID   ();
      virtual bool           isEligible  (WitPeriod);
      virtual WitBillEntry * myBillEntry ();

      //------------------------------------------------------------------------
      // Other private member functions.
      //------------------------------------------------------------------------

      noCopyCtorAssign (WitProdRtCand);

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      WitBopEntry * const myBopEnt_;
         //
         // The BopEntry represented by this ProdRtCand.
   };

//------------------------------------------------------------------------------
// Class ConsRtCand
//
// "Consumption Routing Candidate"
// Represents a ConsEntry in its role as a candidate for consumption routing.
//
// Class Hierarchy:
//
// RtCand
//    ConsRtCand
//
// Implemented in Routing.C.
//------------------------------------------------------------------------------

class WitConsRtCand: public WitRtCand
   {
   public:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitConsRtCand (WitConsEntry *, WitConsRtMgr *);

   private:

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      virtual ~WitConsRtCand ();

      //------------------------------------------------------------------------
      // Overrides from class RtCand.
      //------------------------------------------------------------------------

      virtual void           prtPrPtID   ();
      virtual bool           isEligible  (WitPeriod);
      virtual WitBillEntry * myBillEntry ();

      //------------------------------------------------------------------------
      // Other private member functions.
      //------------------------------------------------------------------------

      noCopyCtorAssign (WitConsRtCand);

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      WitConsEntry * const myConsEnt_;
         //
         // The ConsEntry represented by this ConsRtCand.
   };
@

