head	1.26;
access;
symbols
	sce_5_01_20080919:1.23;
locks; strict;
comment	@ * @;


1.26
date	2011.09.28.23.50.08;	author rjw;	state Exp;
branches;
next	1.25;

1.25
date	2011.09.24.00.28.34;	author rjw;	state Exp;
branches;
next	1.24;

1.24
date	2011.08.30.20.18.08;	author rjw;	state Exp;
branches;
next	1.23;

1.23
date	2008.01.25.00.19.22;	author rjw;	state Exp;
branches;
next	1.22;

1.22
date	2007.11.27.21.05.01;	author rjw;	state Exp;
branches;
next	1.21;

1.21
date	2007.10.08.18.56.36;	author rjw;	state Exp;
branches;
next	1.20;

1.20
date	2007.10.02.18.32.43;	author rjw;	state Exp;
branches;
next	1.19;

1.19
date	2007.09.28.22.08.26;	author rjw;	state Exp;
branches;
next	1.18;

1.18
date	2007.09.27.18.25.10;	author rjw;	state Exp;
branches;
next	1.17;

1.17
date	2007.09.26.16.06.38;	author rjw;	state Exp;
branches;
next	1.16;

1.16
date	2007.09.26.14.36.17;	author rjw;	state Exp;
branches;
next	1.15;

1.15
date	2007.09.25.21.03.04;	author rjw;	state Exp;
branches;
next	1.14;

1.14
date	2007.09.21.18.45.20;	author rjw;	state Exp;
branches;
next	1.13;

1.13
date	2007.09.21.17.47.13;	author rjw;	state Exp;
branches;
next	1.12;

1.12
date	2007.09.21.16.44.41;	author rjw;	state Exp;
branches;
next	1.11;

1.11
date	2007.09.21.14.47.32;	author rjw;	state Exp;
branches;
next	1.10;

1.10
date	2007.09.20.18.46.16;	author rjw;	state Exp;
branches;
next	1.9;

1.9
date	2007.09.19.22.57.49;	author rjw;	state Exp;
branches;
next	1.8;

1.8
date	2007.09.19.22.39.53;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2007.09.19.21.35.41;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2007.09.19.17.41.35;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2007.09.19.14.23.26;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2007.09.18.20.12.58;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2007.09.18.18.43.14;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2007.09.17.21.51.16;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2007.09.17.21.46.32;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.26
log
@Revised the source code proprietary statement.
@
text
@//==============================================================================
// IBM Confidential
//
// OCO Source Materials
//
// Watson Implosion Technology
//
// (C) Copyright IBM Corp. 1993, 2011  All Rights Reserved
//
// The Source code for this program is not published or otherwise divested of
// its trade secrets, irrespective of what has been deposited with the U. S.
// Copyright office.
//==============================================================================

#ifndef ScenSolnAttH
#define ScenSolnAttH

//------------------------------------------------------------------------------
// Header file: "ScenSolnAtt.h"
//
// Contains the declaration of the following classes and templates:
//
//    AbsScenSolnAtt
//    ScenSolnAtt <Owner>
//------------------------------------------------------------------------------

#include <StochAssoc.h>

//------------------------------------------------------------------------------
// Class AbsScenSolnAtt
//
// "Abstract Scenario-Specific Solution Attribute"
// Abstract interface to an object that stores and manages data for the
// stochastic version of an solution attribute that exists in deterministic
// mode, but becomes Scenario-specific in stochastic mode.
//
// Class hierarchy:
//
//    ProbAssoc
//       StochAssoc
//          AbsScenSolnAtt
//             ScenSolnAtt <Owner>
//
// Implemented in ScenAtt.C
//------------------------------------------------------------------------------

class WitAbsScenSolnAtt: public WitStochAssoc
   {
   public:

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      virtual ~WitAbsScenSolnAtt ();

      //------------------------------------------------------------------------
      // Other public member functions.
      //------------------------------------------------------------------------

      virtual void uploadData (WitScenario * theScenario) = 0;
         //
         // Uploads the attribute value to each of the owners from this
         // AbsScenSolnAtt for theScenario.
         // Valid only when the stochastic implosion subsystem is uploading
         // data.

      virtual void clearData () = 0;
         //
         // Frees the storage space used by the vectors of this AbsScenSolnAtt.

   protected:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitAbsScenSolnAtt (WitScenAttMgr *);

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      noCopyCtorAssign (WitAbsScenSolnAtt);
   };

//------------------------------------------------------------------------------
// Class Template ScenSolnAtt <Owner>
//
// "Scenario-Specific Solution Attribute"
// Stores and manages data for the stochastic version of an input attribute that
// exists in deterministic mode, but becomes Scenario-specific in stochastic
// mode.
//
// Template argument:
//    Owner: The class whose instances own the deterinistic version of the
//           attribute.
//
// Class hierarchy:
//
//    ProbAssoc
//       StochAssoc
//          AbsScenSolnAtt
//             ScenSolnAtt <Owner>
//
// Implemented in Scenario.C
//------------------------------------------------------------------------------

template <typename Owner>
      class WitScenSolnAtt: private WitAbsScenSolnAtt
   {
   public:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitScenSolnAtt (
         WitScenAttMgr * theScenAttMgr,
         const char *    theAttName,
         void (Owner::*  theStoreFunc) (const WitDblFlexVec &));

      //------------------------------------------------------------------------
      // Other public member functions.
      //------------------------------------------------------------------------

      void storeValueFor (
            Owner *       theOwner,
            WitScenario * theScenario,
            WitPeriod     thePer,
            double        theValue);
         //
         // Sets the value of the attribute for theOwner in theScenario in
         // thePer to theValue.
         // Valid only when the StochOptMgr is uploading the stochastic
         // implosion solution.

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      virtual ~WitScenSolnAtt ();

      //-----------------------------------------------------------------------
      // Overriding private virtual member functions.
      //-----------------------------------------------------------------------

      virtual void uploadData (WitScenario *);
      virtual void clearData  ();

      //-----------------------------------------------------------------------

      noCopyCtorAssign (WitScenSolnAtt);

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      WitScenAtt <Owner> * myScenAtt_;
         //
         // The ScenAtt owned by this ScenSolnAtt.

      void (Owner::* const myStoreFunc_) (const WitDblFlexVec &);
         //
         // The member function of the Owner class that sets the value of the
         // Owner's version of the attribute represented by this ScenSolnAtt to
         // the value of the argument.
         // The function is expected to be valid only when the stochastic
         // implosion subsystem is uploading data.
   };

#endif
@


1.25
log
@Reverted to the version of 8-30-2011, which has the following differences:
   Release 7.0
   Old copyright dates (2006)
   The leading blanks in each line, which were lost with the 2011 copyright
      update, are restored.
Restored release # as 8.0.
@
text
@d1 8
a8 1
//------------------------------------------------------------------------------
d10 4
a13 6
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
// 
//------------------------------------------------------------------------------
@


1.24
log
@Revised the copyright date.
@
text
@d6 2
a7 2
//     IBM Confidential
//
d43 2
a44 2
{
public:
d46 3
a48 3
//------------------------------------------------------------------------
// Destructor function.
//------------------------------------------------------------------------
d50 1
a50 1
virtual ~WitAbsScenSolnAtt ();
d52 3
a54 3
//------------------------------------------------------------------------
// Other public member functions.
//------------------------------------------------------------------------
d56 6
a61 6
virtual void uploadData (WitScenario * theScenario) = 0;
//
// Uploads the attribute value to each of the owners from this
// AbsScenSolnAtt for theScenario.
// Valid only when the stochastic implosion subsystem is uploading
// data.
d63 3
a65 3
virtual void clearData () = 0;
//
// Frees the storage space used by the vectors of this AbsScenSolnAtt.
d67 1
a67 1
protected:
d69 3
a71 3
//------------------------------------------------------------------------
// Constructor functions.
//------------------------------------------------------------------------
d73 1
a73 1
WitAbsScenSolnAtt (WitScenAttMgr *);
d75 1
a75 1
private:
d77 3
a79 3
//------------------------------------------------------------------------
// Private member functions.
//------------------------------------------------------------------------
d81 2
a82 2
noCopyCtorAssign (WitAbsScenSolnAtt);
};
d107 67
a173 67
class WitScenSolnAtt: private WitAbsScenSolnAtt
{
public:

//------------------------------------------------------------------------
// Constructor functions.
//------------------------------------------------------------------------

WitScenSolnAtt (
WitScenAttMgr * theScenAttMgr,
const char *    theAttName,
void (Owner::*  theStoreFunc) (const WitDblFlexVec &));

//------------------------------------------------------------------------
// Other public member functions.
//------------------------------------------------------------------------

void storeValueFor (
Owner *       theOwner,
WitScenario * theScenario,
WitPeriod     thePer,
double        theValue);
//
// Sets the value of the attribute for theOwner in theScenario in
// thePer to theValue.
// Valid only when the StochOptMgr is uploading the stochastic
// implosion solution.

private:

//------------------------------------------------------------------------
// Private member functions.
//------------------------------------------------------------------------

//------------------------------------------------------------------------
// Destructor function.
//------------------------------------------------------------------------

virtual ~WitScenSolnAtt ();

//-----------------------------------------------------------------------
// Overriding private virtual member functions.
//-----------------------------------------------------------------------

virtual void uploadData (WitScenario *);
virtual void clearData  ();

//-----------------------------------------------------------------------

noCopyCtorAssign (WitScenSolnAtt);

//------------------------------------------------------------------------
// Private member data.
//------------------------------------------------------------------------

WitScenAtt <Owner> * myScenAtt_;
//
// The ScenAtt owned by this ScenSolnAtt.

void (Owner::* const myStoreFunc_) (const WitDblFlexVec &);
//
// The member function of the Owner class that sets the value of the
// Owner's version of the attribute represented by this ScenSolnAtt to
// the value of the argument.
// The function is expected to be valid only when the stochastic
// implosion subsystem is uploading data.
};
@


1.23
log
@Stochastic Implosion
@
text
@d6 2
a7 2
//     IBM Confidential 
// 
d43 2
a44 2
   {
   public:
d46 3
a48 3
      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------
d50 1
a50 1
      virtual ~WitAbsScenSolnAtt ();
d52 3
a54 3
      //------------------------------------------------------------------------
      // Other public member functions.
      //------------------------------------------------------------------------
d56 6
a61 6
      virtual void uploadData (WitScenario * theScenario) = 0;
         //
         // Uploads the attribute value to each of the owners from this
         // AbsScenSolnAtt for theScenario.
         // Valid only when the stochastic implosion subsystem is uploading
         // data.
d63 3
a65 3
      virtual void clearData () = 0;
         //
         // Frees the storage space used by the vectors of this AbsScenSolnAtt.
d67 1
a67 1
   protected:
d69 3
a71 3
      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------
d73 1
a73 1
      WitAbsScenSolnAtt (WitScenAttMgr *);
d75 1
a75 1
   private:
d77 3
a79 3
      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------
d81 2
a82 2
      noCopyCtorAssign (WitAbsScenSolnAtt);
   };
d107 67
a173 67
      class WitScenSolnAtt: private WitAbsScenSolnAtt
   {
   public:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitScenSolnAtt (
         WitScenAttMgr * theScenAttMgr,
         const char *    theAttName,
         void (Owner::*  theStoreFunc) (const WitDblFlexVec &));

      //------------------------------------------------------------------------
      // Other public member functions.
      //------------------------------------------------------------------------

      void storeValueFor (
            Owner *       theOwner,
            WitScenario * theScenario,
            WitPeriod     thePer,
            double        theValue);
         //
         // Sets the value of the attribute for theOwner in theScenario in
         // thePer to theValue.
         // Valid only when the StochOptMgr is uploading the stochastic
         // implosion solution.

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      virtual ~WitScenSolnAtt ();

      //-----------------------------------------------------------------------
      // Overriding private virtual member functions.
      //-----------------------------------------------------------------------

      virtual void uploadData (WitScenario *);
      virtual void clearData  ();

      //-----------------------------------------------------------------------

      noCopyCtorAssign (WitScenSolnAtt);

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      WitScenAtt <Owner> * myScenAtt_;
         //
         // The ScenAtt owned by this ScenSolnAtt.

      void (Owner::* const myStoreFunc_) (const WitDblFlexVec &);
         //
         // The member function of the Owner class that sets the value of the
         // Owner's version of the attribute represented by this ScenSolnAtt to
         // the value of the argument.
         // The function is expected to be valid only when the stochastic
         // implosion subsystem is uploading data.
   };
@


1.22
log
@Stochastic Implosion
@
text
@d22 1
a22 1
#include <Assoc.h>
d35 3
a37 2
//       AbsScenSolnAtt
//          ScenSolnAtt <Owner>
d42 1
a42 1
class WitAbsScenSolnAtt: public WitProbAssoc
d99 3
a101 2
//       AbsScenSolnAtt
//          ScenSolnAtt <Owner>
a161 4
      WitStochModeMgr * const myStochModeMgr_;
         //
         // The StochModeMgr for this ScenSolnAtt.

@


1.21
log
@Stochastic Implosion
@
text
@d86 1
a86 1
// "Concrete Scenario-Specific Solution Attribute"
@


1.20
log
@Stochastic Implosion
@
text
@d19 1
a19 1
//    ScenSolnAtt  <Owner>
d28 3
a30 3
// Stores and manages data for the stochastic version of an solution attribute
// that exists in deterministic mode, but becomes Scenario-specific in
// stochastic mode.
d55 1
a55 1
      virtual void uploadData () = 0;
d58 1
a58 1
         // AbsScenSolnAtt.
d72 1
a72 1
      WitAbsScenSolnAtt (WitScenario *);
d101 1
a101 1
// Implemented in ScenAtt.C
d114 3
a116 3
         WitScenario *  theScenario,
         const char *   theAttName,
         void (Owner::* theStoreFunc) (const WitDblFlexVec &));
d122 5
a126 1
      void storeValueFor (Owner * theOwner, WitPeriod thePer, double theValue);
d128 2
a129 1
         // Sets the value of the attribute for theOwner in thePer to theValue.
d149 1
a149 1
      virtual void uploadData ();
@


1.19
log
@Stochastic Implosion
@
text
@d116 1
a116 1
         void (Owner::* theStoreFunc) (const WitTVec <double> &));
d163 1
a163 1
      void (Owner::* const myStoreFunc_) (const WitTVec <double> &);
@


1.18
log
@Stochastic Implosion
@
text
@d162 8
@


1.17
log
@Stochastic Implosion
@
text
@d115 1
@


1.16
log
@Stochastic Implosion
@
text
@d154 4
a160 8

      void (Owner::* const myStoreFunc_) (const WitTVec <double> &);
         //
         // The member function of the Owner class that sets the value of the
         // Owner's version of the attribute represented by this ScenSolnAtt to
         // the value of the argument.
         // The function is expected to be valid only when the stochastic
         // implosion subsystem is uploading data.
@


1.15
log
@Stochastic Implosion
@
text
@d105 1
a105 1
      class WitScenSolnAtt: public WitAbsScenSolnAtt
a117 13
      // Destructor function.
      //------------------------------------------------------------------------

      virtual ~WitScenSolnAtt ();

      //-----------------------------------------------------------------------
      // Overriding public virtual member functions.
      //-----------------------------------------------------------------------

      virtual void uploadData ();
      virtual void clearData  ();

      //------------------------------------------------------------------------
d133 15
@


1.14
log
@Stochastic Implosion
@
text
@d19 1
a19 1
//    ScenSolnAtt <Owner>
d55 1
a55 1
      virtual void uploadDataFromCurScen () = 0;
d57 2
a58 2
         // Uploads the attribute value to each of the owners from the current
         // Scenario's portion of this AbsScenSolnAtt.
d72 1
a72 1
      WitAbsScenSolnAtt (WitScenAttMgr *);
d114 2
a115 2
         WitScenAttMgr * theScenAttMgr,
         void (Owner::*  theStoreFunc) (const WitTVec <double> &));
d127 2
a128 2
      virtual void uploadDataFromCurScen ();
      virtual void clearData             ();
d134 1
a134 5
      void storeValue (
            Owner *                       theOwner,
            const WitList <WitScenario> & theScenarios,
            WitPeriod                     thePer,
            double                        theValue);
d136 1
a136 2
         // For each Scenario in theScenarios, sets the value of the attribute
         // for theOwner in the Scenario in thePer to theValue.
a155 4
      WitStochModeMgr * const myStochModeMgr_;
         //
         // The StochModeMgr for this ScenSolnAtt.

@


1.13
log
@Stochastic Implosion
@
text
@a106 8
      //------------------------------------------------------------------------
      // Local typedefs.
      //------------------------------------------------------------------------

      typedef void (Owner::* StoreFunc) (const WitTVec <double> & theValue);
         //
         // See ScenAtt <Owner>.

d113 3
a115 1
      WitScenSolnAtt (WitScenAttMgr *, StoreFunc);
d165 1
a165 1
      const StoreFunc myStoreFunc_;
@


1.12
log
@Stochastic Implosion
@
text
@d113 1
a113 1
         // See ScenAttTable <Owner>.
d163 1
a163 1
      WitScenAttTable <Owner> * myTable_;
d165 1
a165 1
         // The ScenAttTable owned by this ScenSolnAtt.
@


1.11
log
@Stochastic Implosion
@
text
@a73 6
      //------------------------------------------------------------------------
      // Data access functions.
      //------------------------------------------------------------------------

      accessFunc (WitStochModeMgr *, myStochModeMgr)

a80 8

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      WitStochModeMgr * const myStochModeMgr_;
         //
         // The StochModeMgr for this AbsScenSolnAtt.
d141 1
a142 1
            Owner *                       theOwner,
d166 12
@


1.10
log
@Stochastic Implosion
@
text
@d18 2
a19 2
//    ScenSolnAtt
//    ConcScenSolnAtt <Owner>
d25 1
a25 1
// Class ScenSolnAtt
d27 1
a27 1
// "Scenario-Specific Solution Attribute"
d35 2
a36 2
//       ScenSolnAtt
//          ConcScenSolnAtt <Owner>
d41 1
a41 1
class WitScenSolnAtt: public WitProbAssoc
d49 1
a49 1
      virtual ~WitScenSolnAtt ();
d58 1
a58 1
         // Scenario's portion of this ScenSolnAtt.
d64 1
a64 1
         // Frees the storage space used by the vectors of this ScenSolnAtt.
d72 1
a72 1
      WitScenSolnAtt (WitScenAttMgr *);
d86 1
a86 1
      noCopyCtorAssign (WitScenSolnAtt);
d94 1
a94 1
         // The StochModeMgr for this ScenSolnAtt.
d98 1
a98 1
// Class Template ConcScenSolnAtt <Owner>
d112 2
a113 2
//       ScenSolnAtt
//          ConcScenSolnAtt <Owner>
d119 1
a119 1
      class WitConcScenSolnAtt: public WitScenSolnAtt
d135 1
a135 1
      WitConcScenSolnAtt (WitScenAttMgr *, StoreFunc);
d141 1
a141 1
      virtual ~WitConcScenSolnAtt ();
d171 1
a171 1
      noCopyCtorAssign (WitConcScenSolnAtt);
d179 1
a179 1
         // The ScenAttTable owned by this ConcScenSolnAtt.
@


1.9
log
@Stochastic Implosion
@
text
@d62 1
a62 1
      virtual void uploadZero () = 0;
d64 1
a64 7
         // Uploads an attribute value of 0 to each owner of the attribute.
         // Valid only when the stochastic implosion subsystem is uploading
         // data.

      virtual void clearScenData () = 0;
         //
         // Sets all attribute values stored by this ScenSolnAtt to 0.
d89 1
a89 1
      // Private member functions.
d148 1
a148 2
      virtual void uploadZero            ();
      virtual void clearScenData         ();
a179 8

      const StoreFunc myStoreFunc_;
         //
         // The member function of the Owner class that sets the value of the
         // Owner's version of the attribute represented by this ConcScenSolnAtt
         // to the value of the argument.
         // The function is expected to be valid only when the stochastic
         // implosion subsystem is uploading data.
@


1.8
log
@Stochastic Implosion
@
text
@a126 2
      friend class WitScenario;

@


1.7
log
@Stochastic Implosion
@
text
@d62 6
d156 1
d189 8
@


1.6
log
@Stochastic Implosion
@
text
@d62 4
d74 6
d87 8
d150 1
@


1.5
log
@Stochastic Implosion
@
text
@d138 4
a141 4
            Owner *       theOwner,
            WitScenario * theScenario,
            WitPeriod     thePer,
            double        theValue);
d143 2
a144 2
         // Sets the value of the attribute for theOwner in theScenario in
         // thePer to theValue.
@


1.4
log
@Stochastic Implosion
@
text
@d133 15
@


1.3
log
@Stochastic Implosion
@
text
@d68 1
a68 1
      WitScenSolnAtt (WitProblem *);
@


1.2
log
@Stochastic Implosion
@
text
@d111 1
a111 1
         // See ScenAtt <Owner>.
d145 1
a145 1
      WitScenAtt <Owner> * myScenAtt_;
d147 1
a147 1
         // The ScenAtt owned by this ConcScenSolnAtt.
@


1.1
log
@Stochastic Implosion
@
text
@d22 1
a22 1
#include <ConcScenAtt.h>
@

