head	1.5;
access;
symbols
	sce_5_01_20080919:1.2;
locks; strict;
comment	@ * @;


1.5
date	2011.09.28.23.49.55;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2011.09.24.00.28.18;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2011.08.30.20.17.57;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2006.08.03.18.59.33;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2006.08.03.17.38.33;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Revised the source code proprietary statement.
@
text
@//==============================================================================
// IBM Confidential
//
// OCO Source Materials
//
// Watson Implosion Technology
//
// (C) Copyright IBM Corp. 1993, 2011  All Rights Reserved
//
// The Source code for this program is not published or otherwise divested of
// its trade secrets, irrespective of what has been deposited with the U. S.
// Copyright office.
//==============================================================================

#ifndef PipReqSrcH
#define PipReqSrcH

//------------------------------------------------------------------------------
// Header file: "PipReqSrc.h"
//
// Contains the declaration of class PipReqSrc.
//------------------------------------------------------------------------------

#include <PtrVec.h>

//------------------------------------------------------------------------------
// Class PipReqSrc
//
// "Post-Implosion Pegging Requirement Source"
//
// Represents the source of a requirement in PIP.
// This consists of an ordered list of PipSeqEls.
//
// Implemented in PipReq.C.
//------------------------------------------------------------------------------

class WitPipReqSrc
   {
   public:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitPipReqSrc (WitPipSeqEl *);

      WitPipReqSrc (const WitPipReqSrcStack & theReqSrcs);
         //
         // Contructs an PipReqSrc whose PipSeqEl list  is the union of those
         // in theReqSrcs.

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      ~WitPipReqSrc ();

      //------------------------------------------------------------------------
      // Other public member functions.
      //------------------------------------------------------------------------

      bool belongsBefore (WitPipReqSrc * theReqSrc);
         //
         // Returns true, iff this PipReqSrc belongs strictly ahead of
         // theReqSrc in an ordered list.

      bool isEquivalentTo (WitPipReqSrc * theReqSrc);
         //
         // Returns true, iff this PipReqSrc is equivalent to theReqSrc.
         // (i.e. it lists the same PipSeqEls.)

      void print (FILE * theFile, const char * leadingBlanks);
         //
         // Prints this PipReqSrc to theFile.
         // leadingBlanks is to be a string of blanks to preceed the print.

      void attachSeqElItr (WitPipSeqElItr & theItr);
         //
         // Attaches theItr to mySeqElVec_.

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      bool compareSeqEls (
            WitPipSeqEl * theSeqEl1,
            WitPipSeqEl * theSeqEl2);
         //
         // Returns true, iff theSeqEl1 belongs ahead of theSeqEl2 in
         // mySeqElVec_.

      void buildTempSeqElVec (
            const WitPipReqSrcStack & theReqSrcs,
            WitPtrVec <WitPipSeqEl> & tempSeqElVec);
         //
         // Forms tempSeqElVec as the unsorted, unconsolidated union of the
         // PipSeqEls for each of the PipReqSrcs in theReqSrcs.

      void consolidateSeqEls (const WitPtrVec <WitPipSeqEl> & tempSeqElVec);
         //
         // Forms mySeqElVec_ by consolidating the list of PipSeqEls in
         // tempSeqElVec.

      noCopyCtorAssign (WitPipReqSrc);

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      WitPtrVec <WitPipSeqEl> mySeqElVec_;
         //
         // The ordered list of PipSeqEls for this PipReqSrc.
   };

#endif
@


1.4
log
@Reverted to the version of 8-30-2011, which has the following differences:
   Release 7.0
   Old copyright dates (2006)
   The leading blanks in each line, which were lost with the 2011 copyright
      update, are restored.
Restored release # as 8.0.
@
text
@d1 8
a8 1
//------------------------------------------------------------------------------
d10 4
a13 6
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
// 
//------------------------------------------------------------------------------
@


1.3
log
@Revised the copyright date.
@
text
@d6 2
a7 2
//     IBM Confidential
//
d33 2
a34 38
{
public:

//------------------------------------------------------------------------
// Constructor functions.
//------------------------------------------------------------------------

WitPipReqSrc (WitPipSeqEl *);

WitPipReqSrc (const WitPipReqSrcStack & theReqSrcs);
//
// Contructs an PipReqSrc whose PipSeqEl list  is the union of those
// in theReqSrcs.

//------------------------------------------------------------------------
// Destructor function.
//------------------------------------------------------------------------

~WitPipReqSrc ();

//------------------------------------------------------------------------
// Other public member functions.
//------------------------------------------------------------------------

bool belongsBefore (WitPipReqSrc * theReqSrc);
//
// Returns true, iff this PipReqSrc belongs strictly ahead of
// theReqSrc in an ordered list.

bool isEquivalentTo (WitPipReqSrc * theReqSrc);
//
// Returns true, iff this PipReqSrc is equivalent to theReqSrc.
// (i.e. it lists the same PipSeqEls.)

void print (FILE * theFile, const char * leadingBlanks);
//
// Prints this PipReqSrc to theFile.
// leadingBlanks is to be a string of blanks to preceed the print.
d36 75
a110 39
void attachSeqElItr (WitPipSeqElItr & theItr);
//
// Attaches theItr to mySeqElVec_.

private:

//------------------------------------------------------------------------
// Private member functions.
//------------------------------------------------------------------------

bool compareSeqEls (
WitPipSeqEl * theSeqEl1,
WitPipSeqEl * theSeqEl2);
//
// Returns true, iff theSeqEl1 belongs ahead of theSeqEl2 in
// mySeqElVec_.

void buildTempSeqElVec (
const WitPipReqSrcStack & theReqSrcs,
WitPtrVec <WitPipSeqEl> & tempSeqElVec);
//
// Forms tempSeqElVec as the unsorted, unconsolidated union of the
// PipSeqEls for each of the PipReqSrcs in theReqSrcs.

void consolidateSeqEls (const WitPtrVec <WitPipSeqEl> & tempSeqElVec);
//
// Forms mySeqElVec_ by consolidating the list of PipSeqEls in
// tempSeqElVec.

noCopyCtorAssign (WitPipReqSrc);

//------------------------------------------------------------------------
// Private member data.
//------------------------------------------------------------------------

WitPtrVec <WitPipSeqEl> mySeqElVec_;
//
// The ordered list of PipSeqEls for this PipReqSrc.
};
@


1.2
log
@GPIP migration.
@
text
@d6 2
a7 2
//     IBM Confidential 
// 
d33 38
a70 2
   {
   public:
d72 39
a110 75
      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitPipReqSrc (WitPipSeqEl *);

      WitPipReqSrc (const WitPipReqSrcStack & theReqSrcs);
         //
         // Contructs an PipReqSrc whose PipSeqEl list  is the union of those
         // in theReqSrcs.

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      ~WitPipReqSrc ();

      //------------------------------------------------------------------------
      // Other public member functions.
      //------------------------------------------------------------------------

      bool belongsBefore (WitPipReqSrc * theReqSrc);
         //
         // Returns true, iff this PipReqSrc belongs strictly ahead of
         // theReqSrc in an ordered list.

      bool isEquivalentTo (WitPipReqSrc * theReqSrc);
         //
         // Returns true, iff this PipReqSrc is equivalent to theReqSrc.
         // (i.e. it lists the same PipSeqEls.)

      void print (FILE * theFile, const char * leadingBlanks);
         //
         // Prints this PipReqSrc to theFile.
         // leadingBlanks is to be a string of blanks to preceed the print.

      void attachSeqElItr (WitPipSeqElItr & theItr);
         //
         // Attaches theItr to mySeqElVec_.

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      bool compareSeqEls (
            WitPipSeqEl * theSeqEl1,
            WitPipSeqEl * theSeqEl2);
         //
         // Returns true, iff theSeqEl1 belongs ahead of theSeqEl2 in
         // mySeqElVec_.

      void buildTempSeqElVec (
            const WitPipReqSrcStack & theReqSrcs,
            WitPtrVec <WitPipSeqEl> & tempSeqElVec);
         //
         // Forms tempSeqElVec as the unsorted, unconsolidated union of the
         // PipSeqEls for each of the PipReqSrcs in theReqSrcs.

      void consolidateSeqEls (const WitPtrVec <WitPipSeqEl> & tempSeqElVec);
         //
         // Forms mySeqElVec_ by consolidating the list of PipSeqEls in
         // tempSeqElVec.

      noCopyCtorAssign (WitPipReqSrc);

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      WitPtrVec <WitPipSeqEl> mySeqElVec_;
         //
         // The ordered list of PipSeqEls for this PipReqSrc.
   };
@


1.1
log
@GPIP migration.
@
text
@d29 1
a29 1
// Implemented in GpipReq.C.
@

