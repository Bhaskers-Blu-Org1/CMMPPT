head	1.327;
access;
symbols
	sce_5_01_20080919:1.259
	latest_sce_4_20_20060523:1.161.0.2
	sce_4_20_20060523:1.161
	latest_sce4_20_OSL:1.156.0.2
	sce_4_20_OSL:1.156
	sce_410_withVa:1.138
	sce_4_05_20040511:1.108
	sce_4_00_20040201:1.77
	nextGenBranch:1.60.0.2
	nextGenRoot:1.60
	sce_3_30_20030627:1.59
	EndRw-branch:1.46.0.4
	Root-of-EndRw:1.46
	rwToStl:1.46.0.2
	latest_sce_3_10_20010924:1.21.0.2
	sce_3_10_20010924:1.21
	latest_sce_3_00_20010601:1.11.0.2
	sce_3_00_20010601:1.11
	latest_sce_2_31_20010308:1.9.0.2
	sce_2_31_20010308:1.9
	latest_sce_2_31_20001003:1.7.0.2
	sce_2_31_20001003:1.7
	start:1.1.1.1
	IBM:1.1.1;
locks; strict;
comment	@ * @;


1.327
date	2011.09.28.23.50.49;	author rjw;	state Exp;
branches;
next	1.326;

1.326
date	2011.09.24.00.29.05;	author rjw;	state Exp;
branches;
next	1.325;

1.325
date	2011.08.30.20.18.29;	author rjw;	state Exp;
branches;
next	1.324;

1.324
date	2011.08.25.23.27.14;	author rjw;	state Exp;
branches;
next	1.323;

1.323
date	2011.02.16.17.02.52;	author rjw;	state Exp;
branches;
next	1.322;

1.322
date	2011.02.15.23.26.12;	author rjw;	state Exp;
branches;
next	1.321;

1.321
date	2011.02.15.21.20.24;	author rjw;	state Exp;
branches;
next	1.320;

1.320
date	2011.02.10.00.46.39;	author rjw;	state Exp;
branches;
next	1.319;

1.319
date	2011.02.08.23.21.18;	author rjw;	state Exp;
branches;
next	1.318;

1.318
date	2011.02.08.21.49.11;	author rjw;	state Exp;
branches;
next	1.317;

1.317
date	2011.02.07.15.46.07;	author rjw;	state Exp;
branches;
next	1.316;

1.316
date	2011.02.03.00.23.07;	author rjw;	state Exp;
branches;
next	1.315;

1.315
date	2011.02.02.00.37.16;	author rjw;	state Exp;
branches;
next	1.314;

1.314
date	2011.01.31.21.22.00;	author rjw;	state Exp;
branches;
next	1.313;

1.313
date	2011.01.27.19.55.57;	author rjw;	state Exp;
branches;
next	1.312;

1.312
date	2011.01.27.16.34.30;	author rjw;	state Exp;
branches;
next	1.311;

1.311
date	2011.01.27.15.12.50;	author rjw;	state Exp;
branches;
next	1.310;

1.310
date	2011.01.27.00.31.32;	author rjw;	state Exp;
branches;
next	1.309;

1.309
date	2011.01.26.22.37.28;	author rjw;	state Exp;
branches;
next	1.308;

1.308
date	2011.01.26.21.25.47;	author rjw;	state Exp;
branches;
next	1.307;

1.307
date	2011.01.14.00.35.27;	author rjw;	state Exp;
branches;
next	1.306;

1.306
date	2011.01.13.00.38.51;	author rjw;	state Exp;
branches;
next	1.305;

1.305
date	2011.01.12.23.09.39;	author rjw;	state Exp;
branches;
next	1.304;

1.304
date	2011.01.11.22.08.35;	author rjw;	state Exp;
branches;
next	1.303;

1.303
date	2010.10.12.22.02.23;	author rjw;	state Exp;
branches;
next	1.302;

1.302
date	2010.10.12.19.48.29;	author rjw;	state Exp;
branches;
next	1.301;

1.301
date	2010.09.24.18.17.24;	author rjw;	state Exp;
branches;
next	1.300;

1.300
date	2010.09.24.15.46.16;	author rjw;	state Exp;
branches;
next	1.299;

1.299
date	2010.09.22.20.21.55;	author rjw;	state Exp;
branches;
next	1.298;

1.298
date	2010.09.07.16.39.00;	author rjw;	state Exp;
branches;
next	1.297;

1.297
date	2010.09.02.20.16.26;	author rjw;	state Exp;
branches;
next	1.296;

1.296
date	2010.09.01.21.11.27;	author rjw;	state Exp;
branches;
next	1.295;

1.295
date	2010.07.01.22.41.22;	author rjw;	state Exp;
branches;
next	1.294;

1.294
date	2010.06.18.18.03.50;	author rjw;	state Exp;
branches;
next	1.293;

1.293
date	2010.06.17.16.17.15;	author rjw;	state Exp;
branches;
next	1.292;

1.292
date	2010.06.16.20.56.30;	author rjw;	state Exp;
branches;
next	1.291;

1.291
date	2010.06.16.18.33.39;	author rjw;	state Exp;
branches;
next	1.290;

1.290
date	2010.06.14.21.15.16;	author rjw;	state Exp;
branches;
next	1.289;

1.289
date	2010.05.21.18.17.58;	author rjw;	state Exp;
branches;
next	1.288;

1.288
date	2010.05.20.23.18.45;	author rjw;	state Exp;
branches;
next	1.287;

1.287
date	2010.05.14.23.49.07;	author rjw;	state Exp;
branches;
next	1.286;

1.286
date	2010.05.14.21.42.33;	author rjw;	state Exp;
branches;
next	1.285;

1.285
date	2010.05.14.17.47.15;	author rjw;	state Exp;
branches;
next	1.284;

1.284
date	2010.05.12.18.38.08;	author rjw;	state Exp;
branches;
next	1.283;

1.283
date	2010.05.11.22.26.29;	author rjw;	state Exp;
branches;
next	1.282;

1.282
date	2010.03.29.21.34.24;	author rjw;	state Exp;
branches;
next	1.281;

1.281
date	2010.03.26.22.22.55;	author rjw;	state Exp;
branches;
next	1.280;

1.280
date	2010.01.29.23.22.53;	author rjw;	state Exp;
branches;
next	1.279;

1.279
date	2010.01.28.23.16.59;	author rjw;	state Exp;
branches;
next	1.278;

1.278
date	2010.01.25.19.45.20;	author rjw;	state Exp;
branches;
next	1.277;

1.277
date	2009.12.15.19.31.22;	author rjw;	state Exp;
branches;
next	1.276;

1.276
date	2009.12.14.21.34.56;	author rjw;	state Exp;
branches;
next	1.275;

1.275
date	2009.12.09.21.19.32;	author rjw;	state Exp;
branches;
next	1.274;

1.274
date	2009.12.09.00.15.34;	author rjw;	state Exp;
branches;
next	1.273;

1.273
date	2009.12.05.00.10.21;	author rjw;	state Exp;
branches;
next	1.272;

1.272
date	2009.12.04.23.30.53;	author rjw;	state Exp;
branches;
next	1.271;

1.271
date	2009.11.26.00.24.10;	author rjw;	state Exp;
branches;
next	1.270;

1.270
date	2009.11.17.19.31.39;	author rjw;	state Exp;
branches;
next	1.269;

1.269
date	2009.11.13.19.01.28;	author rjw;	state Exp;
branches;
next	1.268;

1.268
date	2009.11.12.17.36.37;	author rjw;	state Exp;
branches;
next	1.267;

1.267
date	2009.10.08.16.06.03;	author rjw;	state Exp;
branches;
next	1.266;

1.266
date	2009.10.07.22.08.39;	author rjw;	state Exp;
branches;
next	1.265;

1.265
date	2009.06.23.16.10.39;	author rjw;	state Exp;
branches;
next	1.264;

1.264
date	2009.02.25.15.49.14;	author rjw;	state Exp;
branches;
next	1.263;

1.263
date	2009.02.11.14.58.42;	author rjw;	state Exp;
branches;
next	1.262;

1.262
date	2009.01.30.16.07.20;	author rjw;	state Exp;
branches;
next	1.261;

1.261
date	2009.01.05.16.09.43;	author rjw;	state Exp;
branches;
next	1.260;

1.260
date	2008.08.25.20.47.10;	author rjw;	state Exp;
branches;
next	1.259;

1.259
date	2008.03.05.18.26.07;	author rjw;	state Exp;
branches;
next	1.258;

1.258
date	2008.02.25.22.35.11;	author rjw;	state Exp;
branches;
next	1.257;

1.257
date	2008.02.22.23.18.20;	author rjw;	state Exp;
branches;
next	1.256;

1.256
date	2008.02.22.21.36.11;	author rjw;	state Exp;
branches;
next	1.255;

1.255
date	2008.02.21.22.20.56;	author rjw;	state Exp;
branches;
next	1.254;

1.254
date	2008.01.21.21.47.19;	author rjw;	state Exp;
branches;
next	1.253;

1.253
date	2008.01.18.22.41.01;	author rjw;	state Exp;
branches;
next	1.252;

1.252
date	2008.01.14.19.21.17;	author rjw;	state Exp;
branches;
next	1.251;

1.251
date	2008.01.11.21.47.43;	author rjw;	state Exp;
branches;
next	1.250;

1.250
date	2007.10.30.21.44.19;	author rjw;	state Exp;
branches;
next	1.249;

1.249
date	2007.10.22.19.58.55;	author rjw;	state Exp;
branches;
next	1.248;

1.248
date	2007.10.22.19.20.39;	author rjw;	state Exp;
branches;
next	1.247;

1.247
date	2007.10.22.18.54.00;	author rjw;	state Exp;
branches;
next	1.246;

1.246
date	2007.08.29.16.24.25;	author rjw;	state Exp;
branches;
next	1.245;

1.245
date	2007.08.28.17.38.38;	author rjw;	state Exp;
branches;
next	1.244;

1.244
date	2007.08.24.21.12.40;	author rjw;	state Exp;
branches;
next	1.243;

1.243
date	2007.07.16.20.15.01;	author rjw;	state Exp;
branches;
next	1.242;

1.242
date	2007.07.16.18.12.34;	author rjw;	state Exp;
branches;
next	1.241;

1.241
date	2007.05.30.22.05.52;	author rjw;	state Exp;
branches;
next	1.240;

1.240
date	2007.05.21.15.20.12;	author rjw;	state Exp;
branches;
next	1.239;

1.239
date	2007.05.17.17.59.19;	author rjw;	state Exp;
branches;
next	1.238;

1.238
date	2007.05.16.22.36.37;	author rjw;	state Exp;
branches;
next	1.237;

1.237
date	2007.05.16.22.16.47;	author rjw;	state Exp;
branches;
next	1.236;

1.236
date	2007.04.30.19.32.32;	author rjw;	state Exp;
branches;
next	1.235;

1.235
date	2007.04.24.21.18.14;	author rjw;	state Exp;
branches;
next	1.234;

1.234
date	2007.04.23.21.03.22;	author rjw;	state Exp;
branches;
next	1.233;

1.233
date	2007.04.23.20.20.01;	author rjw;	state Exp;
branches;
next	1.232;

1.232
date	2007.04.20.23.31.47;	author rjw;	state Exp;
branches;
next	1.231;

1.231
date	2007.04.20.20.51.15;	author rjw;	state Exp;
branches;
next	1.230;

1.230
date	2007.04.19.21.38.45;	author rjw;	state Exp;
branches;
next	1.229;

1.229
date	2007.04.11.23.03.40;	author rjw;	state Exp;
branches;
next	1.228;

1.228
date	2007.04.11.16.05.42;	author rjw;	state Exp;
branches;
next	1.227;

1.227
date	2007.04.10.16.33.23;	author rjw;	state Exp;
branches;
next	1.226;

1.226
date	2007.04.09.16.05.09;	author rjw;	state Exp;
branches;
next	1.225;

1.225
date	2007.03.30.22.33.04;	author rjw;	state Exp;
branches;
next	1.224;

1.224
date	2007.03.29.21.16.50;	author rjw;	state Exp;
branches;
next	1.223;

1.223
date	2007.03.28.22.14.33;	author rjw;	state Exp;
branches;
next	1.222;

1.222
date	2007.03.20.22.07.25;	author rjw;	state Exp;
branches;
next	1.221;

1.221
date	2007.03.08.22.47.19;	author rjw;	state Exp;
branches;
next	1.220;

1.220
date	2007.03.08.17.02.56;	author rjw;	state Exp;
branches;
next	1.219;

1.219
date	2007.03.02.22.11.03;	author rjw;	state Exp;
branches;
next	1.218;

1.218
date	2007.03.02.21.05.27;	author rjw;	state Exp;
branches;
next	1.217;

1.217
date	2007.02.28.22.15.49;	author rjw;	state Exp;
branches;
next	1.216;

1.216
date	2007.01.29.23.12.43;	author rjw;	state Exp;
branches;
next	1.215;

1.215
date	2007.01.29.22.34.14;	author rjw;	state Exp;
branches;
next	1.214;

1.214
date	2007.01.29.21.52.04;	author rjw;	state Exp;
branches;
next	1.213;

1.213
date	2007.01.26.21.03.16;	author rjw;	state Exp;
branches;
next	1.212;

1.212
date	2007.01.19.23.47.09;	author rjw;	state Exp;
branches;
next	1.211;

1.211
date	2007.01.16.16.53.45;	author rjw;	state Exp;
branches;
next	1.210;

1.210
date	2007.01.16.16.27.40;	author rjw;	state Exp;
branches;
next	1.209;

1.209
date	2007.01.16.00.25.07;	author rjw;	state Exp;
branches;
next	1.208;

1.208
date	2007.01.15.22.25.31;	author rjw;	state Exp;
branches;
next	1.207;

1.207
date	2007.01.15.21.15.16;	author rjw;	state Exp;
branches;
next	1.206;

1.206
date	2007.01.09.21.07.49;	author rjw;	state Exp;
branches;
next	1.205;

1.205
date	2007.01.09.15.55.26;	author rjw;	state Exp;
branches;
next	1.204;

1.204
date	2007.01.08.18.38.25;	author rjw;	state Exp;
branches;
next	1.203;

1.203
date	2007.01.03.18.42.21;	author rjw;	state Exp;
branches;
next	1.202;

1.202
date	2006.12.28.21.03.22;	author rjw;	state Exp;
branches;
next	1.201;

1.201
date	2006.12.28.16.39.36;	author rjw;	state Exp;
branches;
next	1.200;

1.200
date	2006.12.26.22.24.08;	author rjw;	state Exp;
branches;
next	1.199;

1.199
date	2006.12.19.19.26.48;	author rjw;	state Exp;
branches;
next	1.198;

1.198
date	2006.12.06.19.52.48;	author rjw;	state Exp;
branches;
next	1.197;

1.197
date	2006.12.01.21.36.38;	author rjw;	state Exp;
branches;
next	1.196;

1.196
date	2006.12.01.19.55.19;	author rjw;	state Exp;
branches;
next	1.195;

1.195
date	2006.11.20.22.29.34;	author rjw;	state Exp;
branches;
next	1.194;

1.194
date	2006.11.20.17.04.54;	author rjw;	state Exp;
branches;
next	1.193;

1.193
date	2006.11.18.00.09.23;	author rjw;	state Exp;
branches;
next	1.192;

1.192
date	2006.11.17.17.22.02;	author rjw;	state Exp;
branches;
next	1.191;

1.191
date	2006.11.14.23.10.27;	author rjw;	state Exp;
branches;
next	1.190;

1.190
date	2006.11.01.17.31.47;	author rjw;	state Exp;
branches;
next	1.189;

1.189
date	2006.10.19.21.54.31;	author rjw;	state Exp;
branches;
next	1.188;

1.188
date	2006.10.13.20.47.03;	author rjw;	state Exp;
branches;
next	1.187;

1.187
date	2006.10.12.20.48.12;	author rjw;	state Exp;
branches;
next	1.186;

1.186
date	2006.10.12.19.43.45;	author rjw;	state Exp;
branches;
next	1.185;

1.185
date	2006.10.12.16.22.13;	author rjw;	state Exp;
branches;
next	1.184;

1.184
date	2006.10.11.22.37.22;	author rjw;	state Exp;
branches;
next	1.183;

1.183
date	2006.10.10.19.10.47;	author rjw;	state Exp;
branches;
next	1.182;

1.182
date	2006.10.09.23.25.24;	author rjw;	state Exp;
branches;
next	1.181;

1.181
date	2006.10.05.20.54.54;	author rjw;	state Exp;
branches;
next	1.180;

1.180
date	2006.10.04.18.45.08;	author rjw;	state Exp;
branches;
next	1.179;

1.179
date	2006.10.02.19.27.36;	author rjw;	state Exp;
branches;
next	1.178;

1.178
date	2006.09.29.22.56.41;	author rjw;	state Exp;
branches;
next	1.177;

1.177
date	2006.09.27.20.10.18;	author rjw;	state Exp;
branches;
next	1.176;

1.176
date	2006.09.21.20.31.53;	author rjw;	state Exp;
branches;
next	1.175;

1.175
date	2006.09.15.23.09.42;	author rjw;	state Exp;
branches;
next	1.174;

1.174
date	2006.09.15.22.00.38;	author rjw;	state Exp;
branches;
next	1.173;

1.173
date	2006.09.15.16.20.20;	author rjw;	state Exp;
branches;
next	1.172;

1.172
date	2006.09.08.16.16.02;	author rjw;	state Exp;
branches;
next	1.171;

1.171
date	2006.08.30.16.37.36;	author rjw;	state Exp;
branches;
next	1.170;

1.170
date	2006.08.18.23.32.17;	author rjw;	state Exp;
branches;
next	1.169;

1.169
date	2006.08.17.22.50.39;	author rjw;	state Exp;
branches;
next	1.168;

1.168
date	2006.08.17.19.36.41;	author rjw;	state Exp;
branches;
next	1.167;

1.167
date	2006.08.16.15.49.19;	author rjw;	state Exp;
branches;
next	1.166;

1.166
date	2006.08.09.18.36.41;	author rjw;	state Exp;
branches;
next	1.165;

1.165
date	2006.08.08.18.31.21;	author rjw;	state Exp;
branches;
next	1.164;

1.164
date	2006.08.02.18.06.01;	author rjw;	state Exp;
branches;
next	1.163;

1.163
date	2006.08.02.17.27.32;	author rjw;	state Exp;
branches;
next	1.162;

1.162
date	2006.06.27.13.47.43;	author rjw;	state Exp;
branches;
next	1.161;

1.161
date	2006.05.16.22.01.08;	author rjw;	state Exp;
branches;
next	1.160;

1.160
date	2006.05.08.19.51.26;	author rjw;	state Exp;
branches;
next	1.159;

1.159
date	2006.05.02.17.34.18;	author rjw;	state Exp;
branches;
next	1.158;

1.158
date	2006.04.18.14.31.04;	author rjw;	state Exp;
branches;
next	1.157;

1.157
date	2006.04.17.20.21.31;	author rjw;	state Exp;
branches;
next	1.156;

1.156
date	2006.04.03.17.24.14;	author rjw;	state Exp;
branches;
next	1.155;

1.155
date	2006.03.10.23.23.32;	author rjw;	state Exp;
branches;
next	1.154;

1.154
date	2005.11.10.20.33.09;	author rjw;	state Exp;
branches;
next	1.153;

1.153
date	2005.11.04.20.42.55;	author rjw;	state Exp;
branches;
next	1.152;

1.152
date	2005.11.03.19.53.48;	author rjw;	state Exp;
branches;
next	1.151;

1.151
date	2005.11.02.23.59.32;	author rjw;	state Exp;
branches;
next	1.150;

1.150
date	2005.11.01.16.30.56;	author rjw;	state Exp;
branches;
next	1.149;

1.149
date	2005.10.31.21.29.26;	author rjw;	state Exp;
branches;
next	1.148;

1.148
date	2005.10.28.20.29.10;	author rjw;	state Exp;
branches;
next	1.147;

1.147
date	2005.10.28.20.03.24;	author fasano;	state Exp;
branches;
next	1.146;

1.146
date	2005.10.28.17.22.59;	author rjw;	state Exp;
branches;
next	1.145;

1.145
date	2005.10.17.15.02.07;	author rjw;	state Exp;
branches;
next	1.144;

1.144
date	2005.09.20.20.37.38;	author rjw;	state Exp;
branches;
next	1.143;

1.143
date	2005.09.20.19.48.19;	author rjw;	state Exp;
branches;
next	1.142;

1.142
date	2005.09.19.14.49.34;	author rjw;	state Exp;
branches;
next	1.141;

1.141
date	2005.09.15.15.27.21;	author rjw;	state Exp;
branches;
next	1.140;

1.140
date	2005.09.12.21.44.21;	author rjw;	state Exp;
branches;
next	1.139;

1.139
date	2005.09.08.19.29.46;	author rjw;	state Exp;
branches;
next	1.138;

1.138
date	2005.09.01.21.45.04;	author rjw;	state Exp;
branches;
next	1.137;

1.137
date	2005.08.25.21.47.40;	author rjw;	state Exp;
branches;
next	1.136;

1.136
date	2005.08.19.21.38.05;	author rjw;	state Exp;
branches;
next	1.135;

1.135
date	2005.08.17.18.15.11;	author rjw;	state Exp;
branches;
next	1.134;

1.134
date	2005.07.15.18.52.55;	author rjw;	state Exp;
branches;
next	1.133;

1.133
date	2005.07.14.15.44.23;	author rjw;	state Exp;
branches;
next	1.132;

1.132
date	2005.07.13.21.18.48;	author rjw;	state Exp;
branches;
next	1.131;

1.131
date	2005.07.13.15.54.10;	author rjw;	state Exp;
branches;
next	1.130;

1.130
date	2005.07.11.22.53.50;	author rjw;	state Exp;
branches;
next	1.129;

1.129
date	2005.07.08.23.00.30;	author rjw;	state Exp;
branches;
next	1.128;

1.128
date	2005.07.08.20.48.20;	author rjw;	state Exp;
branches;
next	1.127;

1.127
date	2005.07.08.15.59.43;	author rjw;	state Exp;
branches;
next	1.126;

1.126
date	2005.06.13.16.48.48;	author rjw;	state Exp;
branches;
next	1.125;

1.125
date	2005.06.09.17.30.39;	author rjw;	state Exp;
branches;
next	1.124;

1.124
date	2005.06.02.18.03.00;	author rjw;	state Exp;
branches;
next	1.123;

1.123
date	2005.05.17.17.30.44;	author rjw;	state Exp;
branches;
next	1.122;

1.122
date	2005.03.16.17.00.31;	author rjw;	state Exp;
branches;
next	1.121;

1.121
date	2005.03.02.22.34.38;	author rjw;	state Exp;
branches;
next	1.120;

1.120
date	2005.02.25.21.26.10;	author rjw;	state Exp;
branches;
next	1.119;

1.119
date	2005.02.10.18.38.31;	author rjw;	state Exp;
branches;
next	1.118;

1.118
date	2005.02.04.21.17.34;	author rjw;	state Exp;
branches;
next	1.117;

1.117
date	2005.02.03.23.15.35;	author rjw;	state Exp;
branches;
next	1.116;

1.116
date	2005.02.03.21.31.36;	author rjw;	state Exp;
branches;
next	1.115;

1.115
date	2005.02.02.17.26.54;	author rjw;	state Exp;
branches;
next	1.114;

1.114
date	2005.01.31.23.59.31;	author rjw;	state Exp;
branches;
next	1.113;

1.113
date	2005.01.21.23.01.52;	author rjw;	state Exp;
branches;
next	1.112;

1.112
date	2004.11.09.23.08.01;	author rjw;	state Exp;
branches;
next	1.111;

1.111
date	2004.11.04.20.42.28;	author rjw;	state Exp;
branches;
next	1.110;

1.110
date	2004.10.12.21.29.51;	author rjw;	state Exp;
branches;
next	1.109;

1.109
date	2004.05.12.21.50.59;	author rjw;	state Exp;
branches;
next	1.108;

1.108
date	2004.05.07.22.15.15;	author rjw;	state Exp;
branches;
next	1.107;

1.107
date	2004.04.30.15.57.20;	author rjw;	state Exp;
branches;
next	1.106;

1.106
date	2004.04.16.17.42.50;	author rjw;	state Exp;
branches;
next	1.105;

1.105
date	2004.04.08.17.31.14;	author rjw;	state Exp;
branches;
next	1.104;

1.104
date	2004.04.07.19.21.32;	author rjw;	state Exp;
branches;
next	1.103;

1.103
date	2004.04.06.18.55.59;	author rjw;	state Exp;
branches;
next	1.102;

1.102
date	2004.04.06.15.42.18;	author rjw;	state Exp;
branches;
next	1.101;

1.101
date	2004.04.05.23.04.58;	author rjw;	state Exp;
branches;
next	1.100;

1.100
date	2004.04.05.22.18.08;	author rjw;	state Exp;
branches;
next	1.99;

1.99
date	2004.04.02.20.54.17;	author rjw;	state Exp;
branches;
next	1.98;

1.98
date	2004.04.01.21.05.13;	author rjw;	state Exp;
branches;
next	1.97;

1.97
date	2004.03.31.22.56.09;	author rjw;	state Exp;
branches;
next	1.96;

1.96
date	2004.03.30.21.10.08;	author rjw;	state Exp;
branches;
next	1.95;

1.95
date	2004.03.30.18.57.05;	author rjw;	state Exp;
branches;
next	1.94;

1.94
date	2004.03.30.00.05.34;	author rjw;	state Exp;
branches;
next	1.93;

1.93
date	2004.03.29.22.25.14;	author rjw;	state Exp;
branches;
next	1.92;

1.92
date	2004.03.26.17.03.34;	author rjw;	state Exp;
branches;
next	1.91;

1.91
date	2004.03.24.16.50.35;	author rjw;	state Exp;
branches;
next	1.90;

1.90
date	2004.03.11.16.36.19;	author rjw;	state Exp;
branches;
next	1.89;

1.89
date	2004.02.24.21.32.06;	author rjw;	state Exp;
branches;
next	1.88;

1.88
date	2004.02.24.20.10.58;	author rjw;	state Exp;
branches;
next	1.87;

1.87
date	2004.02.20.22.46.04;	author rjw;	state Exp;
branches;
next	1.86;

1.86
date	2004.02.20.16.38.01;	author rjw;	state Exp;
branches;
next	1.85;

1.85
date	2004.02.20.15.37.37;	author rjw;	state Exp;
branches;
next	1.84;

1.84
date	2004.02.19.22.56.11;	author rjw;	state Exp;
branches;
next	1.83;

1.83
date	2004.02.19.21.21.28;	author rjw;	state Exp;
branches;
next	1.82;

1.82
date	2004.02.17.20.23.47;	author rjw;	state Exp;
branches;
next	1.81;

1.81
date	2004.02.14.00.45.36;	author rjw;	state Exp;
branches;
next	1.80;

1.80
date	2004.02.10.23.57.46;	author rjw;	state Exp;
branches;
next	1.79;

1.79
date	2004.02.06.21.03.05;	author rjw;	state Exp;
branches;
next	1.78;

1.78
date	2004.02.05.16.39.44;	author rjw;	state Exp;
branches;
next	1.77;

1.77
date	2004.01.19.23.26.51;	author rjw;	state Exp;
branches;
next	1.76;

1.76
date	2004.01.08.12.59.58;	author fasano;	state Exp;
branches;
next	1.75;

1.75
date	2003.12.31.20.09.19;	author rjw;	state Exp;
branches;
next	1.74;

1.74
date	2003.12.30.22.10.47;	author rjw;	state Exp;
branches;
next	1.73;

1.73
date	2003.12.30.20.41.45;	author rjw;	state Exp;
branches;
next	1.72;

1.72
date	2003.12.30.18.08.30;	author rjw;	state Exp;
branches;
next	1.71;

1.71
date	2003.12.30.16.24.25;	author rjw;	state Exp;
branches;
next	1.70;

1.70
date	2003.12.23.16.18.48;	author rjw;	state Exp;
branches;
next	1.69;

1.69
date	2003.12.04.16.45.16;	author rjw;	state Exp;
branches;
next	1.68;

1.68
date	2003.10.31.15.37.56;	author rjw;	state Exp;
branches;
next	1.67;

1.67
date	2003.09.22.23.13.52;	author rjw;	state Exp;
branches;
next	1.66;

1.66
date	2003.09.22.20.27.03;	author rjw;	state Exp;
branches;
next	1.65;

1.65
date	2003.09.19.18.29.01;	author rjw;	state Exp;
branches;
next	1.64;

1.64
date	2003.09.03.18.09.58;	author rjw;	state Exp;
branches;
next	1.63;

1.63
date	2003.08.05.20.37.51;	author rjw;	state Exp;
branches;
next	1.62;

1.62
date	2003.08.05.20.18.24;	author rjw;	state Exp;
branches;
next	1.61;

1.61
date	2003.08.01.21.01.39;	author rjw;	state Exp;
branches;
next	1.60;

1.60
date	2003.07.28.20.34.13;	author rjw;	state Exp;
branches;
next	1.59;

1.59
date	2003.05.07.18.06.20;	author rjw;	state Exp;
branches;
next	1.58;

1.58
date	2003.03.24.20.40.24;	author rjw;	state Exp;
branches;
next	1.57;

1.57
date	2003.02.21.18.56.31;	author rjw;	state Exp;
branches;
next	1.56;

1.56
date	2003.02.14.20.13.06;	author rjw;	state Exp;
branches;
next	1.55;

1.55
date	2003.02.08.13.20.26;	author fasano;	state Exp;
branches;
next	1.54;

1.54
date	2003.02.08.13.18.48;	author fasano;	state Exp;
branches;
next	1.53;

1.53
date	2003.01.31.21.29.02;	author rjw;	state Exp;
branches;
next	1.52;

1.52
date	2003.01.27.21.17.22;	author rjw;	state Exp;
branches;
next	1.51;

1.51
date	2003.01.23.22.48.16;	author rjw;	state Exp;
branches;
next	1.50;

1.50
date	2002.12.30.21.57.29;	author rjw;	state Exp;
branches;
next	1.49;

1.49
date	2002.12.30.20.37.31;	author rjw;	state Exp;
branches;
next	1.48;

1.48
date	2002.12.23.20.44.50;	author rjw;	state Exp;
branches;
next	1.47;

1.47
date	2002.12.19.17.15.25;	author rjw;	state Exp;
branches;
next	1.46;

1.46
date	2002.10.18.22.24.00;	author rjw;	state Exp;
branches;
next	1.45;

1.45
date	2002.10.16.22.30.24;	author rjw;	state Exp;
branches;
next	1.44;

1.44
date	2002.10.10.19.21.20;	author rjw;	state Exp;
branches;
next	1.43;

1.43
date	2002.09.30.21.36.42;	author rjw;	state Exp;
branches;
next	1.42;

1.42
date	2002.08.22.14.01.51;	author rjw;	state Exp;
branches;
next	1.41;

1.41
date	2002.06.24.22.02.29;	author rjw;	state Exp;
branches;
next	1.40;

1.40
date	2002.05.17.21.45.09;	author rjw;	state Exp;
branches;
next	1.39;

1.39
date	2002.04.26.18.20.20;	author rjw;	state Exp;
branches;
next	1.38;

1.38
date	2002.04.26.15.53.47;	author rjw;	state Exp;
branches;
next	1.37;

1.37
date	2002.04.26.15.08.58;	author rjw;	state Exp;
branches;
next	1.36;

1.36
date	2002.04.25.21.48.15;	author rjw;	state Exp;
branches;
next	1.35;

1.35
date	2002.04.25.19.14.56;	author rjw;	state Exp;
branches;
next	1.34;

1.34
date	2002.04.24.18.26.14;	author rjw;	state Exp;
branches;
next	1.33;

1.33
date	2002.04.22.14.32.17;	author rjw;	state Exp;
branches;
next	1.32;

1.32
date	2002.01.14.16.43.15;	author fasano;	state Exp;
branches;
next	1.31;

1.31
date	2001.12.20.21.41.21;	author bobw;	state Exp;
branches;
next	1.30;

1.30
date	2001.12.20.18.50.08;	author bobw;	state Exp;
branches;
next	1.29;

1.29
date	2001.12.19.16.17.14;	author bobw;	state Exp;
branches;
next	1.28;

1.28
date	2001.11.09.21.59.54;	author fasano;	state Exp;
branches;
next	1.27;

1.27
date	2001.11.09.21.42.29;	author bobw;	state Exp;
branches;
next	1.26;

1.26
date	2001.10.18.02.30.47;	author fasano;	state Exp;
branches;
next	1.25;

1.25
date	2001.10.05.20.54.00;	author bobw;	state Exp;
branches;
next	1.24;

1.24
date	2001.10.05.18.55.30;	author bobw;	state Exp;
branches;
next	1.23;

1.23
date	2001.10.03.18.55.14;	author bobw;	state Exp;
branches;
next	1.22;

1.22
date	2001.09.28.20.50.29;	author bobw;	state Exp;
branches;
next	1.21;

1.21
date	2001.09.16.21.42.34;	author bobw;	state Exp;
branches;
next	1.20;

1.20
date	2001.09.14.13.23.48;	author fasano;	state Exp;
branches;
next	1.19;

1.19
date	2001.08.30.23.00.36;	author bobw;	state Exp;
branches;
next	1.18;

1.18
date	2001.08.29.21.37.23;	author bobw;	state Exp;
branches;
next	1.17;

1.17
date	2001.08.06.17.31.10;	author bobw;	state Exp;
branches;
next	1.16;

1.16
date	2001.08.03.18.40.45;	author bobw;	state Exp;
branches;
next	1.15;

1.15
date	2001.07.30.15.12.13;	author bobw;	state Exp;
branches;
next	1.14;

1.14
date	2001.07.28.00.48.37;	author bobw;	state Exp;
branches;
next	1.13;

1.13
date	2001.07.27.21.28.42;	author bobw;	state Exp;
branches;
next	1.12;

1.12
date	2001.07.25.16.08.23;	author bobw;	state Exp;
branches;
next	1.11;

1.11
date	2001.05.29.22.11.30;	author bobw;	state Exp;
branches;
next	1.10;

1.10
date	2001.05.17.15.11.20;	author bobw;	state Exp;
branches;
next	1.9;

1.9
date	2000.12.14.19.35.24;	author bobw;	state Exp;
branches;
next	1.8;

1.8
date	2000.10.13.21.03.57;	author bobw;	state Exp;
branches;
next	1.7;

1.7
date	2000.07.25.20.12.38;	author bobw;	state Exp;
branches;
next	1.6;

1.6
date	2000.07.14.20.27.33;	author bobw;	state Exp;
branches;
next	1.5;

1.5
date	2000.05.08.21.56.17;	author bobw;	state Exp;
branches;
next	1.4;

1.4
date	2000.03.13.17.09.01;	author fasano;	state Exp;
branches;
next	1.3;

1.3
date	2000.03.10.23.17.49;	author bobw;	state Exp;
branches;
next	1.2;

1.2
date	2000.03.07.16.57.27;	author fasano;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.24.13.53.34;	author wit;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.24.13.53.34;	author wit;	state Exp;
branches;
next	;


desc
@@


1.327
log
@Revised the source code proprietary statement.
@
text
@/*============================================================================*/
/* IBM Confidential                                                           */
/*                                                                            */
/* OCO Source Materials                                                       */
/*                                                                            */
/* Watson Implosion Technology                                                */
/*                                                                            */
/* (C) Copyright IBM Corp. 1993, 2011  All Rights Reserved                    */
/*                                                                            */
/* The Source code for this program is not published or otherwise divested of */
/* its trade secrets, irrespective of what has been deposited with the U. S.  */
/* Copyright office.                                                          */
/*============================================================================*/

#ifndef wit_h
#define wit_h

#include <stdio.h>
#include <limits.h>

/*----------------------------------------------------------------------------*/
/* When using Microsoft Visual C++ define WIT_DECLSPEC for                    */
/* importing or exporting dll symbols.                                        */
/*----------------------------------------------------------------------------*/

#if defined(_MSC_VER)
#  if defined(WIT_DLLEXPORT)
#    define WIT_DECLSPEC __declspec(dllexport)
#  else
#    define WIT_DECLSPEC  __declspec(dllimport)
#  endif
#  define WIT_CONST
#  define STDCALL __stdcall
#elif defined(__IBMCPP__) && !defined(_AIX)
#  define WIT_DECLSPEC  __declspec(dllimport)
#  define WIT_CONST const
#  define STDCALL __stdcall
#else
#  define WIT_DECLSPEC
#  define WIT_CONST const
#  define STDCALL
#endif

/*----------------------------------------------------------------------------*/
/* WIT typedefs.                                                              */
/*----------------------------------------------------------------------------*/

typedef char * witAttr;
typedef int    witReturnCode;
typedef char * witFileFormat;
typedef int    witBoolean;

enum { WitTRUE = 1, WitFALSE = 0 };

#ifdef __cplusplus

   class WitRun;

#else

   typedef struct WitRunStruct WitRun;

#endif

#ifdef __cplusplus

   extern "C"
      {

#endif

/*----------------------------------------------------------------------------*/
/* WIT API function return codes.                                             */
/*----------------------------------------------------------------------------*/

extern WIT_DECLSPEC WIT_CONST witReturnCode WitINFORMATIONAL_RC;
extern WIT_DECLSPEC WIT_CONST witReturnCode WitWARNING_RC;
extern WIT_DECLSPEC WIT_CONST witReturnCode WitSEVERE_RC;
extern WIT_DECLSPEC WIT_CONST witReturnCode WitFATAL_RC;

/*----------------------------------------------------------------------------*/
/* WIT API functions for the current release.                                 */
/*----------------------------------------------------------------------------*/

WIT_DECLSPEC witReturnCode STDCALL witAddBomEntry (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const char * const consumedPartName);

WIT_DECLSPEC witReturnCode STDCALL witAddBopEntry (
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const char * const producedPartName);

WIT_DECLSPEC witReturnCode STDCALL witAddDblCplexParSpec (
   WitRun * const     theWitRun,
   const char * const theName,
   const float        theValue);

WIT_DECLSPEC witReturnCode STDCALL witAddDblCplexParSpecDbl (
   WitRun * const     theWitRun,
   const char * const theName,
   const double       theValue);

WIT_DECLSPEC witReturnCode STDCALL witAddDemand (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName);

WIT_DECLSPEC witReturnCode STDCALL witAddIntCplexParSpec (
   WitRun * const     theWitRun,
   const char * const theName,
   const int          theValue);

WIT_DECLSPEC witReturnCode STDCALL witAddOperation (
   WitRun * const theWitRun,
   const char * const operationName);

WIT_DECLSPEC witReturnCode STDCALL witAddPart (
   WitRun * const theWitRun,
   const char * const partName,
   const witAttr partCategory);

WIT_DECLSPEC witReturnCode STDCALL witAddPartWithOperation (
   WitRun * const theWitRun,
   const char * const partAndOperationName);

WIT_DECLSPEC witReturnCode STDCALL witAddSubsBomEntry (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const char * const consumedPartName);

WIT_DECLSPEC witReturnCode STDCALL witAdvanceObjItr (
   WitRun * const theWitRun);

WIT_DECLSPEC witReturnCode STDCALL witAppendToPipSeq (
   WitRun * const     theWitRun,
   const char * const partName,
   const char * const demandName,
   int                shipPeriod,
   float              incShipVol);

WIT_DECLSPEC witReturnCode STDCALL witAppendToPipSeqDbl (
   WitRun * const     theWitRun,
   const char * const partName,
   const char * const demandName,
   int                shipPeriod,
   double             incShipVol);

WIT_DECLSPEC witReturnCode STDCALL witBuildPip (
   WitRun * const theWitRun);

WIT_DECLSPEC witReturnCode STDCALL witClearCplexParSpecs (
   WitRun * const theWitRun);

WIT_DECLSPEC witReturnCode STDCALL witClearPegging (
   WitRun * const theWitRun);

WIT_DECLSPEC witReturnCode STDCALL witClearPipSeq (
   WitRun * const theWitRun);

WIT_DECLSPEC witReturnCode STDCALL witClearStochSoln (
   WitRun * const theWitRun);

WIT_DECLSPEC witReturnCode STDCALL witCopyBomEntryData (
   WitRun * const     dupWitRun,
   const char * const dupOperationName,
   const int          dupBomEntryIndex,
   WitRun * const     origWitRun,
   const char * const origOperationName,
   const int          origBomEntryIndex);

WIT_DECLSPEC witReturnCode STDCALL witCopyBopEntryData (
   WitRun * const     dupWitRun,
   const char * const dupOperationName,
   const int          dupBopEntryIndex,
   WitRun * const     origWitRun,
   const char * const origOperationName,
   const int          origBopEntryIndex);

WIT_DECLSPEC witReturnCode STDCALL witCopyData (
   WitRun * const dupWitRun,
   WitRun * const origWitRun);

WIT_DECLSPEC witReturnCode STDCALL witCopyDemandData (
   WitRun * const     dupWitRun,
   const char * const dupPartName,
   const char * const dupDemandName,
   WitRun * const     origWitRun,
   const char * const origPartName,
   const char * const origDemandName);

WIT_DECLSPEC witReturnCode STDCALL witCopyOperationData (
   WitRun * const     dupWitRun,
   const char * const dupOperationName,
   WitRun * const     origWitRun,
   const char * const origOperationName);

WIT_DECLSPEC witReturnCode STDCALL witCopyPartData (
   WitRun * const     dupWitRun,
   const char * const dupPartName,
   WitRun * const     origWitRun,
   const char * const origPartName);

WIT_DECLSPEC witReturnCode STDCALL witCopySubsBomEntryData (
   WitRun * const     dupWitRun,
   const char * const dupOperationName,
   const int          dupBomEntryIndex,
   const int          dupSubsBomEntryIndex,
   WitRun * const     origWitRun,
   const char * const origOperationName,
   const int          origBomEntryIndex,
   const int          origSubsBomEntryIndex);

WIT_DECLSPEC witReturnCode STDCALL witDeleteRun (
   WitRun * theWitRun);

WIT_DECLSPEC witReturnCode STDCALL witDisplayData (
   WitRun * const theWitRun,
   const char * const fileName);

WIT_DECLSPEC witReturnCode STDCALL witEqHeurAlloc (
   WitRun * const theWitRun,
   const int lenLists,
   const char * const * const demandedPartNameList,
   const char * const * const demandNameList,
   const int * const shipPeriodList,
   const float * const desIncVolList,
   float * * incVolList);

WIT_DECLSPEC witReturnCode STDCALL witEqHeurAllocDbl (
   WitRun * const theWitRun,
   const int lenLists,
   const char * const * const demandedPartNameList,
   const char * const * const demandNameList,
   const int * const shipPeriodList,
   const double * const desIncVolList,
   double * * incVolList);

WIT_DECLSPEC witReturnCode STDCALL witEqHeurAllocTwme (
   WitRun * const theWitRun,
   const int lenLists,
   const char * const * const demandedPartNameList,
   const char * const * const demandNameList,
   const int * const shipPeriodList,
   const float * const desIncVolList,
   float * * incVolList,
   const witBoolean * const asapMultiExecList);

WIT_DECLSPEC witReturnCode STDCALL witEqHeurAllocTwmeDbl (
   WitRun * const theWitRun,
   const int lenLists,
   const char * const * const demandedPartNameList,
   const char * const * const demandNameList,
   const int * const shipPeriodList,
   const double * const desIncVolList,
   double * * incVolList,
   const witBoolean * const asapMultiExecList);

WIT_DECLSPEC witReturnCode STDCALL witEvalObjectives (
   WitRun * const theWitRun);

WIT_DECLSPEC witReturnCode STDCALL witFinishExtOpt (
   WitRun * const theWitRun);

WIT_DECLSPEC witReturnCode STDCALL witFinishHeurAlloc (
   WitRun * const theWitRun);

WIT_DECLSPEC witReturnCode STDCALL witFree (
   void * mem );

WIT_DECLSPEC witReturnCode STDCALL witGeneratePriorities (
   WitRun * const theWitRun);

WIT_DECLSPEC witReturnCode STDCALL witGetAccAfterSoftLB (
   WitRun * const theWitRun,
   witBoolean * accAfterSoftLB);

WIT_DECLSPEC witReturnCode STDCALL witGetAccAfterOptImp (
   WitRun * const theWitRun,
   witBoolean * accAfterOptImp);

WIT_DECLSPEC witReturnCode STDCALL witGetAccelerated (
   WitRun * const theWitRun,
   witBoolean * accelerated);

WIT_DECLSPEC witReturnCode STDCALL witGetAppData (
   WitRun * const theWitRun,
   void * * appData);

WIT_DECLSPEC witReturnCode STDCALL witGetAutoPriority (
   WitRun * const theWitRun,
   witBoolean * autoPriority);

WIT_DECLSPEC witReturnCode STDCALL witGetBomEntryAppData (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   void * * appData);

WIT_DECLSPEC witReturnCode STDCALL witGetBomEntryConsRate (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   float * * consRate);

WIT_DECLSPEC witReturnCode STDCALL witGetBomEntryConsRateDbl (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   double * * consRate);

WIT_DECLSPEC witReturnCode STDCALL witGetBomEntryConsumedPart (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   char * * consumedPartName);

WIT_DECLSPEC witReturnCode STDCALL witGetBomEntryEarliestPeriod (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   int * earliestPeriod);

WIT_DECLSPEC witReturnCode STDCALL witGetBomEntryExecPenalty (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   float * execPenalty);

WIT_DECLSPEC witReturnCode STDCALL witGetBomEntryExecPenaltyDbl (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   double * execPenalty);

WIT_DECLSPEC witReturnCode STDCALL witGetBomEntryFalloutRate (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   float * falloutRate);

WIT_DECLSPEC witReturnCode STDCALL witGetBomEntryFalloutRateDbl (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   double * falloutRate);

WIT_DECLSPEC witReturnCode STDCALL witGetBomEntryImpactPeriod (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   int * * impactPeriod);

WIT_DECLSPEC witReturnCode STDCALL witGetBomEntryLatestPeriod (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   int * latestPeriod);

WIT_DECLSPEC witReturnCode STDCALL witGetBomEntryMandEC (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   witBoolean * mandEC);

WIT_DECLSPEC witReturnCode STDCALL witGetBomEntryNSubsBomEntries (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   int * nSubsBomEntries);

WIT_DECLSPEC witReturnCode STDCALL witGetBomEntryNonSubVarIndex (
   WitRun * const     theWitRun,
   const char * const consumingOperationName,
   const int          bomEntryIndex,
   const int          thePer,
   int *              nonSubVarIndex);

WIT_DECLSPEC witReturnCode STDCALL witGetBomEntryOffset (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   float * * offset);

WIT_DECLSPEC witReturnCode STDCALL witGetBomEntryOffsetDbl (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   double * * offset);

WIT_DECLSPEC witReturnCode STDCALL witGetBomEntryPropRtg (
   WitRun * const     theWitRun,
   const char * const consumingOperationName,
   const int          bomEntryIndex,
   witBoolean * *     propRtg);

WIT_DECLSPEC witReturnCode STDCALL witGetBomEntryRoutingShare (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   float * * routingShare);

WIT_DECLSPEC witReturnCode STDCALL witGetBomEntryRoutingShareDbl (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   double * * routingShare);

WIT_DECLSPEC witReturnCode STDCALL witGetBomEntrySelForDel (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   witBoolean * selForDel);

WIT_DECLSPEC witReturnCode STDCALL witGetBomEntrySingleSource (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   witBoolean * singleSource);

WIT_DECLSPEC witReturnCode STDCALL witGetBomEntrySubConIndex (
   WitRun * const     theWitRun,
   const char * const consumingOperationName,
   const int          bomEntryIndex,
   const int          thePer,
   int *              subConIndex);

WIT_DECLSPEC witReturnCode STDCALL witGetBopEntryAppData (
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   void * * appData);

WIT_DECLSPEC witReturnCode STDCALL witGetBopEntryEarliestPeriod (
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   int * earliestPeriod);

WIT_DECLSPEC witReturnCode STDCALL witGetBopEntryExpAllowed (
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   witBoolean * expAllowed);

WIT_DECLSPEC witReturnCode STDCALL witGetBopEntryExpAversion (
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   float * expAversion);

WIT_DECLSPEC witReturnCode STDCALL witGetBopEntryExpAversionDbl (
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   double * expAversion);

WIT_DECLSPEC witReturnCode STDCALL witGetBopEntryImpactPeriod (
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   int * * impactPeriod);

WIT_DECLSPEC witReturnCode STDCALL witGetBopEntryLatestPeriod (
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   int * latestPeriod);

WIT_DECLSPEC witReturnCode STDCALL witGetBopEntryOffset (
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   float * * offset);

WIT_DECLSPEC witReturnCode STDCALL witGetBopEntryOffsetDbl (
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   double * * offset);

WIT_DECLSPEC witReturnCode STDCALL witGetBopEntryProductRate (
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   float * * productRate);

WIT_DECLSPEC witReturnCode STDCALL witGetBopEntryProductRateDbl (
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   double * * productRate);

WIT_DECLSPEC witReturnCode STDCALL witGetBopEntryProducedPart (
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   char * * producedPartName);

WIT_DECLSPEC witReturnCode STDCALL witGetBopEntryRoutingShare (
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   float * * routingShare);

WIT_DECLSPEC witReturnCode STDCALL witGetBopEntryRoutingShareDbl (
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   double * * routingShare);

WIT_DECLSPEC witReturnCode STDCALL witGetBopEntrySelForDel (
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   witBoolean * selForDel);

WIT_DECLSPEC witReturnCode STDCALL witGetBoundsValue (
   WitRun * const theWitRun,
   float *        boundsValue);

WIT_DECLSPEC witReturnCode STDCALL witGetBoundsValueDbl (
   WitRun * const theWitRun,
   double *       boundsValue);

WIT_DECLSPEC witReturnCode STDCALL witGetCompPrices (
   WitRun * const theWitRun,
   witBoolean * compPrices);

WIT_DECLSPEC witReturnCode STDCALL witGetComputeCriticalList (
   WitRun * const theWitRun,
   witBoolean * computeCriticalList);

WIT_DECLSPEC witReturnCode STDCALL witGetCplexEmbedded (
   WitRun * const theWitRun,
   witBoolean *   cplexEmbedded);

WIT_DECLSPEC witReturnCode STDCALL witGetCplexMipBound (
   WitRun * const theWitRun,
   float * cplexMipBound);

WIT_DECLSPEC witReturnCode STDCALL witGetCplexMipBoundDbl (
   WitRun * const theWitRun,
   double * cplexMipBound);

WIT_DECLSPEC witReturnCode STDCALL witGetCplexMipRelGap (
   WitRun * const theWitRun,
   float * cplexMipRelGap);

WIT_DECLSPEC witReturnCode STDCALL witGetCplexMipRelGapDbl (
   WitRun * const theWitRun,
   double * cplexMipRelGap);

WIT_DECLSPEC witReturnCode STDCALL witGetCplexParSpecDblVal (
   WitRun * const theWitRun,
   float * cplexParSpecDblVal);

WIT_DECLSPEC witReturnCode STDCALL witGetCplexParSpecDblValDbl (
   WitRun * const theWitRun,
   double * cplexParSpecDblVal);

WIT_DECLSPEC witReturnCode STDCALL witGetCplexParSpecIntVal (
   WitRun * const theWitRun,
   int * cplexParSpecIntVal);

WIT_DECLSPEC witReturnCode STDCALL witGetCplexParSpecName (
   WitRun * const theWitRun,
   char * * cplexParSpecName);

WIT_DECLSPEC witReturnCode STDCALL witGetCplexStatusCode (
   WitRun * const theWitRun,
   int *          cplexStatusCode);

WIT_DECLSPEC witReturnCode STDCALL witGetCplexStatusText (
   WitRun * const theWitRun,
   char * *       cplexStatusText);

WIT_DECLSPEC witReturnCode STDCALL witGetCriticalList (
   WitRun * const theWitRun,
   int * lenCritList,
   char * * * critPartList,
   int * * critPeriod);

WIT_DECLSPEC witReturnCode STDCALL witGetCurrentObjective (
   WitRun * const theWitRun,
   char * * theObjName);

WIT_DECLSPEC witReturnCode STDCALL witGetCurrentScenario (
   WitRun * const theWitRun,
   int * currentScenario);

WIT_DECLSPEC witReturnCode STDCALL witGetDblCplexParSpec (
   WitRun * const     theWitRun,
   const char * const theName,
   witBoolean *       dblSpecExists,
   float *            theValue);

WIT_DECLSPEC witReturnCode STDCALL witGetDblCplexParSpecDbl (
   WitRun * const     theWitRun,
   const char * const theName,
   witBoolean *       dblSpecExists,
   double *           theValue);

WIT_DECLSPEC witReturnCode STDCALL witGetDemandAppData (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   void * * appData);

WIT_DECLSPEC witReturnCode STDCALL witGetDemandCoExecVolPip (
   WitRun * const     theWitRun,
   const char * const partName,
   const char * const demandName,
   const int          shipPeriod,
   int *              lenLists,
   char * * *         operationNameList,
   int * *            bopEntryIndexList,
   int * *            execPeriodList,
   float * *          peggedVolList);

WIT_DECLSPEC witReturnCode STDCALL witGetDemandCoExecVolPipDbl (
   WitRun * const     theWitRun,
   const char * const partName,
   const char * const demandName,
   const int          shipPeriod,
   int *              lenLists,
   char * * *         operationNameList,
   int * *            bopEntryIndexList,
   int * *            execPeriodList,
   double * *         peggedVolList);

WIT_DECLSPEC witReturnCode STDCALL witGetDemandConsVolPip (
   WitRun * const     theWitRun,
   const char * const partName,
   const char * const demandName,
   const int          shipPeriod,
   int *              lenLists,
   char * * *         partNameList,
   int * *            periodList,
   float * *          peggedVolList);

WIT_DECLSPEC witReturnCode STDCALL witGetDemandConsVolPipDbl (
   WitRun * const     theWitRun,
   const char * const partName,
   const char * const demandName,
   const int          shipPeriod,
   int *              lenLists,
   char * * *         partNameList,
   int * *            periodList,
   double * *         peggedVolList);

WIT_DECLSPEC witReturnCode STDCALL witGetDemandCumShipBounds (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   float * * hardLower,
   float * * softLower,
   float * * hardUpper);

WIT_DECLSPEC witReturnCode STDCALL witGetDemandCumShipBoundsDbl (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   double * * hardLower,
   double * * softLower,
   double * * hardUpper);

WIT_DECLSPEC witReturnCode STDCALL witGetDemandCumShipReward (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   float * * cumShipReward);

WIT_DECLSPEC witReturnCode STDCALL witGetDemandCumShipRewardDbl (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   double * * cumShipReward);

WIT_DECLSPEC witReturnCode STDCALL witGetDemandCumShipSlbConIndex (
   WitRun * const     theWitRun,
   const char * const partName,
   const char * const demandName,
   const int          thePer,
   int *              cumShipSlbConIndex);

WIT_DECLSPEC witReturnCode STDCALL witGetDemandCumShipSlbvVarIndex (
   WitRun * const     theWitRun,
   const char * const partName,
   const char * const demandName,
   const int          thePer,
   int *              cumShipSlbvVarIndex);

WIT_DECLSPEC witReturnCode STDCALL witGetDemandCumShipVarIndex (
   WitRun * const     theWitRun,
   const char * const partName,
   const char * const demandName,
   const int          thePer,
   int *              cumShipVarIndex);

WIT_DECLSPEC witReturnCode STDCALL witGetDemandDemandVol (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   float * * demandVol);

WIT_DECLSPEC witReturnCode STDCALL witGetDemandDemandVolDbl (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   double * * demandVol);

WIT_DECLSPEC witReturnCode STDCALL witGetDemandExecVolPegging (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const int shipPeriod,
   int * lenLists,
   char * * * operationNameList,
   int * * execPeriodList,
   float * * peggedExecVolList);

WIT_DECLSPEC witReturnCode STDCALL witGetDemandExecVolPeggingDbl (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const int shipPeriod,
   int * lenLists,
   char * * * operationNameList,
   int * * execPeriodList,
   double * * peggedExecVolList);

WIT_DECLSPEC witReturnCode STDCALL witGetDemandExecVolPip (
   WitRun * const     theWitRun,
   const char * const partName,
   const char * const demandName,
   const int          shipPeriod,
   int *              lenLists,
   char * * *         operationNameList,
   int * *            execPeriodList,
   float * *          peggedExecVolList);

WIT_DECLSPEC witReturnCode STDCALL witGetDemandExecVolPipDbl (
   WitRun * const     theWitRun,
   const char * const partName,
   const char * const demandName,
   const int          shipPeriod,
   int *              lenLists,
   char * * *         operationNameList,
   int * *            execPeriodList,
   double * *         peggedExecVolList);

WIT_DECLSPEC witReturnCode STDCALL witGetDemandFocusHorizon (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   int  * focusHorizon);

WIT_DECLSPEC witReturnCode STDCALL witGetDemandFssShipVol (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   float * * fssShipVol);

WIT_DECLSPEC witReturnCode STDCALL witGetDemandFssShipVolDbl (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   double * * fssShipVol);

WIT_DECLSPEC witReturnCode STDCALL witGetDemandIntShipVols (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   witBoolean * intShipVols);

WIT_DECLSPEC witReturnCode STDCALL witGetDemandLeadTimeUB (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   int * * leadTimeUB);

WIT_DECLSPEC witReturnCode STDCALL witGetDemandPriority (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   int * * priority);

WIT_DECLSPEC witReturnCode STDCALL witGetDemandProdVolPip (
   WitRun * const     theWitRun,
   const char * const partName,
   const char * const demandName,
   const int          shipPeriod,
   int *              lenLists,
   char * * *         partNameList,
   int * *            periodList,
   float * *          peggedVolList);

WIT_DECLSPEC witReturnCode STDCALL witGetDemandProdVolPipDbl (
   WitRun * const     theWitRun,
   const char * const partName,
   const char * const demandName,
   const int          shipPeriod,
   int *              lenLists,
   char * * *         partNameList,
   int * *            periodList,
   double * *         peggedVolList);

WIT_DECLSPEC witReturnCode STDCALL witGetDemandSearchInc (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   float * searchInc);

WIT_DECLSPEC witReturnCode STDCALL witGetDemandSearchIncDbl (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   double * searchInc);

WIT_DECLSPEC witReturnCode STDCALL witGetDemandSelForDel (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   witBoolean * selForDel);

WIT_DECLSPEC witReturnCode STDCALL witGetDemandShipConIndex (
   WitRun * const     theWitRun,
   const char * const partName,
   const char * const demandName,
   const int          thePer,
   int *              shipConIndex);

WIT_DECLSPEC witReturnCode STDCALL witGetDemandShipLateAllowed (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   witBoolean * shipLateAllowed);

WIT_DECLSPEC witReturnCode STDCALL witGetDemandShipLateUB (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   int * * shipLateUB);

WIT_DECLSPEC witReturnCode STDCALL witGetDemandShipReward (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   float * * shipReward);

WIT_DECLSPEC witReturnCode STDCALL witGetDemandShipRewardDbl (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   double * * shipReward);

WIT_DECLSPEC witReturnCode STDCALL witGetDemandShipVarIndex (
   WitRun * const     theWitRun,
   const char * const partName,
   const char * const demandName,
   const int          thePer,
   int *              shipVarIndex);

WIT_DECLSPEC witReturnCode STDCALL witGetDemandShipVol (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   float * * shipVol);

WIT_DECLSPEC witReturnCode STDCALL witGetDemandShipVolDbl (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   double * * shipVol);

WIT_DECLSPEC witReturnCode STDCALL witGetDemandSideVolPip (
   WitRun * const     theWitRun,
   const char * const partName,
   const char * const demandName,
   const int          shipPeriod,
   int *              lenLists,
   char * * *         partNameList,
   int * *            periodList,
   float * *          peggedVolList);

WIT_DECLSPEC witReturnCode STDCALL witGetDemandSideVolPipDbl (
   WitRun * const     theWitRun,
   const char * const partName,
   const char * const demandName,
   const int          shipPeriod,
   int *              lenLists,
   char * * *         partNameList,
   int * *            periodList,
   double * *         peggedVolList);

WIT_DECLSPEC witReturnCode STDCALL witGetDemandSubVolPegging (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const int shipPeriod,
   int * lenLists,
   char * * * operationNameList,
   int * * bomEntryIndexList,
   int * * subsBomEntryIndexList,
   int * * execPeriodList,
   float * * peggedSubVolList);

WIT_DECLSPEC witReturnCode STDCALL witGetDemandSubVolPeggingDbl (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const int shipPeriod,
   int * lenLists,
   char * * * operationNameList,
   int * * bomEntryIndexList,
   int * * subsBomEntryIndexList,
   int * * execPeriodList,
   double * * peggedSubVolList);

WIT_DECLSPEC witReturnCode STDCALL witGetDemandSubVolPip (
   WitRun * const     theWitRun,
   const char * const partName,
   const char * const demandName,
   const int          shipPeriod,
   int *              lenLists,
   char * * *         operationNameList,
   int * *            bomEntryIndexList,
   int * *            subsBomEntryIndexList,
   int * *            execPeriodList,
   float * *          peggedSubVolList);

WIT_DECLSPEC witReturnCode STDCALL witGetDemandSubVolPipDbl (
   WitRun * const     theWitRun,
   const char * const partName,
   const char * const demandName,
   const int          shipPeriod,
   int *              lenLists,
   char * * *         operationNameList,
   int * *            bomEntryIndexList,
   int * *            subsBomEntryIndexList,
   int * *            execPeriodList,
   double * *         peggedSubVolList);

WIT_DECLSPEC witReturnCode STDCALL witGetDemandSupplyVolPip (
   WitRun * const     theWitRun,
   const char * const partName,
   const char * const demandName,
   const int          shipPeriod,
   int *              lenLists,
   char * * *         partNameList,
   int * *            periodList,
   float * *          peggedVolList);

WIT_DECLSPEC witReturnCode STDCALL witGetDemandSupplyVolPipDbl (
   WitRun * const     theWitRun,
   const char * const partName,
   const char * const demandName,
   const int          shipPeriod,
   int *              lenLists,
   char * * *         partNameList,
   int * *            periodList,
   double * *         peggedVolList);

WIT_DECLSPEC witReturnCode STDCALL witGetEquitability (
   WitRun * const theWitRun,
   int * equitablity);

WIT_DECLSPEC witReturnCode STDCALL witGetExecEmptyBom (
   WitRun * const theWitRun,
   witBoolean * execEmptyBom);

WIT_DECLSPEC witReturnCode STDCALL witGetExpCutoff (
   WitRun * const theWitRun,
   float * expCutoff);

WIT_DECLSPEC witReturnCode STDCALL witGetExpCutoffDbl (
   WitRun * const theWitRun,
   double * expCutoff);

WIT_DECLSPEC witReturnCode STDCALL witGetExpCycle (
   WitRun * const theWitRun,
   int *          lenLists,
   char * * *     partNameList,
   char * * *     operationNameList);

WIT_DECLSPEC witReturnCode STDCALL witGetExtOptActive (
   WitRun * const theWitRun,
   witBoolean *   extOptActive);

WIT_DECLSPEC witReturnCode STDCALL witGetExtOptIntVarIndices (
   WitRun * const theWitRun,
   int * *        indices,
   int *          len);

WIT_DECLSPEC witReturnCode STDCALL witGetExtOptLpProb (
   WitRun * const theWitRun,
   int *          numcols,
   int *          numrows,
   int * *        start,
   int * *        index,
   float * *      value,
   float * *      collb,
   float * *      colub,
   float * *      obj,
   float * *      rowlb,
   float * *      rowub);

WIT_DECLSPEC witReturnCode STDCALL witGetExtOptLpProbDbl (
   WitRun * const theWitRun,
   int *          numcols,
   int *          numrows,
   int * *        start,
   int * *        index,
   double * *     value,
   double * *     collb,
   double * *     colub,
   double * *     obj,
   double * *     rowlb,
   double * *     rowub);

WIT_DECLSPEC witReturnCode STDCALL witGetFeasible (
   WitRun * const theWitRun,
   witBoolean * feasible);

WIT_DECLSPEC witReturnCode STDCALL witGetFocusShortageVol (
   WitRun * const theWitRun,
   int *          lenList,
   char * * *     partList,
   float * * *    shortageVolList);

WIT_DECLSPEC witReturnCode STDCALL witGetFocusShortageVolDbl (
   WitRun * const theWitRun,
   int *          lenList,
   char * * *     partList,
   double * * *   shortageVolList);

WIT_DECLSPEC witReturnCode STDCALL witGetForcedMultiEq (
   WitRun * const theWitRun,
   witBoolean * forcedMultiEq);

WIT_DECLSPEC witReturnCode STDCALL witGetHeurAllocActive (
   WitRun * const theWitRun,
   witBoolean * heurAllocActive);

WIT_DECLSPEC witReturnCode STDCALL witGetHighPrecisionWD (
   WitRun * const theWitRun,
   witBoolean * highPrecisionWD);

WIT_DECLSPEC witReturnCode STDCALL witGetIndependentOffsets (
   WitRun * const theWitRun,
   int * independentOffsets);

WIT_DECLSPEC witReturnCode STDCALL witGetIntCplexParSpec (
   WitRun * const     theWitRun,
   const char * const theName,
   witBoolean *       intSpecExists,
   int *              theValue);

WIT_DECLSPEC witReturnCode STDCALL witGetLotSizeTol (
   WitRun * const theWitRun,
   float * lotSizeTol);

WIT_DECLSPEC witReturnCode STDCALL witGetLotSizeTolDbl (
   WitRun * const theWitRun,
   double * lotSizeTol);

WIT_DECLSPEC witReturnCode STDCALL witGetMesgFile (
   WitRun * const theWitRun,
   FILE * * mesgFile);

WIT_DECLSPEC witReturnCode STDCALL witGetMesgFileAccessMode (
   WitRun * const theWitRun,
   char * * mesgFileAccessMode);

WIT_DECLSPEC witReturnCode STDCALL witGetMesgFileName (
   WitRun * const theWitRun,
   char * * mesgFileName);

WIT_DECLSPEC witReturnCode STDCALL witGetMesgPrintNumber (
   WitRun * const theWitRun,
   const int messageNumber,
   witBoolean * mesgPrintMunber);

WIT_DECLSPEC witReturnCode STDCALL witGetMesgStopRunning (
   WitRun * const theWitRun,
   const int messageNumber,
   witBoolean * mesgStopRunning);

WIT_DECLSPEC witReturnCode STDCALL witGetMesgThrowErrorExc (
   WitRun * const theWitRun,
   const int messageNumber,
   witBoolean * mesgThrowErrorExc);

WIT_DECLSPEC witReturnCode STDCALL witGetMesgTimesPrint (
   WitRun * const theWitRun,
   const int messageNumber,
   int * mesgTimesPrint);

WIT_DECLSPEC witReturnCode STDCALL witGetMinimalExcess (
   WitRun * const theWitRun,
   witBoolean * minimalExcess);

WIT_DECLSPEC witReturnCode STDCALL witGetMipMode (
   WitRun * const theWitRun,
   witBoolean * mipMode);

WIT_DECLSPEC witReturnCode STDCALL witGetModHeurAlloc (
   WitRun * const theWitRun,
   witBoolean * modHeurAlloc);

WIT_DECLSPEC witReturnCode STDCALL witGetMultiExec (
   WitRun * const theWitRun,
   witBoolean * multiExec);

WIT_DECLSPEC witReturnCode STDCALL witGetMultiObjMode (
   WitRun * const theWitRun,
   witBoolean * multiObjMode);

WIT_DECLSPEC witReturnCode STDCALL witGetMultiObjTol (
   WitRun * const theWitRun,
   float * multiObjTol);

WIT_DECLSPEC witReturnCode STDCALL witGetMultiObjTolDbl (
   WitRun * const theWitRun,
   double * multiObjTol);

WIT_DECLSPEC witReturnCode STDCALL witGetMultiRoute (
   WitRun * const theWitRun,
   witBoolean * multiRoute);

WIT_DECLSPEC witReturnCode STDCALL witGetNPeriods (
   WitRun * const theWitRun,
   int * nPeriods);

WIT_DECLSPEC witReturnCode STDCALL witGetNScenarios (
   WitRun * const theWitRun,
   int * nScenarios);

WIT_DECLSPEC witReturnCode STDCALL witGetNstnResidual (
   WitRun * const theWitRun,
   witBoolean * nstnResidual);

WIT_DECLSPEC witReturnCode STDCALL witGetObjItrBomEntry (
   WitRun * const theWitRun,
   char * * consumingOperationName,
   int * bomEntryIndex);

WIT_DECLSPEC witReturnCode STDCALL witGetObjItrBopEntry (
   WitRun * const theWitRun,
   char * * producingOperationName,
   int * bopEntryIndex);

WIT_DECLSPEC witReturnCode STDCALL witGetObjItrDemand (
   WitRun * const theWitRun,
   char * * demandedPartName,
   char * * demandName);

WIT_DECLSPEC witReturnCode STDCALL witGetObjItrOperation (
   WitRun * const theWitRun,
   char * * operationName);

WIT_DECLSPEC witReturnCode STDCALL witGetObjItrPart (
   WitRun * const theWitRun,
   char * * partName);

WIT_DECLSPEC witReturnCode STDCALL witGetObjItrState (
   WitRun * const theWitRun,
   witAttr * objItrState);

WIT_DECLSPEC witReturnCode STDCALL witGetObjItrSubsBomEntry (
   WitRun * const theWitRun,
   char * * consumingOperationName,
   int * bomEntryIndex,
   int * subsBomEntryIndex);

WIT_DECLSPEC witReturnCode STDCALL witGetObjValue (
   WitRun * const theWitRun,
   float *        objValue);

WIT_DECLSPEC witReturnCode STDCALL witGetObjValueDbl (
   WitRun * const theWitRun,
   double *       objValue);

WIT_DECLSPEC witReturnCode STDCALL witGetObjectiveList (
   WitRun * const theWitRun,
   int  *         lenList,
   char * * *     objectiveList);

WIT_DECLSPEC witReturnCode STDCALL witGetObjectiveListSpec (
   WitRun * const theWitRun,
   char * *       objectiveListSpec);

WIT_DECLSPEC witReturnCode STDCALL witGetObjectiveRank (
   WitRun * const theWitRun,
   int * objectiveRank);

WIT_DECLSPEC witReturnCode STDCALL witGetOperationAppData (
   WitRun * const theWitRun,
   const char * const operationName,
   void * * appData);

WIT_DECLSPEC witReturnCode STDCALL witGetOperationExecBounds (
   WitRun * const theWitRun,
   const char * const operationName,
   float * * hardLower,
   float * * softLower,
   float * * hardUpper);

WIT_DECLSPEC witReturnCode STDCALL witGetOperationExecBoundsDbl (
   WitRun * const theWitRun,
   const char * const operationName,
   double * * hardLower,
   double * * softLower,
   double * * hardUpper);

WIT_DECLSPEC witReturnCode STDCALL witGetOperationExecCost (
   WitRun * const theWitRun,
   const char * const operationName,
   float * * execCost);

WIT_DECLSPEC witReturnCode STDCALL witGetOperationExecCostDbl (
   WitRun * const theWitRun,
   const char * const operationName,
   double * * execCost);

WIT_DECLSPEC witReturnCode STDCALL witGetOperationExecPenalty (
   WitRun * const theWitRun,
   const char * const operationName,
   float * execPenalty);

WIT_DECLSPEC witReturnCode STDCALL witGetOperationExecPenaltyDbl (
   WitRun * const theWitRun,
   const char * const operationName,
   double * execPenalty);

WIT_DECLSPEC witReturnCode STDCALL witGetOperationExecSlbConIndex (
   WitRun * const     theWitRun,
   const char * const operationName,
   const int          thePer,
   int *              execSlbConIndex);

WIT_DECLSPEC witReturnCode STDCALL witGetOperationExecSlbvVarIndex (
   WitRun * const     theWitRun,
   const char * const operationName,
   const int          thePer,
   int *              execSlbvVarIndex);

WIT_DECLSPEC witReturnCode STDCALL witGetOperationExecVarIndex (
   WitRun * const     theWitRun,
   const char * const operationName,
   const int          thePer,
   int *              execVarIndex);

WIT_DECLSPEC witReturnCode STDCALL witGetOperationExecVol (
   WitRun * const theWitRun,
   const char * const operationName,
   float * * execVol);

WIT_DECLSPEC witReturnCode STDCALL witGetOperationExecVolDbl (
   WitRun * const theWitRun,
   const char * const operationName,
   double * * execVol);

WIT_DECLSPEC witReturnCode STDCALL witGetOperationExecutable (
   WitRun * const theWitRun,
   const char * const operationName,
   witBoolean * * executable);

WIT_DECLSPEC witReturnCode STDCALL witGetOperationExists (
   WitRun * const theWitRun,
   const char * const operationNameParm,
   witBoolean * exists);

WIT_DECLSPEC witReturnCode STDCALL witGetOperationFssExecVol (
   WitRun * const theWitRun,
   const char * const operationName,
   float * * fssExecVol);

WIT_DECLSPEC witReturnCode STDCALL witGetOperationFssExecVolDbl (
   WitRun * const theWitRun,
   const char * const operationName,
   double * * fssExecVol);

WIT_DECLSPEC witReturnCode STDCALL witGetOperationIncLotSize (
   WitRun * const theWitRun,
   const char * const operationName,
   float * * incLotSize);

WIT_DECLSPEC witReturnCode STDCALL witGetOperationIncLotSizeDbl (
   WitRun * const theWitRun,
   const char * const operationName,
   double * * incLotSize);

WIT_DECLSPEC witReturnCode STDCALL witGetOperationIncLotSize2 (
   WitRun * const theWitRun,
   const char * const operationName,
   float * * incLotSize2);

WIT_DECLSPEC witReturnCode STDCALL witGetOperationIncLotSize2Dbl (
   WitRun * const theWitRun,
   const char * const operationName,
   double * * incLotSize2);

WIT_DECLSPEC witReturnCode STDCALL witGetOperationIntExecVols (
   WitRun * const theWitRun,
   const char * const operationName,
   witBoolean * intExecVols);

WIT_DECLSPEC witReturnCode STDCALL witGetOperationLotSize2Thresh (
   WitRun * const theWitRun,
   const char * const operationName,
   float * * lotSize2Thresh);

WIT_DECLSPEC witReturnCode STDCALL witGetOperationLotSize2ThreshDbl (
   WitRun * const theWitRun,
   const char * const operationName,
   double * * lotSize2Thresh);

WIT_DECLSPEC witReturnCode STDCALL witGetOperationMinLotSize (
   WitRun * const theWitRun,
   const char * const operationName,
   float * * minLotSize);

WIT_DECLSPEC witReturnCode STDCALL witGetOperationMinLotSizeDbl (
   WitRun * const theWitRun,
   const char * const operationName,
   double * * minLotSize);

WIT_DECLSPEC witReturnCode STDCALL witGetOperationMinLotSize2 (
   WitRun * const theWitRun,
   const char * const operationName,
   float * * minLotSize2);

WIT_DECLSPEC witReturnCode STDCALL witGetOperationMinLotSize2Dbl (
   WitRun * const theWitRun,
   const char * const operationName,
   double * * minLotSize2);

WIT_DECLSPEC witReturnCode STDCALL witGetOperationMrpExecVol (
   WitRun * const theWitRun,
   const char * const operationName,
   float * * mrpExecVol);

WIT_DECLSPEC witReturnCode STDCALL witGetOperationMrpExecVolDbl (
   WitRun * const theWitRun,
   const char * const operationName,
   double * * mrpExecVol);

WIT_DECLSPEC witReturnCode STDCALL witGetOperationNBomEntries (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   int * nBomEntries);

WIT_DECLSPEC witReturnCode STDCALL witGetOperationNBopEntries (
   WitRun * const theWitRun,
   const char * const producingOperationName,
   int * nBopEntries);

WIT_DECLSPEC witReturnCode STDCALL witGetOperationObjectStage (
   WitRun * const     theWitRun,
   const char * const operationName,
   int *              objectStage);

WIT_DECLSPEC witReturnCode STDCALL witGetOperationSelForDel (
   WitRun * const theWitRun,
   const char * const operationName,
   witBoolean * selForDel);

WIT_DECLSPEC witReturnCode STDCALL witGetOperations (
   WitRun * const theWitRun,
   int * lenOperationList,
   char * * * operationList);

WIT_DECLSPEC witReturnCode STDCALL witGetOperationTwoLevelLotSizes (
   WitRun * const theWitRun,
   const char * const operationName,
   witBoolean * twoLevelLotSizes);

WIT_DECLSPEC witReturnCode STDCALL witGetOperationYieldRate (
   WitRun * const theWitRun,
   const char * const operationName,
   float * * yieldRate);

WIT_DECLSPEC witReturnCode STDCALL witGetOperationYieldRateDbl (
   WitRun * const theWitRun,
   const char * const operationName,
   double * * yieldRate);

WIT_DECLSPEC witReturnCode STDCALL witGetOptInitMethod (
   WitRun * const theWitRun,
   witAttr * optInitMethod);

WIT_DECLSPEC witReturnCode STDCALL witGetOutputPrecision (
   WitRun * const theWitRun,
   int * outputPrecision);

WIT_DECLSPEC witReturnCode STDCALL witGetPartAppData (
   WitRun * const theWitRun,
   const char * const partName,
   void * * appData);

WIT_DECLSPEC witReturnCode STDCALL witGetPartAsapPipOrder (
   WitRun * const theWitRun,
   const char * const partName,
   witBoolean * asapPipOrder);

WIT_DECLSPEC witReturnCode STDCALL witGetPartBelowList (
   WitRun * const theWitRun,
   const char * const partName,
   int * lenList,
   char * * * partNameList);

WIT_DECLSPEC witReturnCode STDCALL witGetPartBoundedLeadTimes (
   WitRun * const theWitRun,
   const char * const partName,
   witBoolean * boundedLeadTimes);

WIT_DECLSPEC witReturnCode STDCALL witGetPartBuildAheadUB (
   WitRun * const theWitRun,
   const char * const partName,
   int * * buildAheadUB);

WIT_DECLSPEC witReturnCode STDCALL witGetPartBuildAsap (
   WitRun * const theWitRun,
   const char * const partName,
   witBoolean * buildAsap);

WIT_DECLSPEC witReturnCode STDCALL witGetPartBuildNstn (
   WitRun * const theWitRun,
   const char * const partName,
   witBoolean * buildNstn);

WIT_DECLSPEC witReturnCode STDCALL witGetPartCategory (
   WitRun * const theWitRun,
   const char * const partName,
   witAttr * category);

WIT_DECLSPEC witReturnCode STDCALL witGetPartConsVol (
   WitRun * const theWitRun,
   const char * const partName,
   float * * consVol);

WIT_DECLSPEC witReturnCode STDCALL witGetPartConsVolDbl (
   WitRun * const theWitRun,
   const char * const partName,
   double * * consVol);

WIT_DECLSPEC witReturnCode STDCALL witGetPartConsumingBomEntry (
   WitRun * const theWitRun,
   const char * const partName,
   const int consIndex,
   char * * consumingOperationName,
   int * bomEntryIndex);

WIT_DECLSPEC witReturnCode STDCALL witGetPartConsumingSubsBomEntry (
   WitRun * const theWitRun,
   const char * const partName,
   const int consIndex,
   char * * consumingOperationName,
   int * bomEntryIndex,
   int * subsBomEntryIndex);

WIT_DECLSPEC witReturnCode STDCALL witGetPartDemands (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   int * lenDemandList,
   char * * * demandList);

WIT_DECLSPEC witReturnCode STDCALL witGetPartExcessVol (
   WitRun * const theWitRun,
   const char * const partName,
   float * * excessVol);

WIT_DECLSPEC witReturnCode STDCALL witGetPartExcessVolDbl (
   WitRun * const theWitRun,
   const char * const partName,
   double * * excessVol);

WIT_DECLSPEC witReturnCode STDCALL witGetPartExists (
   WitRun * const theWitRun,
   const char * const partNameParm,
   witBoolean * exists);

WIT_DECLSPEC witReturnCode STDCALL witGetPartFocusShortageVol (
   WitRun * const theWitRun,
   const char * const partName,
   float * * shortageVol);

WIT_DECLSPEC witReturnCode STDCALL witGetPartFocusShortageVolDbl (
   WitRun * const theWitRun,
   const char * const partName,
   double * * shortageVol);

WIT_DECLSPEC witReturnCode STDCALL witGetPartMrpConsVol (
   WitRun * const theWitRun,
   const char * const partName,
   float * * mrpConsVol);

WIT_DECLSPEC witReturnCode STDCALL witGetPartMrpConsVolDbl (
   WitRun * const theWitRun,
   const char * const partName,
   double * * mrpConsVol);

WIT_DECLSPEC witReturnCode STDCALL witGetPartMrpExcessVol (
   WitRun * const theWitRun,
   const char * const partName,
   float * * mrpExcessVol);

WIT_DECLSPEC witReturnCode STDCALL witGetPartMrpExcessVolDbl (
   WitRun * const theWitRun,
   const char * const partName,
   double * * mrpExcessVol);

WIT_DECLSPEC witReturnCode STDCALL witGetPartMrpResidualVol (
   WitRun * const theWitRun,
   const char * const partName,
   float * * mrpResidualVol);

WIT_DECLSPEC witReturnCode STDCALL witGetPartMrpResidualVolDbl (
   WitRun * const theWitRun,
   const char * const partName,
   double * * mrpResidualVol);

WIT_DECLSPEC witReturnCode STDCALL witGetPartNConsumingBomEntries (
   WitRun * const theWitRun,
   const char * const partName,
   int * nConsumingBomEntries);

WIT_DECLSPEC witReturnCode STDCALL witGetPartNConsumingSubsBomEntries (
   WitRun * const theWitRun,
   const char * const partName,
   int * nConsumingSubsBomEntries);

WIT_DECLSPEC witReturnCode STDCALL witGetPartNProducingBopEntries (
   WitRun * const theWitRun,
   const char * const partName,
   int * nProducingBopEntries);

WIT_DECLSPEC witReturnCode STDCALL witGetPartObjectStage (
   WitRun * const     theWitRun,
   const char * const partName,
   int *              objectStage);

WIT_DECLSPEC witReturnCode STDCALL witGetPartProdVol (
   WitRun * const theWitRun,
   const char * const partName,
   float * * prodVol);

WIT_DECLSPEC witReturnCode STDCALL witGetPartProdVolDbl (
   WitRun * const theWitRun,
   const char * const partName,
   double * * prodVol);

WIT_DECLSPEC witReturnCode STDCALL witGetPartProducingBopEntry (
   WitRun * const theWitRun,
   const char * const partName,
   const int prodIndex,
   char * * producingOperationName,
   int * bopEntryIndex);

WIT_DECLSPEC witReturnCode STDCALL witGetPartPropRtg (
   WitRun * const     theWitRun,
   const char * const partName,
   witBoolean * *     propRtg);

WIT_DECLSPEC witReturnCode STDCALL witGetPartReqVol (
   WitRun * const theWitRun,
   const char * const partName,
   float * * reqVol);

WIT_DECLSPEC witReturnCode STDCALL witGetPartReqVolDbl (
   WitRun * const theWitRun,
   const char * const partName,
   double * * reqVol);

WIT_DECLSPEC witReturnCode STDCALL witGetPartResidualVol (
   WitRun * const theWitRun,
   const char * const partName,
   float * * residualVol);

WIT_DECLSPEC witReturnCode STDCALL witGetPartResidualVolDbl (
   WitRun * const theWitRun,
   const char * const partName,
   double * * residualVol);

WIT_DECLSPEC witReturnCode STDCALL witGetPartResourceConIndex (
   WitRun * const     theWitRun,
   const char * const partName,
   const int          thePer,
   int *              resourceConIndex);

WIT_DECLSPEC witReturnCode STDCALL witGetPartScrapAllowed (
   WitRun * const theWitRun,
   const char * const partName,
   witBoolean * scrapAllowed);

WIT_DECLSPEC witReturnCode STDCALL witGetPartScrapCost (
   WitRun * const theWitRun,
   const char * const partName,
   float * * scrapCost);

WIT_DECLSPEC witReturnCode STDCALL witGetPartScrapCostDbl (
   WitRun * const theWitRun,
   const char * const partName,
   double * * scrapCost);

WIT_DECLSPEC witReturnCode STDCALL witGetPartScrapVarIndex (
   WitRun * const     theWitRun,
   const char * const partName,
   const int          thePer,
   int *              scrapVarIndex);

WIT_DECLSPEC witReturnCode STDCALL witGetPartScrapVol (
   WitRun * const theWitRun,
   const char * const partName,
   float * * scrapVol);

WIT_DECLSPEC witReturnCode STDCALL witGetPartScrapVolDbl (
   WitRun * const theWitRun,
   const char * const partName,
   double * * scrapVol);

WIT_DECLSPEC witReturnCode STDCALL witGetPartSelForDel (
   WitRun * const theWitRun,
   const char * const partName,
   witBoolean * selForDel);

WIT_DECLSPEC witReturnCode STDCALL witGetPartShadowPrice (
   WitRun * const theWitRun,
   const char * const partName,
   float * * shadowPrice);

WIT_DECLSPEC witReturnCode STDCALL witGetPartShadowPriceDbl (
   WitRun * const theWitRun,
   const char * const partName,
   double * * shadowPrice);

WIT_DECLSPEC witReturnCode STDCALL witGetPartSingleSource (
   WitRun * const theWitRun,
   const char * const partName,
   witBoolean * singleSource);

WIT_DECLSPEC witReturnCode STDCALL witGetPartStockBounds (
   WitRun * const theWitRun,
   const char * const partName,
   float * * hardLower,
   float * * softLower,
   float * * hardUpper);

WIT_DECLSPEC witReturnCode STDCALL witGetPartStockBoundsDbl (
   WitRun * const theWitRun,
   const char * const partName,
   double * * hardLower,
   double * * softLower,
   double * * hardUpper);

WIT_DECLSPEC witReturnCode STDCALL witGetPartStockCost (
   WitRun * const theWitRun,
   const char * const partName,
   float * * stockCost);

WIT_DECLSPEC witReturnCode STDCALL witGetPartStockCostDbl (
   WitRun * const theWitRun,
   const char * const partName,
   double * * stockCost);

WIT_DECLSPEC witReturnCode STDCALL witGetPartStockSlbConIndex (
   WitRun * const     theWitRun,
   const char * const partName,
   const int          thePer,
   int *              stockSlbConIndex);

WIT_DECLSPEC witReturnCode STDCALL witGetPartStockSlbvVarIndex (
   WitRun * const     theWitRun,
   const char * const partName,
   const int          thePer,
   int *              stockSlbvVarIndex);

WIT_DECLSPEC witReturnCode STDCALL witGetPartStockVarIndex (
   WitRun * const     theWitRun,
   const char * const partName,
   const int          thePer,
   int *              stockVarIndex);

WIT_DECLSPEC witReturnCode STDCALL witGetPartStockVol (
   WitRun * const theWitRun,
   const char * const partName,
   float * * stockVol);

WIT_DECLSPEC witReturnCode STDCALL witGetPartStockVolDbl (
   WitRun * const theWitRun,
   const char * const partName,
   double * * stockVol);

WIT_DECLSPEC witReturnCode STDCALL witGetPartSupplyVol (
   WitRun * const theWitRun,
   const char * const partName,
   float * * supplyVol);

WIT_DECLSPEC witReturnCode STDCALL witGetPartSupplyVolDbl (
   WitRun * const theWitRun,
   const char * const partName,
   double * * supplyVol);

WIT_DECLSPEC witReturnCode STDCALL witGetParts (
   WitRun * const theWitRun,
   int * lenPartList,
   char * * * partList);

WIT_DECLSPEC witReturnCode STDCALL witGetPenExec (
   WitRun * const theWitRun,
   witBoolean * penExec);

WIT_DECLSPEC witReturnCode STDCALL witGetPerfPegging (
   WitRun * const theWitRun,
   witBoolean * perfPegging);

WIT_DECLSPEC witReturnCode STDCALL witGetPeriodStage (
   WitRun * const theWitRun,
   int * *        periodStage);

WIT_DECLSPEC witReturnCode STDCALL witGetPgdCritList (
   WitRun * const theWitRun,
   int *          lenLists,
   char * * *     critPartNameList,
   int * *        critPerList,
   char * * *     demPartNameList,
   char * * *     demandNameList,
   int * *        shipPerList);

WIT_DECLSPEC witReturnCode STDCALL witGetPgdCritListMode (
   WitRun * const theWitRun,
   witBoolean * pgdCritListMode);

WIT_DECLSPEC witReturnCode STDCALL witGetPipExists (
   WitRun * const theWitRun,
   witBoolean *   pipExists);

WIT_DECLSPEC witReturnCode STDCALL witGetPipSeq (
   WitRun * const theWitRun,
   int *          lenLists,
   char * * *     partNameList,
   char * * *     demandNameList,
   int * *        shipPerList,
   float * *      incShipVolList);

WIT_DECLSPEC witReturnCode STDCALL witGetPipSeqDbl (
   WitRun * const theWitRun,
   int *          lenLists,
   char * * *     partNameList,
   char * * *     demandNameList,
   int * *        shipPerList,
   double * *     incShipVolList);

WIT_DECLSPEC witReturnCode STDCALL witGetPipSeqFromHeur (
   WitRun * const theWitRun,
   witBoolean * pipSeqFromHeur);

WIT_DECLSPEC witReturnCode STDCALL witGetPostprocessed (
   WitRun * const theWitRun,
   witBoolean * postprocessed);

WIT_DECLSPEC witReturnCode STDCALL witGetPrefHighStockSLBs (
   WitRun * const theWitRun,
   witBoolean * prefHighStockSLBs);

WIT_DECLSPEC witReturnCode STDCALL witGetPreprocessed (
   WitRun * const theWitRun,
   witBoolean * preprocessed);

WIT_DECLSPEC witReturnCode STDCALL witGetProbability (
   WitRun * const theWitRun,
   float * probability);

WIT_DECLSPEC witReturnCode STDCALL witGetProbabilityDbl (
   WitRun * const theWitRun,
   double * probability);

WIT_DECLSPEC witReturnCode STDCALL witGetRespectStockSLBs (
   WitRun * const theWitRun,
   witBoolean * respectStockSLBs);

WIT_DECLSPEC witReturnCode STDCALL witGetRoundReqVols (
   WitRun * const theWitRun,
   witBoolean * roundReqVols);

WIT_DECLSPEC witReturnCode STDCALL witGetSelSplit (
   WitRun * const theWitRun,
   witBoolean * selSplit);

WIT_DECLSPEC witReturnCode STDCALL witGetSelectionRecovery (
   WitRun * const theWitRun,
   witBoolean * selectionRecovery);

WIT_DECLSPEC witReturnCode STDCALL witGetSkipFailures (
   WitRun * const theWitRun,
   witBoolean * skipFailures);

WIT_DECLSPEC witReturnCode STDCALL witGetSolverLogFileName (
   WitRun * const theWitRun,
   char * * solverLogFileName);

WIT_DECLSPEC witReturnCode STDCALL witGetStageByObject (
   WitRun * const theWitRun,
   witBoolean *   stageByObject);

WIT_DECLSPEC witReturnCode STDCALL witGetStochMode (
   WitRun * const theWitRun,
   witBoolean *   stochMode);

WIT_DECLSPEC witReturnCode STDCALL witGetStochSolnMode (
   WitRun * const theWitRun,
   witBoolean *   stochSolnMode);

WIT_DECLSPEC witReturnCode STDCALL witGetStockReallocation (
   WitRun * const theWitRun,
   witBoolean * stockReallocation);

WIT_DECLSPEC witReturnCode STDCALL witGetSubsBomEntryAppData (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   void * * appData);

WIT_DECLSPEC witReturnCode STDCALL witGetSubsBomEntryConsRate (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   float * * consRate);

WIT_DECLSPEC witReturnCode STDCALL witGetSubsBomEntryConsRateDbl (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   double * * consRate);

WIT_DECLSPEC witReturnCode STDCALL witGetSubsBomEntryConsumedPart (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   char  * * consumedPart);

WIT_DECLSPEC witReturnCode STDCALL witGetSubsBomEntryEarliestPeriod (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   int * earliestPeriod);

WIT_DECLSPEC witReturnCode STDCALL witGetSubsBomEntryExecPenalty (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   float * execPenalty);

WIT_DECLSPEC witReturnCode STDCALL witGetSubsBomEntryExecPenaltyDbl (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   double * execPenalty);

WIT_DECLSPEC witReturnCode STDCALL witGetSubsBomEntryExpAllowed (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   witBoolean * expAllowed);

WIT_DECLSPEC witReturnCode STDCALL witGetSubsBomEntryExpNetAversion (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   float * expNetAversion);

WIT_DECLSPEC witReturnCode STDCALL witGetSubsBomEntryExpNetAversionDbl (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   double * expNetAversion);

WIT_DECLSPEC witReturnCode STDCALL witGetSubsBomEntryFalloutRate (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   float * falloutRate);

WIT_DECLSPEC witReturnCode STDCALL witGetSubsBomEntryFalloutRateDbl (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   double * falloutRate);

WIT_DECLSPEC witReturnCode STDCALL witGetSubsBomEntryFssSubVol (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   float * * fssSubVol);

WIT_DECLSPEC witReturnCode STDCALL witGetSubsBomEntryFssSubVolDbl (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   double * * fssSubVol);

WIT_DECLSPEC witReturnCode STDCALL witGetSubsBomEntryImpactPeriod (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   int * * impactPeriod);

WIT_DECLSPEC witReturnCode STDCALL witGetSubsBomEntryIntSubVols (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   witBoolean * intSubVols);

WIT_DECLSPEC witReturnCode STDCALL witGetSubsBomEntryLatestPeriod (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   int * latestPeriod);

WIT_DECLSPEC witReturnCode STDCALL witGetSubsBomEntryMrpNetAllowed (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   witBoolean * mrpNetAllowed);

WIT_DECLSPEC witReturnCode STDCALL witGetSubsBomEntryMrpSubVol (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   float * * mrpSubVol);

WIT_DECLSPEC witReturnCode STDCALL witGetSubsBomEntryMrpSubVolDbl (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   double * * mrpSubVol);

WIT_DECLSPEC witReturnCode STDCALL witGetSubsBomEntryNetAllowed (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   witBoolean * netAllowed);

WIT_DECLSPEC witReturnCode STDCALL witGetSubsBomEntryOffset (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   float * * offset);

WIT_DECLSPEC witReturnCode STDCALL witGetSubsBomEntryOffsetDbl (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   double * * offset);

WIT_DECLSPEC witReturnCode STDCALL witGetSubsBomEntryRoutingShare (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   float * * routingShare);

WIT_DECLSPEC witReturnCode STDCALL witGetSubsBomEntryRoutingShareDbl (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   double * * routingShare);

WIT_DECLSPEC witReturnCode STDCALL witGetSubsBomEntrySelForDel (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   witBoolean * selForDel);

WIT_DECLSPEC witReturnCode STDCALL witGetSubsBomEntrySubCost (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   float * * subCost);

WIT_DECLSPEC witReturnCode STDCALL witGetSubsBomEntrySubCostDbl (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   double * * subCost);

WIT_DECLSPEC witReturnCode STDCALL witGetSubsBomEntrySubVarIndex (
   WitRun * const     theWitRun,
   const char * const consumingOperationName,
   const int          bomEntryIndex,
   const int          subsBomEntryIndex,
   const int          thePer,
   int *              subVarIndex);

WIT_DECLSPEC witReturnCode STDCALL witGetSubsBomEntrySubVol (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   float * * subVol);

WIT_DECLSPEC witReturnCode STDCALL witGetSubsBomEntrySubVolDbl (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   double * * subVol);

WIT_DECLSPEC witReturnCode STDCALL witGetTieBreakPropRt (
   WitRun * const theWitRun,
   witBoolean * tieBreakPropRt);

WIT_DECLSPEC witReturnCode STDCALL witGetTitle (
   WitRun * const theWitRun,
   char * * title);

WIT_DECLSPEC witReturnCode STDCALL witGetTruncOffsets (
   WitRun * const theWitRun,
   witBoolean * truncOffsets);

WIT_DECLSPEC witReturnCode STDCALL witGetTwoWayMultiExec (
   WitRun * const theWitRun,
   witBoolean * twoWayMultiExec);

WIT_DECLSPEC witReturnCode STDCALL witGetUseFocusHorizons (
   WitRun * const theWitRun,
   witBoolean * focusHorizons);

WIT_DECLSPEC witReturnCode STDCALL witGetUserHeurStart (
   WitRun * const theWitRun,
   witBoolean * userHeurStart);

WIT_DECLSPEC witReturnCode STDCALL witGetWbounds (
   WitRun * const theWitRun,
   float * wbounds);

WIT_DECLSPEC witReturnCode STDCALL witGetWboundsDbl (
   WitRun * const theWitRun,
   double * wbounds);

WIT_DECLSPEC witReturnCode STDCALL witGetWit34Compatible (
   WitRun * const theWitRun,
   witBoolean * wit34Compatible);

WIT_DECLSPEC witReturnCode STDCALL witHeurImplode (
   WitRun * const theWitRun);

WIT_DECLSPEC witReturnCode STDCALL witIncHeurAlloc (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const int shipPeriod,
   const float desIncVol,
   float * incVol);

WIT_DECLSPEC witReturnCode STDCALL witIncHeurAllocDbl (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const int shipPeriod,
   const double desIncVol,
   double * incVol);

WIT_DECLSPEC witReturnCode STDCALL witIncHeurAllocTwme (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const int shipPeriod,
   const float desIncVol,
   float * incVol,
   witBoolean asapMultiExec);

WIT_DECLSPEC witReturnCode STDCALL witIncHeurAllocTwmeDbl (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const int shipPeriod,
   const double desIncVol,
   double * incVol,
   witBoolean asapMultiExec);

WIT_DECLSPEC witReturnCode STDCALL witInitialize (
   WitRun * const theWitRun);

WIT_DECLSPEC witReturnCode STDCALL witMrp (
   WitRun * const theWitRun);

WIT_DECLSPEC witReturnCode STDCALL witNewRun (
   WitRun * * theWitRunPtr);

WIT_DECLSPEC witReturnCode STDCALL witOptImplode (
   WitRun * const theWitRun);

WIT_DECLSPEC witReturnCode STDCALL witPostprocess (
   WitRun * const theWitRun);

WIT_DECLSPEC witReturnCode STDCALL witPreprocess (
   WitRun * const theWitRun);

WIT_DECLSPEC witReturnCode STDCALL witPurgeData (
   WitRun * const theWitRun);

WIT_DECLSPEC witReturnCode STDCALL witReadData (
   WitRun * const theWitRun,
   const char * const mesgFileName);

WIT_DECLSPEC witReturnCode STDCALL witResetObjItr (
   WitRun * const theWitRun);

WIT_DECLSPEC witReturnCode STDCALL witSetAccAfterSoftLB (
   WitRun * const theWitRun,
   const witBoolean accAfterSoftLB);

WIT_DECLSPEC witReturnCode STDCALL witSetAccAfterOptImp (
   WitRun * const theWitRun,
   const witBoolean accAfterOptImp);

WIT_DECLSPEC witReturnCode STDCALL witSetAppData (
   WitRun * const theWitRun,
   void * const appData);

WIT_DECLSPEC witReturnCode STDCALL witSetAutoPriority (
   WitRun * const theWitRun,
   const witBoolean autoPriority);

WIT_DECLSPEC witReturnCode STDCALL witSetBomEntryAppData (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   void * const appData);

WIT_DECLSPEC witReturnCode STDCALL witSetBomEntryConsRate (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const float * const consRate);

WIT_DECLSPEC witReturnCode STDCALL witSetBomEntryConsRateDbl (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const double * const consRate);

WIT_DECLSPEC witReturnCode STDCALL witSetBomEntryEarliestPeriod (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int earliestPeriod);

WIT_DECLSPEC witReturnCode STDCALL witSetBomEntryExecPenalty (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const float execPenalty);

WIT_DECLSPEC witReturnCode STDCALL witSetBomEntryExecPenaltyDbl (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const double execPenalty);

WIT_DECLSPEC witReturnCode STDCALL witSetBomEntryFalloutRate (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const float falloutRate);

WIT_DECLSPEC witReturnCode STDCALL witSetBomEntryFalloutRateDbl (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const double falloutRate);

WIT_DECLSPEC witReturnCode STDCALL witSetBomEntryLatestPeriod (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int latestPeriod);

WIT_DECLSPEC witReturnCode STDCALL witSetBomEntryMandEC (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const witBoolean mandEC);

WIT_DECLSPEC witReturnCode STDCALL witSetBomEntryOffset (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const float * const offset);

WIT_DECLSPEC witReturnCode STDCALL witSetBomEntryOffsetDbl (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const double * const offset);

WIT_DECLSPEC witReturnCode STDCALL witSetBomEntryPropRtg (
   WitRun * const           theWitRun,
   const char * const       operationName,
   const int                bomEntryIndex,
   const witBoolean * const propRtg);

WIT_DECLSPEC witReturnCode STDCALL witSetBomEntryRoutingShare (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const float * routingShare);

WIT_DECLSPEC witReturnCode STDCALL witSetBomEntryRoutingShareDbl (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const double * routingShare);

WIT_DECLSPEC witReturnCode STDCALL witSetBomEntrySelForDel (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const witBoolean selForDel);

WIT_DECLSPEC witReturnCode STDCALL witSetBomEntrySingleSource (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const witBoolean singleSource);

WIT_DECLSPEC witReturnCode STDCALL witSetBopEntryAppData (
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   void * const appData);

WIT_DECLSPEC witReturnCode STDCALL witSetBopEntryEarliestPeriod (
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   const int earliestPeriod);

WIT_DECLSPEC witReturnCode STDCALL witSetBopEntryExpAllowed (
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   const witBoolean expAllowed);

WIT_DECLSPEC witReturnCode STDCALL witSetBopEntryExpAversion (
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   const float expAversion);

WIT_DECLSPEC witReturnCode STDCALL witSetBopEntryExpAversionDbl (
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   const double expAversion);

WIT_DECLSPEC witReturnCode STDCALL witSetBopEntryLatestPeriod (
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   const int latestPeriod);

WIT_DECLSPEC witReturnCode STDCALL witSetBopEntryOffset (
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   const float * const offset);

WIT_DECLSPEC witReturnCode STDCALL witSetBopEntryOffsetDbl (
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   const double * const offset);

WIT_DECLSPEC witReturnCode STDCALL witSetBopEntryProductRate (
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   const float * const productRate);

WIT_DECLSPEC witReturnCode STDCALL witSetBopEntryProductRateDbl (
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   const double * const productRate);

WIT_DECLSPEC witReturnCode STDCALL witSetBopEntryRoutingShare (
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   const float * routingShare);

WIT_DECLSPEC witReturnCode STDCALL witSetBopEntryRoutingShareDbl (
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   const double * routingShare);

WIT_DECLSPEC witReturnCode STDCALL witSetBopEntrySelForDel (
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   const witBoolean selForDel);

WIT_DECLSPEC witReturnCode STDCALL witSetCompPrices (
   WitRun * const theWitRun,
   const witBoolean compPrices);

WIT_DECLSPEC witReturnCode STDCALL witSetComputeCriticalList (
   WitRun * const theWitRun,
   const witBoolean computeCriticalList);

WIT_DECLSPEC witReturnCode STDCALL witSetCplexParSpecDblVal (
   WitRun * const theWitRun,
   const float cplexParSpecDblVal);

WIT_DECLSPEC witReturnCode STDCALL witSetCplexParSpecDblValDbl (
   WitRun * const theWitRun,
   const double cplexParSpecDblVal);

WIT_DECLSPEC witReturnCode STDCALL witSetCplexParSpecIntVal (
   WitRun * const theWitRun,
   const int      cplexParSpecIntVal);

WIT_DECLSPEC witReturnCode STDCALL witSetCplexParSpecName (
   WitRun * const theWitRun,
   const char * const cplexParSpecName);

WIT_DECLSPEC witReturnCode STDCALL witSetCurrentObjective (
   WitRun * const theWitRun,
   const char * const theObjName);

WIT_DECLSPEC witReturnCode STDCALL witSetCurrentScenario (
   WitRun * const theWitRun,
   const int currentScenario);

WIT_DECLSPEC witReturnCode STDCALL witSetDemandAppData (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   void * const appData);

WIT_DECLSPEC witReturnCode STDCALL witSetDemandCumShipBounds (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const float * const hardLower,
   const float * const softLower,
   const float * const hardUpper);

WIT_DECLSPEC witReturnCode STDCALL witSetDemandCumShipBoundsDbl (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const double * const hardLower,
   const double * const softLower,
   const double * const hardUpper);

WIT_DECLSPEC witReturnCode STDCALL witSetDemandCumShipReward (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const float * const cumShipReward);

WIT_DECLSPEC witReturnCode STDCALL witSetDemandCumShipRewardDbl (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const double * const cumShipReward);

WIT_DECLSPEC witReturnCode STDCALL witSetDemandDemandName (
   WitRun * const     theWitRun,
   const char * const partName,
   const char * const demandName,
   const char * const newName);

WIT_DECLSPEC witReturnCode STDCALL witSetDemandDemandVol (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const float * const iDemandVol);

WIT_DECLSPEC witReturnCode STDCALL witSetDemandDemandVolDbl (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const double * const iDemandVol);

WIT_DECLSPEC witReturnCode STDCALL witSetDemandFocusHorizon (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const int  focusHorizon);

WIT_DECLSPEC witReturnCode STDCALL witSetDemandFssShipVol (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const float * const  fssShipVol);

WIT_DECLSPEC witReturnCode STDCALL witSetDemandFssShipVolDbl (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const double * const  fssShipVol);

WIT_DECLSPEC witReturnCode STDCALL witSetDemandIntShipVols (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const witBoolean intShipVols);

WIT_DECLSPEC witReturnCode STDCALL witSetDemandLeadTimeUB (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const int * leadTimeUB);

WIT_DECLSPEC witReturnCode STDCALL witSetDemandPriority (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const int * const priority);

WIT_DECLSPEC witReturnCode STDCALL witSetDemandSearchInc (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const float searchInc);

WIT_DECLSPEC witReturnCode STDCALL witSetDemandSearchIncDbl (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const double searchInc);

WIT_DECLSPEC witReturnCode STDCALL witSetDemandSelForDel (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const witBoolean selForDel);

WIT_DECLSPEC witReturnCode STDCALL witSetDemandShipLateAllowed (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const witBoolean shipLateAllowed);

WIT_DECLSPEC witReturnCode STDCALL witSetDemandShipLateUB (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const int * shipLateUB);

WIT_DECLSPEC witReturnCode STDCALL witSetDemandShipReward (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const float * const shipReward);

WIT_DECLSPEC witReturnCode STDCALL witSetDemandShipRewardDbl (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const double * const shipReward);

WIT_DECLSPEC witReturnCode STDCALL witSetDemandShipVol (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const float * const shipVol);

WIT_DECLSPEC witReturnCode STDCALL witSetDemandShipVolDbl (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const double * const shipVol);

WIT_DECLSPEC witReturnCode STDCALL witSetEquitability (
   WitRun * const theWitRun,
   const int equitablity);

WIT_DECLSPEC witReturnCode STDCALL witSetExecEmptyBom (
   WitRun * const theWitRun,
   const witBoolean execEmptyBom);

WIT_DECLSPEC witReturnCode STDCALL witSetExpCutoff (
   WitRun * const theWitRun,
   const float expCutoff);

WIT_DECLSPEC witReturnCode STDCALL witSetExpCutoffDbl (
   WitRun * const theWitRun,
   const double expCutoff);

WIT_DECLSPEC witReturnCode STDCALL witSetExtOptSoln (
   WitRun * const      theWitRun,
   const float * const colsol);

WIT_DECLSPEC witReturnCode STDCALL witSetExtOptSolnDbl (
   WitRun * const       theWitRun,
   const double * const colsol);

WIT_DECLSPEC witReturnCode STDCALL witSetForcedMultiEq (
   WitRun * const theWitRun,
   const witBoolean forcedMultiEq);

WIT_DECLSPEC witReturnCode STDCALL witSetHighPrecisionWD (
   WitRun * const theWitRun,
   const witBoolean highPrecisionWD);

WIT_DECLSPEC witReturnCode STDCALL witSetIndependentOffsets (
   WitRun * const theWitRun,
   const witBoolean independentOffsets);

WIT_DECLSPEC witReturnCode STDCALL witSetLotSizeTol (
   WitRun * const theWitRun,
   const float lotSizeTol);

WIT_DECLSPEC witReturnCode STDCALL witSetLotSizeTolDbl (
   WitRun * const theWitRun,
   const double lotSizeTol);

WIT_DECLSPEC witReturnCode STDCALL witSetMesgFileAccessMode (
   WitRun * const theWitRun,
   const witBoolean quiet,
   const char * const mesgFileAccessMode);

WIT_DECLSPEC witReturnCode STDCALL witSetMesgFileName (
   WitRun * const theWitRun,
   const witBoolean quiet,
   const char * const fileName);

WIT_DECLSPEC witReturnCode STDCALL witSetMesgPrintNumber (
   WitRun * const theWitRun,
   const witBoolean quiet,
   const int messageNumber,
   const witBoolean mesgPrintMunber);

WIT_DECLSPEC witReturnCode STDCALL witSetMesgStopRunning (
   WitRun * const theWitRun,
   const witBoolean quiet,
   const int messageNumber,
   const witBoolean mesgStopRunning);

WIT_DECLSPEC witReturnCode STDCALL witSetMesgThrowErrorExc (
   WitRun * const theWitRun,
   const witBoolean quiet,
   const int messageNumber,
   const witBoolean mesgThrowErrorExc);

WIT_DECLSPEC witReturnCode STDCALL witSetMesgTimesPrint (
   WitRun * const theWitRun,
   const witBoolean quiet,
   const int messageNumber,
   const int mesgTimesPrint);

WIT_DECLSPEC witReturnCode STDCALL witSetMinimalExcess (
   WitRun * const theWitRun,
   const witBoolean minimalExcess);

WIT_DECLSPEC witReturnCode STDCALL witSetMipMode (
   WitRun * const theWitRun,
   const witBoolean mipMode);

WIT_DECLSPEC witReturnCode STDCALL witSetModHeurAlloc (
   WitRun * const theWitRun,
   const witBoolean modHeurAlloc);

WIT_DECLSPEC witReturnCode STDCALL witSetMultiExec (
   WitRun * const theWitRun,
   const witBoolean multiExec);

WIT_DECLSPEC witReturnCode STDCALL witSetMultiObjMode (
   WitRun * const theWitRun,
   const witBoolean multiObjMode);

WIT_DECLSPEC witReturnCode STDCALL witSetMultiObjTol (
   WitRun * const theWitRun,
   const float multiObjTol);

WIT_DECLSPEC witReturnCode STDCALL witSetMultiObjTolDbl (
   WitRun * const theWitRun,
   const double multiObjTol);

WIT_DECLSPEC witReturnCode STDCALL witSetMultiRoute (
   WitRun * const theWitRun,
   const witBoolean multiRoute);

WIT_DECLSPEC witReturnCode STDCALL witSetNPeriods (
   WitRun * const theWitRun,
   const int nPeriods);

WIT_DECLSPEC witReturnCode STDCALL witSetNScenarios (
   WitRun * const theWitRun,
   const int nScenarios);

WIT_DECLSPEC witReturnCode STDCALL witSetNstnResidual (
   WitRun * const theWitRun,
   const witBoolean nstnResidual);

WIT_DECLSPEC witReturnCode STDCALL witSetObjectiveList (
   WitRun * const             theWitRun,
   const int                  lenList,
   const char * const * const objectiveList);

WIT_DECLSPEC witReturnCode STDCALL witSetObjectiveListSpec (
   WitRun * const     theWitRun,
   const char * const objectiveListSpec);

WIT_DECLSPEC witReturnCode STDCALL witSetObjectiveRank (
   WitRun * const theWitRun,
   const int      objectiveRank);

WIT_DECLSPEC witReturnCode STDCALL witSetOperationAppData (
   WitRun * const theWitRun,
   const char * const operationName,
   void * const appData);

WIT_DECLSPEC witReturnCode STDCALL witSetOperationExecBounds (
   WitRun * const theWitRun,
   const char * const operationName,
   const float * const hardLower,
   const float * const softLower,
   const float * const hardUpper);

WIT_DECLSPEC witReturnCode STDCALL witSetOperationExecBoundsDbl (
   WitRun * const theWitRun,
   const char * const operationName,
   const double * const hardLower,
   const double * const softLower,
   const double * const hardUpper);

WIT_DECLSPEC witReturnCode STDCALL witSetOperationExecCost (
   WitRun * const theWitRun,
   const char * const operationName,
   const float * const execCost);

WIT_DECLSPEC witReturnCode STDCALL witSetOperationExecCostDbl (
   WitRun * const theWitRun,
   const char * const operationName,
   const double * const execCost);

WIT_DECLSPEC witReturnCode STDCALL witSetOperationExecPenalty (
   WitRun * const theWitRun,
   const char * const operationName,
   const float execPenalty);

WIT_DECLSPEC witReturnCode STDCALL witSetOperationExecPenaltyDbl (
   WitRun * const theWitRun,
   const char * const operationName,
   const double execPenalty);

WIT_DECLSPEC witReturnCode STDCALL witSetOperationExecVol (
   WitRun * const theWitRun,
   const char * const operationName,
   const float * const execVol);

WIT_DECLSPEC witReturnCode STDCALL witSetOperationExecVolDbl (
   WitRun * const theWitRun,
   const char * const operationName,
   const double * const execVol);

WIT_DECLSPEC witReturnCode STDCALL witSetOperationIncLotSize (
   WitRun * const theWitRun,
   const char * const operationName,
   const float * const incLotSize);

WIT_DECLSPEC witReturnCode STDCALL witSetOperationIncLotSizeDbl (
   WitRun * const theWitRun,
   const char * const operationName,
   const double * const incLotSize);

WIT_DECLSPEC witReturnCode STDCALL witSetOperationIncLotSize2 (
   WitRun * const theWitRun,
   const char * const operationName,
   const float * const incLotSize2);

WIT_DECLSPEC witReturnCode STDCALL witSetOperationIncLotSize2Dbl (
   WitRun * const theWitRun,
   const char * const operationName,
   const double * const incLotSize2);

WIT_DECLSPEC witReturnCode STDCALL witSetOperationIntExecVols (
   WitRun * const theWitRun,
   const char * const operationName,
   const witBoolean intExecVols);

WIT_DECLSPEC witReturnCode STDCALL witSetOperationLotSize2Thresh (
   WitRun * const theWitRun,
   const char * const operationName,
   const float * const lotSize2Thresh);

WIT_DECLSPEC witReturnCode STDCALL witSetOperationLotSize2ThreshDbl (
   WitRun * const theWitRun,
   const char * const operationName,
   const double * const lotSize2Thresh);

WIT_DECLSPEC witReturnCode STDCALL witSetOperationMinLotSize (
   WitRun * const theWitRun,
   const char * const operationName,
   const float * const minLotSize);

WIT_DECLSPEC witReturnCode STDCALL witSetOperationMinLotSizeDbl (
   WitRun * const theWitRun,
   const char * const operationName,
   const double * const minLotSize);

WIT_DECLSPEC witReturnCode STDCALL witSetOperationMinLotSize2 (
   WitRun * const theWitRun,
   const char * const operationName,
   const float * const minLotSize2);

WIT_DECLSPEC witReturnCode STDCALL witSetOperationMinLotSize2Dbl (
   WitRun * const theWitRun,
   const char * const operationName,
   const double * const minLotSize2);

WIT_DECLSPEC witReturnCode STDCALL witSetOperationObjectStage (
   WitRun * const     theWitRun,
   const char * const operationName,
   const int          objectStage);

WIT_DECLSPEC witReturnCode STDCALL witSetOperationOperationName (
   WitRun * const     theWitRun,
   const char * const operationName,
   const char * const newName);

WIT_DECLSPEC witReturnCode STDCALL witSetOperationSelForDel (
   WitRun * const theWitRun,
   const char * const operationName,
   const witBoolean selForDel);

WIT_DECLSPEC witReturnCode STDCALL witSetOperationTwoLevelLotSizes (
   WitRun * const theWitRun,
   const char * const operationName,
   const witBoolean twoLevelLotSizes);

WIT_DECLSPEC witReturnCode STDCALL witSetOperationYieldRate (
   WitRun * const theWitRun,
   const char * const operationName,
   const float * const yieldRate);

WIT_DECLSPEC witReturnCode STDCALL witSetOperationYieldRateDbl (
   WitRun * const theWitRun,
   const char * const operationName,
   const double * const yieldRate);

WIT_DECLSPEC witReturnCode STDCALL witSetOptInitMethod (
   WitRun * const theWitRun,
   const witAttr optInitMethod);

WIT_DECLSPEC witReturnCode STDCALL witSetOutputPrecision (
   WitRun * const theWitRun,
   const int outputPrecision);

WIT_DECLSPEC witReturnCode STDCALL witSetPartAppData (
   WitRun * const theWitRun,
   const char * const partName,
   void * const appData);

WIT_DECLSPEC witReturnCode STDCALL witSetPartAsapPipOrder (
   WitRun * const theWitRun,
   const char * const partName,
   const witBoolean asapPipOrder);

WIT_DECLSPEC witReturnCode STDCALL witSetPartBoundedLeadTimes (
   WitRun * const theWitRun,
   const char * const partName,
   const witBoolean boundedLeadTimes);

WIT_DECLSPEC witReturnCode STDCALL witSetPartBuildAheadUB (
   WitRun * const theWitRun,
   const char * const partName,
   const int * const buildAheadUB);

WIT_DECLSPEC witReturnCode STDCALL witSetPartBuildAsap (
   WitRun * const theWitRun,
   const char * const partName,
   const witBoolean buildAsap);

WIT_DECLSPEC witReturnCode STDCALL witSetPartBuildNstn (
   WitRun * const theWitRun,
   const char * const partName,
   const witBoolean buildNstn);

WIT_DECLSPEC witReturnCode STDCALL witSetPartObjectStage (
   WitRun * const     theWitRun,
   const char * const partName,
   const int          objectStage);

WIT_DECLSPEC witReturnCode STDCALL witSetPartPartName (
   WitRun * const     theWitRun,
   const char * const partName,
   const char * const newName);

WIT_DECLSPEC witReturnCode STDCALL witSetPartPropRtg (
   WitRun * const           theWitRun,
   const char * const       partName,
   const witBoolean * const propRtg);

WIT_DECLSPEC witReturnCode STDCALL witSetPartScrapAllowed (
   WitRun * const theWitRun,
   const char * const partName,
   const witBoolean scrapAllowed);

WIT_DECLSPEC witReturnCode STDCALL witSetPartScrapCost (
   WitRun * const theWitRun,
   const char * const partName,
   const float * const scrapCost);

WIT_DECLSPEC witReturnCode STDCALL witSetPartScrapCostDbl (
   WitRun * const theWitRun,
   const char * const partName,
   const double * const scrapCost);

WIT_DECLSPEC witReturnCode STDCALL witSetPartSelForDel (
   WitRun * const theWitRun,
   const char * const partName,
   const witBoolean selForDel);

WIT_DECLSPEC witReturnCode STDCALL witSetPartSingleSource (
   WitRun * const theWitRun,
   const char * const partName,
   const witBoolean singleSource);

WIT_DECLSPEC witReturnCode STDCALL witSetPartStockBounds (
   WitRun * const theWitRun,
   const char * const partName,
   const float * const hardLower,
   const float * const softLower,
   const float * const hardUpper);

WIT_DECLSPEC witReturnCode STDCALL witSetPartStockBoundsDbl (
   WitRun * const theWitRun,
   const char * const partName,
   const double * const hardLower,
   const double * const softLower,
   const double * const hardUpper);

WIT_DECLSPEC witReturnCode STDCALL witSetPartStockCost (
   WitRun * const theWitRun,
   const char * const partName,
   const float * const stockCost);

WIT_DECLSPEC witReturnCode STDCALL witSetPartStockCostDbl (
   WitRun * const theWitRun,
   const char * const partName,
   const double * const stockCost);

WIT_DECLSPEC witReturnCode STDCALL witSetPartSupplyVol (
   WitRun * const theWitRun,
   const char * const partName,
   const float * const supplyVol);

WIT_DECLSPEC witReturnCode STDCALL witSetPartSupplyVolDbl (
   WitRun * const theWitRun,
   const char * const partName,
   const double * const supplyVol);

WIT_DECLSPEC witReturnCode STDCALL witSetPenExec (
   WitRun * const theWitRun,
   const witBoolean penExec);

WIT_DECLSPEC witReturnCode STDCALL witSetPerfPegging (
   WitRun * const theWitRun,
   const witBoolean perfPegging);

WIT_DECLSPEC witReturnCode STDCALL witSetPeriodStage (
   WitRun * const theWitRun,
   const int *    periodStage);

WIT_DECLSPEC witReturnCode STDCALL witSetPgdCritListMode (
   WitRun * const theWitRun,
   const witBoolean pgdCritListMode);

WIT_DECLSPEC witReturnCode STDCALL witSetPipSeqFromHeur (
   WitRun * const theWitRun,
   const witBoolean pipSeqFromHeur);

WIT_DECLSPEC witReturnCode STDCALL witSetPrefHighStockSLBs (
   WitRun * const theWitRun,
   const witBoolean prefHighStockSLBs);

WIT_DECLSPEC witReturnCode STDCALL witSetProbability (
   WitRun * const theWitRun,
   const float probability);

WIT_DECLSPEC witReturnCode STDCALL witSetProbabilityDbl (
   WitRun * const theWitRun,
   const double probability);

WIT_DECLSPEC witReturnCode STDCALL witSetRespectStockSLBs (
   WitRun * const theWitRun,
   const witBoolean respectStockSLBs);

WIT_DECLSPEC witReturnCode STDCALL witSetRoundReqVols (
   WitRun * const theWitRun,
   const witBoolean roundReqVols);

WIT_DECLSPEC witReturnCode STDCALL witSetSelSplit (
   WitRun * const theWitRun,
   const witBoolean selSplit);

WIT_DECLSPEC witReturnCode STDCALL witSetSelectionRecovery (
   WitRun * const theWitRun,
   const witBoolean selectionRecovery);

WIT_DECLSPEC witReturnCode STDCALL witSetSkipFailures (
   WitRun * const theWitRun,
   const witBoolean skipFailures);

WIT_DECLSPEC witReturnCode STDCALL witSetSolverLogFileName (
   WitRun * const theWitRun,
   const char * const solverLogFileName);

WIT_DECLSPEC witReturnCode STDCALL witSetStageByObject (
   WitRun * const   theWitRun,
   const witBoolean stageByObject);

WIT_DECLSPEC witReturnCode STDCALL witSetStochMode (
   WitRun * const   theWitRun,
   const witBoolean stochMode);

WIT_DECLSPEC witReturnCode STDCALL witSetStockReallocation (
   WitRun * const theWitRun,
   const witBoolean stockReallocation);

WIT_DECLSPEC witReturnCode STDCALL witSetSubsBomEntryAppData (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   void * const appData);

WIT_DECLSPEC witReturnCode STDCALL witSetSubsBomEntryConsRate (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const float * const consRate);

WIT_DECLSPEC witReturnCode STDCALL witSetSubsBomEntryConsRateDbl (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const double * const consRate);

WIT_DECLSPEC witReturnCode STDCALL witSetSubsBomEntryEarliestPeriod (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const int earliestPeriod);

WIT_DECLSPEC witReturnCode STDCALL witSetSubsBomEntryExecPenalty (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const float execPenalty);

WIT_DECLSPEC witReturnCode STDCALL witSetSubsBomEntryExecPenaltyDbl (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const double execPenalty);

WIT_DECLSPEC witReturnCode STDCALL witSetSubsBomEntryExpAllowed (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const witBoolean expAllowed);

WIT_DECLSPEC witReturnCode STDCALL witSetSubsBomEntryExpNetAversion (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const float expNetAversion);

WIT_DECLSPEC witReturnCode STDCALL witSetSubsBomEntryExpNetAversionDbl (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const double expNetAversion);

WIT_DECLSPEC witReturnCode STDCALL witSetSubsBomEntryFalloutRate (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const float falloutRate);

WIT_DECLSPEC witReturnCode STDCALL witSetSubsBomEntryFalloutRateDbl (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const double falloutRate);

WIT_DECLSPEC witReturnCode STDCALL witSetSubsBomEntryIntSubVols (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const witBoolean intSubVols);

WIT_DECLSPEC witReturnCode STDCALL witSetSubsBomEntryLatestPeriod (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const int latestPeriod);

WIT_DECLSPEC witReturnCode STDCALL witSetSubsBomEntryMrpNetAllowed (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const witBoolean mrpNetAllowed);

WIT_DECLSPEC witReturnCode STDCALL witSetSubsBomEntryNetAllowed (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const witBoolean netAllowed);

WIT_DECLSPEC witReturnCode STDCALL witSetSubsBomEntryOffset (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const float * const offset);

WIT_DECLSPEC witReturnCode STDCALL witSetSubsBomEntryOffsetDbl (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const double * const offset);

WIT_DECLSPEC witReturnCode STDCALL witSetSubsBomEntryRoutingShare (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const float * routingShare);

WIT_DECLSPEC witReturnCode STDCALL witSetSubsBomEntryRoutingShareDbl (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const double * routingShare);

WIT_DECLSPEC witReturnCode STDCALL witSetSubsBomEntrySelForDel (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const witBoolean selForDel);

WIT_DECLSPEC witReturnCode STDCALL witSetSubsBomEntrySubCost (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const float * const subCost);

WIT_DECLSPEC witReturnCode STDCALL witSetSubsBomEntrySubCostDbl (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const double * const subCost);

WIT_DECLSPEC witReturnCode STDCALL witSetSubsBomEntrySubVol (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const float * const subVol);

WIT_DECLSPEC witReturnCode STDCALL witSetSubsBomEntrySubVolDbl (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const double * const subVol);

WIT_DECLSPEC witReturnCode STDCALL witSetTieBreakPropRt (
   WitRun * const theWitRun,
   const witBoolean tieBreakPropRt);

WIT_DECLSPEC witReturnCode STDCALL witSetTitle (
   WitRun * const theWitRun,
   const char * const title);

WIT_DECLSPEC witReturnCode STDCALL witSetTruncOffsets (
   WitRun * const theWitRun,
   const witBoolean truncOffsets);

WIT_DECLSPEC witReturnCode STDCALL witSetTwoWayMultiExec (
   WitRun * const theWitRun,
   const witBoolean twoWayMultiExec);

WIT_DECLSPEC witReturnCode STDCALL witSetUseFocusHorizons (
   WitRun * const theWitRun,
   const witBoolean useFocusHorizons);

WIT_DECLSPEC witReturnCode STDCALL witSetUserHeurStart (
   WitRun * const theWitRun,
   const witBoolean userHeurStart);

WIT_DECLSPEC witReturnCode STDCALL witSetWbounds (
   WitRun * const theWitRun,
   const float wbounds);

WIT_DECLSPEC witReturnCode STDCALL witSetWboundsDbl (
   WitRun * const theWitRun,
   const double wbounds);

WIT_DECLSPEC witReturnCode STDCALL witSetWit34Compatible (
   WitRun * const theWitRun,
   const witBoolean wit34Compatible);

WIT_DECLSPEC witReturnCode STDCALL witShutDownExtOpt (
   WitRun * const theWitRun);

WIT_DECLSPEC witReturnCode STDCALL witShutDownHeurAlloc (
   WitRun * const theWitRun);

WIT_DECLSPEC witReturnCode STDCALL witStartExtOpt (
   WitRun * const theWitRun);

WIT_DECLSPEC witReturnCode STDCALL witStartHeurAlloc (
   WitRun * const theWitRun);

WIT_DECLSPEC witReturnCode STDCALL witStochImplode (
   WitRun * const theWitRun);

WIT_DECLSPEC witReturnCode STDCALL witWriteCriticalList (
   WitRun * const theWitRun,
   const char * const fileName,
   const witFileFormat fileFormat,
   const int maxListLen);

WIT_DECLSPEC witReturnCode STDCALL witWriteData (
   WitRun * const theWitRun,
   const char * const fileName);

WIT_DECLSPEC witReturnCode STDCALL witWriteExecSched (
   WitRun * const theWitRun,
   const char * const fileName,
   const witFileFormat fileFormat);

WIT_DECLSPEC witReturnCode STDCALL witWriteReqSched (
   WitRun * const theWitRun,
   const char * const fileName,
   const witFileFormat fileFormat);

WIT_DECLSPEC witReturnCode STDCALL witWriteShipSched (
   WitRun * const theWitRun,
   const char * const fileName,
   const witFileFormat fileFormat);

/*----------------------------------------------------------------------------*/
/* The following functions that were formerly part of WIT's documented API,   */
/* but have since been removed from the documentation.                        */
/* They are included here for upward compatibility.                           */
/*----------------------------------------------------------------------------*/

WIT_DECLSPEC witReturnCode STDCALL witGetBomEntryFallout (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   int * fallout);

WIT_DECLSPEC witReturnCode STDCALL witGetBomEntryPropRouting (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   witBoolean * propRouting);

WIT_DECLSPEC witReturnCode STDCALL witGetBomEntryUsageRate (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   float * usageRate);

WIT_DECLSPEC witReturnCode STDCALL witGetBomEntryUsageTime (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   float * usageTime);

WIT_DECLSPEC witReturnCode STDCALL witGetBopEntryByProduct (
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   witBoolean * byProduct);

WIT_DECLSPEC witReturnCode STDCALL witGetBopEntryProdRate (
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   float * prodRate);

WIT_DECLSPEC witReturnCode STDCALL witGetBuildWhenEmpty (
   WitRun * const theWitRun,
   witBoolean * buildWhenEmpty);

WIT_DECLSPEC witReturnCode STDCALL witGetDemandBuildAheadLimit (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   int * buildAheadLimit);

WIT_DECLSPEC witReturnCode STDCALL witGetDemandBuildAheadUB (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   int * * buildAheadUB);

WIT_DECLSPEC witReturnCode STDCALL witGetDemandObj1CumShipReward (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   float * * obj1CumShipReward);

WIT_DECLSPEC witReturnCode STDCALL witGetDemandObj1CumShipRewardDbl (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   double * * obj1CumShipReward);

WIT_DECLSPEC witReturnCode STDCALL witGetDemandObj1ShipReward (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   float * * obj1ShipReward);

WIT_DECLSPEC witReturnCode STDCALL witGetDemandObj1ShipRewardDbl (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   double * * obj1ShipReward);

WIT_DECLSPEC witReturnCode STDCALL witGetDemandPrefBuildAhead (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   witBoolean * prefBuildAhead);

WIT_DECLSPEC witReturnCode STDCALL witGetDemandShipLateLimit (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   int * shipLateLimit);

WIT_DECLSPEC witReturnCode STDCALL witGetHashTableSize (
   WitRun * const theWitRun,
   int * hashTableSize);

WIT_DECLSPEC witReturnCode STDCALL witGetLocalBuildAhead (
   WitRun * const theWitRun,
   witBoolean * localBuildAhead);

WIT_DECLSPEC witReturnCode STDCALL witGetLocalMultiExec (
   WitRun * const theWitRun,
   witBoolean * localMultiExec);

WIT_DECLSPEC witReturnCode STDCALL witGetObjChoice (
   WitRun * const theWitRun,
   int * objChoice);

WIT_DECLSPEC witReturnCode STDCALL witGetObjValues (
   WitRun * const theWitRun,
   float * objValue,
   float * boundsValue);

WIT_DECLSPEC witReturnCode STDCALL witGetObjValuesDbl (
   WitRun * const theWitRun,
   double * objValue,
   double * boundsValue);

WIT_DECLSPEC witReturnCode STDCALL witGetOperationObj1ExecCost (
   WitRun * const theWitRun,
   const char * const operationName,
   float * * obj1ExecCost);

WIT_DECLSPEC witReturnCode STDCALL witGetOperationObj1ExecCostDbl (
   WitRun * const theWitRun,
   const char * const operationName,
   double * * obj1ExecCost);

WIT_DECLSPEC witReturnCode STDCALL witGetOperationYield (
   WitRun * const theWitRun,
   const char * const operationName,
   int * * yield);

WIT_DECLSPEC witReturnCode STDCALL witGetPartBuildAheadLimit (
   WitRun * const theWitRun,
   const char * const partName,
   int * buildAheadLimit);

WIT_DECLSPEC witReturnCode STDCALL witGetPartCycleTime (
   WitRun * const theWitRun,
   const char * const partName,
   float * * cycleTime);

WIT_DECLSPEC witReturnCode STDCALL witGetPartIncLotSize (
   WitRun * const theWitRun,
   const char * const partName,
   float * * incLotSize);

WIT_DECLSPEC witReturnCode STDCALL witGetPartMinLotSize (
   WitRun * const theWitRun,
   const char * const partName,
   float * * minLotSize);

WIT_DECLSPEC witReturnCode STDCALL witGetPartMrpProdVol (
   WitRun * const theWitRun,
   const char * const partName,
   float * * mrpProdVol);

WIT_DECLSPEC witReturnCode STDCALL witGetPartNBomEntries (
   WitRun * const theWitRun,
   const char * const producedPartName,
   int * nBomEntries);

WIT_DECLSPEC witReturnCode STDCALL witGetPartObj1ProdCost (
   WitRun * const theWitRun,
   const char * const partName,
   float * * obj1ProdCost);

WIT_DECLSPEC witReturnCode STDCALL witGetPartObj1ScrapCost (
   WitRun * const theWitRun,
   const char * const partName,
   float * * obj1ScrapCost);

WIT_DECLSPEC witReturnCode STDCALL witGetPartObj1ScrapCostDbl (
   WitRun * const theWitRun,
   const char * const partName,
   double * * obj1ScrapCost);

WIT_DECLSPEC witReturnCode STDCALL witGetPartObj1StockCost (
   WitRun * const theWitRun,
   const char * const partName,
   float * * obj1StockCost);

WIT_DECLSPEC witReturnCode STDCALL witGetPartObj1StockCostDbl (
   WitRun * const theWitRun,
   const char * const partName,
   double * * obj1StockCost);

WIT_DECLSPEC witReturnCode STDCALL witGetPartProdBounds (
   WitRun * const theWitRun,
   const char * const partName,
   float * * hardLower,
   float * * softLower,
   float * * hardUpper);

WIT_DECLSPEC witReturnCode STDCALL witGetPartPropRouting (
   WitRun * const theWitRun,
   const char * const partName,
   witBoolean * propRouting);

WIT_DECLSPEC witReturnCode STDCALL witGetPartYield (
   WitRun * const theWitRun,
   const char * const partName,
   int * * yield);

WIT_DECLSPEC witReturnCode STDCALL witGetStockRealloc (
   WitRun * const theWitRun,
   witBoolean * stockRealloc);

WIT_DECLSPEC witReturnCode STDCALL witGetSubsBomEntryFallout (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   int * fallout);

WIT_DECLSPEC witReturnCode STDCALL witGetSubsBomEntryObj1SubCost (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   float * * obj1SubCost);

WIT_DECLSPEC witReturnCode STDCALL witGetSubsBomEntryObj1SubCostDbl (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   double * * obj1SubCost);

WIT_DECLSPEC witReturnCode STDCALL witGetSubsBomEntryProdVol (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   float * * prodVol);

WIT_DECLSPEC witReturnCode STDCALL witGetSubsBomEntryUsageRate (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   float * usageRate);

WIT_DECLSPEC witReturnCode STDCALL witOptPreprocess (
   WitRun * const theWitRun);

WIT_DECLSPEC witReturnCode STDCALL witSetBomEntryFallout (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int fallout);

WIT_DECLSPEC witReturnCode STDCALL witSetBomEntryPropRouting (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const witBoolean propRouting);

WIT_DECLSPEC witReturnCode STDCALL witSetBomEntryUsageRate (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const float usageRate);

WIT_DECLSPEC witReturnCode STDCALL witSetBomEntryUsageTime (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const float usageTime);

WIT_DECLSPEC witReturnCode STDCALL witSetBopEntryByProduct (
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   const witBoolean byProduct);

WIT_DECLSPEC witReturnCode STDCALL witSetBopEntryProdRate (
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   const float prodRate);

WIT_DECLSPEC witReturnCode STDCALL witSetBuildWhenEmpty (
   WitRun * const theWitRun,
   const witBoolean buildWhenEmpty);

WIT_DECLSPEC witReturnCode STDCALL witSetDemandBuildAheadLimit (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const int buildAheadLimit);

WIT_DECLSPEC witReturnCode STDCALL witSetDemandBuildAheadUB (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const int * buildAheadUB);

WIT_DECLSPEC witReturnCode STDCALL witSetDemandObj1CumShipReward (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const float * const obj1CumShipReward);

WIT_DECLSPEC witReturnCode STDCALL witSetDemandObj1CumShipRewardDbl (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const double * const obj1CumShipReward);

WIT_DECLSPEC witReturnCode STDCALL witSetDemandObj1ShipReward (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const float * const obj1ShipReward);

WIT_DECLSPEC witReturnCode STDCALL witSetDemandObj1ShipRewardDbl (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const double * const obj1ShipReward);

WIT_DECLSPEC witReturnCode STDCALL witSetDemandPrefBuildAhead (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const witBoolean prefBuildAhead);

WIT_DECLSPEC witReturnCode STDCALL witSetDemandShipLateLimit (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const int shipLateLimit);

WIT_DECLSPEC witReturnCode STDCALL witSetHashTableSize (
   WitRun * const theWitRun,
   const int hashTableSize);

WIT_DECLSPEC witReturnCode STDCALL witSetLocalBuildAhead (
   WitRun * const theWitRun,
   const witBoolean localBuildAhead);

WIT_DECLSPEC witReturnCode STDCALL witSetLocalMultiExec (
   WitRun * const theWitRun,
   const witBoolean localMultiExec);

WIT_DECLSPEC witReturnCode STDCALL witSetObjChoice (
   WitRun * const theWitRun,
   const int objChoice);

WIT_DECLSPEC witReturnCode STDCALL witSetOperationObj1ExecCost (
   WitRun * const theWitRun,
   const char * const operationName,
   const float * const obj1ExecCost);

WIT_DECLSPEC witReturnCode STDCALL witSetOperationObj1ExecCostDbl (
   WitRun * const theWitRun,
   const char * const operationName,
   const double * const obj1ExecCost);

WIT_DECLSPEC witReturnCode STDCALL witSetOperationYield (
   WitRun * const theWitRun,
   const char * const operationName,
   const int * const yield);

WIT_DECLSPEC witReturnCode STDCALL witSetPartBuildAheadLimit (
   WitRun * const theWitRun,
   const char * const partName,
   const int buildAheadLimit);

WIT_DECLSPEC witReturnCode STDCALL witSetPartCycleTime (
   WitRun * const theWitRun,
   const char * const partName,
   const float * const cycleTime);

WIT_DECLSPEC witReturnCode STDCALL witSetPartIncLotSize (
   WitRun * const theWitRun,
   const char * const partName,
   const float * const incLotSize);

WIT_DECLSPEC witReturnCode STDCALL witSetPartMinLotSize (
   WitRun * const theWitRun,
   const char * const partName,
   const float * const minLotSize);

WIT_DECLSPEC witReturnCode STDCALL witSetPartObj1ProdCost (
   WitRun * const theWitRun,
   const char * const partName,
   const float * const obj1ProdCost);

WIT_DECLSPEC witReturnCode STDCALL witSetPartObj1ScrapCost (
   WitRun * const theWitRun,
   const char * const partName,
   const float * const obj1ScrapCost);

WIT_DECLSPEC witReturnCode STDCALL witSetPartObj1ScrapCostDbl (
   WitRun * const theWitRun,
   const char * const partName,
   const double * const obj1ScrapCost);

WIT_DECLSPEC witReturnCode STDCALL witSetPartObj1StockCost (
   WitRun * const theWitRun,
   const char * const partName,
   const float * const obj1StockCost);

WIT_DECLSPEC witReturnCode STDCALL witSetPartObj1StockCostDbl (
   WitRun * const theWitRun,
   const char * const partName,
   const double * const obj1StockCost);

WIT_DECLSPEC witReturnCode STDCALL witSetPartProdBounds (
   WitRun * const theWitRun,
   const char * const partName,
   const float * const hardLower,
   const float * const softLower,
   const float * const hardUpper);

WIT_DECLSPEC witReturnCode STDCALL witSetPartProdVol (
   WitRun * const theWitRun,
   const char * const partName,
   const float * const prodVol);

WIT_DECLSPEC witReturnCode STDCALL witSetPartPropRouting (
   WitRun * const theWitRun,
   const char * const partName,
   const witBoolean propRouting);

WIT_DECLSPEC witReturnCode STDCALL witSetPartYield (
   WitRun * const theWitRun,
   const char * const partName,
   const int * const yield);

WIT_DECLSPEC witReturnCode STDCALL witSetStockRealloc (
   WitRun * const theWitRun,
   const witBoolean stockRealloc);

WIT_DECLSPEC witReturnCode STDCALL witSetSubsBomEntryFallout (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const int fallout);

WIT_DECLSPEC witReturnCode STDCALL witSetSubsBomEntryObj1SubCost (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const float * const obj1SubCost);

WIT_DECLSPEC witReturnCode STDCALL witSetSubsBomEntryObj1SubCostDbl (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const double * const obj1SubCost);

WIT_DECLSPEC witReturnCode STDCALL witSetSubsBomEntryProdVol (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const float * const prodVol);

WIT_DECLSPEC witReturnCode STDCALL witSetSubsBomEntryUsageRate (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const float usageRate);

WIT_DECLSPEC witReturnCode STDCALL witWriteProdSched (
   WitRun * const theWitRun,
   const char * const fileName,
   const witFileFormat fileFormat);

/*----------------------------------------------------------------------------*/
/* Miscellaneous undocumented functions.                                      */
/*----------------------------------------------------------------------------*/

WIT_DECLSPEC witReturnCode STDCALL witExecStandAlone (
   WitRun * const theWitRun,
   int            argc,
   char *         argv[]);

WIT_DECLSPEC witReturnCode STDCALL witExhaustMemory (
   WitRun * const theWitRun);

WIT_DECLSPEC witReturnCode STDCALL witGetBopEntryMeSelSplit (
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   witBoolean * meSelSplit);

WIT_DECLSPEC witReturnCode STDCALL witGetDevMode (
   WitRun * const theWitRun,
   witBoolean *   devMode);

WIT_DECLSPEC witReturnCode STDCALL witGetNewPipPggOrder (
   WitRun * const theWitRun,
   witBoolean * newPipPggOrder);

WIT_DECLSPEC witReturnCode STDCALL witGetNonMrSelSplit (
   WitRun * const theWitRun,
   witBoolean * nonMrSelSplit);

WIT_DECLSPEC witReturnCode STDCALL witGetPartBaSelSplit (
   WitRun * const theWitRun,
   const char * const partName,
   witBoolean * baSelSplit);

WIT_DECLSPEC witReturnCode STDCALL witGetSrSelSplit (
   WitRun * const theWitRun,
   witBoolean * srSelSplit);

WIT_DECLSPEC witReturnCode STDCALL witInterpretDevCmd (
   WitRun * const     theWitRun,
   const char * const theDevCmd);

WIT_DECLSPEC witReturnCode STDCALL witIssueFatalMesg (
   WitRun * const theWitRun);

WIT_DECLSPEC witReturnCode STDCALL witListUnissuedMsgs (
   WitRun * const theWitRun);

WIT_DECLSPEC witReturnCode STDCALL witMalloc (
   size_t size,
   void * * mem );

WIT_DECLSPEC witReturnCode STDCALL witNoDependantWitRunVeneersDecr (
   WitRun * const theWitRun);

WIT_DECLSPEC witReturnCode STDCALL witNoDependantWitRunVeneersIncr (
   WitRun * const theWitRun);

WIT_DECLSPEC witReturnCode STDCALL witNoDependantWitRunVeneersIsOne (
   WitRun * const theWitRun,
   int* isOne);

WIT_DECLSPEC witReturnCode STDCALL witSetBopEntryMeSelSplit (
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   const witBoolean meSelSplit);

WIT_DECLSPEC witReturnCode STDCALL witSetNewPipPggOrder (
   WitRun * const theWitRun,
   const witBoolean newPipPggOrder);

WIT_DECLSPEC witReturnCode STDCALL witSetNonMrSelSplit (
   WitRun * const theWitRun,
   const witBoolean nonMrSelSplit);

WIT_DECLSPEC witReturnCode STDCALL witSetPartBaSelSplit (
   WitRun * const theWitRun,
   const char * const partName,
   const witBoolean baSelSplit);

WIT_DECLSPEC witReturnCode STDCALL witSetSrSelSplit (
   WitRun * const theWitRun,
   const witBoolean srSelSplit);

WIT_DECLSPEC witReturnCode STDCALL witSetWit34Allowed (
   WitRun * const theWitRun,
   const witBoolean wit34Allowed);

/*----------------------------------------------------------------------------*/
/* Values which can be assigned to some attributes.                           */
/*----------------------------------------------------------------------------*/

extern WIT_DECLSPEC WIT_CONST witAttr       WitSTDOUT;
extern WIT_DECLSPEC WIT_CONST witAttr       WitSTDIN;

extern WIT_DECLSPEC WIT_CONST witAttr       WitRAW;
extern WIT_DECLSPEC WIT_CONST witAttr       WitPRODUCT;
extern WIT_DECLSPEC WIT_CONST witAttr       WitCAPACITY;
extern WIT_DECLSPEC WIT_CONST witAttr       WitMATERIAL;

extern WIT_DECLSPEC WIT_CONST int           WitINFORMATIONAL_MESSAGES;
extern WIT_DECLSPEC WIT_CONST int           WitWARNING_MESSAGES;
extern WIT_DECLSPEC WIT_CONST int           WitSEVERE_MESSAGES;
extern WIT_DECLSPEC WIT_CONST int           WitFATAL_MESSAGES;

extern WIT_DECLSPEC WIT_CONST witFileFormat WitBSV;
extern WIT_DECLSPEC WIT_CONST witFileFormat WitCSV;

extern WIT_DECLSPEC WIT_CONST witAttr       WitACC_OPT_INIT_METHOD;
extern WIT_DECLSPEC WIT_CONST witAttr       WitHEUR_OPT_INIT_METHOD;
extern WIT_DECLSPEC WIT_CONST witAttr       WitSCHED_OPT_INIT_METHOD;
extern WIT_DECLSPEC WIT_CONST witAttr       WitCRASH_OPT_INIT_METHOD;

extern WIT_DECLSPEC WIT_CONST witAttr       WitINACTIVE;
extern WIT_DECLSPEC WIT_CONST witAttr       WitAT_PART;
extern WIT_DECLSPEC WIT_CONST witAttr       WitAT_DEMAND;
extern WIT_DECLSPEC WIT_CONST witAttr       WitAT_OPERATION;
extern WIT_DECLSPEC WIT_CONST witAttr       WitAT_BOM_ENTRY;
extern WIT_DECLSPEC WIT_CONST witAttr       WitAT_SUB_ENTRY;
extern WIT_DECLSPEC WIT_CONST witAttr       WitAT_BOP_ENTRY;

/*----------------------------------------------------------------------------*/

#ifdef __cplusplus

     }
     //
     // End of extern "C"

#endif

/*----------------------------------------------------------------------------*/
/* Class WitErrorExc                                                          */
/*                                                                            */
/* This is the type of exception that WIT throws, when it issues a message    */
/* for which the mesgThrowErrorExc attribute is WitTRUE.                      */
/*----------------------------------------------------------------------------*/

#ifdef __cplusplus

class WIT_DECLSPEC WitErrorExc
   {
   public:

      WitErrorExc (const char *, int, witReturnCode);

      WitErrorExc (const WitErrorExc &);

     ~WitErrorExc ();

      const char *  funcName () const;
      int           mesgNum  () const;
      witReturnCode retCode  () const;

   private:

      char                funcName_[51];
      const int           mesgNum_;
      const witReturnCode retCode_;
   };

#endif /* __cplusplus */

/*----------------------------------------------------------------------------*/

#endif
@


1.326
log
@Reverted to the version of 8-30-2011, which has the following differences:
   Release 7.0
   Old copyright dates (2006)
   The leading blanks in each line, which were lost with the 2011 copyright
      update, are restored.
Restored release # as 8.0.
@
text
@d1 8
a8 3
/*----------------------------------------------------------------------------*/
/* Watson Implosion Technology (WIT)                                          */
/* ====== ========= ========== =====                                          */
d10 4
a13 3
/* Licensed Materials - Property of IBM                                       */
/* (C) COPYRIGHT International Business Machines Corp. 1993,1996,2000,2006.   */
/*----------------------------------------------------------------------------*/
@


1.325
log
@Revised the copyright date.
@
text
@d6 1
a6 1
/* (C) COPYRIGHT International Business Machines Corp. 1993,2011.             */
d51 1
a51 1
class WitRun;
d55 1
a55 1
typedef struct WitRunStruct WitRun;
d61 2
a62 2
extern "C"
{
d80 3
a82 3
WitRun * const theWitRun,
const char * const consumingOperationName,
const char * const consumedPartName);
d85 3
a87 3
WitRun * const theWitRun,
const char * const producingOperationName,
const char * const producedPartName);
d90 3
a92 3
WitRun * const     theWitRun,
const char * const theName,
const float        theValue);
d95 3
a97 3
WitRun * const     theWitRun,
const char * const theName,
const double       theValue);
d100 3
a102 3
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName);
d105 3
a107 3
WitRun * const     theWitRun,
const char * const theName,
const int          theValue);
d110 2
a111 2
WitRun * const theWitRun,
const char * const operationName);
d114 3
a116 3
WitRun * const theWitRun,
const char * const partName,
const witAttr partCategory);
d119 2
a120 2
WitRun * const theWitRun,
const char * const partAndOperationName);
d123 4
a126 4
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const char * const consumedPartName);
d129 1
a129 1
WitRun * const theWitRun);
d132 5
a136 5
WitRun * const     theWitRun,
const char * const partName,
const char * const demandName,
int                shipPeriod,
float              incShipVol);
d139 5
a143 5
WitRun * const     theWitRun,
const char * const partName,
const char * const demandName,
int                shipPeriod,
double             incShipVol);
d146 1
a146 1
WitRun * const theWitRun);
d149 1
a149 1
WitRun * const theWitRun);
d152 1
a152 1
WitRun * const theWitRun);
d155 1
a155 1
WitRun * const theWitRun);
d158 1
a158 1
WitRun * const theWitRun);
d161 6
a166 6
WitRun * const     dupWitRun,
const char * const dupOperationName,
const int          dupBomEntryIndex,
WitRun * const     origWitRun,
const char * const origOperationName,
const int          origBomEntryIndex);
d169 6
a174 6
WitRun * const     dupWitRun,
const char * const dupOperationName,
const int          dupBopEntryIndex,
WitRun * const     origWitRun,
const char * const origOperationName,
const int          origBopEntryIndex);
d177 2
a178 2
WitRun * const dupWitRun,
WitRun * const origWitRun);
d181 6
a186 6
WitRun * const     dupWitRun,
const char * const dupPartName,
const char * const dupDemandName,
WitRun * const     origWitRun,
const char * const origPartName,
const char * const origDemandName);
d189 4
a192 4
WitRun * const     dupWitRun,
const char * const dupOperationName,
WitRun * const     origWitRun,
const char * const origOperationName);
d195 4
a198 4
WitRun * const     dupWitRun,
const char * const dupPartName,
WitRun * const     origWitRun,
const char * const origPartName);
d201 8
a208 8
WitRun * const     dupWitRun,
const char * const dupOperationName,
const int          dupBomEntryIndex,
const int          dupSubsBomEntryIndex,
WitRun * const     origWitRun,
const char * const origOperationName,
const int          origBomEntryIndex,
const int          origSubsBomEntryIndex);
d211 1
a211 1
WitRun * theWitRun);
d214 2
a215 2
WitRun * const theWitRun,
const char * const fileName);
d218 7
a224 7
WitRun * const theWitRun,
const int lenLists,
const char * const * const demandedPartNameList,
const char * const * const demandNameList,
const int * const shipPeriodList,
const float * const desIncVolList,
float * * incVolList);
d227 7
a233 7
WitRun * const theWitRun,
const int lenLists,
const char * const * const demandedPartNameList,
const char * const * const demandNameList,
const int * const shipPeriodList,
const double * const desIncVolList,
double * * incVolList);
d236 8
a243 8
WitRun * const theWitRun,
const int lenLists,
const char * const * const demandedPartNameList,
const char * const * const demandNameList,
const int * const shipPeriodList,
const float * const desIncVolList,
float * * incVolList,
const witBoolean * const asapMultiExecList);
d246 8
a253 8
WitRun * const theWitRun,
const int lenLists,
const char * const * const demandedPartNameList,
const char * const * const demandNameList,
const int * const shipPeriodList,
const double * const desIncVolList,
double * * incVolList,
const witBoolean * const asapMultiExecList);
d256 1
a256 1
WitRun * const theWitRun);
d259 1
a259 1
WitRun * const theWitRun);
d262 1
a262 1
WitRun * const theWitRun);
d265 1
a265 1
void * mem );
d268 1
a268 1
WitRun * const theWitRun);
d271 2
a272 2
WitRun * const theWitRun,
witBoolean * accAfterSoftLB);
d275 2
a276 2
WitRun * const theWitRun,
witBoolean * accAfterOptImp);
d279 2
a280 2
WitRun * const theWitRun,
witBoolean * accelerated);
d283 2
a284 2
WitRun * const theWitRun,
void * * appData);
d287 2
a288 2
WitRun * const theWitRun,
witBoolean * autoPriority);
d291 4
a294 4
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
void * * appData);
d297 4
a300 4
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
float * * consRate);
d303 4
a306 4
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
double * * consRate);
d309 4
a312 4
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
char * * consumedPartName);
d315 4
a318 4
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
int * earliestPeriod);
d321 4
a324 4
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
float * execPenalty);
d327 4
a330 4
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
double * execPenalty);
d333 4
a336 4
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
float * falloutRate);
d339 4
a342 4
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
double * falloutRate);
d345 4
a348 4
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
int * * impactPeriod);
d351 4
a354 4
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
int * latestPeriod);
d357 4
a360 4
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
witBoolean * mandEC);
d363 4
a366 4
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
int * nSubsBomEntries);
d369 5
a373 5
WitRun * const     theWitRun,
const char * const consumingOperationName,
const int          bomEntryIndex,
const int          thePer,
int *              nonSubVarIndex);
d376 4
a379 4
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
float * * offset);
d382 4
a385 4
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
double * * offset);
d388 4
a391 4
WitRun * const     theWitRun,
const char * const consumingOperationName,
const int          bomEntryIndex,
witBoolean * *     propRtg);
d394 4
a397 4
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
float * * routingShare);
d400 4
a403 4
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
double * * routingShare);
d406 4
a409 4
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
witBoolean * selForDel);
d412 4
a415 4
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
witBoolean * singleSource);
d418 5
a422 5
WitRun * const     theWitRun,
const char * const consumingOperationName,
const int          bomEntryIndex,
const int          thePer,
int *              subConIndex);
d425 4
a428 4
WitRun * const theWitRun,
const char * const producingOperationName,
const int bopEntryIndex,
void * * appData);
d431 4
a434 4
WitRun * const theWitRun,
const char * const producingOperationName,
const int bopEntryIndex,
int * earliestPeriod);
d437 4
a440 4
WitRun * const theWitRun,
const char * const producingOperationName,
const int bopEntryIndex,
witBoolean * expAllowed);
d443 4
a446 4
WitRun * const theWitRun,
const char * const producingOperationName,
const int bopEntryIndex,
float * expAversion);
d449 4
a452 4
WitRun * const theWitRun,
const char * const producingOperationName,
const int bopEntryIndex,
double * expAversion);
d455 4
a458 4
WitRun * const theWitRun,
const char * const producingOperationName,
const int bopEntryIndex,
int * * impactPeriod);
d461 4
a464 4
WitRun * const theWitRun,
const char * const producingOperationName,
const int bopEntryIndex,
int * latestPeriod);
d467 4
a470 4
WitRun * const theWitRun,
const char * const producingOperationName,
const int bopEntryIndex,
float * * offset);
d473 4
a476 4
WitRun * const theWitRun,
const char * const producingOperationName,
const int bopEntryIndex,
double * * offset);
d479 4
a482 4
WitRun * const theWitRun,
const char * const producingOperationName,
const int bopEntryIndex,
float * * productRate);
d485 4
a488 4
WitRun * const theWitRun,
const char * const producingOperationName,
const int bopEntryIndex,
double * * productRate);
d491 4
a494 4
WitRun * const theWitRun,
const char * const producingOperationName,
const int bopEntryIndex,
char * * producedPartName);
d497 4
a500 4
WitRun * const theWitRun,
const char * const producingOperationName,
const int bopEntryIndex,
float * * routingShare);
d503 4
a506 4
WitRun * const theWitRun,
const char * const producingOperationName,
const int bopEntryIndex,
double * * routingShare);
d509 4
a512 4
WitRun * const theWitRun,
const char * const producingOperationName,
const int bopEntryIndex,
witBoolean * selForDel);
d515 2
a516 2
WitRun * const theWitRun,
float *        boundsValue);
d519 2
a520 2
WitRun * const theWitRun,
double *       boundsValue);
d523 2
a524 2
WitRun * const theWitRun,
witBoolean * compPrices);
d527 2
a528 2
WitRun * const theWitRun,
witBoolean * computeCriticalList);
d531 2
a532 2
WitRun * const theWitRun,
witBoolean *   cplexEmbedded);
d535 2
a536 2
WitRun * const theWitRun,
float * cplexMipBound);
d539 2
a540 2
WitRun * const theWitRun,
double * cplexMipBound);
d543 2
a544 2
WitRun * const theWitRun,
float * cplexMipRelGap);
d547 2
a548 2
WitRun * const theWitRun,
double * cplexMipRelGap);
d551 2
a552 2
WitRun * const theWitRun,
float * cplexParSpecDblVal);
d555 2
a556 2
WitRun * const theWitRun,
double * cplexParSpecDblVal);
d559 2
a560 2
WitRun * const theWitRun,
int * cplexParSpecIntVal);
d563 2
a564 2
WitRun * const theWitRun,
char * * cplexParSpecName);
d567 2
a568 2
WitRun * const theWitRun,
int *          cplexStatusCode);
d571 2
a572 2
WitRun * const theWitRun,
char * *       cplexStatusText);
d575 4
a578 4
WitRun * const theWitRun,
int * lenCritList,
char * * * critPartList,
int * * critPeriod);
d581 2
a582 2
WitRun * const theWitRun,
char * * theObjName);
d585 2
a586 2
WitRun * const theWitRun,
int * currentScenario);
d589 4
a592 4
WitRun * const     theWitRun,
const char * const theName,
witBoolean *       dblSpecExists,
float *            theValue);
d595 4
a598 4
WitRun * const     theWitRun,
const char * const theName,
witBoolean *       dblSpecExists,
double *           theValue);
d601 4
a604 4
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
void * * appData);
d607 9
a615 9
WitRun * const     theWitRun,
const char * const partName,
const char * const demandName,
const int          shipPeriod,
int *              lenLists,
char * * *         operationNameList,
int * *            bopEntryIndexList,
int * *            execPeriodList,
float * *          peggedVolList);
d618 9
a626 9
WitRun * const     theWitRun,
const char * const partName,
const char * const demandName,
const int          shipPeriod,
int *              lenLists,
char * * *         operationNameList,
int * *            bopEntryIndexList,
int * *            execPeriodList,
double * *         peggedVolList);
d629 8
a636 8
WitRun * const     theWitRun,
const char * const partName,
const char * const demandName,
const int          shipPeriod,
int *              lenLists,
char * * *         partNameList,
int * *            periodList,
float * *          peggedVolList);
d639 8
a646 8
WitRun * const     theWitRun,
const char * const partName,
const char * const demandName,
const int          shipPeriod,
int *              lenLists,
char * * *         partNameList,
int * *            periodList,
double * *         peggedVolList);
d649 6
a654 6
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
float * * hardLower,
float * * softLower,
float * * hardUpper);
d657 6
a662 6
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
double * * hardLower,
double * * softLower,
double * * hardUpper);
d665 4
a668 4
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
float * * cumShipReward);
d671 4
a674 4
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
double * * cumShipReward);
d677 5
a681 5
WitRun * const     theWitRun,
const char * const partName,
const char * const demandName,
const int          thePer,
int *              cumShipSlbConIndex);
d684 5
a688 5
WitRun * const     theWitRun,
const char * const partName,
const char * const demandName,
const int          thePer,
int *              cumShipSlbvVarIndex);
d691 5
a695 5
WitRun * const     theWitRun,
const char * const partName,
const char * const demandName,
const int          thePer,
int *              cumShipVarIndex);
d698 4
a701 4
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
float * * demandVol);
d704 4
a707 4
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
double * * demandVol);
d710 8
a717 8
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
const int shipPeriod,
int * lenLists,
char * * * operationNameList,
int * * execPeriodList,
float * * peggedExecVolList);
d720 8
a727 8
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
const int shipPeriod,
int * lenLists,
char * * * operationNameList,
int * * execPeriodList,
double * * peggedExecVolList);
d730 8
a737 8
WitRun * const     theWitRun,
const char * const partName,
const char * const demandName,
const int          shipPeriod,
int *              lenLists,
char * * *         operationNameList,
int * *            execPeriodList,
float * *          peggedExecVolList);
d740 8
a747 8
WitRun * const     theWitRun,
const char * const partName,
const char * const demandName,
const int          shipPeriod,
int *              lenLists,
char * * *         operationNameList,
int * *            execPeriodList,
double * *         peggedExecVolList);
d750 4
a753 4
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
int  * focusHorizon);
d756 4
a759 4
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
float * * fssShipVol);
d762 4
a765 4
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
double * * fssShipVol);
d768 4
a771 4
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
witBoolean * intShipVols);
d774 4
a777 4
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
int * * leadTimeUB);
d780 4
a783 4
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
int * * priority);
d786 8
a793 8
WitRun * const     theWitRun,
const char * const partName,
const char * const demandName,
const int          shipPeriod,
int *              lenLists,
char * * *         partNameList,
int * *            periodList,
float * *          peggedVolList);
d796 8
a803 8
WitRun * const     theWitRun,
const char * const partName,
const char * const demandName,
const int          shipPeriod,
int *              lenLists,
char * * *         partNameList,
int * *            periodList,
double * *         peggedVolList);
d806 4
a809 4
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
float * searchInc);
d812 4
a815 4
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
double * searchInc);
d818 4
a821 4
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
witBoolean * selForDel);
d824 5
a828 5
WitRun * const     theWitRun,
const char * const partName,
const char * const demandName,
const int          thePer,
int *              shipConIndex);
d831 4
a834 4
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
witBoolean * shipLateAllowed);
d837 4
a840 4
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
int * * shipLateUB);
d843 4
a846 4
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
float * * shipReward);
d849 4
a852 4
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
double * * shipReward);
d855 5
a859 5
WitRun * const     theWitRun,
const char * const partName,
const char * const demandName,
const int          thePer,
int *              shipVarIndex);
d862 4
a865 4
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
float * * shipVol);
d868 4
a871 4
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
double * * shipVol);
d874 8
a881 8
WitRun * const     theWitRun,
const char * const partName,
const char * const demandName,
const int          shipPeriod,
int *              lenLists,
char * * *         partNameList,
int * *            periodList,
float * *          peggedVolList);
d884 8
a891 8
WitRun * const     theWitRun,
const char * const partName,
const char * const demandName,
const int          shipPeriod,
int *              lenLists,
char * * *         partNameList,
int * *            periodList,
double * *         peggedVolList);
d894 10
a903 10
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
const int shipPeriod,
int * lenLists,
char * * * operationNameList,
int * * bomEntryIndexList,
int * * subsBomEntryIndexList,
int * * execPeriodList,
float * * peggedSubVolList);
d906 10
a915 10
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
const int shipPeriod,
int * lenLists,
char * * * operationNameList,
int * * bomEntryIndexList,
int * * subsBomEntryIndexList,
int * * execPeriodList,
double * * peggedSubVolList);
d918 10
a927 10
WitRun * const     theWitRun,
const char * const partName,
const char * const demandName,
const int          shipPeriod,
int *              lenLists,
char * * *         operationNameList,
int * *            bomEntryIndexList,
int * *            subsBomEntryIndexList,
int * *            execPeriodList,
float * *          peggedSubVolList);
d930 10
a939 10
WitRun * const     theWitRun,
const char * const partName,
const char * const demandName,
const int          shipPeriod,
int *              lenLists,
char * * *         operationNameList,
int * *            bomEntryIndexList,
int * *            subsBomEntryIndexList,
int * *            execPeriodList,
double * *         peggedSubVolList);
d942 8
a949 8
WitRun * const     theWitRun,
const char * const partName,
const char * const demandName,
const int          shipPeriod,
int *              lenLists,
char * * *         partNameList,
int * *            periodList,
float * *          peggedVolList);
d952 8
a959 8
WitRun * const     theWitRun,
const char * const partName,
const char * const demandName,
const int          shipPeriod,
int *              lenLists,
char * * *         partNameList,
int * *            periodList,
double * *         peggedVolList);
d962 2
a963 2
WitRun * const theWitRun,
int * equitablity);
d966 2
a967 2
WitRun * const theWitRun,
witBoolean * execEmptyBom);
d970 2
a971 2
WitRun * const theWitRun,
float * expCutoff);
d974 2
a975 2
WitRun * const theWitRun,
double * expCutoff);
d978 4
a981 4
WitRun * const theWitRun,
int *          lenLists,
char * * *     partNameList,
char * * *     operationNameList);
d984 2
a985 2
WitRun * const theWitRun,
witBoolean *   extOptActive);
d988 3
a990 3
WitRun * const theWitRun,
int * *        indices,
int *          len);
d993 11
a1003 11
WitRun * const theWitRun,
int *          numcols,
int *          numrows,
int * *        start,
int * *        index,
float * *      value,
float * *      collb,
float * *      colub,
float * *      obj,
float * *      rowlb,
float * *      rowub);
d1006 11
a1016 11
WitRun * const theWitRun,
int *          numcols,
int *          numrows,
int * *        start,
int * *        index,
double * *     value,
double * *     collb,
double * *     colub,
double * *     obj,
double * *     rowlb,
double * *     rowub);
d1019 2
a1020 2
WitRun * const theWitRun,
witBoolean * feasible);
d1023 4
a1026 4
WitRun * const theWitRun,
int *          lenList,
char * * *     partList,
float * * *    shortageVolList);
d1029 4
a1032 4
WitRun * const theWitRun,
int *          lenList,
char * * *     partList,
double * * *   shortageVolList);
d1035 2
a1036 2
WitRun * const theWitRun,
witBoolean * forcedMultiEq);
d1039 2
a1040 2
WitRun * const theWitRun,
witBoolean * heurAllocActive);
d1043 2
a1044 2
WitRun * const theWitRun,
witBoolean * highPrecisionWD);
d1047 2
a1048 2
WitRun * const theWitRun,
int * independentOffsets);
d1051 4
a1054 4
WitRun * const     theWitRun,
const char * const theName,
witBoolean *       intSpecExists,
int *              theValue);
d1057 2
a1058 2
WitRun * const theWitRun,
float * lotSizeTol);
d1061 2
a1062 2
WitRun * const theWitRun,
double * lotSizeTol);
d1065 2
a1066 2
WitRun * const theWitRun,
FILE * * mesgFile);
d1069 2
a1070 2
WitRun * const theWitRun,
char * * mesgFileAccessMode);
d1073 2
a1074 2
WitRun * const theWitRun,
char * * mesgFileName);
d1077 3
a1079 3
WitRun * const theWitRun,
const int messageNumber,
witBoolean * mesgPrintMunber);
d1082 3
a1084 3
WitRun * const theWitRun,
const int messageNumber,
witBoolean * mesgStopRunning);
d1087 3
a1089 3
WitRun * const theWitRun,
const int messageNumber,
witBoolean * mesgThrowErrorExc);
d1092 3
a1094 3
WitRun * const theWitRun,
const int messageNumber,
int * mesgTimesPrint);
d1097 2
a1098 2
WitRun * const theWitRun,
witBoolean * minimalExcess);
d1101 2
a1102 2
WitRun * const theWitRun,
witBoolean * mipMode);
d1105 2
a1106 2
WitRun * const theWitRun,
witBoolean * modHeurAlloc);
d1109 2
a1110 2
WitRun * const theWitRun,
witBoolean * multiExec);
d1113 2
a1114 2
WitRun * const theWitRun,
witBoolean * multiObjMode);
d1117 2
a1118 2
WitRun * const theWitRun,
float * multiObjTol);
d1121 2
a1122 2
WitRun * const theWitRun,
double * multiObjTol);
d1125 2
a1126 2
WitRun * const theWitRun,
witBoolean * multiRoute);
d1129 2
a1130 2
WitRun * const theWitRun,
int * nPeriods);
d1133 2
a1134 2
WitRun * const theWitRun,
int * nScenarios);
d1137 2
a1138 2
WitRun * const theWitRun,
witBoolean * nstnResidual);
d1141 3
a1143 3
WitRun * const theWitRun,
char * * consumingOperationName,
int * bomEntryIndex);
d1146 3
a1148 3
WitRun * const theWitRun,
char * * producingOperationName,
int * bopEntryIndex);
d1151 3
a1153 3
WitRun * const theWitRun,
char * * demandedPartName,
char * * demandName);
d1156 2
a1157 2
WitRun * const theWitRun,
char * * operationName);
d1160 2
a1161 2
WitRun * const theWitRun,
char * * partName);
d1164 2
a1165 2
WitRun * const theWitRun,
witAttr * objItrState);
d1168 4
a1171 4
WitRun * const theWitRun,
char * * consumingOperationName,
int * bomEntryIndex,
int * subsBomEntryIndex);
d1174 2
a1175 2
WitRun * const theWitRun,
float *        objValue);
d1178 2
a1179 2
WitRun * const theWitRun,
double *       objValue);
d1182 3
a1184 3
WitRun * const theWitRun,
int  *         lenList,
char * * *     objectiveList);
d1187 2
a1188 2
WitRun * const theWitRun,
char * *       objectiveListSpec);
d1191 2
a1192 2
WitRun * const theWitRun,
int * objectiveRank);
d1195 3
a1197 3
WitRun * const theWitRun,
const char * const operationName,
void * * appData);
d1200 5
a1204 5
WitRun * const theWitRun,
const char * const operationName,
float * * hardLower,
float * * softLower,
float * * hardUpper);
d1207 5
a1211 5
WitRun * const theWitRun,
const char * const operationName,
double * * hardLower,
double * * softLower,
double * * hardUpper);
d1214 3
a1216 3
WitRun * const theWitRun,
const char * const operationName,
float * * execCost);
d1219 3
a1221 3
WitRun * const theWitRun,
const char * const operationName,
double * * execCost);
d1224 3
a1226 3
WitRun * const theWitRun,
const char * const operationName,
float * execPenalty);
d1229 3
a1231 3
WitRun * const theWitRun,
const char * const operationName,
double * execPenalty);
d1234 4
a1237 4
WitRun * const     theWitRun,
const char * const operationName,
const int          thePer,
int *              execSlbConIndex);
d1240 4
a1243 4
WitRun * const     theWitRun,
const char * const operationName,
const int          thePer,
int *              execSlbvVarIndex);
d1246 4
a1249 4
WitRun * const     theWitRun,
const char * const operationName,
const int          thePer,
int *              execVarIndex);
d1252 3
a1254 3
WitRun * const theWitRun,
const char * const operationName,
float * * execVol);
d1257 3
a1259 3
WitRun * const theWitRun,
const char * const operationName,
double * * execVol);
d1262 3
a1264 3
WitRun * const theWitRun,
const char * const operationName,
witBoolean * * executable);
d1267 3
a1269 3
WitRun * const theWitRun,
const char * const operationNameParm,
witBoolean * exists);
d1272 3
a1274 3
WitRun * const theWitRun,
const char * const operationName,
float * * fssExecVol);
d1277 3
a1279 3
WitRun * const theWitRun,
const char * const operationName,
double * * fssExecVol);
d1282 3
a1284 3
WitRun * const theWitRun,
const char * const operationName,
float * * incLotSize);
d1287 3
a1289 3
WitRun * const theWitRun,
const char * const operationName,
double * * incLotSize);
d1292 3
a1294 3
WitRun * const theWitRun,
const char * const operationName,
float * * incLotSize2);
d1297 3
a1299 3
WitRun * const theWitRun,
const char * const operationName,
double * * incLotSize2);
d1302 3
a1304 3
WitRun * const theWitRun,
const char * const operationName,
witBoolean * intExecVols);
d1307 3
a1309 3
WitRun * const theWitRun,
const char * const operationName,
float * * lotSize2Thresh);
d1312 3
a1314 3
WitRun * const theWitRun,
const char * const operationName,
double * * lotSize2Thresh);
d1317 3
a1319 3
WitRun * const theWitRun,
const char * const operationName,
float * * minLotSize);
d1322 3
a1324 3
WitRun * const theWitRun,
const char * const operationName,
double * * minLotSize);
d1327 3
a1329 3
WitRun * const theWitRun,
const char * const operationName,
float * * minLotSize2);
d1332 3
a1334 3
WitRun * const theWitRun,
const char * const operationName,
double * * minLotSize2);
d1337 3
a1339 3
WitRun * const theWitRun,
const char * const operationName,
float * * mrpExecVol);
d1342 3
a1344 3
WitRun * const theWitRun,
const char * const operationName,
double * * mrpExecVol);
d1347 3
a1349 3
WitRun * const theWitRun,
const char * const consumingOperationName,
int * nBomEntries);
d1352 3
a1354 3
WitRun * const theWitRun,
const char * const producingOperationName,
int * nBopEntries);
d1357 3
a1359 3
WitRun * const     theWitRun,
const char * const operationName,
int *              objectStage);
d1362 3
a1364 3
WitRun * const theWitRun,
const char * const operationName,
witBoolean * selForDel);
d1367 3
a1369 3
WitRun * const theWitRun,
int * lenOperationList,
char * * * operationList);
d1372 3
a1374 3
WitRun * const theWitRun,
const char * const operationName,
witBoolean * twoLevelLotSizes);
d1377 3
a1379 3
WitRun * const theWitRun,
const char * const operationName,
float * * yieldRate);
d1382 3
a1384 3
WitRun * const theWitRun,
const char * const operationName,
double * * yieldRate);
d1387 2
a1388 2
WitRun * const theWitRun,
witAttr * optInitMethod);
d1391 2
a1392 2
WitRun * const theWitRun,
int * outputPrecision);
d1395 3
a1397 3
WitRun * const theWitRun,
const char * const partName,
void * * appData);
d1400 3
a1402 3
WitRun * const theWitRun,
const char * const partName,
witBoolean * asapPipOrder);
d1405 4
a1408 4
WitRun * const theWitRun,
const char * const partName,
int * lenList,
char * * * partNameList);
d1411 3
a1413 3
WitRun * const theWitRun,
const char * const partName,
witBoolean * boundedLeadTimes);
d1416 3
a1418 3
WitRun * const theWitRun,
const char * const partName,
int * * buildAheadUB);
d1421 3
a1423 3
WitRun * const theWitRun,
const char * const partName,
witBoolean * buildAsap);
d1426 3
a1428 3
WitRun * const theWitRun,
const char * const partName,
witBoolean * buildNstn);
d1431 3
a1433 3
WitRun * const theWitRun,
const char * const partName,
witAttr * category);
d1436 3
a1438 3
WitRun * const theWitRun,
const char * const partName,
float * * consVol);
d1441 3
a1443 3
WitRun * const theWitRun,
const char * const partName,
double * * consVol);
d1446 5
a1450 5
WitRun * const theWitRun,
const char * const partName,
const int consIndex,
char * * consumingOperationName,
int * bomEntryIndex);
d1453 6
a1458 6
WitRun * const theWitRun,
const char * const partName,
const int consIndex,
char * * consumingOperationName,
int * bomEntryIndex,
int * subsBomEntryIndex);
d1461 4
a1464 4
WitRun * const theWitRun,
const char * const demandedPartName,
int * lenDemandList,
char * * * demandList);
d1467 3
a1469 3
WitRun * const theWitRun,
const char * const partName,
float * * excessVol);
d1472 3
a1474 3
WitRun * const theWitRun,
const char * const partName,
double * * excessVol);
d1477 3
a1479 3
WitRun * const theWitRun,
const char * const partNameParm,
witBoolean * exists);
d1482 3
a1484 3
WitRun * const theWitRun,
const char * const partName,
float * * shortageVol);
d1487 3
a1489 3
WitRun * const theWitRun,
const char * const partName,
double * * shortageVol);
d1492 3
a1494 3
WitRun * const theWitRun,
const char * const partName,
float * * mrpConsVol);
d1497 3
a1499 3
WitRun * const theWitRun,
const char * const partName,
double * * mrpConsVol);
d1502 3
a1504 3
WitRun * const theWitRun,
const char * const partName,
float * * mrpExcessVol);
d1507 3
a1509 3
WitRun * const theWitRun,
const char * const partName,
double * * mrpExcessVol);
d1512 3
a1514 3
WitRun * const theWitRun,
const char * const partName,
float * * mrpResidualVol);
d1517 3
a1519 3
WitRun * const theWitRun,
const char * const partName,
double * * mrpResidualVol);
d1522 3
a1524 3
WitRun * const theWitRun,
const char * const partName,
int * nConsumingBomEntries);
d1527 3
a1529 3
WitRun * const theWitRun,
const char * const partName,
int * nConsumingSubsBomEntries);
d1532 3
a1534 3
WitRun * const theWitRun,
const char * const partName,
int * nProducingBopEntries);
d1537 3
a1539 3
WitRun * const     theWitRun,
const char * const partName,
int *              objectStage);
d1542 3
a1544 3
WitRun * const theWitRun,
const char * const partName,
float * * prodVol);
d1547 3
a1549 3
WitRun * const theWitRun,
const char * const partName,
double * * prodVol);
d1552 5
a1556 5
WitRun * const theWitRun,
const char * const partName,
const int prodIndex,
char * * producingOperationName,
int * bopEntryIndex);
d1559 3
a1561 3
WitRun * const     theWitRun,
const char * const partName,
witBoolean * *     propRtg);
d1564 3
a1566 3
WitRun * const theWitRun,
const char * const partName,
float * * reqVol);
d1569 3
a1571 3
WitRun * const theWitRun,
const char * const partName,
double * * reqVol);
d1574 3
a1576 3
WitRun * const theWitRun,
const char * const partName,
float * * residualVol);
d1579 3
a1581 3
WitRun * const theWitRun,
const char * const partName,
double * * residualVol);
d1584 4
a1587 4
WitRun * const     theWitRun,
const char * const partName,
const int          thePer,
int *              resourceConIndex);
d1590 3
a1592 3
WitRun * const theWitRun,
const char * const partName,
witBoolean * scrapAllowed);
d1595 3
a1597 3
WitRun * const theWitRun,
const char * const partName,
float * * scrapCost);
d1600 3
a1602 3
WitRun * const theWitRun,
const char * const partName,
double * * scrapCost);
d1605 4
a1608 4
WitRun * const     theWitRun,
const char * const partName,
const int          thePer,
int *              scrapVarIndex);
d1611 3
a1613 3
WitRun * const theWitRun,
const char * const partName,
float * * scrapVol);
d1616 3
a1618 3
WitRun * const theWitRun,
const char * const partName,
double * * scrapVol);
d1621 3
a1623 3
WitRun * const theWitRun,
const char * const partName,
witBoolean * selForDel);
d1626 3
a1628 3
WitRun * const theWitRun,
const char * const partName,
float * * shadowPrice);
d1631 3
a1633 3
WitRun * const theWitRun,
const char * const partName,
double * * shadowPrice);
d1636 3
a1638 3
WitRun * const theWitRun,
const char * const partName,
witBoolean * singleSource);
d1641 5
a1645 5
WitRun * const theWitRun,
const char * const partName,
float * * hardLower,
float * * softLower,
float * * hardUpper);
d1648 5
a1652 5
WitRun * const theWitRun,
const char * const partName,
double * * hardLower,
double * * softLower,
double * * hardUpper);
d1655 3
a1657 3
WitRun * const theWitRun,
const char * const partName,
float * * stockCost);
d1660 3
a1662 3
WitRun * const theWitRun,
const char * const partName,
double * * stockCost);
d1665 4
a1668 4
WitRun * const     theWitRun,
const char * const partName,
const int          thePer,
int *              stockSlbConIndex);
d1671 4
a1674 4
WitRun * const     theWitRun,
const char * const partName,
const int          thePer,
int *              stockSlbvVarIndex);
d1677 4
a1680 4
WitRun * const     theWitRun,
const char * const partName,
const int          thePer,
int *              stockVarIndex);
d1683 3
a1685 3
WitRun * const theWitRun,
const char * const partName,
float * * stockVol);
d1688 3
a1690 3
WitRun * const theWitRun,
const char * const partName,
double * * stockVol);
d1693 3
a1695 3
WitRun * const theWitRun,
const char * const partName,
float * * supplyVol);
d1698 3
a1700 3
WitRun * const theWitRun,
const char * const partName,
double * * supplyVol);
d1703 3
a1705 3
WitRun * const theWitRun,
int * lenPartList,
char * * * partList);
d1708 2
a1709 2
WitRun * const theWitRun,
witBoolean * penExec);
d1712 2
a1713 2
WitRun * const theWitRun,
witBoolean * perfPegging);
d1716 2
a1717 2
WitRun * const theWitRun,
int * *        periodStage);
d1720 7
a1726 7
WitRun * const theWitRun,
int *          lenLists,
char * * *     critPartNameList,
int * *        critPerList,
char * * *     demPartNameList,
char * * *     demandNameList,
int * *        shipPerList);
d1729 2
a1730 2
WitRun * const theWitRun,
witBoolean * pgdCritListMode);
d1733 2
a1734 2
WitRun * const theWitRun,
witBoolean *   pipExists);
d1737 6
a1742 6
WitRun * const theWitRun,
int *          lenLists,
char * * *     partNameList,
char * * *     demandNameList,
int * *        shipPerList,
float * *      incShipVolList);
d1745 6
a1750 6
WitRun * const theWitRun,
int *          lenLists,
char * * *     partNameList,
char * * *     demandNameList,
int * *        shipPerList,
double * *     incShipVolList);
d1753 2
a1754 2
WitRun * const theWitRun,
witBoolean * pipSeqFromHeur);
d1757 2
a1758 2
WitRun * const theWitRun,
witBoolean * postprocessed);
d1761 2
a1762 2
WitRun * const theWitRun,
witBoolean * prefHighStockSLBs);
d1765 2
a1766 2
WitRun * const theWitRun,
witBoolean * preprocessed);
d1769 2
a1770 2
WitRun * const theWitRun,
float * probability);
d1773 2
a1774 2
WitRun * const theWitRun,
double * probability);
d1777 2
a1778 2
WitRun * const theWitRun,
witBoolean * respectStockSLBs);
d1781 2
a1782 2
WitRun * const theWitRun,
witBoolean * roundReqVols);
d1785 2
a1786 2
WitRun * const theWitRun,
witBoolean * selSplit);
d1789 2
a1790 2
WitRun * const theWitRun,
witBoolean * selectionRecovery);
d1793 2
a1794 2
WitRun * const theWitRun,
witBoolean * skipFailures);
d1797 2
a1798 2
WitRun * const theWitRun,
char * * solverLogFileName);
d1801 2
a1802 2
WitRun * const theWitRun,
witBoolean *   stageByObject);
d1805 2
a1806 2
WitRun * const theWitRun,
witBoolean *   stochMode);
d1809 2
a1810 2
WitRun * const theWitRun,
witBoolean *   stochSolnMode);
d1813 2
a1814 2
WitRun * const theWitRun,
witBoolean * stockReallocation);
d1817 5
a1821 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
void * * appData);
d1824 5
a1828 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
float * * consRate);
d1831 5
a1835 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
double * * consRate);
d1838 5
a1842 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
char  * * consumedPart);
d1845 5
a1849 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
int * earliestPeriod);
d1852 5
a1856 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
float * execPenalty);
d1859 5
a1863 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
double * execPenalty);
d1866 5
a1870 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
witBoolean * expAllowed);
d1873 5
a1877 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
float * expNetAversion);
d1880 5
a1884 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
double * expNetAversion);
d1887 5
a1891 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
float * falloutRate);
d1894 5
a1898 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
double * falloutRate);
d1901 5
a1905 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
float * * fssSubVol);
d1908 5
a1912 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
double * * fssSubVol);
d1915 5
a1919 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
int * * impactPeriod);
d1922 5
a1926 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
witBoolean * intSubVols);
d1929 5
a1933 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
int * latestPeriod);
d1936 5
a1940 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
witBoolean * mrpNetAllowed);
d1943 5
a1947 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
float * * mrpSubVol);
d1950 5
a1954 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
double * * mrpSubVol);
d1957 5
a1961 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
witBoolean * netAllowed);
d1964 5
a1968 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
float * * offset);
d1971 5
a1975 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
double * * offset);
d1978 5
a1982 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
float * * routingShare);
d1985 5
a1989 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
double * * routingShare);
d1992 5
a1996 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
witBoolean * selForDel);
d1999 5
a2003 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
float * * subCost);
d2006 5
a2010 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
double * * subCost);
d2013 6
a2018 6
WitRun * const     theWitRun,
const char * const consumingOperationName,
const int          bomEntryIndex,
const int          subsBomEntryIndex,
const int          thePer,
int *              subVarIndex);
d2021 5
a2025 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
float * * subVol);
d2028 5
a2032 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
double * * subVol);
d2035 2
a2036 2
WitRun * const theWitRun,
witBoolean * tieBreakPropRt);
d2039 2
a2040 2
WitRun * const theWitRun,
char * * title);
d2043 2
a2044 2
WitRun * const theWitRun,
witBoolean * truncOffsets);
d2047 2
a2048 2
WitRun * const theWitRun,
witBoolean * twoWayMultiExec);
d2051 2
a2052 2
WitRun * const theWitRun,
witBoolean * focusHorizons);
d2055 2
a2056 2
WitRun * const theWitRun,
witBoolean * userHeurStart);
d2059 2
a2060 2
WitRun * const theWitRun,
float * wbounds);
d2063 2
a2064 2
WitRun * const theWitRun,
double * wbounds);
d2067 2
a2068 2
WitRun * const theWitRun,
witBoolean * wit34Compatible);
d2071 1
a2071 1
WitRun * const theWitRun);
d2074 6
a2079 6
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
const int shipPeriod,
const float desIncVol,
float * incVol);
d2082 6
a2087 6
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
const int shipPeriod,
const double desIncVol,
double * incVol);
d2090 7
a2096 7
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
const int shipPeriod,
const float desIncVol,
float * incVol,
witBoolean asapMultiExec);
d2099 7
a2105 7
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
const int shipPeriod,
const double desIncVol,
double * incVol,
witBoolean asapMultiExec);
d2108 1
a2108 1
WitRun * const theWitRun);
d2111 1
a2111 1
WitRun * const theWitRun);
d2114 1
a2114 1
WitRun * * theWitRunPtr);
d2117 1
a2117 1
WitRun * const theWitRun);
d2120 1
a2120 1
WitRun * const theWitRun);
d2123 1
a2123 1
WitRun * const theWitRun);
d2126 1
a2126 1
WitRun * const theWitRun);
d2129 2
a2130 2
WitRun * const theWitRun,
const char * const mesgFileName);
d2133 1
a2133 1
WitRun * const theWitRun);
d2136 2
a2137 2
WitRun * const theWitRun,
const witBoolean accAfterSoftLB);
d2140 2
a2141 2
WitRun * const theWitRun,
const witBoolean accAfterOptImp);
d2144 2
a2145 2
WitRun * const theWitRun,
void * const appData);
d2148 2
a2149 2
WitRun * const theWitRun,
const witBoolean autoPriority);
d2152 4
a2155 4
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
void * const appData);
d2158 4
a2161 4
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const float * const consRate);
d2164 4
a2167 4
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const double * const consRate);
d2170 4
a2173 4
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int earliestPeriod);
d2176 4
a2179 4
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const float execPenalty);
d2182 4
a2185 4
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const double execPenalty);
d2188 4
a2191 4
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const float falloutRate);
d2194 4
a2197 4
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const double falloutRate);
d2200 4
a2203 4
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int latestPeriod);
d2206 4
a2209 4
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const witBoolean mandEC);
d2212 4
a2215 4
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const float * const offset);
d2218 4
a2221 4
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const double * const offset);
d2224 4
a2227 4
WitRun * const           theWitRun,
const char * const       operationName,
const int                bomEntryIndex,
const witBoolean * const propRtg);
d2230 4
a2233 4
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const float * routingShare);
d2236 4
a2239 4
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const double * routingShare);
d2242 4
a2245 4
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const witBoolean selForDel);
d2248 4
a2251 4
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const witBoolean singleSource);
d2254 4
a2257 4
WitRun * const theWitRun,
const char * const producingOperationName,
const int bopEntryIndex,
void * const appData);
d2260 4
a2263 4
WitRun * const theWitRun,
const char * const producingOperationName,
const int bopEntryIndex,
const int earliestPeriod);
d2266 4
a2269 4
WitRun * const theWitRun,
const char * const producingOperationName,
const int bopEntryIndex,
const witBoolean expAllowed);
d2272 4
a2275 4
WitRun * const theWitRun,
const char * const producingOperationName,
const int bopEntryIndex,
const float expAversion);
d2278 4
a2281 4
WitRun * const theWitRun,
const char * const producingOperationName,
const int bopEntryIndex,
const double expAversion);
d2284 4
a2287 4
WitRun * const theWitRun,
const char * const producingOperationName,
const int bopEntryIndex,
const int latestPeriod);
d2290 4
a2293 4
WitRun * const theWitRun,
const char * const producingOperationName,
const int bopEntryIndex,
const float * const offset);
d2296 4
a2299 4
WitRun * const theWitRun,
const char * const producingOperationName,
const int bopEntryIndex,
const double * const offset);
d2302 4
a2305 4
WitRun * const theWitRun,
const char * const producingOperationName,
const int bopEntryIndex,
const float * const productRate);
d2308 4
a2311 4
WitRun * const theWitRun,
const char * const producingOperationName,
const int bopEntryIndex,
const double * const productRate);
d2314 4
a2317 4
WitRun * const theWitRun,
const char * const producingOperationName,
const int bopEntryIndex,
const float * routingShare);
d2320 4
a2323 4
WitRun * const theWitRun,
const char * const producingOperationName,
const int bopEntryIndex,
const double * routingShare);
d2326 4
a2329 4
WitRun * const theWitRun,
const char * const producingOperationName,
const int bopEntryIndex,
const witBoolean selForDel);
d2332 2
a2333 2
WitRun * const theWitRun,
const witBoolean compPrices);
d2336 2
a2337 2
WitRun * const theWitRun,
const witBoolean computeCriticalList);
d2340 2
a2341 2
WitRun * const theWitRun,
const float cplexParSpecDblVal);
d2344 2
a2345 2
WitRun * const theWitRun,
const double cplexParSpecDblVal);
d2348 2
a2349 2
WitRun * const theWitRun,
const int      cplexParSpecIntVal);
d2352 2
a2353 2
WitRun * const theWitRun,
const char * const cplexParSpecName);
d2356 2
a2357 2
WitRun * const theWitRun,
const char * const theObjName);
d2360 2
a2361 2
WitRun * const theWitRun,
const int currentScenario);
d2364 4
a2367 4
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
void * const appData);
d2370 6
a2375 6
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
const float * const hardLower,
const float * const softLower,
const float * const hardUpper);
d2378 6
a2383 6
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
const double * const hardLower,
const double * const softLower,
const double * const hardUpper);
d2386 4
a2389 4
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
const float * const cumShipReward);
d2392 4
a2395 4
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
const double * const cumShipReward);
d2398 4
a2401 4
WitRun * const     theWitRun,
const char * const partName,
const char * const demandName,
const char * const newName);
d2404 4
a2407 4
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
const float * const iDemandVol);
d2410 4
a2413 4
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
const double * const iDemandVol);
d2416 4
a2419 4
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
const int  focusHorizon);
d2422 4
a2425 4
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
const float * const  fssShipVol);
d2428 4
a2431 4
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
const double * const  fssShipVol);
d2434 4
a2437 4
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
const witBoolean intShipVols);
d2440 4
a2443 4
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
const int * leadTimeUB);
d2446 4
a2449 4
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
const int * const priority);
d2452 4
a2455 4
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
const float searchInc);
d2458 4
a2461 4
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
const double searchInc);
d2464 4
a2467 4
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
const witBoolean selForDel);
d2470 4
a2473 4
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
const witBoolean shipLateAllowed);
d2476 4
a2479 4
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
const int * shipLateUB);
d2482 4
a2485 4
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
const float * const shipReward);
d2488 4
a2491 4
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
const double * const shipReward);
d2494 4
a2497 4
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
const float * const shipVol);
d2500 4
a2503 4
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
const double * const shipVol);
d2506 2
a2507 2
WitRun * const theWitRun,
const int equitablity);
d2510 2
a2511 2
WitRun * const theWitRun,
const witBoolean execEmptyBom);
d2514 2
a2515 2
WitRun * const theWitRun,
const float expCutoff);
d2518 2
a2519 2
WitRun * const theWitRun,
const double expCutoff);
d2522 2
a2523 2
WitRun * const      theWitRun,
const float * const colsol);
d2526 2
a2527 2
WitRun * const       theWitRun,
const double * const colsol);
d2530 2
a2531 2
WitRun * const theWitRun,
const witBoolean forcedMultiEq);
d2534 2
a2535 2
WitRun * const theWitRun,
const witBoolean highPrecisionWD);
d2538 2
a2539 2
WitRun * const theWitRun,
const witBoolean independentOffsets);
d2542 2
a2543 2
WitRun * const theWitRun,
const float lotSizeTol);
d2546 2
a2547 2
WitRun * const theWitRun,
const double lotSizeTol);
d2550 3
a2552 3
WitRun * const theWitRun,
const witBoolean quiet,
const char * const mesgFileAccessMode);
d2555 3
a2557 3
WitRun * const theWitRun,
const witBoolean quiet,
const char * const fileName);
d2560 4
a2563 4
WitRun * const theWitRun,
const witBoolean quiet,
const int messageNumber,
const witBoolean mesgPrintMunber);
d2566 4
a2569 4
WitRun * const theWitRun,
const witBoolean quiet,
const int messageNumber,
const witBoolean mesgStopRunning);
d2572 4
a2575 4
WitRun * const theWitRun,
const witBoolean quiet,
const int messageNumber,
const witBoolean mesgThrowErrorExc);
d2578 4
a2581 4
WitRun * const theWitRun,
const witBoolean quiet,
const int messageNumber,
const int mesgTimesPrint);
d2584 2
a2585 2
WitRun * const theWitRun,
const witBoolean minimalExcess);
d2588 2
a2589 2
WitRun * const theWitRun,
const witBoolean mipMode);
d2592 2
a2593 2
WitRun * const theWitRun,
const witBoolean modHeurAlloc);
d2596 2
a2597 2
WitRun * const theWitRun,
const witBoolean multiExec);
d2600 2
a2601 2
WitRun * const theWitRun,
const witBoolean multiObjMode);
d2604 2
a2605 2
WitRun * const theWitRun,
const float multiObjTol);
d2608 2
a2609 2
WitRun * const theWitRun,
const double multiObjTol);
d2612 2
a2613 2
WitRun * const theWitRun,
const witBoolean multiRoute);
d2616 2
a2617 2
WitRun * const theWitRun,
const int nPeriods);
d2620 2
a2621 2
WitRun * const theWitRun,
const int nScenarios);
d2624 2
a2625 2
WitRun * const theWitRun,
const witBoolean nstnResidual);
d2628 3
a2630 3
WitRun * const             theWitRun,
const int                  lenList,
const char * const * const objectiveList);
d2633 2
a2634 2
WitRun * const     theWitRun,
const char * const objectiveListSpec);
d2637 2
a2638 2
WitRun * const theWitRun,
const int      objectiveRank);
d2641 3
a2643 3
WitRun * const theWitRun,
const char * const operationName,
void * const appData);
d2646 5
a2650 5
WitRun * const theWitRun,
const char * const operationName,
const float * const hardLower,
const float * const softLower,
const float * const hardUpper);
d2653 5
a2657 5
WitRun * const theWitRun,
const char * const operationName,
const double * const hardLower,
const double * const softLower,
const double * const hardUpper);
d2660 3
a2662 3
WitRun * const theWitRun,
const char * const operationName,
const float * const execCost);
d2665 3
a2667 3
WitRun * const theWitRun,
const char * const operationName,
const double * const execCost);
d2670 3
a2672 3
WitRun * const theWitRun,
const char * const operationName,
const float execPenalty);
d2675 3
a2677 3
WitRun * const theWitRun,
const char * const operationName,
const double execPenalty);
d2680 3
a2682 3
WitRun * const theWitRun,
const char * const operationName,
const float * const execVol);
d2685 3
a2687 3
WitRun * const theWitRun,
const char * const operationName,
const double * const execVol);
d2690 3
a2692 3
WitRun * const theWitRun,
const char * const operationName,
const float * const incLotSize);
d2695 3
a2697 3
WitRun * const theWitRun,
const char * const operationName,
const double * const incLotSize);
d2700 3
a2702 3
WitRun * const theWitRun,
const char * const operationName,
const float * const incLotSize2);
d2705 3
a2707 3
WitRun * const theWitRun,
const char * const operationName,
const double * const incLotSize2);
d2710 3
a2712 3
WitRun * const theWitRun,
const char * const operationName,
const witBoolean intExecVols);
d2715 3
a2717 3
WitRun * const theWitRun,
const char * const operationName,
const float * const lotSize2Thresh);
d2720 3
a2722 3
WitRun * const theWitRun,
const char * const operationName,
const double * const lotSize2Thresh);
d2725 3
a2727 3
WitRun * const theWitRun,
const char * const operationName,
const float * const minLotSize);
d2730 3
a2732 3
WitRun * const theWitRun,
const char * const operationName,
const double * const minLotSize);
d2735 3
a2737 3
WitRun * const theWitRun,
const char * const operationName,
const float * const minLotSize2);
d2740 3
a2742 3
WitRun * const theWitRun,
const char * const operationName,
const double * const minLotSize2);
d2745 3
a2747 3
WitRun * const     theWitRun,
const char * const operationName,
const int          objectStage);
d2750 3
a2752 3
WitRun * const     theWitRun,
const char * const operationName,
const char * const newName);
d2755 3
a2757 3
WitRun * const theWitRun,
const char * const operationName,
const witBoolean selForDel);
d2760 3
a2762 3
WitRun * const theWitRun,
const char * const operationName,
const witBoolean twoLevelLotSizes);
d2765 3
a2767 3
WitRun * const theWitRun,
const char * const operationName,
const float * const yieldRate);
d2770 3
a2772 3
WitRun * const theWitRun,
const char * const operationName,
const double * const yieldRate);
d2775 2
a2776 2
WitRun * const theWitRun,
const witAttr optInitMethod);
d2779 2
a2780 2
WitRun * const theWitRun,
const int outputPrecision);
d2783 3
a2785 3
WitRun * const theWitRun,
const char * const partName,
void * const appData);
d2788 3
a2790 3
WitRun * const theWitRun,
const char * const partName,
const witBoolean asapPipOrder);
d2793 3
a2795 3
WitRun * const theWitRun,
const char * const partName,
const witBoolean boundedLeadTimes);
d2798 3
a2800 3
WitRun * const theWitRun,
const char * const partName,
const int * const buildAheadUB);
d2803 3
a2805 3
WitRun * const theWitRun,
const char * const partName,
const witBoolean buildAsap);
d2808 3
a2810 3
WitRun * const theWitRun,
const char * const partName,
const witBoolean buildNstn);
d2813 3
a2815 3
WitRun * const     theWitRun,
const char * const partName,
const int          objectStage);
d2818 3
a2820 3
WitRun * const     theWitRun,
const char * const partName,
const char * const newName);
d2823 3
a2825 3
WitRun * const           theWitRun,
const char * const       partName,
const witBoolean * const propRtg);
d2828 3
a2830 3
WitRun * const theWitRun,
const char * const partName,
const witBoolean scrapAllowed);
d2833 3
a2835 3
WitRun * const theWitRun,
const char * const partName,
const float * const scrapCost);
d2838 3
a2840 3
WitRun * const theWitRun,
const char * const partName,
const double * const scrapCost);
d2843 3
a2845 3
WitRun * const theWitRun,
const char * const partName,
const witBoolean selForDel);
d2848 3
a2850 3
WitRun * const theWitRun,
const char * const partName,
const witBoolean singleSource);
d2853 5
a2857 5
WitRun * const theWitRun,
const char * const partName,
const float * const hardLower,
const float * const softLower,
const float * const hardUpper);
d2860 5
a2864 5
WitRun * const theWitRun,
const char * const partName,
const double * const hardLower,
const double * const softLower,
const double * const hardUpper);
d2867 3
a2869 3
WitRun * const theWitRun,
const char * const partName,
const float * const stockCost);
d2872 3
a2874 3
WitRun * const theWitRun,
const char * const partName,
const double * const stockCost);
d2877 3
a2879 3
WitRun * const theWitRun,
const char * const partName,
const float * const supplyVol);
d2882 3
a2884 3
WitRun * const theWitRun,
const char * const partName,
const double * const supplyVol);
d2887 2
a2888 2
WitRun * const theWitRun,
const witBoolean penExec);
d2891 2
a2892 2
WitRun * const theWitRun,
const witBoolean perfPegging);
d2895 2
a2896 2
WitRun * const theWitRun,
const int *    periodStage);
d2899 2
a2900 2
WitRun * const theWitRun,
const witBoolean pgdCritListMode);
d2903 2
a2904 2
WitRun * const theWitRun,
const witBoolean pipSeqFromHeur);
d2907 2
a2908 2
WitRun * const theWitRun,
const witBoolean prefHighStockSLBs);
d2911 2
a2912 2
WitRun * const theWitRun,
const float probability);
d2915 2
a2916 2
WitRun * const theWitRun,
const double probability);
d2919 2
a2920 2
WitRun * const theWitRun,
const witBoolean respectStockSLBs);
d2923 2
a2924 2
WitRun * const theWitRun,
const witBoolean roundReqVols);
d2927 2
a2928 2
WitRun * const theWitRun,
const witBoolean selSplit);
d2931 2
a2932 2
WitRun * const theWitRun,
const witBoolean selectionRecovery);
d2935 2
a2936 2
WitRun * const theWitRun,
const witBoolean skipFailures);
d2939 2
a2940 2
WitRun * const theWitRun,
const char * const solverLogFileName);
d2943 2
a2944 2
WitRun * const   theWitRun,
const witBoolean stageByObject);
d2947 2
a2948 2
WitRun * const   theWitRun,
const witBoolean stochMode);
d2951 2
a2952 2
WitRun * const theWitRun,
const witBoolean stockReallocation);
d2955 5
a2959 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
void * const appData);
d2962 5
a2966 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
const float * const consRate);
d2969 5
a2973 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
const double * const consRate);
d2976 5
a2980 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
const int earliestPeriod);
d2983 5
a2987 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
const float execPenalty);
d2990 5
a2994 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
const double execPenalty);
d2997 5
a3001 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
const witBoolean expAllowed);
d3004 5
a3008 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
const float expNetAversion);
d3011 5
a3015 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
const double expNetAversion);
d3018 5
a3022 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
const float falloutRate);
d3025 5
a3029 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
const double falloutRate);
d3032 5
a3036 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
const witBoolean intSubVols);
d3039 5
a3043 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
const int latestPeriod);
d3046 5
a3050 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
const witBoolean mrpNetAllowed);
d3053 5
a3057 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
const witBoolean netAllowed);
d3060 5
a3064 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
const float * const offset);
d3067 5
a3071 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
const double * const offset);
d3074 5
a3078 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
const float * routingShare);
d3081 5
a3085 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
const double * routingShare);
d3088 5
a3092 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
const witBoolean selForDel);
d3095 5
a3099 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
const float * const subCost);
d3102 5
a3106 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
const double * const subCost);
d3109 5
a3113 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
const float * const subVol);
d3116 5
a3120 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
const double * const subVol);
d3123 2
a3124 2
WitRun * const theWitRun,
const witBoolean tieBreakPropRt);
d3127 2
a3128 2
WitRun * const theWitRun,
const char * const title);
d3131 2
a3132 2
WitRun * const theWitRun,
const witBoolean truncOffsets);
d3135 2
a3136 2
WitRun * const theWitRun,
const witBoolean twoWayMultiExec);
d3139 2
a3140 2
WitRun * const theWitRun,
const witBoolean useFocusHorizons);
d3143 2
a3144 2
WitRun * const theWitRun,
const witBoolean userHeurStart);
d3147 2
a3148 2
WitRun * const theWitRun,
const float wbounds);
d3151 2
a3152 2
WitRun * const theWitRun,
const double wbounds);
d3155 2
a3156 2
WitRun * const theWitRun,
const witBoolean wit34Compatible);
d3159 1
a3159 1
WitRun * const theWitRun);
d3162 1
a3162 1
WitRun * const theWitRun);
d3165 1
a3165 1
WitRun * const theWitRun);
d3168 1
a3168 1
WitRun * const theWitRun);
d3171 1
a3171 1
WitRun * const theWitRun);
d3174 4
a3177 4
WitRun * const theWitRun,
const char * const fileName,
const witFileFormat fileFormat,
const int maxListLen);
d3180 2
a3181 2
WitRun * const theWitRun,
const char * const fileName);
d3184 3
a3186 3
WitRun * const theWitRun,
const char * const fileName,
const witFileFormat fileFormat);
d3189 3
a3191 3
WitRun * const theWitRun,
const char * const fileName,
const witFileFormat fileFormat);
d3194 3
a3196 3
WitRun * const theWitRun,
const char * const fileName,
const witFileFormat fileFormat);
d3205 4
a3208 4
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
int * fallout);
d3211 4
a3214 4
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
witBoolean * propRouting);
d3217 4
a3220 4
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
float * usageRate);
d3223 4
a3226 4
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
float * usageTime);
d3229 4
a3232 4
WitRun * const theWitRun,
const char * const producingOperationName,
const int bopEntryIndex,
witBoolean * byProduct);
d3235 4
a3238 4
WitRun * const theWitRun,
const char * const producingOperationName,
const int bopEntryIndex,
float * prodRate);
d3241 2
a3242 2
WitRun * const theWitRun,
witBoolean * buildWhenEmpty);
d3245 4
a3248 4
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
int * buildAheadLimit);
d3251 4
a3254 4
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
int * * buildAheadUB);
d3257 4
a3260 4
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
float * * obj1CumShipReward);
d3263 4
a3266 4
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
double * * obj1CumShipReward);
d3269 4
a3272 4
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
float * * obj1ShipReward);
d3275 4
a3278 4
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
double * * obj1ShipReward);
d3281 4
a3284 4
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
witBoolean * prefBuildAhead);
d3287 4
a3290 4
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
int * shipLateLimit);
d3293 2
a3294 2
WitRun * const theWitRun,
int * hashTableSize);
d3297 2
a3298 2
WitRun * const theWitRun,
witBoolean * localBuildAhead);
d3301 2
a3302 2
WitRun * const theWitRun,
witBoolean * localMultiExec);
d3305 2
a3306 2
WitRun * const theWitRun,
int * objChoice);
d3309 3
a3311 3
WitRun * const theWitRun,
float * objValue,
float * boundsValue);
d3314 3
a3316 3
WitRun * const theWitRun,
double * objValue,
double * boundsValue);
d3319 3
a3321 3
WitRun * const theWitRun,
const char * const operationName,
float * * obj1ExecCost);
d3324 3
a3326 3
WitRun * const theWitRun,
const char * const operationName,
double * * obj1ExecCost);
d3329 3
a3331 3
WitRun * const theWitRun,
const char * const operationName,
int * * yield);
d3334 3
a3336 3
WitRun * const theWitRun,
const char * const partName,
int * buildAheadLimit);
d3339 3
a3341 3
WitRun * const theWitRun,
const char * const partName,
float * * cycleTime);
d3344 3
a3346 3
WitRun * const theWitRun,
const char * const partName,
float * * incLotSize);
d3349 3
a3351 3
WitRun * const theWitRun,
const char * const partName,
float * * minLotSize);
d3354 3
a3356 3
WitRun * const theWitRun,
const char * const partName,
float * * mrpProdVol);
d3359 3
a3361 3
WitRun * const theWitRun,
const char * const producedPartName,
int * nBomEntries);
d3364 3
a3366 3
WitRun * const theWitRun,
const char * const partName,
float * * obj1ProdCost);
d3369 3
a3371 3
WitRun * const theWitRun,
const char * const partName,
float * * obj1ScrapCost);
d3374 3
a3376 3
WitRun * const theWitRun,
const char * const partName,
double * * obj1ScrapCost);
d3379 3
a3381 3
WitRun * const theWitRun,
const char * const partName,
float * * obj1StockCost);
d3384 3
a3386 3
WitRun * const theWitRun,
const char * const partName,
double * * obj1StockCost);
d3389 5
a3393 5
WitRun * const theWitRun,
const char * const partName,
float * * hardLower,
float * * softLower,
float * * hardUpper);
d3396 3
a3398 3
WitRun * const theWitRun,
const char * const partName,
witBoolean * propRouting);
d3401 3
a3403 3
WitRun * const theWitRun,
const char * const partName,
int * * yield);
d3406 2
a3407 2
WitRun * const theWitRun,
witBoolean * stockRealloc);
d3410 5
a3414 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
int * fallout);
d3417 5
a3421 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
float * * obj1SubCost);
d3424 5
a3428 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
double * * obj1SubCost);
d3431 5
a3435 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
float * * prodVol);
d3438 5
a3442 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
float * usageRate);
d3445 1
a3445 1
WitRun * const theWitRun);
d3448 4
a3451 4
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int fallout);
d3454 4
a3457 4
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const witBoolean propRouting);
d3460 4
a3463 4
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const float usageRate);
d3466 4
a3469 4
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const float usageTime);
d3472 4
a3475 4
WitRun * const theWitRun,
const char * const producingOperationName,
const int bopEntryIndex,
const witBoolean byProduct);
d3478 4
a3481 4
WitRun * const theWitRun,
const char * const producingOperationName,
const int bopEntryIndex,
const float prodRate);
d3484 2
a3485 2
WitRun * const theWitRun,
const witBoolean buildWhenEmpty);
d3488 4
a3491 4
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
const int buildAheadLimit);
d3494 4
a3497 4
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
const int * buildAheadUB);
d3500 4
a3503 4
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
const float * const obj1CumShipReward);
d3506 4
a3509 4
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
const double * const obj1CumShipReward);
d3512 4
a3515 4
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
const float * const obj1ShipReward);
d3518 4
a3521 4
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
const double * const obj1ShipReward);
d3524 4
a3527 4
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
const witBoolean prefBuildAhead);
d3530 4
a3533 4
WitRun * const theWitRun,
const char * const demandedPartName,
const char * const demandName,
const int shipLateLimit);
d3536 2
a3537 2
WitRun * const theWitRun,
const int hashTableSize);
d3540 2
a3541 2
WitRun * const theWitRun,
const witBoolean localBuildAhead);
d3544 2
a3545 2
WitRun * const theWitRun,
const witBoolean localMultiExec);
d3548 2
a3549 2
WitRun * const theWitRun,
const int objChoice);
d3552 3
a3554 3
WitRun * const theWitRun,
const char * const operationName,
const float * const obj1ExecCost);
d3557 3
a3559 3
WitRun * const theWitRun,
const char * const operationName,
const double * const obj1ExecCost);
d3562 3
a3564 3
WitRun * const theWitRun,
const char * const operationName,
const int * const yield);
d3567 3
a3569 3
WitRun * const theWitRun,
const char * const partName,
const int buildAheadLimit);
d3572 3
a3574 3
WitRun * const theWitRun,
const char * const partName,
const float * const cycleTime);
d3577 3
a3579 3
WitRun * const theWitRun,
const char * const partName,
const float * const incLotSize);
d3582 3
a3584 3
WitRun * const theWitRun,
const char * const partName,
const float * const minLotSize);
d3587 3
a3589 3
WitRun * const theWitRun,
const char * const partName,
const float * const obj1ProdCost);
d3592 3
a3594 3
WitRun * const theWitRun,
const char * const partName,
const float * const obj1ScrapCost);
d3597 3
a3599 3
WitRun * const theWitRun,
const char * const partName,
const double * const obj1ScrapCost);
d3602 3
a3604 3
WitRun * const theWitRun,
const char * const partName,
const float * const obj1StockCost);
d3607 3
a3609 3
WitRun * const theWitRun,
const char * const partName,
const double * const obj1StockCost);
d3612 5
a3616 5
WitRun * const theWitRun,
const char * const partName,
const float * const hardLower,
const float * const softLower,
const float * const hardUpper);
d3619 3
a3621 3
WitRun * const theWitRun,
const char * const partName,
const float * const prodVol);
d3624 3
a3626 3
WitRun * const theWitRun,
const char * const partName,
const witBoolean propRouting);
d3629 3
a3631 3
WitRun * const theWitRun,
const char * const partName,
const int * const yield);
d3634 2
a3635 2
WitRun * const theWitRun,
const witBoolean stockRealloc);
d3638 5
a3642 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
const int fallout);
d3645 5
a3649 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
const float * const obj1SubCost);
d3652 5
a3656 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
const double * const obj1SubCost);
d3659 5
a3663 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
const float * const prodVol);
d3666 5
a3670 5
WitRun * const theWitRun,
const char * const consumingOperationName,
const int bomEntryIndex,
const int subsBomEntryIndex,
const float usageRate);
d3673 3
a3675 3
WitRun * const theWitRun,
const char * const fileName,
const witFileFormat fileFormat);
d3682 3
a3684 3
WitRun * const theWitRun,
int            argc,
char *         argv[]);
d3687 1
a3687 1
WitRun * const theWitRun);
d3690 4
a3693 4
WitRun * const theWitRun,
const char * const producingOperationName,
const int bopEntryIndex,
witBoolean * meSelSplit);
d3696 2
a3697 2
WitRun * const theWitRun,
witBoolean *   devMode);
d3700 2
a3701 2
WitRun * const theWitRun,
witBoolean * newPipPggOrder);
d3704 2
a3705 2
WitRun * const theWitRun,
witBoolean * nonMrSelSplit);
d3708 3
a3710 3
WitRun * const theWitRun,
const char * const partName,
witBoolean * baSelSplit);
d3713 2
a3714 2
WitRun * const theWitRun,
witBoolean * srSelSplit);
d3717 2
a3718 2
WitRun * const     theWitRun,
const char * const theDevCmd);
d3721 1
a3721 1
WitRun * const theWitRun);
d3724 1
a3724 1
WitRun * const theWitRun);
d3727 2
a3728 2
size_t size,
void * * mem );
d3731 1
a3731 1
WitRun * const theWitRun);
d3734 1
a3734 1
WitRun * const theWitRun);
d3737 2
a3738 2
WitRun * const theWitRun,
int* isOne);
d3741 4
a3744 4
WitRun * const theWitRun,
const char * const producingOperationName,
const int bopEntryIndex,
const witBoolean meSelSplit);
d3747 2
a3748 2
WitRun * const theWitRun,
const witBoolean newPipPggOrder);
d3751 2
a3752 2
WitRun * const theWitRun,
const witBoolean nonMrSelSplit);
d3755 3
a3757 3
WitRun * const theWitRun,
const char * const partName,
const witBoolean baSelSplit);
d3760 2
a3761 2
WitRun * const theWitRun,
const witBoolean srSelSplit);
d3764 2
a3765 2
WitRun * const theWitRun,
const witBoolean wit34Allowed);
d3804 3
a3806 3
}
//
// End of extern "C"
d3820 2
a3821 2
{
public:
d3823 1
a3823 1
WitErrorExc (const char *, int, witReturnCode);
d3825 1
a3825 1
WitErrorExc (const WitErrorExc &);
d3827 1
a3827 1
~WitErrorExc ();
d3829 3
a3831 3
const char *  funcName () const;
int           mesgNum  () const;
witReturnCode retCode  () const;
d3833 1
a3833 1
private:
d3835 4
a3838 4
char                funcName_[51];
const int           mesgNum_;
const witReturnCode retCode_;
};
@


1.324
log
@Removed COIN from WIT.
@
text
@d6 1
a6 1
/* (C) COPYRIGHT International Business Machines Corp. 1993,1996,2000,2006.   */
d51 1
a51 1
   class WitRun;
d55 1
a55 1
   typedef struct WitRunStruct WitRun;
d61 2
a62 2
   extern "C"
      {
d80 3
a82 3
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const char * const consumedPartName);
d85 3
a87 3
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const char * const producedPartName);
d90 3
a92 3
   WitRun * const     theWitRun,
   const char * const theName,
   const float        theValue);
d95 3
a97 3
   WitRun * const     theWitRun,
   const char * const theName,
   const double       theValue);
d100 3
a102 3
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName);
d105 3
a107 3
   WitRun * const     theWitRun,
   const char * const theName,
   const int          theValue);
d110 2
a111 2
   WitRun * const theWitRun,
   const char * const operationName);
d114 3
a116 3
   WitRun * const theWitRun,
   const char * const partName,
   const witAttr partCategory);
d119 2
a120 2
   WitRun * const theWitRun,
   const char * const partAndOperationName);
d123 4
a126 4
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const char * const consumedPartName);
d129 1
a129 1
   WitRun * const theWitRun);
d132 5
a136 5
   WitRun * const     theWitRun,
   const char * const partName,
   const char * const demandName,
   int                shipPeriod,
   float              incShipVol);
d139 5
a143 5
   WitRun * const     theWitRun,
   const char * const partName,
   const char * const demandName,
   int                shipPeriod,
   double             incShipVol);
d146 1
a146 1
   WitRun * const theWitRun);
d149 1
a149 1
   WitRun * const theWitRun);
d152 1
a152 1
   WitRun * const theWitRun);
d155 1
a155 1
   WitRun * const theWitRun);
d158 1
a158 1
   WitRun * const theWitRun);
d161 6
a166 6
   WitRun * const     dupWitRun,
   const char * const dupOperationName,
   const int          dupBomEntryIndex,
   WitRun * const     origWitRun,
   const char * const origOperationName,
   const int          origBomEntryIndex);
d169 6
a174 6
   WitRun * const     dupWitRun,
   const char * const dupOperationName,
   const int          dupBopEntryIndex,
   WitRun * const     origWitRun,
   const char * const origOperationName,
   const int          origBopEntryIndex);
d177 2
a178 2
   WitRun * const dupWitRun,
   WitRun * const origWitRun);
d181 6
a186 6
   WitRun * const     dupWitRun,
   const char * const dupPartName,
   const char * const dupDemandName,
   WitRun * const     origWitRun,
   const char * const origPartName,
   const char * const origDemandName);
d189 4
a192 4
   WitRun * const     dupWitRun,
   const char * const dupOperationName,
   WitRun * const     origWitRun,
   const char * const origOperationName);
d195 4
a198 4
   WitRun * const     dupWitRun,
   const char * const dupPartName,
   WitRun * const     origWitRun,
   const char * const origPartName);
d201 8
a208 8
   WitRun * const     dupWitRun,
   const char * const dupOperationName,
   const int          dupBomEntryIndex,
   const int          dupSubsBomEntryIndex,
   WitRun * const     origWitRun,
   const char * const origOperationName,
   const int          origBomEntryIndex,
   const int          origSubsBomEntryIndex);
d211 1
a211 1
   WitRun * theWitRun);
d214 2
a215 2
   WitRun * const theWitRun,
   const char * const fileName);
d218 7
a224 7
   WitRun * const theWitRun,
   const int lenLists,
   const char * const * const demandedPartNameList,
   const char * const * const demandNameList,
   const int * const shipPeriodList,
   const float * const desIncVolList,
   float * * incVolList);
d227 7
a233 7
   WitRun * const theWitRun,
   const int lenLists,
   const char * const * const demandedPartNameList,
   const char * const * const demandNameList,
   const int * const shipPeriodList,
   const double * const desIncVolList,
   double * * incVolList);
d236 8
a243 8
   WitRun * const theWitRun,
   const int lenLists,
   const char * const * const demandedPartNameList,
   const char * const * const demandNameList,
   const int * const shipPeriodList,
   const float * const desIncVolList,
   float * * incVolList,
   const witBoolean * const asapMultiExecList);
d246 8
a253 8
   WitRun * const theWitRun,
   const int lenLists,
   const char * const * const demandedPartNameList,
   const char * const * const demandNameList,
   const int * const shipPeriodList,
   const double * const desIncVolList,
   double * * incVolList,
   const witBoolean * const asapMultiExecList);
d256 1
a256 1
   WitRun * const theWitRun);
d259 1
a259 1
   WitRun * const theWitRun);
d262 1
a262 1
   WitRun * const theWitRun);
d265 1
a265 1
   void * mem );
d268 1
a268 1
   WitRun * const theWitRun);
d271 2
a272 2
   WitRun * const theWitRun,
   witBoolean * accAfterSoftLB);
d275 2
a276 2
   WitRun * const theWitRun,
   witBoolean * accAfterOptImp);
d279 2
a280 2
   WitRun * const theWitRun,
   witBoolean * accelerated);
d283 2
a284 2
   WitRun * const theWitRun,
   void * * appData);
d287 2
a288 2
   WitRun * const theWitRun,
   witBoolean * autoPriority);
d291 4
a294 4
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   void * * appData);
d297 4
a300 4
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   float * * consRate);
d303 4
a306 4
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   double * * consRate);
d309 4
a312 4
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   char * * consumedPartName);
d315 4
a318 4
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   int * earliestPeriod);
d321 4
a324 4
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   float * execPenalty);
d327 4
a330 4
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   double * execPenalty);
d333 4
a336 4
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   float * falloutRate);
d339 4
a342 4
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   double * falloutRate);
d345 4
a348 4
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   int * * impactPeriod);
d351 4
a354 4
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   int * latestPeriod);
d357 4
a360 4
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   witBoolean * mandEC);
d363 4
a366 4
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   int * nSubsBomEntries);
d369 5
a373 5
   WitRun * const     theWitRun,
   const char * const consumingOperationName,
   const int          bomEntryIndex,
   const int          thePer,
   int *              nonSubVarIndex);
d376 4
a379 4
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   float * * offset);
d382 4
a385 4
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   double * * offset);
d388 4
a391 4
   WitRun * const     theWitRun,
   const char * const consumingOperationName,
   const int          bomEntryIndex,
   witBoolean * *     propRtg);
d394 4
a397 4
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   float * * routingShare);
d400 4
a403 4
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   double * * routingShare);
d406 4
a409 4
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   witBoolean * selForDel);
d412 4
a415 4
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   witBoolean * singleSource);
d418 5
a422 5
   WitRun * const     theWitRun,
   const char * const consumingOperationName,
   const int          bomEntryIndex,
   const int          thePer,
   int *              subConIndex);
d425 4
a428 4
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   void * * appData);
d431 4
a434 4
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   int * earliestPeriod);
d437 4
a440 4
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   witBoolean * expAllowed);
d443 4
a446 4
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   float * expAversion);
d449 4
a452 4
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   double * expAversion);
d455 4
a458 4
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   int * * impactPeriod);
d461 4
a464 4
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   int * latestPeriod);
d467 4
a470 4
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   float * * offset);
d473 4
a476 4
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   double * * offset);
d479 4
a482 4
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   float * * productRate);
d485 4
a488 4
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   double * * productRate);
d491 4
a494 4
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   char * * producedPartName);
d497 4
a500 4
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   float * * routingShare);
d503 4
a506 4
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   double * * routingShare);
d509 4
a512 4
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   witBoolean * selForDel);
d515 2
a516 2
   WitRun * const theWitRun,
   float *        boundsValue);
d519 2
a520 2
   WitRun * const theWitRun,
   double *       boundsValue);
d523 2
a524 2
   WitRun * const theWitRun,
   witBoolean * compPrices);
d527 2
a528 2
   WitRun * const theWitRun,
   witBoolean * computeCriticalList);
d531 2
a532 2
   WitRun * const theWitRun,
   witBoolean *   cplexEmbedded);
d535 2
a536 2
   WitRun * const theWitRun,
   float * cplexMipBound);
d539 2
a540 2
   WitRun * const theWitRun,
   double * cplexMipBound);
d543 2
a544 2
   WitRun * const theWitRun,
   float * cplexMipRelGap);
d547 2
a548 2
   WitRun * const theWitRun,
   double * cplexMipRelGap);
d551 2
a552 2
   WitRun * const theWitRun,
   float * cplexParSpecDblVal);
d555 2
a556 2
   WitRun * const theWitRun,
   double * cplexParSpecDblVal);
d559 2
a560 2
   WitRun * const theWitRun,
   int * cplexParSpecIntVal);
d563 2
a564 2
   WitRun * const theWitRun,
   char * * cplexParSpecName);
d567 2
a568 2
   WitRun * const theWitRun,
   int *          cplexStatusCode);
d571 2
a572 2
   WitRun * const theWitRun,
   char * *       cplexStatusText);
d575 4
a578 4
   WitRun * const theWitRun,
   int * lenCritList,
   char * * * critPartList,
   int * * critPeriod);
d581 2
a582 2
   WitRun * const theWitRun,
   char * * theObjName);
d585 2
a586 2
   WitRun * const theWitRun,
   int * currentScenario);
d589 4
a592 4
   WitRun * const     theWitRun,
   const char * const theName,
   witBoolean *       dblSpecExists,
   float *            theValue);
d595 4
a598 4
   WitRun * const     theWitRun,
   const char * const theName,
   witBoolean *       dblSpecExists,
   double *           theValue);
d601 4
a604 4
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   void * * appData);
d607 9
a615 9
   WitRun * const     theWitRun,
   const char * const partName,
   const char * const demandName,
   const int          shipPeriod,
   int *              lenLists,
   char * * *         operationNameList,
   int * *            bopEntryIndexList,
   int * *            execPeriodList,
   float * *          peggedVolList);
d618 9
a626 9
   WitRun * const     theWitRun,
   const char * const partName,
   const char * const demandName,
   const int          shipPeriod,
   int *              lenLists,
   char * * *         operationNameList,
   int * *            bopEntryIndexList,
   int * *            execPeriodList,
   double * *         peggedVolList);
d629 8
a636 8
   WitRun * const     theWitRun,
   const char * const partName,
   const char * const demandName,
   const int          shipPeriod,
   int *              lenLists,
   char * * *         partNameList,
   int * *            periodList,
   float * *          peggedVolList);
d639 8
a646 8
   WitRun * const     theWitRun,
   const char * const partName,
   const char * const demandName,
   const int          shipPeriod,
   int *              lenLists,
   char * * *         partNameList,
   int * *            periodList,
   double * *         peggedVolList);
d649 6
a654 6
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   float * * hardLower,
   float * * softLower,
   float * * hardUpper);
d657 6
a662 6
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   double * * hardLower,
   double * * softLower,
   double * * hardUpper);
d665 4
a668 4
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   float * * cumShipReward);
d671 4
a674 4
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   double * * cumShipReward);
d677 5
a681 5
   WitRun * const     theWitRun,
   const char * const partName,
   const char * const demandName,
   const int          thePer,
   int *              cumShipSlbConIndex);
d684 5
a688 5
   WitRun * const     theWitRun,
   const char * const partName,
   const char * const demandName,
   const int          thePer,
   int *              cumShipSlbvVarIndex);
d691 5
a695 5
   WitRun * const     theWitRun,
   const char * const partName,
   const char * const demandName,
   const int          thePer,
   int *              cumShipVarIndex);
d698 4
a701 4
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   float * * demandVol);
d704 4
a707 4
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   double * * demandVol);
d710 8
a717 8
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const int shipPeriod,
   int * lenLists,
   char * * * operationNameList,
   int * * execPeriodList,
   float * * peggedExecVolList);
d720 8
a727 8
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const int shipPeriod,
   int * lenLists,
   char * * * operationNameList,
   int * * execPeriodList,
   double * * peggedExecVolList);
d730 8
a737 8
   WitRun * const     theWitRun,
   const char * const partName,
   const char * const demandName,
   const int          shipPeriod,
   int *              lenLists,
   char * * *         operationNameList,
   int * *            execPeriodList,
   float * *          peggedExecVolList);
d740 8
a747 8
   WitRun * const     theWitRun,
   const char * const partName,
   const char * const demandName,
   const int          shipPeriod,
   int *              lenLists,
   char * * *         operationNameList,
   int * *            execPeriodList,
   double * *         peggedExecVolList);
d750 4
a753 4
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   int  * focusHorizon);
d756 4
a759 4
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   float * * fssShipVol);
d762 4
a765 4
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   double * * fssShipVol);
d768 4
a771 4
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   witBoolean * intShipVols);
d774 4
a777 4
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   int * * leadTimeUB);
d780 4
a783 4
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   int * * priority);
d786 8
a793 8
   WitRun * const     theWitRun,
   const char * const partName,
   const char * const demandName,
   const int          shipPeriod,
   int *              lenLists,
   char * * *         partNameList,
   int * *            periodList,
   float * *          peggedVolList);
d796 8
a803 8
   WitRun * const     theWitRun,
   const char * const partName,
   const char * const demandName,
   const int          shipPeriod,
   int *              lenLists,
   char * * *         partNameList,
   int * *            periodList,
   double * *         peggedVolList);
d806 4
a809 4
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   float * searchInc);
d812 4
a815 4
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   double * searchInc);
d818 4
a821 4
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   witBoolean * selForDel);
d824 5
a828 5
   WitRun * const     theWitRun,
   const char * const partName,
   const char * const demandName,
   const int          thePer,
   int *              shipConIndex);
d831 4
a834 4
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   witBoolean * shipLateAllowed);
d837 4
a840 4
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   int * * shipLateUB);
d843 4
a846 4
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   float * * shipReward);
d849 4
a852 4
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   double * * shipReward);
d855 5
a859 5
   WitRun * const     theWitRun,
   const char * const partName,
   const char * const demandName,
   const int          thePer,
   int *              shipVarIndex);
d862 4
a865 4
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   float * * shipVol);
d868 4
a871 4
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   double * * shipVol);
d874 8
a881 8
   WitRun * const     theWitRun,
   const char * const partName,
   const char * const demandName,
   const int          shipPeriod,
   int *              lenLists,
   char * * *         partNameList,
   int * *            periodList,
   float * *          peggedVolList);
d884 8
a891 8
   WitRun * const     theWitRun,
   const char * const partName,
   const char * const demandName,
   const int          shipPeriod,
   int *              lenLists,
   char * * *         partNameList,
   int * *            periodList,
   double * *         peggedVolList);
d894 10
a903 10
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const int shipPeriod,
   int * lenLists,
   char * * * operationNameList,
   int * * bomEntryIndexList,
   int * * subsBomEntryIndexList,
   int * * execPeriodList,
   float * * peggedSubVolList);
d906 10
a915 10
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const int shipPeriod,
   int * lenLists,
   char * * * operationNameList,
   int * * bomEntryIndexList,
   int * * subsBomEntryIndexList,
   int * * execPeriodList,
   double * * peggedSubVolList);
d918 10
a927 10
   WitRun * const     theWitRun,
   const char * const partName,
   const char * const demandName,
   const int          shipPeriod,
   int *              lenLists,
   char * * *         operationNameList,
   int * *            bomEntryIndexList,
   int * *            subsBomEntryIndexList,
   int * *            execPeriodList,
   float * *          peggedSubVolList);
d930 10
a939 10
   WitRun * const     theWitRun,
   const char * const partName,
   const char * const demandName,
   const int          shipPeriod,
   int *              lenLists,
   char * * *         operationNameList,
   int * *            bomEntryIndexList,
   int * *            subsBomEntryIndexList,
   int * *            execPeriodList,
   double * *         peggedSubVolList);
d942 8
a949 8
   WitRun * const     theWitRun,
   const char * const partName,
   const char * const demandName,
   const int          shipPeriod,
   int *              lenLists,
   char * * *         partNameList,
   int * *            periodList,
   float * *          peggedVolList);
d952 8
a959 8
   WitRun * const     theWitRun,
   const char * const partName,
   const char * const demandName,
   const int          shipPeriod,
   int *              lenLists,
   char * * *         partNameList,
   int * *            periodList,
   double * *         peggedVolList);
d962 2
a963 2
   WitRun * const theWitRun,
   int * equitablity);
d966 2
a967 2
   WitRun * const theWitRun,
   witBoolean * execEmptyBom);
d970 2
a971 2
   WitRun * const theWitRun,
   float * expCutoff);
d974 2
a975 2
   WitRun * const theWitRun,
   double * expCutoff);
d978 4
a981 4
   WitRun * const theWitRun,
   int *          lenLists,
   char * * *     partNameList,
   char * * *     operationNameList);
d984 2
a985 2
   WitRun * const theWitRun,
   witBoolean *   extOptActive);
d988 3
a990 3
   WitRun * const theWitRun,
   int * *        indices,
   int *          len);
d993 11
a1003 11
   WitRun * const theWitRun,
   int *          numcols,
   int *          numrows,
   int * *        start,
   int * *        index,
   float * *      value,
   float * *      collb,
   float * *      colub,
   float * *      obj,
   float * *      rowlb,
   float * *      rowub);
d1006 11
a1016 11
   WitRun * const theWitRun,
   int *          numcols,
   int *          numrows,
   int * *        start,
   int * *        index,
   double * *     value,
   double * *     collb,
   double * *     colub,
   double * *     obj,
   double * *     rowlb,
   double * *     rowub);
d1019 2
a1020 2
   WitRun * const theWitRun,
   witBoolean * feasible);
d1023 4
a1026 4
   WitRun * const theWitRun,
   int *          lenList,
   char * * *     partList,
   float * * *    shortageVolList);
d1029 4
a1032 4
   WitRun * const theWitRun,
   int *          lenList,
   char * * *     partList,
   double * * *   shortageVolList);
d1035 2
a1036 2
   WitRun * const theWitRun,
   witBoolean * forcedMultiEq);
d1039 2
a1040 2
   WitRun * const theWitRun,
   witBoolean * heurAllocActive);
d1043 2
a1044 2
   WitRun * const theWitRun,
   witBoolean * highPrecisionWD);
d1047 2
a1048 2
   WitRun * const theWitRun,
   int * independentOffsets);
d1051 4
a1054 4
   WitRun * const     theWitRun,
   const char * const theName,
   witBoolean *       intSpecExists,
   int *              theValue);
d1057 2
a1058 2
   WitRun * const theWitRun,
   float * lotSizeTol);
d1061 2
a1062 2
   WitRun * const theWitRun,
   double * lotSizeTol);
d1065 2
a1066 2
   WitRun * const theWitRun,
   FILE * * mesgFile);
d1069 2
a1070 2
   WitRun * const theWitRun,
   char * * mesgFileAccessMode);
d1073 2
a1074 2
   WitRun * const theWitRun,
   char * * mesgFileName);
d1077 3
a1079 3
   WitRun * const theWitRun,
   const int messageNumber,
   witBoolean * mesgPrintMunber);
d1082 3
a1084 3
   WitRun * const theWitRun,
   const int messageNumber,
   witBoolean * mesgStopRunning);
d1087 3
a1089 3
   WitRun * const theWitRun,
   const int messageNumber,
   witBoolean * mesgThrowErrorExc);
d1092 3
a1094 3
   WitRun * const theWitRun,
   const int messageNumber,
   int * mesgTimesPrint);
d1097 2
a1098 2
   WitRun * const theWitRun,
   witBoolean * minimalExcess);
d1101 2
a1102 2
   WitRun * const theWitRun,
   witBoolean * mipMode);
d1105 2
a1106 2
   WitRun * const theWitRun,
   witBoolean * modHeurAlloc);
d1109 2
a1110 2
   WitRun * const theWitRun,
   witBoolean * multiExec);
d1113 2
a1114 2
   WitRun * const theWitRun,
   witBoolean * multiObjMode);
d1117 2
a1118 2
   WitRun * const theWitRun,
   float * multiObjTol);
d1121 2
a1122 2
   WitRun * const theWitRun,
   double * multiObjTol);
d1125 2
a1126 2
   WitRun * const theWitRun,
   witBoolean * multiRoute);
d1129 2
a1130 2
   WitRun * const theWitRun,
   int * nPeriods);
d1133 2
a1134 2
   WitRun * const theWitRun,
   int * nScenarios);
d1137 2
a1138 2
   WitRun * const theWitRun,
   witBoolean * nstnResidual);
d1141 3
a1143 3
   WitRun * const theWitRun,
   char * * consumingOperationName,
   int * bomEntryIndex);
d1146 3
a1148 3
   WitRun * const theWitRun,
   char * * producingOperationName,
   int * bopEntryIndex);
d1151 3
a1153 3
   WitRun * const theWitRun,
   char * * demandedPartName,
   char * * demandName);
d1156 2
a1157 2
   WitRun * const theWitRun,
   char * * operationName);
d1160 2
a1161 2
   WitRun * const theWitRun,
   char * * partName);
d1164 2
a1165 2
   WitRun * const theWitRun,
   witAttr * objItrState);
d1168 4
a1171 4
   WitRun * const theWitRun,
   char * * consumingOperationName,
   int * bomEntryIndex,
   int * subsBomEntryIndex);
d1174 2
a1175 2
   WitRun * const theWitRun,
   float *        objValue);
d1178 2
a1179 2
   WitRun * const theWitRun,
   double *       objValue);
d1182 3
a1184 3
   WitRun * const theWitRun,
   int  *         lenList,
   char * * *     objectiveList);
d1187 2
a1188 2
   WitRun * const theWitRun,
   char * *       objectiveListSpec);
d1191 2
a1192 2
   WitRun * const theWitRun,
   int * objectiveRank);
d1195 3
a1197 3
   WitRun * const theWitRun,
   const char * const operationName,
   void * * appData);
d1200 5
a1204 5
   WitRun * const theWitRun,
   const char * const operationName,
   float * * hardLower,
   float * * softLower,
   float * * hardUpper);
d1207 5
a1211 5
   WitRun * const theWitRun,
   const char * const operationName,
   double * * hardLower,
   double * * softLower,
   double * * hardUpper);
d1214 3
a1216 3
   WitRun * const theWitRun,
   const char * const operationName,
   float * * execCost);
d1219 3
a1221 3
   WitRun * const theWitRun,
   const char * const operationName,
   double * * execCost);
d1224 3
a1226 3
   WitRun * const theWitRun,
   const char * const operationName,
   float * execPenalty);
d1229 3
a1231 3
   WitRun * const theWitRun,
   const char * const operationName,
   double * execPenalty);
d1234 4
a1237 4
   WitRun * const     theWitRun,
   const char * const operationName,
   const int          thePer,
   int *              execSlbConIndex);
d1240 4
a1243 4
   WitRun * const     theWitRun,
   const char * const operationName,
   const int          thePer,
   int *              execSlbvVarIndex);
d1246 4
a1249 4
   WitRun * const     theWitRun,
   const char * const operationName,
   const int          thePer,
   int *              execVarIndex);
d1252 3
a1254 3
   WitRun * const theWitRun,
   const char * const operationName,
   float * * execVol);
d1257 3
a1259 3
   WitRun * const theWitRun,
   const char * const operationName,
   double * * execVol);
d1262 3
a1264 3
   WitRun * const theWitRun,
   const char * const operationName,
   witBoolean * * executable);
d1267 3
a1269 3
   WitRun * const theWitRun,
   const char * const operationNameParm,
   witBoolean * exists);
d1272 3
a1274 3
   WitRun * const theWitRun,
   const char * const operationName,
   float * * fssExecVol);
d1277 3
a1279 3
   WitRun * const theWitRun,
   const char * const operationName,
   double * * fssExecVol);
d1282 3
a1284 3
   WitRun * const theWitRun,
   const char * const operationName,
   float * * incLotSize);
d1287 3
a1289 3
   WitRun * const theWitRun,
   const char * const operationName,
   double * * incLotSize);
d1292 3
a1294 3
   WitRun * const theWitRun,
   const char * const operationName,
   float * * incLotSize2);
d1297 3
a1299 3
   WitRun * const theWitRun,
   const char * const operationName,
   double * * incLotSize2);
d1302 3
a1304 3
   WitRun * const theWitRun,
   const char * const operationName,
   witBoolean * intExecVols);
d1307 3
a1309 3
   WitRun * const theWitRun,
   const char * const operationName,
   float * * lotSize2Thresh);
d1312 3
a1314 3
   WitRun * const theWitRun,
   const char * const operationName,
   double * * lotSize2Thresh);
d1317 3
a1319 3
   WitRun * const theWitRun,
   const char * const operationName,
   float * * minLotSize);
d1322 3
a1324 3
   WitRun * const theWitRun,
   const char * const operationName,
   double * * minLotSize);
d1327 3
a1329 3
   WitRun * const theWitRun,
   const char * const operationName,
   float * * minLotSize2);
d1332 3
a1334 3
   WitRun * const theWitRun,
   const char * const operationName,
   double * * minLotSize2);
d1337 3
a1339 3
   WitRun * const theWitRun,
   const char * const operationName,
   float * * mrpExecVol);
d1342 3
a1344 3
   WitRun * const theWitRun,
   const char * const operationName,
   double * * mrpExecVol);
d1347 3
a1349 3
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   int * nBomEntries);
d1352 3
a1354 3
   WitRun * const theWitRun,
   const char * const producingOperationName,
   int * nBopEntries);
d1357 3
a1359 3
   WitRun * const     theWitRun,
   const char * const operationName,
   int *              objectStage);
d1362 3
a1364 3
   WitRun * const theWitRun,
   const char * const operationName,
   witBoolean * selForDel);
d1367 3
a1369 3
   WitRun * const theWitRun,
   int * lenOperationList,
   char * * * operationList);
d1372 3
a1374 3
   WitRun * const theWitRun,
   const char * const operationName,
   witBoolean * twoLevelLotSizes);
d1377 3
a1379 3
   WitRun * const theWitRun,
   const char * const operationName,
   float * * yieldRate);
d1382 3
a1384 3
   WitRun * const theWitRun,
   const char * const operationName,
   double * * yieldRate);
d1387 2
a1388 2
   WitRun * const theWitRun,
   witAttr * optInitMethod);
d1391 2
a1392 2
   WitRun * const theWitRun,
   int * outputPrecision);
d1395 3
a1397 3
   WitRun * const theWitRun,
   const char * const partName,
   void * * appData);
d1400 3
a1402 3
   WitRun * const theWitRun,
   const char * const partName,
   witBoolean * asapPipOrder);
d1405 4
a1408 4
   WitRun * const theWitRun,
   const char * const partName,
   int * lenList,
   char * * * partNameList);
d1411 3
a1413 3
   WitRun * const theWitRun,
   const char * const partName,
   witBoolean * boundedLeadTimes);
d1416 3
a1418 3
   WitRun * const theWitRun,
   const char * const partName,
   int * * buildAheadUB);
d1421 3
a1423 3
   WitRun * const theWitRun,
   const char * const partName,
   witBoolean * buildAsap);
d1426 3
a1428 3
   WitRun * const theWitRun,
   const char * const partName,
   witBoolean * buildNstn);
d1431 3
a1433 3
   WitRun * const theWitRun,
   const char * const partName,
   witAttr * category);
d1436 3
a1438 3
   WitRun * const theWitRun,
   const char * const partName,
   float * * consVol);
d1441 3
a1443 3
   WitRun * const theWitRun,
   const char * const partName,
   double * * consVol);
d1446 5
a1450 5
   WitRun * const theWitRun,
   const char * const partName,
   const int consIndex,
   char * * consumingOperationName,
   int * bomEntryIndex);
d1453 6
a1458 6
   WitRun * const theWitRun,
   const char * const partName,
   const int consIndex,
   char * * consumingOperationName,
   int * bomEntryIndex,
   int * subsBomEntryIndex);
d1461 4
a1464 4
   WitRun * const theWitRun,
   const char * const demandedPartName,
   int * lenDemandList,
   char * * * demandList);
d1467 3
a1469 3
   WitRun * const theWitRun,
   const char * const partName,
   float * * excessVol);
d1472 3
a1474 3
   WitRun * const theWitRun,
   const char * const partName,
   double * * excessVol);
d1477 3
a1479 3
   WitRun * const theWitRun,
   const char * const partNameParm,
   witBoolean * exists);
d1482 3
a1484 3
   WitRun * const theWitRun,
   const char * const partName,
   float * * shortageVol);
d1487 3
a1489 3
   WitRun * const theWitRun,
   const char * const partName,
   double * * shortageVol);
d1492 3
a1494 3
   WitRun * const theWitRun,
   const char * const partName,
   float * * mrpConsVol);
d1497 3
a1499 3
   WitRun * const theWitRun,
   const char * const partName,
   double * * mrpConsVol);
d1502 3
a1504 3
   WitRun * const theWitRun,
   const char * const partName,
   float * * mrpExcessVol);
d1507 3
a1509 3
   WitRun * const theWitRun,
   const char * const partName,
   double * * mrpExcessVol);
d1512 3
a1514 3
   WitRun * const theWitRun,
   const char * const partName,
   float * * mrpResidualVol);
d1517 3
a1519 3
   WitRun * const theWitRun,
   const char * const partName,
   double * * mrpResidualVol);
d1522 3
a1524 3
   WitRun * const theWitRun,
   const char * const partName,
   int * nConsumingBomEntries);
d1527 3
a1529 3
   WitRun * const theWitRun,
   const char * const partName,
   int * nConsumingSubsBomEntries);
d1532 3
a1534 3
   WitRun * const theWitRun,
   const char * const partName,
   int * nProducingBopEntries);
d1537 3
a1539 3
   WitRun * const     theWitRun,
   const char * const partName,
   int *              objectStage);
d1542 3
a1544 3
   WitRun * const theWitRun,
   const char * const partName,
   float * * prodVol);
d1547 3
a1549 3
   WitRun * const theWitRun,
   const char * const partName,
   double * * prodVol);
d1552 5
a1556 5
   WitRun * const theWitRun,
   const char * const partName,
   const int prodIndex,
   char * * producingOperationName,
   int * bopEntryIndex);
d1559 3
a1561 3
   WitRun * const     theWitRun,
   const char * const partName,
   witBoolean * *     propRtg);
d1564 3
a1566 3
   WitRun * const theWitRun,
   const char * const partName,
   float * * reqVol);
d1569 3
a1571 3
   WitRun * const theWitRun,
   const char * const partName,
   double * * reqVol);
d1574 3
a1576 3
   WitRun * const theWitRun,
   const char * const partName,
   float * * residualVol);
d1579 3
a1581 3
   WitRun * const theWitRun,
   const char * const partName,
   double * * residualVol);
d1584 4
a1587 4
   WitRun * const     theWitRun,
   const char * const partName,
   const int          thePer,
   int *              resourceConIndex);
d1590 3
a1592 3
   WitRun * const theWitRun,
   const char * const partName,
   witBoolean * scrapAllowed);
d1595 3
a1597 3
   WitRun * const theWitRun,
   const char * const partName,
   float * * scrapCost);
d1600 3
a1602 3
   WitRun * const theWitRun,
   const char * const partName,
   double * * scrapCost);
d1605 4
a1608 4
   WitRun * const     theWitRun,
   const char * const partName,
   const int          thePer,
   int *              scrapVarIndex);
d1611 3
a1613 3
   WitRun * const theWitRun,
   const char * const partName,
   float * * scrapVol);
d1616 3
a1618 3
   WitRun * const theWitRun,
   const char * const partName,
   double * * scrapVol);
d1621 3
a1623 3
   WitRun * const theWitRun,
   const char * const partName,
   witBoolean * selForDel);
d1626 3
a1628 3
   WitRun * const theWitRun,
   const char * const partName,
   float * * shadowPrice);
d1631 3
a1633 3
   WitRun * const theWitRun,
   const char * const partName,
   double * * shadowPrice);
d1636 3
a1638 3
   WitRun * const theWitRun,
   const char * const partName,
   witBoolean * singleSource);
d1641 5
a1645 5
   WitRun * const theWitRun,
   const char * const partName,
   float * * hardLower,
   float * * softLower,
   float * * hardUpper);
d1648 5
a1652 5
   WitRun * const theWitRun,
   const char * const partName,
   double * * hardLower,
   double * * softLower,
   double * * hardUpper);
d1655 3
a1657 3
   WitRun * const theWitRun,
   const char * const partName,
   float * * stockCost);
d1660 3
a1662 3
   WitRun * const theWitRun,
   const char * const partName,
   double * * stockCost);
d1665 4
a1668 4
   WitRun * const     theWitRun,
   const char * const partName,
   const int          thePer,
   int *              stockSlbConIndex);
d1671 4
a1674 4
   WitRun * const     theWitRun,
   const char * const partName,
   const int          thePer,
   int *              stockSlbvVarIndex);
d1677 4
a1680 4
   WitRun * const     theWitRun,
   const char * const partName,
   const int          thePer,
   int *              stockVarIndex);
d1683 3
a1685 3
   WitRun * const theWitRun,
   const char * const partName,
   float * * stockVol);
d1688 3
a1690 3
   WitRun * const theWitRun,
   const char * const partName,
   double * * stockVol);
d1693 3
a1695 3
   WitRun * const theWitRun,
   const char * const partName,
   float * * supplyVol);
d1698 3
a1700 3
   WitRun * const theWitRun,
   const char * const partName,
   double * * supplyVol);
d1703 3
a1705 3
   WitRun * const theWitRun,
   int * lenPartList,
   char * * * partList);
d1708 2
a1709 2
   WitRun * const theWitRun,
   witBoolean * penExec);
d1712 2
a1713 2
   WitRun * const theWitRun,
   witBoolean * perfPegging);
d1716 2
a1717 2
   WitRun * const theWitRun,
   int * *        periodStage);
d1720 7
a1726 7
   WitRun * const theWitRun,
   int *          lenLists,
   char * * *     critPartNameList,
   int * *        critPerList,
   char * * *     demPartNameList,
   char * * *     demandNameList,
   int * *        shipPerList);
d1729 2
a1730 2
   WitRun * const theWitRun,
   witBoolean * pgdCritListMode);
d1733 2
a1734 2
   WitRun * const theWitRun,
   witBoolean *   pipExists);
d1737 6
a1742 6
   WitRun * const theWitRun,
   int *          lenLists,
   char * * *     partNameList,
   char * * *     demandNameList,
   int * *        shipPerList,
   float * *      incShipVolList);
d1745 6
a1750 6
   WitRun * const theWitRun,
   int *          lenLists,
   char * * *     partNameList,
   char * * *     demandNameList,
   int * *        shipPerList,
   double * *     incShipVolList);
d1753 2
a1754 2
   WitRun * const theWitRun,
   witBoolean * pipSeqFromHeur);
d1757 2
a1758 2
   WitRun * const theWitRun,
   witBoolean * postprocessed);
d1761 2
a1762 2
   WitRun * const theWitRun,
   witBoolean * prefHighStockSLBs);
d1765 2
a1766 2
   WitRun * const theWitRun,
   witBoolean * preprocessed);
d1769 2
a1770 2
   WitRun * const theWitRun,
   float * probability);
d1773 2
a1774 2
   WitRun * const theWitRun,
   double * probability);
d1777 2
a1778 2
   WitRun * const theWitRun,
   witBoolean * respectStockSLBs);
d1781 2
a1782 2
   WitRun * const theWitRun,
   witBoolean * roundReqVols);
d1785 2
a1786 2
   WitRun * const theWitRun,
   witBoolean * selSplit);
d1789 2
a1790 2
   WitRun * const theWitRun,
   witBoolean * selectionRecovery);
d1793 2
a1794 2
   WitRun * const theWitRun,
   witBoolean * skipFailures);
d1797 2
a1798 2
   WitRun * const theWitRun,
   char * * solverLogFileName);
d1801 2
a1802 2
   WitRun * const theWitRun,
   witBoolean *   stageByObject);
d1805 2
a1806 2
   WitRun * const theWitRun,
   witBoolean *   stochMode);
d1809 2
a1810 2
   WitRun * const theWitRun,
   witBoolean *   stochSolnMode);
d1813 2
a1814 2
   WitRun * const theWitRun,
   witBoolean * stockReallocation);
d1817 5
a1821 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   void * * appData);
d1824 5
a1828 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   float * * consRate);
d1831 5
a1835 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   double * * consRate);
d1838 5
a1842 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   char  * * consumedPart);
d1845 5
a1849 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   int * earliestPeriod);
d1852 5
a1856 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   float * execPenalty);
d1859 5
a1863 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   double * execPenalty);
d1866 5
a1870 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   witBoolean * expAllowed);
d1873 5
a1877 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   float * expNetAversion);
d1880 5
a1884 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   double * expNetAversion);
d1887 5
a1891 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   float * falloutRate);
d1894 5
a1898 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   double * falloutRate);
d1901 5
a1905 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   float * * fssSubVol);
d1908 5
a1912 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   double * * fssSubVol);
d1915 5
a1919 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   int * * impactPeriod);
d1922 5
a1926 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   witBoolean * intSubVols);
d1929 5
a1933 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   int * latestPeriod);
d1936 5
a1940 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   witBoolean * mrpNetAllowed);
d1943 5
a1947 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   float * * mrpSubVol);
d1950 5
a1954 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   double * * mrpSubVol);
d1957 5
a1961 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   witBoolean * netAllowed);
d1964 5
a1968 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   float * * offset);
d1971 5
a1975 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   double * * offset);
d1978 5
a1982 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   float * * routingShare);
d1985 5
a1989 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   double * * routingShare);
d1992 5
a1996 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   witBoolean * selForDel);
d1999 5
a2003 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   float * * subCost);
d2006 5
a2010 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   double * * subCost);
d2013 6
a2018 6
   WitRun * const     theWitRun,
   const char * const consumingOperationName,
   const int          bomEntryIndex,
   const int          subsBomEntryIndex,
   const int          thePer,
   int *              subVarIndex);
d2021 5
a2025 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   float * * subVol);
d2028 5
a2032 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   double * * subVol);
d2035 2
a2036 2
   WitRun * const theWitRun,
   witBoolean * tieBreakPropRt);
d2039 2
a2040 2
   WitRun * const theWitRun,
   char * * title);
d2043 2
a2044 2
   WitRun * const theWitRun,
   witBoolean * truncOffsets);
d2047 2
a2048 2
   WitRun * const theWitRun,
   witBoolean * twoWayMultiExec);
d2051 2
a2052 2
   WitRun * const theWitRun,
   witBoolean * focusHorizons);
d2055 2
a2056 2
   WitRun * const theWitRun,
   witBoolean * userHeurStart);
d2059 2
a2060 2
   WitRun * const theWitRun,
   float * wbounds);
d2063 2
a2064 2
   WitRun * const theWitRun,
   double * wbounds);
d2067 2
a2068 2
   WitRun * const theWitRun,
   witBoolean * wit34Compatible);
d2071 1
a2071 1
   WitRun * const theWitRun);
d2074 6
a2079 6
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const int shipPeriod,
   const float desIncVol,
   float * incVol);
d2082 6
a2087 6
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const int shipPeriod,
   const double desIncVol,
   double * incVol);
d2090 7
a2096 7
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const int shipPeriod,
   const float desIncVol,
   float * incVol,
   witBoolean asapMultiExec);
d2099 7
a2105 7
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const int shipPeriod,
   const double desIncVol,
   double * incVol,
   witBoolean asapMultiExec);
d2108 1
a2108 1
   WitRun * const theWitRun);
d2111 1
a2111 1
   WitRun * const theWitRun);
d2114 1
a2114 1
   WitRun * * theWitRunPtr);
d2117 1
a2117 1
   WitRun * const theWitRun);
d2120 1
a2120 1
   WitRun * const theWitRun);
d2123 1
a2123 1
   WitRun * const theWitRun);
d2126 1
a2126 1
   WitRun * const theWitRun);
d2129 2
a2130 2
   WitRun * const theWitRun,
   const char * const mesgFileName);
d2133 1
a2133 1
   WitRun * const theWitRun);
d2136 2
a2137 2
   WitRun * const theWitRun,
   const witBoolean accAfterSoftLB);
d2140 2
a2141 2
   WitRun * const theWitRun,
   const witBoolean accAfterOptImp);
d2144 2
a2145 2
   WitRun * const theWitRun,
   void * const appData);
d2148 2
a2149 2
   WitRun * const theWitRun,
   const witBoolean autoPriority);
d2152 4
a2155 4
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   void * const appData);
d2158 4
a2161 4
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const float * const consRate);
d2164 4
a2167 4
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const double * const consRate);
d2170 4
a2173 4
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int earliestPeriod);
d2176 4
a2179 4
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const float execPenalty);
d2182 4
a2185 4
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const double execPenalty);
d2188 4
a2191 4
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const float falloutRate);
d2194 4
a2197 4
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const double falloutRate);
d2200 4
a2203 4
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int latestPeriod);
d2206 4
a2209 4
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const witBoolean mandEC);
d2212 4
a2215 4
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const float * const offset);
d2218 4
a2221 4
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const double * const offset);
d2224 4
a2227 4
   WitRun * const           theWitRun,
   const char * const       operationName,
   const int                bomEntryIndex,
   const witBoolean * const propRtg);
d2230 4
a2233 4
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const float * routingShare);
d2236 4
a2239 4
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const double * routingShare);
d2242 4
a2245 4
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const witBoolean selForDel);
d2248 4
a2251 4
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const witBoolean singleSource);
d2254 4
a2257 4
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   void * const appData);
d2260 4
a2263 4
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   const int earliestPeriod);
d2266 4
a2269 4
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   const witBoolean expAllowed);
d2272 4
a2275 4
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   const float expAversion);
d2278 4
a2281 4
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   const double expAversion);
d2284 4
a2287 4
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   const int latestPeriod);
d2290 4
a2293 4
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   const float * const offset);
d2296 4
a2299 4
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   const double * const offset);
d2302 4
a2305 4
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   const float * const productRate);
d2308 4
a2311 4
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   const double * const productRate);
d2314 4
a2317 4
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   const float * routingShare);
d2320 4
a2323 4
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   const double * routingShare);
d2326 4
a2329 4
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   const witBoolean selForDel);
d2332 2
a2333 2
   WitRun * const theWitRun,
   const witBoolean compPrices);
d2336 2
a2337 2
   WitRun * const theWitRun,
   const witBoolean computeCriticalList);
d2340 2
a2341 2
   WitRun * const theWitRun,
   const float cplexParSpecDblVal);
d2344 2
a2345 2
   WitRun * const theWitRun,
   const double cplexParSpecDblVal);
d2348 2
a2349 2
   WitRun * const theWitRun,
   const int      cplexParSpecIntVal);
d2352 2
a2353 2
   WitRun * const theWitRun,
   const char * const cplexParSpecName);
d2356 2
a2357 2
   WitRun * const theWitRun,
   const char * const theObjName);
d2360 2
a2361 2
   WitRun * const theWitRun,
   const int currentScenario);
d2364 4
a2367 4
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   void * const appData);
d2370 6
a2375 6
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const float * const hardLower,
   const float * const softLower,
   const float * const hardUpper);
d2378 6
a2383 6
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const double * const hardLower,
   const double * const softLower,
   const double * const hardUpper);
d2386 4
a2389 4
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const float * const cumShipReward);
d2392 4
a2395 4
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const double * const cumShipReward);
d2398 4
a2401 4
   WitRun * const     theWitRun,
   const char * const partName,
   const char * const demandName,
   const char * const newName);
d2404 4
a2407 4
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const float * const iDemandVol);
d2410 4
a2413 4
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const double * const iDemandVol);
d2416 4
a2419 4
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const int  focusHorizon);
d2422 4
a2425 4
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const float * const  fssShipVol);
d2428 4
a2431 4
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const double * const  fssShipVol);
d2434 4
a2437 4
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const witBoolean intShipVols);
d2440 4
a2443 4
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const int * leadTimeUB);
d2446 4
a2449 4
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const int * const priority);
d2452 4
a2455 4
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const float searchInc);
d2458 4
a2461 4
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const double searchInc);
d2464 4
a2467 4
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const witBoolean selForDel);
d2470 4
a2473 4
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const witBoolean shipLateAllowed);
d2476 4
a2479 4
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const int * shipLateUB);
d2482 4
a2485 4
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const float * const shipReward);
d2488 4
a2491 4
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const double * const shipReward);
d2494 4
a2497 4
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const float * const shipVol);
d2500 4
a2503 4
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const double * const shipVol);
d2506 2
a2507 2
   WitRun * const theWitRun,
   const int equitablity);
d2510 2
a2511 2
   WitRun * const theWitRun,
   const witBoolean execEmptyBom);
d2514 2
a2515 2
   WitRun * const theWitRun,
   const float expCutoff);
d2518 2
a2519 2
   WitRun * const theWitRun,
   const double expCutoff);
d2522 2
a2523 2
   WitRun * const      theWitRun,
   const float * const colsol);
d2526 2
a2527 2
   WitRun * const       theWitRun,
   const double * const colsol);
d2530 2
a2531 2
   WitRun * const theWitRun,
   const witBoolean forcedMultiEq);
d2534 2
a2535 2
   WitRun * const theWitRun,
   const witBoolean highPrecisionWD);
d2538 2
a2539 2
   WitRun * const theWitRun,
   const witBoolean independentOffsets);
d2542 2
a2543 2
   WitRun * const theWitRun,
   const float lotSizeTol);
d2546 2
a2547 2
   WitRun * const theWitRun,
   const double lotSizeTol);
d2550 3
a2552 3
   WitRun * const theWitRun,
   const witBoolean quiet,
   const char * const mesgFileAccessMode);
d2555 3
a2557 3
   WitRun * const theWitRun,
   const witBoolean quiet,
   const char * const fileName);
d2560 4
a2563 4
   WitRun * const theWitRun,
   const witBoolean quiet,
   const int messageNumber,
   const witBoolean mesgPrintMunber);
d2566 4
a2569 4
   WitRun * const theWitRun,
   const witBoolean quiet,
   const int messageNumber,
   const witBoolean mesgStopRunning);
d2572 4
a2575 4
   WitRun * const theWitRun,
   const witBoolean quiet,
   const int messageNumber,
   const witBoolean mesgThrowErrorExc);
d2578 4
a2581 4
   WitRun * const theWitRun,
   const witBoolean quiet,
   const int messageNumber,
   const int mesgTimesPrint);
d2584 2
a2585 2
   WitRun * const theWitRun,
   const witBoolean minimalExcess);
d2588 2
a2589 2
   WitRun * const theWitRun,
   const witBoolean mipMode);
d2592 2
a2593 2
   WitRun * const theWitRun,
   const witBoolean modHeurAlloc);
d2596 2
a2597 2
   WitRun * const theWitRun,
   const witBoolean multiExec);
d2600 2
a2601 2
   WitRun * const theWitRun,
   const witBoolean multiObjMode);
d2604 2
a2605 2
   WitRun * const theWitRun,
   const float multiObjTol);
d2608 2
a2609 2
   WitRun * const theWitRun,
   const double multiObjTol);
d2612 2
a2613 2
   WitRun * const theWitRun,
   const witBoolean multiRoute);
d2616 2
a2617 2
   WitRun * const theWitRun,
   const int nPeriods);
d2620 2
a2621 2
   WitRun * const theWitRun,
   const int nScenarios);
d2624 2
a2625 2
   WitRun * const theWitRun,
   const witBoolean nstnResidual);
d2628 3
a2630 3
   WitRun * const             theWitRun,
   const int                  lenList,
   const char * const * const objectiveList);
d2633 2
a2634 2
   WitRun * const     theWitRun,
   const char * const objectiveListSpec);
d2637 2
a2638 2
   WitRun * const theWitRun,
   const int      objectiveRank);
d2641 3
a2643 3
   WitRun * const theWitRun,
   const char * const operationName,
   void * const appData);
d2646 5
a2650 5
   WitRun * const theWitRun,
   const char * const operationName,
   const float * const hardLower,
   const float * const softLower,
   const float * const hardUpper);
d2653 5
a2657 5
   WitRun * const theWitRun,
   const char * const operationName,
   const double * const hardLower,
   const double * const softLower,
   const double * const hardUpper);
d2660 3
a2662 3
   WitRun * const theWitRun,
   const char * const operationName,
   const float * const execCost);
d2665 3
a2667 3
   WitRun * const theWitRun,
   const char * const operationName,
   const double * const execCost);
d2670 3
a2672 3
   WitRun * const theWitRun,
   const char * const operationName,
   const float execPenalty);
d2675 3
a2677 3
   WitRun * const theWitRun,
   const char * const operationName,
   const double execPenalty);
d2680 3
a2682 3
   WitRun * const theWitRun,
   const char * const operationName,
   const float * const execVol);
d2685 3
a2687 3
   WitRun * const theWitRun,
   const char * const operationName,
   const double * const execVol);
d2690 3
a2692 3
   WitRun * const theWitRun,
   const char * const operationName,
   const float * const incLotSize);
d2695 3
a2697 3
   WitRun * const theWitRun,
   const char * const operationName,
   const double * const incLotSize);
d2700 3
a2702 3
   WitRun * const theWitRun,
   const char * const operationName,
   const float * const incLotSize2);
d2705 3
a2707 3
   WitRun * const theWitRun,
   const char * const operationName,
   const double * const incLotSize2);
d2710 3
a2712 3
   WitRun * const theWitRun,
   const char * const operationName,
   const witBoolean intExecVols);
d2715 3
a2717 3
   WitRun * const theWitRun,
   const char * const operationName,
   const float * const lotSize2Thresh);
d2720 3
a2722 3
   WitRun * const theWitRun,
   const char * const operationName,
   const double * const lotSize2Thresh);
d2725 3
a2727 3
   WitRun * const theWitRun,
   const char * const operationName,
   const float * const minLotSize);
d2730 3
a2732 3
   WitRun * const theWitRun,
   const char * const operationName,
   const double * const minLotSize);
d2735 3
a2737 3
   WitRun * const theWitRun,
   const char * const operationName,
   const float * const minLotSize2);
d2740 3
a2742 3
   WitRun * const theWitRun,
   const char * const operationName,
   const double * const minLotSize2);
d2745 3
a2747 3
   WitRun * const     theWitRun,
   const char * const operationName,
   const int          objectStage);
d2750 3
a2752 3
   WitRun * const     theWitRun,
   const char * const operationName,
   const char * const newName);
d2755 3
a2757 3
   WitRun * const theWitRun,
   const char * const operationName,
   const witBoolean selForDel);
d2760 3
a2762 3
   WitRun * const theWitRun,
   const char * const operationName,
   const witBoolean twoLevelLotSizes);
d2765 3
a2767 3
   WitRun * const theWitRun,
   const char * const operationName,
   const float * const yieldRate);
d2770 3
a2772 3
   WitRun * const theWitRun,
   const char * const operationName,
   const double * const yieldRate);
d2775 2
a2776 2
   WitRun * const theWitRun,
   const witAttr optInitMethod);
d2779 2
a2780 2
   WitRun * const theWitRun,
   const int outputPrecision);
d2783 3
a2785 3
   WitRun * const theWitRun,
   const char * const partName,
   void * const appData);
d2788 3
a2790 3
   WitRun * const theWitRun,
   const char * const partName,
   const witBoolean asapPipOrder);
d2793 3
a2795 3
   WitRun * const theWitRun,
   const char * const partName,
   const witBoolean boundedLeadTimes);
d2798 3
a2800 3
   WitRun * const theWitRun,
   const char * const partName,
   const int * const buildAheadUB);
d2803 3
a2805 3
   WitRun * const theWitRun,
   const char * const partName,
   const witBoolean buildAsap);
d2808 3
a2810 3
   WitRun * const theWitRun,
   const char * const partName,
   const witBoolean buildNstn);
d2813 3
a2815 3
   WitRun * const     theWitRun,
   const char * const partName,
   const int          objectStage);
d2818 3
a2820 3
   WitRun * const     theWitRun,
   const char * const partName,
   const char * const newName);
d2823 3
a2825 3
   WitRun * const           theWitRun,
   const char * const       partName,
   const witBoolean * const propRtg);
d2828 3
a2830 3
   WitRun * const theWitRun,
   const char * const partName,
   const witBoolean scrapAllowed);
d2833 3
a2835 3
   WitRun * const theWitRun,
   const char * const partName,
   const float * const scrapCost);
d2838 3
a2840 3
   WitRun * const theWitRun,
   const char * const partName,
   const double * const scrapCost);
d2843 3
a2845 3
   WitRun * const theWitRun,
   const char * const partName,
   const witBoolean selForDel);
d2848 3
a2850 3
   WitRun * const theWitRun,
   const char * const partName,
   const witBoolean singleSource);
d2853 5
a2857 5
   WitRun * const theWitRun,
   const char * const partName,
   const float * const hardLower,
   const float * const softLower,
   const float * const hardUpper);
d2860 5
a2864 5
   WitRun * const theWitRun,
   const char * const partName,
   const double * const hardLower,
   const double * const softLower,
   const double * const hardUpper);
d2867 3
a2869 3
   WitRun * const theWitRun,
   const char * const partName,
   const float * const stockCost);
d2872 3
a2874 3
   WitRun * const theWitRun,
   const char * const partName,
   const double * const stockCost);
d2877 3
a2879 3
   WitRun * const theWitRun,
   const char * const partName,
   const float * const supplyVol);
d2882 3
a2884 3
   WitRun * const theWitRun,
   const char * const partName,
   const double * const supplyVol);
d2887 2
a2888 2
   WitRun * const theWitRun,
   const witBoolean penExec);
d2891 2
a2892 2
   WitRun * const theWitRun,
   const witBoolean perfPegging);
d2895 2
a2896 2
   WitRun * const theWitRun,
   const int *    periodStage);
d2899 2
a2900 2
   WitRun * const theWitRun,
   const witBoolean pgdCritListMode);
d2903 2
a2904 2
   WitRun * const theWitRun,
   const witBoolean pipSeqFromHeur);
d2907 2
a2908 2
   WitRun * const theWitRun,
   const witBoolean prefHighStockSLBs);
d2911 2
a2912 2
   WitRun * const theWitRun,
   const float probability);
d2915 2
a2916 2
   WitRun * const theWitRun,
   const double probability);
d2919 2
a2920 2
   WitRun * const theWitRun,
   const witBoolean respectStockSLBs);
d2923 2
a2924 2
   WitRun * const theWitRun,
   const witBoolean roundReqVols);
d2927 2
a2928 2
   WitRun * const theWitRun,
   const witBoolean selSplit);
d2931 2
a2932 2
   WitRun * const theWitRun,
   const witBoolean selectionRecovery);
d2935 2
a2936 2
   WitRun * const theWitRun,
   const witBoolean skipFailures);
d2939 2
a2940 2
   WitRun * const theWitRun,
   const char * const solverLogFileName);
d2943 2
a2944 2
   WitRun * const   theWitRun,
   const witBoolean stageByObject);
d2947 2
a2948 2
   WitRun * const   theWitRun,
   const witBoolean stochMode);
d2951 2
a2952 2
   WitRun * const theWitRun,
   const witBoolean stockReallocation);
d2955 5
a2959 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   void * const appData);
d2962 5
a2966 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const float * const consRate);
d2969 5
a2973 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const double * const consRate);
d2976 5
a2980 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const int earliestPeriod);
d2983 5
a2987 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const float execPenalty);
d2990 5
a2994 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const double execPenalty);
d2997 5
a3001 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const witBoolean expAllowed);
d3004 5
a3008 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const float expNetAversion);
d3011 5
a3015 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const double expNetAversion);
d3018 5
a3022 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const float falloutRate);
d3025 5
a3029 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const double falloutRate);
d3032 5
a3036 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const witBoolean intSubVols);
d3039 5
a3043 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const int latestPeriod);
d3046 5
a3050 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const witBoolean mrpNetAllowed);
d3053 5
a3057 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const witBoolean netAllowed);
d3060 5
a3064 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const float * const offset);
d3067 5
a3071 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const double * const offset);
d3074 5
a3078 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const float * routingShare);
d3081 5
a3085 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const double * routingShare);
d3088 5
a3092 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const witBoolean selForDel);
d3095 5
a3099 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const float * const subCost);
d3102 5
a3106 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const double * const subCost);
d3109 5
a3113 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const float * const subVol);
d3116 5
a3120 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const double * const subVol);
d3123 2
a3124 2
   WitRun * const theWitRun,
   const witBoolean tieBreakPropRt);
d3127 2
a3128 2
   WitRun * const theWitRun,
   const char * const title);
d3131 2
a3132 2
   WitRun * const theWitRun,
   const witBoolean truncOffsets);
d3135 2
a3136 2
   WitRun * const theWitRun,
   const witBoolean twoWayMultiExec);
d3139 2
a3140 2
   WitRun * const theWitRun,
   const witBoolean useFocusHorizons);
d3143 2
a3144 2
   WitRun * const theWitRun,
   const witBoolean userHeurStart);
d3147 2
a3148 2
   WitRun * const theWitRun,
   const float wbounds);
d3151 2
a3152 2
   WitRun * const theWitRun,
   const double wbounds);
d3155 2
a3156 2
   WitRun * const theWitRun,
   const witBoolean wit34Compatible);
d3159 1
a3159 1
   WitRun * const theWitRun);
d3162 1
a3162 1
   WitRun * const theWitRun);
d3165 1
a3165 1
   WitRun * const theWitRun);
d3168 1
a3168 1
   WitRun * const theWitRun);
d3171 1
a3171 1
   WitRun * const theWitRun);
d3174 4
a3177 4
   WitRun * const theWitRun,
   const char * const fileName,
   const witFileFormat fileFormat,
   const int maxListLen);
d3180 2
a3181 2
   WitRun * const theWitRun,
   const char * const fileName);
d3184 3
a3186 3
   WitRun * const theWitRun,
   const char * const fileName,
   const witFileFormat fileFormat);
d3189 3
a3191 3
   WitRun * const theWitRun,
   const char * const fileName,
   const witFileFormat fileFormat);
d3194 3
a3196 3
   WitRun * const theWitRun,
   const char * const fileName,
   const witFileFormat fileFormat);
d3205 4
a3208 4
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   int * fallout);
d3211 4
a3214 4
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   witBoolean * propRouting);
d3217 4
a3220 4
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   float * usageRate);
d3223 4
a3226 4
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   float * usageTime);
d3229 4
a3232 4
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   witBoolean * byProduct);
d3235 4
a3238 4
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   float * prodRate);
d3241 2
a3242 2
   WitRun * const theWitRun,
   witBoolean * buildWhenEmpty);
d3245 4
a3248 4
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   int * buildAheadLimit);
d3251 4
a3254 4
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   int * * buildAheadUB);
d3257 4
a3260 4
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   float * * obj1CumShipReward);
d3263 4
a3266 4
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   double * * obj1CumShipReward);
d3269 4
a3272 4
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   float * * obj1ShipReward);
d3275 4
a3278 4
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   double * * obj1ShipReward);
d3281 4
a3284 4
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   witBoolean * prefBuildAhead);
d3287 4
a3290 4
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   int * shipLateLimit);
d3293 2
a3294 2
   WitRun * const theWitRun,
   int * hashTableSize);
d3297 2
a3298 2
   WitRun * const theWitRun,
   witBoolean * localBuildAhead);
d3301 2
a3302 2
   WitRun * const theWitRun,
   witBoolean * localMultiExec);
d3305 2
a3306 2
   WitRun * const theWitRun,
   int * objChoice);
d3309 3
a3311 3
   WitRun * const theWitRun,
   float * objValue,
   float * boundsValue);
d3314 3
a3316 3
   WitRun * const theWitRun,
   double * objValue,
   double * boundsValue);
d3319 3
a3321 3
   WitRun * const theWitRun,
   const char * const operationName,
   float * * obj1ExecCost);
d3324 3
a3326 3
   WitRun * const theWitRun,
   const char * const operationName,
   double * * obj1ExecCost);
d3329 3
a3331 3
   WitRun * const theWitRun,
   const char * const operationName,
   int * * yield);
d3334 3
a3336 3
   WitRun * const theWitRun,
   const char * const partName,
   int * buildAheadLimit);
d3339 3
a3341 3
   WitRun * const theWitRun,
   const char * const partName,
   float * * cycleTime);
d3344 3
a3346 3
   WitRun * const theWitRun,
   const char * const partName,
   float * * incLotSize);
d3349 3
a3351 3
   WitRun * const theWitRun,
   const char * const partName,
   float * * minLotSize);
d3354 3
a3356 3
   WitRun * const theWitRun,
   const char * const partName,
   float * * mrpProdVol);
d3359 3
a3361 3
   WitRun * const theWitRun,
   const char * const producedPartName,
   int * nBomEntries);
d3364 3
a3366 3
   WitRun * const theWitRun,
   const char * const partName,
   float * * obj1ProdCost);
d3369 3
a3371 3
   WitRun * const theWitRun,
   const char * const partName,
   float * * obj1ScrapCost);
d3374 3
a3376 3
   WitRun * const theWitRun,
   const char * const partName,
   double * * obj1ScrapCost);
d3379 3
a3381 3
   WitRun * const theWitRun,
   const char * const partName,
   float * * obj1StockCost);
d3384 3
a3386 3
   WitRun * const theWitRun,
   const char * const partName,
   double * * obj1StockCost);
d3389 5
a3393 5
   WitRun * const theWitRun,
   const char * const partName,
   float * * hardLower,
   float * * softLower,
   float * * hardUpper);
d3396 3
a3398 3
   WitRun * const theWitRun,
   const char * const partName,
   witBoolean * propRouting);
d3401 3
a3403 3
   WitRun * const theWitRun,
   const char * const partName,
   int * * yield);
d3406 2
a3407 2
   WitRun * const theWitRun,
   witBoolean * stockRealloc);
d3410 5
a3414 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   int * fallout);
d3417 5
a3421 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   float * * obj1SubCost);
d3424 5
a3428 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   double * * obj1SubCost);
d3431 5
a3435 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   float * * prodVol);
d3438 5
a3442 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   float * usageRate);
d3445 1
a3445 1
   WitRun * const theWitRun);
d3448 4
a3451 4
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int fallout);
d3454 4
a3457 4
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const witBoolean propRouting);
d3460 4
a3463 4
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const float usageRate);
d3466 4
a3469 4
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const float usageTime);
d3472 4
a3475 4
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   const witBoolean byProduct);
d3478 4
a3481 4
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   const float prodRate);
d3484 2
a3485 2
   WitRun * const theWitRun,
   const witBoolean buildWhenEmpty);
d3488 4
a3491 4
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const int buildAheadLimit);
d3494 4
a3497 4
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const int * buildAheadUB);
d3500 4
a3503 4
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const float * const obj1CumShipReward);
d3506 4
a3509 4
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const double * const obj1CumShipReward);
d3512 4
a3515 4
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const float * const obj1ShipReward);
d3518 4
a3521 4
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const double * const obj1ShipReward);
d3524 4
a3527 4
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const witBoolean prefBuildAhead);
d3530 4
a3533 4
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const int shipLateLimit);
d3536 2
a3537 2
   WitRun * const theWitRun,
   const int hashTableSize);
d3540 2
a3541 2
   WitRun * const theWitRun,
   const witBoolean localBuildAhead);
d3544 2
a3545 2
   WitRun * const theWitRun,
   const witBoolean localMultiExec);
d3548 2
a3549 2
   WitRun * const theWitRun,
   const int objChoice);
d3552 3
a3554 3
   WitRun * const theWitRun,
   const char * const operationName,
   const float * const obj1ExecCost);
d3557 3
a3559 3
   WitRun * const theWitRun,
   const char * const operationName,
   const double * const obj1ExecCost);
d3562 3
a3564 3
   WitRun * const theWitRun,
   const char * const operationName,
   const int * const yield);
d3567 3
a3569 3
   WitRun * const theWitRun,
   const char * const partName,
   const int buildAheadLimit);
d3572 3
a3574 3
   WitRun * const theWitRun,
   const char * const partName,
   const float * const cycleTime);
d3577 3
a3579 3
   WitRun * const theWitRun,
   const char * const partName,
   const float * const incLotSize);
d3582 3
a3584 3
   WitRun * const theWitRun,
   const char * const partName,
   const float * const minLotSize);
d3587 3
a3589 3
   WitRun * const theWitRun,
   const char * const partName,
   const float * const obj1ProdCost);
d3592 3
a3594 3
   WitRun * const theWitRun,
   const char * const partName,
   const float * const obj1ScrapCost);
d3597 3
a3599 3
   WitRun * const theWitRun,
   const char * const partName,
   const double * const obj1ScrapCost);
d3602 3
a3604 3
   WitRun * const theWitRun,
   const char * const partName,
   const float * const obj1StockCost);
d3607 3
a3609 3
   WitRun * const theWitRun,
   const char * const partName,
   const double * const obj1StockCost);
d3612 5
a3616 5
   WitRun * const theWitRun,
   const char * const partName,
   const float * const hardLower,
   const float * const softLower,
   const float * const hardUpper);
d3619 3
a3621 3
   WitRun * const theWitRun,
   const char * const partName,
   const float * const prodVol);
d3624 3
a3626 3
   WitRun * const theWitRun,
   const char * const partName,
   const witBoolean propRouting);
d3629 3
a3631 3
   WitRun * const theWitRun,
   const char * const partName,
   const int * const yield);
d3634 2
a3635 2
   WitRun * const theWitRun,
   const witBoolean stockRealloc);
d3638 5
a3642 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const int fallout);
d3645 5
a3649 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const float * const obj1SubCost);
d3652 5
a3656 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const double * const obj1SubCost);
d3659 5
a3663 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const float * const prodVol);
d3666 5
a3670 5
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const float usageRate);
d3673 3
a3675 3
   WitRun * const theWitRun,
   const char * const fileName,
   const witFileFormat fileFormat);
d3682 3
a3684 3
   WitRun * const theWitRun,
   int            argc,
   char *         argv[]);
d3687 1
a3687 1
   WitRun * const theWitRun);
d3690 4
a3693 4
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   witBoolean * meSelSplit);
d3696 2
a3697 2
   WitRun * const theWitRun,
   witBoolean *   devMode);
d3700 2
a3701 2
   WitRun * const theWitRun,
   witBoolean * newPipPggOrder);
d3704 2
a3705 2
   WitRun * const theWitRun,
   witBoolean * nonMrSelSplit);
d3708 3
a3710 3
   WitRun * const theWitRun,
   const char * const partName,
   witBoolean * baSelSplit);
d3713 2
a3714 2
   WitRun * const theWitRun,
   witBoolean * srSelSplit);
d3717 2
a3718 2
   WitRun * const     theWitRun,
   const char * const theDevCmd);
d3721 1
a3721 1
   WitRun * const theWitRun);
d3724 1
a3724 1
   WitRun * const theWitRun);
d3727 2
a3728 2
   size_t size,
   void * * mem );
d3731 1
a3731 1
   WitRun * const theWitRun);
d3734 1
a3734 1
   WitRun * const theWitRun);
d3737 2
a3738 2
   WitRun * const theWitRun,
   int* isOne);
d3741 4
a3744 4
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   const witBoolean meSelSplit);
d3747 2
a3748 2
   WitRun * const theWitRun,
   const witBoolean newPipPggOrder);
d3751 2
a3752 2
   WitRun * const theWitRun,
   const witBoolean nonMrSelSplit);
d3755 3
a3757 3
   WitRun * const theWitRun,
   const char * const partName,
   const witBoolean baSelSplit);
d3760 2
a3761 2
   WitRun * const theWitRun,
   const witBoolean srSelSplit);
d3764 2
a3765 2
   WitRun * const theWitRun,
   const witBoolean wit34Allowed);
d3804 3
a3806 3
     }
     //
     // End of extern "C"
d3820 2
a3821 2
   {
   public:
d3823 1
a3823 1
      WitErrorExc (const char *, int, witReturnCode);
d3825 1
a3825 1
      WitErrorExc (const WitErrorExc &);
d3827 1
a3827 1
     ~WitErrorExc ();
d3829 3
a3831 3
      const char *  funcName () const;
      int           mesgNum  () const;
      witReturnCode retCode  () const;
d3833 1
a3833 1
   private:
d3835 4
a3838 4
      char                funcName_[51];
      const int           mesgNum_;
      const witReturnCode retCode_;
   };
@


1.323
log
@CPLEX
@
text
@a521 8
WIT_DECLSPEC witReturnCode STDCALL witGetCoinEmbedded (
   WitRun * const theWitRun,
   witBoolean *   coinEmbedded);

WIT_DECLSPEC witReturnCode STDCALL witGetCoinSelected (
   WitRun * const theWitRun,
   witBoolean * coinSelected);

a565 4
WIT_DECLSPEC witReturnCode STDCALL witGetCplexSelected (
   WitRun * const theWitRun,
   witBoolean * cplexSelected);

a2330 4
WIT_DECLSPEC witReturnCode STDCALL witSetCoinSelected (
   WitRun * const theWitRun,
   const witBoolean coinSelected);

a2354 4
WIT_DECLSPEC witReturnCode STDCALL witSetCplexSelected (
   WitRun * const theWitRun,
   const witBoolean cplexSelected);

@


1.322
log
@CPLEX
@
text
@d542 1
a542 1
WIT_DECLSPEC witReturnCode STDCALL witGetCplexObjBound (
d544 1
a544 1
   float * cplexObjBound);
d546 1
a546 1
WIT_DECLSPEC witReturnCode STDCALL witGetCplexObjBoundDbl (
d548 1
a548 1
   double * cplexObjBound);
d550 1
a550 1
WIT_DECLSPEC witReturnCode STDCALL witGetCplexObjRelGap (
d552 1
a552 1
   float * cplexObjRelGap);
d554 1
a554 1
WIT_DECLSPEC witReturnCode STDCALL witGetCplexObjRelGapDbl (
d556 1
a556 1
   double * cplexObjRelGap);
@


1.321
log
@CPLEX
@
text
@d542 1
a542 1
WIT_DECLSPEC witReturnCode STDCALL witGetCplexMipRelGap (
d544 1
a544 1
   float * cplexMipRelGap);
d546 1
a546 1
WIT_DECLSPEC witReturnCode STDCALL witGetCplexMipRelGapDbl (
d548 1
a548 1
   double * cplexMipRelGap);
d550 1
a550 1
WIT_DECLSPEC witReturnCode STDCALL witGetCplexObjBound (
d552 1
a552 1
   float * cplexObjBound);
d554 1
a554 1
WIT_DECLSPEC witReturnCode STDCALL witGetCplexObjBoundDbl (
d556 1
a556 1
   double * cplexObjBound);
@


1.320
log
@CPLEX
@
text
@d542 8
@


1.319
log
@CPLEX
@
text
@d542 8
@


1.318
log
@CPLEX
@
text
@d566 4
@


1.317
log
@CPLEX Parameters
@
text
@d562 1
a562 1
WIT_DECLSPEC witReturnCode STDCALL witGetCplexSolnStatus (
d564 1
a564 1
   int *          cplexSolnStatus);
@


1.316
log
@CPLEX Parameters
@
text
@d89 1
a89 1
WIT_DECLSPEC witReturnCode STDCALL witAddDblCpxParSpec (
d94 1
a94 1
WIT_DECLSPEC witReturnCode STDCALL witAddDblCpxParSpecDbl (
d104 1
a104 1
WIT_DECLSPEC witReturnCode STDCALL witAddIntCpxParSpec (
d148 1
a148 1
WIT_DECLSPEC witReturnCode STDCALL witClearCpxParSpecs (
d542 1
a542 1
WIT_DECLSPEC witReturnCode STDCALL witGetCplexSelected (
d544 1
a544 1
   witBoolean * cplexSelected);
d546 1
a546 1
WIT_DECLSPEC witReturnCode STDCALL witGetCpxParSpecDblVal (
d548 1
a548 1
   float * cpxParSpecDblVal);
d550 1
a550 1
WIT_DECLSPEC witReturnCode STDCALL witGetCpxParSpecDblValDbl (
d552 1
a552 1
   double * cpxParSpecDblVal);
d554 1
a554 1
WIT_DECLSPEC witReturnCode STDCALL witGetCpxParSpecIntVal (
d556 1
a556 1
   int * cpxParSpecIntVal);
d558 1
a558 1
WIT_DECLSPEC witReturnCode STDCALL witGetCpxParSpecName (
d560 1
a560 1
   char * * cpxParSpecName);
d562 1
a562 1
WIT_DECLSPEC witReturnCode STDCALL witGetCpxSolnStatus (
d564 1
a564 1
   int *          cpxSolnStatus);
d580 1
a580 1
WIT_DECLSPEC witReturnCode STDCALL witGetDblCpxParSpec (
d586 1
a586 1
WIT_DECLSPEC witReturnCode STDCALL witGetDblCpxParSpecDbl (
d1042 1
a1042 1
WIT_DECLSPEC witReturnCode STDCALL witGetIntCpxParSpec (
d2335 1
a2335 1
WIT_DECLSPEC witReturnCode STDCALL witSetCplexSelected (
d2337 1
a2337 1
   const witBoolean cplexSelected);
d2339 1
a2339 1
WIT_DECLSPEC witReturnCode STDCALL witSetCpxParSpecDblVal (
d2341 1
a2341 1
   const float cpxParSpecDblVal);
d2343 1
a2343 1
WIT_DECLSPEC witReturnCode STDCALL witSetCpxParSpecDblValDbl (
d2345 1
a2345 1
   const double cpxParSpecDblVal);
d2347 1
a2347 1
WIT_DECLSPEC witReturnCode STDCALL witSetCpxParSpecIntVal (
d2349 1
a2349 1
   const int      cpxParSpecIntVal);
d2351 1
a2351 1
WIT_DECLSPEC witReturnCode STDCALL witSetCpxParSpecName (
d2353 1
a2353 1
   const char * const cpxParSpecName);
@


1.315
log
@CPLEX Parameters
@
text
@d92 1
a92 1
   const float        theVal);
d97 1
a97 1
   const double       theVal);
d107 1
a107 1
   const int          theVal);
@


1.314
log
@CPLEX solution status
@
text
@d546 16
a1791 16
WIT_DECLSPEC witReturnCode STDCALL witGetSpecCpxParDblVal (
   WitRun * const theWitRun,
   float * specCpxParDblVal);

WIT_DECLSPEC witReturnCode STDCALL witGetSpecCpxParDblValDbl (
   WitRun * const theWitRun,
   double * specCpxParDblVal);

WIT_DECLSPEC witReturnCode STDCALL witGetSpecCpxParIntVal (
   WitRun * const theWitRun,
   int * specCpxParIntVal);

WIT_DECLSPEC witReturnCode STDCALL witGetSpecCpxParName (
   WitRun * const theWitRun,
   char * * specCpxParName);

d2339 16
a2941 16
WIT_DECLSPEC witReturnCode STDCALL witSetSpecCpxParDblVal (
   WitRun * const theWitRun,
   const float specCpxParDblVal);

WIT_DECLSPEC witReturnCode STDCALL witSetSpecCpxParDblValDbl (
   WitRun * const theWitRun,
   const double specCpxParDblVal);

WIT_DECLSPEC witReturnCode STDCALL witSetSpecCpxParIntVal (
   WitRun * const theWitRun,
   const int      specCpxParIntVal);

WIT_DECLSPEC witReturnCode STDCALL witSetSpecCpxParName (
   WitRun * const theWitRun,
   const char * const specCpxParName);

@


1.313
log
@CPLEX Solution Status
@
text
@d546 1
a546 1
WIT_DECLSPEC witReturnCode STDCALL witGetCpxStat (
d548 1
a548 1
   int *          cpxStat);
@


1.312
log
@CPLEX Parameters
@
text
@d546 4
@


1.311
log
@CPLEX Parameters
@
text
@d148 3
@


1.310
log
@CPLEX Parameters
@
text
@d557 12
@


1.309
log
@CPLEX Parameters
@
text
@d1007 6
@


1.308
log
@CPLEX Parameters
@
text
@d89 10
@


1.307
log
@CPLEX Param Specs
@
text
@d94 5
@


1.306
log
@CPLEX Param Specs.
@
text
@d1736 8
d2886 8
@


1.305
log
@CPX Param Specs
@
text
@d1736 4
d2878 4
@


1.304
log
@CPX Params
@
text
@a1071 4
WIT_DECLSPEC witReturnCode STDCALL witGetNameForCpxParam (
   WitRun * const theWitRun,
   char * * nameForCpxParam);

d1736 4
a2554 4
WIT_DECLSPEC witReturnCode STDCALL witSetNameForCpxParam (
   WitRun * const theWitRun,
   const char * const nameForCpxParam);

d2874 4
@


1.303
log
@CPLEX
@
text
@d1072 4
d2555 4
@


1.302
log
@CPLEX
@
text
@a1731 4
WIT_DECLSPEC witReturnCode STDCALL witGetSolverEmbedded (
   WitRun * const theWitRun,
   witBoolean *   solverEmbedded);

@


1.301
log
@Modifiable heuristic allocation
@
text
@d508 4
d524 4
a1735 8
WIT_DECLSPEC witReturnCode STDCALL witGetSolverIsCoin (
   WitRun * const theWitRun,
   witBoolean * solverIsCoin);

WIT_DECLSPEC witReturnCode STDCALL witGetSolverIsCplex (
   WitRun * const theWitRun,
   witBoolean * solverIsCplex);

d2271 4
d2283 4
a2869 8
WIT_DECLSPEC witReturnCode STDCALL witSetSolverIsCoin (
   WitRun * const theWitRun,
   const witBoolean solverIsCoin);

WIT_DECLSPEC witReturnCode STDCALL witSetSolverIsCplex (
   WitRun * const theWitRun,
   const witBoolean solverIsCplex);

@


1.300
log
@Heuristic Adjustment
@
text
@a971 4
WIT_DECLSPEC witReturnCode STDCALL witGetHeurAdjustEnabled (
   WitRun * const theWitRun,
   witBoolean * heurAdjustEnabled);

d1032 4
a2456 4
WIT_DECLSPEC witReturnCode STDCALL witSetHeurAdjustEnabled (
   WitRun * const theWitRun,
   const witBoolean heurAdjustEnabled);

d2515 4
@


1.299
log
@Heuristic Adjustment
@
text
@a242 3
WIT_DECLSPEC witReturnCode STDCALL witFinishHeurAdjust (
   WitRun * const theWitRun);

a971 4
WIT_DECLSPEC witReturnCode STDCALL witGetHeurAdjustActive (
   WitRun * const theWitRun,
   witBoolean * heurAdjustActive);

a3098 3
WIT_DECLSPEC witReturnCode STDCALL witStartHeurAdjust (
   WitRun * const theWitRun);

@


1.298
log
@Heuristic Adjustment
@
text
@d979 4
d2464 4
@


1.297
log
@Pause/Resume
@
text
@d243 3
d975 4
a982 4
WIT_DECLSPEC witReturnCode STDCALL witGetHeurAllocPaused (
   WitRun * const theWitRun,
   witBoolean * heurAllocPaused);

a2061 3
WIT_DECLSPEC witReturnCode STDCALL witPauseHeurAlloc (
   WitRun * const theWitRun);

d3098 3
@


1.296
log
@Pause/resume
@
text
@d2059 3
@


1.295
log
@Name change: "selection reuse" has becomne "selection recovery".
@
text
@d976 4
@


1.294
log
@Lead Time Bounds.
@
text
@d1712 1
a1712 1
WIT_DECLSPEC witReturnCode STDCALL witGetSelectionReuse (
d1714 1
a1714 1
   witBoolean * selectionReuse);
d2846 1
a2846 1
WIT_DECLSPEC witReturnCode STDCALL witSetSelectionReuse (
d2848 1
a2848 1
   const witBoolean selectionReuse);
@


1.293
log
@Bounded Lead Times
@
text
@d1334 1
a1334 1
WIT_DECLSPEC witReturnCode STDCALL witGetPartBoundedLeadTime (
d1337 1
a1337 1
   witBoolean * boundedLeadTime);
d2708 1
a2708 1
WIT_DECLSPEC witReturnCode STDCALL witSetPartBoundedLeadTime (
d2711 1
a2711 1
   const witBoolean boundedLeadTime);
@


1.292
log
@Bounded Lead Times
@
text
@d1334 1
a1334 1
WIT_DECLSPEC witReturnCode STDCALL witGetPartBoundedLeadTimes (
d1337 1
a1337 1
   witBoolean * boundedLeadTimes);
d2708 1
a2708 1
WIT_DECLSPEC witReturnCode STDCALL witSetPartBoundedLeadTimes (
d2711 1
a2711 1
   const witBoolean boundedLeadTimes);
@


1.291
log
@Bounded Lead Times
@
text
@d707 6
d2359 6
@


1.290
log
@Selection Reuse.
@
text
@d1328 5
d2696 5
@


1.289
log
@CPLEX
@
text
@d1701 4
d2824 4
@


1.288
log
@CPLEX
@
text
@d1713 4
d2828 4
@


1.287
log
@Preparing for CPLEX.
@
text
@d516 4
@


1.286
log
@Revising the build procedure.
@
text
@d1705 4
d2816 4
@


1.285
log
@Revising the build procedure.
@
text
@d1701 4
@


1.284
log
@Revising the build procedure.
@
text
@d504 4
a3564 4
WIT_DECLSPEC witReturnCode STDCALL witGetCoinEmdedded (
   WitRun * const theWitRun,
   witBoolean *   coinEmdedded);

@


1.283
log
@Revising the build process.
@
text
@d3561 4
a3585 4
WIT_DECLSPEC witReturnCode STDCALL witGetWitEmbedsCoin (
   WitRun * const theWitRun,
   witBoolean *   witEmbedsCoin);

@


1.282
log
@Multi-Obj Mode
@
text
@a3572 4
WIT_DECLSPEC witReturnCode STDCALL witGetOptImpAllowed (
   WitRun * const theWitRun,
   witBoolean *   optImpAllowed);

d3582 4
@


1.281
log
@Multi-Obj Mode
@
text
@d1100 1
a1100 1
WIT_DECLSPEC witReturnCode STDCALL witGetObjectiveSeqNo (
d1102 1
a1102 1
   int * objectiveSeqNo);
d2511 1
a2511 1
WIT_DECLSPEC witReturnCode STDCALL witSetObjectiveSeqNo (
d2513 1
a2513 1
   const int      objectiveSeqNo);
@


1.280
log
@Multi-objective mode
@
text
@d1026 8
d2478 8
@


1.279
log
@Multi-objective mode
@
text
@a1029 4
WIT_DECLSPEC witReturnCode STDCALL witGetNObjectives (
   WitRun * const theWitRun,
   int * nObjectives);

a1091 4
WIT_DECLSPEC witReturnCode STDCALL witGetObjectiveName (
   WitRun * const theWitRun,
   char * * objectiveName);

a2473 4
WIT_DECLSPEC witReturnCode STDCALL witSetNObjectives (
   WitRun * const theWitRun,
   const int nObjectives);

a2494 4
WIT_DECLSPEC witReturnCode STDCALL witSetObjectiveName (
   WitRun * const     theWitRun,
   const char * const objectiveName);

@


1.278
log
@Multi-objective mode
@
text
@d1092 4
d2503 4
@


1.277
log
@Multi-Objective Mode
@
text
@d1087 5
a1099 5
WIT_DECLSPEC witReturnCode STDCALL witGetObjectives (
   WitRun * const theWitRun,
   int  *         lenList,
   char * * *     objectiveList);

d2494 5
d2500 1
a2500 1
   WitRun * const theWitRun,
d2505 1
a2505 1
   const int objectiveSeqNo);
@


1.276
log
@Multi-Objective Mode.
@
text
@d1095 5
a3559 5
WIT_DECLSPEC witReturnCode STDCALL witGetObjectives (
   WitRun * const theWitRun,
   int  *         lenList,
   char * * *     objectiveList);

@


1.275
log
@Multi-objective mode.
@
text
@d1091 4
d2493 4
@


1.274
log
@Multi-objective mode.
@
text
@d1087 4
d2485 4
@


1.273
log
@Multi-obj mode.
@
text
@d520 1
a520 1
   char * * currentObjective);
d2225 1
a2225 1
   const char * const currentObjective);
@


1.272
log
@Multi-obj mode.
@
text
@d3539 5
@


1.271
log
@Multi-objective mode.
@
text
@d518 4
d2223 4
@


1.270
log
@Removing objective #2.
@
text
@d1026 4
d2457 4
@


1.269
log
@Removing objective #2.
@
text
@a3220 8
WIT_DECLSPEC witReturnCode STDCALL witGetPeriodsPerYear (
   WitRun * const theWitRun,
   float * periodsPerYear);

WIT_DECLSPEC witReturnCode STDCALL witGetPeriodsPerYearDbl (
   WitRun * const theWitRun,
   double * periodsPerYear);

a3448 8
WIT_DECLSPEC witReturnCode STDCALL witSetPeriodsPerYear (
   WitRun * const theWitRun,
   const float periodsPerYear);

WIT_DECLSPEC witReturnCode STDCALL witSetPeriodsPerYearDbl (
   WitRun * const theWitRun,
   const double periodsPerYear);

@


1.268
log
@Multi-obj mode.
@
text
@a3059 8
WIT_DECLSPEC witReturnCode STDCALL witGetCapCost (
   WitRun * const theWitRun,
   float * capCost);

WIT_DECLSPEC witReturnCode STDCALL witGetCapCostDbl (
   WitRun * const theWitRun,
   double * capCost);

a3071 12
WIT_DECLSPEC witReturnCode STDCALL witGetDemandGrossRev (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   float * grossRev);

WIT_DECLSPEC witReturnCode STDCALL witGetDemandGrossRevDbl (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   double * grossRev);

a3111 8
WIT_DECLSPEC witReturnCode STDCALL witGetInvCost (
   WitRun * const theWitRun,
   float * invCost);

WIT_DECLSPEC witReturnCode STDCALL witGetInvCostDbl (
   WitRun * const theWitRun,
   double * invCost);

a3119 46
WIT_DECLSPEC witReturnCode STDCALL witGetObj2Values (
   WitRun * const theWitRun,
   float * obj2RevValue,
   float * obj2InvValue,
   float * obj2ServValue,
   float * obj2SubValue);

WIT_DECLSPEC witReturnCode STDCALL witGetObj2ValuesDbl (
   WitRun * const theWitRun,
   double * obj2RevValue,
   double * obj2InvValue,
   double * obj2ServValue,
   double * obj2SubValue);

WIT_DECLSPEC witReturnCode STDCALL witGetObj2Winv (
   WitRun * const theWitRun,
   float * obj2Winv);

WIT_DECLSPEC witReturnCode STDCALL witGetObj2WinvDbl (
   WitRun * const theWitRun,
   double * obj2Winv);

WIT_DECLSPEC witReturnCode STDCALL witGetObj2Wrev (
   WitRun * const theWitRun,
   float * obj2Wrev);

WIT_DECLSPEC witReturnCode STDCALL witGetObj2WrevDbl (
   WitRun * const theWitRun,
   double * obj2Wrev);

WIT_DECLSPEC witReturnCode STDCALL witGetObj2Wserv (
   WitRun * const theWitRun,
   float * obj2Wserv);

WIT_DECLSPEC witReturnCode STDCALL witGetObj2WservDbl (
   WitRun * const theWitRun,
   double * obj2Wserv);

WIT_DECLSPEC witReturnCode STDCALL witGetObj2Wsub (
   WitRun * const theWitRun,
   float * obj2Wsub);

WIT_DECLSPEC witReturnCode STDCALL witGetObj2WsubDbl (
   WitRun * const theWitRun,
   double * obj2Wsub);

a3143 10
WIT_DECLSPEC witReturnCode STDCALL witGetOperationObj2AuxCost (
   WitRun * const theWitRun,
   const char * const operationName,
   float * obj2AuxCost);

WIT_DECLSPEC witReturnCode STDCALL witGetOperationObj2AuxCostDbl (
   WitRun * const theWitRun,
   const char * const operationName,
   double * obj2AuxCost);

a3215 10
WIT_DECLSPEC witReturnCode STDCALL witGetPartUnitCost (
   WitRun * const theWitRun,
   const char * const partName,
   float * unitCost);

WIT_DECLSPEC witReturnCode STDCALL witGetPartUnitCostDbl (
   WitRun * const theWitRun,
   const char * const partName,
   double * unitCost);

a3253 14
WIT_DECLSPEC witReturnCode STDCALL witGetSubsBomEntryObj2SubPenalty (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   float * obj2SubPenalty);

WIT_DECLSPEC witReturnCode STDCALL witGetSubsBomEntryObj2SubPenaltyDbl (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   double * obj2SubPenalty);

a3310 8
WIT_DECLSPEC witReturnCode STDCALL witSetCapCost (
   WitRun * const theWitRun,
   const float capCost);

WIT_DECLSPEC witReturnCode STDCALL witSetCapCostDbl (
   WitRun * const theWitRun,
   const double capCost);

a3322 12
WIT_DECLSPEC witReturnCode STDCALL witSetDemandGrossRev (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const float grossRev);

WIT_DECLSPEC witReturnCode STDCALL witSetDemandGrossRevDbl (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const double grossRev);

a3362 8
WIT_DECLSPEC witReturnCode STDCALL witSetInvCost (
   WitRun * const theWitRun,
   const float invCost);

WIT_DECLSPEC witReturnCode STDCALL witSetInvCostDbl (
   WitRun * const theWitRun,
   const double invCost);

a3370 32
WIT_DECLSPEC witReturnCode STDCALL witSetObj2Winv (
   WitRun * const theWitRun,
   const float obj2Winv);

WIT_DECLSPEC witReturnCode STDCALL witSetObj2WinvDbl (
   WitRun * const theWitRun,
   const double obj2Winv);

WIT_DECLSPEC witReturnCode STDCALL witSetObj2Wrev (
   WitRun * const theWitRun,
   const float obj2Wrev);

WIT_DECLSPEC witReturnCode STDCALL witSetObj2WrevDbl (
   WitRun * const theWitRun,
   const double obj2Wrev);

WIT_DECLSPEC witReturnCode STDCALL witSetObj2Wserv (
   WitRun * const theWitRun,
   const float obj2Wserv);

WIT_DECLSPEC witReturnCode STDCALL witSetObj2WservDbl (
   WitRun * const theWitRun,
   const double obj2Wserv);

WIT_DECLSPEC witReturnCode STDCALL witSetObj2Wsub (
   WitRun * const theWitRun,
   const float obj2Wsub);

WIT_DECLSPEC witReturnCode STDCALL witSetObj2WsubDbl (
   WitRun * const theWitRun,
   const double obj2Wsub);

a3384 10
WIT_DECLSPEC witReturnCode STDCALL witSetOperationObj2AuxCost (
   WitRun * const theWitRun,
   const char * const operationName,
   const float obj2AuxCost);

WIT_DECLSPEC witReturnCode STDCALL witSetOperationObj2AuxCostDbl (
   WitRun * const theWitRun,
   const char * const operationName,
   const double obj2AuxCost);

a3451 10
WIT_DECLSPEC witReturnCode STDCALL witSetPartUnitCost (
   WitRun * const theWitRun,
   const char * const partName,
   const float unitCost);

WIT_DECLSPEC witReturnCode STDCALL witSetPartUnitCostDbl (
   WitRun * const theWitRun,
   const char * const partName,
   const double unitCost);

a3489 14
WIT_DECLSPEC witReturnCode STDCALL witSetSubsBomEntryObj2SubPenalty (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const float obj2SubPenalty);

WIT_DECLSPEC witReturnCode STDCALL witSetSubsBomEntryObj2SubPenaltyDbl (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const double obj2SubPenalty);

@


1.267
log
@Removed multiThread.
@
text
@d1018 4
d2445 4
@


1.266
log
@Made WIT operate in multi-thread mode unconditionally.
The multithread attribute in no longer meaningful.
@
text
@a3139 4
WIT_DECLSPEC witReturnCode STDCALL witGetMultiThread (
   WitRun * const theWitRun,
   witBoolean *   multiThread);

a3498 4
WIT_DECLSPEC witReturnCode STDCALL witSetMultiThread (
   WitRun * const theWitRun,
   const witBoolean multiThread);

@


1.265
log
@Corrected an alpabetization error.
@
text
@a1021 4
WIT_DECLSPEC witReturnCode STDCALL witGetMultiThread (
   WitRun * const theWitRun,
   witBoolean *   multiThread);

a2444 4
WIT_DECLSPEC witReturnCode STDCALL witSetMultiThread (
   WitRun * const theWitRun,
   const witBoolean multiThread);

d3140 4
d3503 4
@


1.264
log
@Revised the format of wit.h.
@
text
@d1995 1
a1995 1
WIT_DECLSPEC witReturnCode STDCALL witPreprocess (
d1998 1
a1998 1
WIT_DECLSPEC witReturnCode STDCALL witPostprocess (
@


1.263
log
@Trivial revision
@
text
@d206 1
a206 1
   float ** incVolList);
d215 1
a215 1
   double ** incVolList);
d224 1
a224 1
   float ** incVolList,
d234 1
a234 1
   double ** incVolList,
d266 1
a266 1
   void ** appData);
d276 1
a276 1
   void ** appData);
d282 1
a282 1
   float ** consRate);
d288 1
a288 1
   double ** consRate);
d294 1
a294 1
   char ** consumedPartName);
d330 1
a330 1
   int ** impactPeriod);
d361 1
a361 1
   float ** offset);
d367 1
a367 1
   double ** offset);
d373 1
a373 1
   witBoolean **      propRtg);
d379 1
a379 1
   float ** routingShare);
d385 1
a385 1
   double ** routingShare);
d410 1
a410 1
   void ** appData);
d440 1
a440 1
   int ** impactPeriod);
d452 1
a452 1
   float ** offset);
d458 1
a458 1
   double ** offset);
d464 1
a464 1
   float ** productRate);
d470 1
a470 1
   double ** productRate);
d476 1
a476 1
   char ** producedPartName);
d482 1
a482 1
   float ** routingShare);
d488 1
a488 1
   double ** routingShare);
d515 2
a516 2
   char *** critPartList,
   int ** critPeriod);
d526 1
a526 1
   void ** appData);
d534 4
a537 4
   char ***           operationNameList,
   int **             bopEntryIndexList,
   int **             execPeriodList,
   float **           peggedVolList);
d545 4
a548 4
   char ***           operationNameList,
   int **             bopEntryIndexList,
   int **             execPeriodList,
   double **          peggedVolList);
d556 3
a558 3
   char ***           partNameList,
   int **             periodList,
   float **           peggedVolList);
d566 3
a568 3
   char ***           partNameList,
   int **             periodList,
   double **          peggedVolList);
d574 3
a576 3
   float ** hardLower,
   float ** softLower,
   float ** hardUpper);
d582 3
a584 3
   double ** hardLower,
   double ** softLower,
   double ** hardUpper);
d590 1
a590 1
   float ** cumShipReward);
d596 1
a596 1
   double ** cumShipReward);
d623 1
a623 1
   float ** demandVol);
d629 1
a629 1
   double ** demandVol);
d637 3
a639 3
   char *** operationNameList,
   int ** execPeriodList,
   float ** peggedExecVolList);
d647 3
a649 3
   char *** operationNameList,
   int ** execPeriodList,
   double ** peggedExecVolList);
d657 3
a659 3
   char ***           operationNameList,
   int **             execPeriodList,
   float **           peggedExecVolList);
d667 3
a669 3
   char ***           operationNameList,
   int **             execPeriodList,
   double **          peggedExecVolList);
d681 1
a681 1
   float ** fssShipVol);
d687 1
a687 1
   double ** fssShipVol);
d699 1
a699 1
   int ** priority);
d707 3
a709 3
   char ***           partNameList,
   int **             periodList,
   float **           peggedVolList);
d717 3
a719 3
   char ***           partNameList,
   int **             periodList,
   double **          peggedVolList);
d756 1
a756 1
   int ** shipLateUB);
d762 1
a762 1
   float ** shipReward);
d768 1
a768 1
   double ** shipReward);
d781 1
a781 1
   float ** shipVol);
d787 1
a787 1
   double ** shipVol);
d795 3
a797 3
   char ***           partNameList,
   int **             periodList,
   float **           peggedVolList);
d805 3
a807 3
   char ***           partNameList,
   int **             periodList,
   double **          peggedVolList);
d815 5
a819 5
   char *** operationNameList,
   int ** bomEntryIndexList,
   int ** subsBomEntryIndexList,
   int ** execPeriodList,
   float ** peggedSubVolList);
d827 5
a831 5
   char *** operationNameList,
   int ** bomEntryIndexList,
   int ** subsBomEntryIndexList,
   int ** execPeriodList,
   double ** peggedSubVolList);
d839 5
a843 5
   char ***           operationNameList,
   int **             bomEntryIndexList,
   int **             subsBomEntryIndexList,
   int **             execPeriodList,
   float **           peggedSubVolList);
d851 5
a855 5
   char ***           operationNameList,
   int **             bomEntryIndexList,
   int **             subsBomEntryIndexList,
   int **             execPeriodList,
   double **          peggedSubVolList);
d863 3
a865 3
   char ***           partNameList,
   int **             periodList,
   float **           peggedVolList);
d873 3
a875 3
   char ***           partNameList,
   int **             periodList,
   double **          peggedVolList);
d896 2
a897 2
   char ***       partNameList,
   char ***       operationNameList);
d905 1
a905 1
   int **         indices,
d912 8
a919 8
   int **         start,
   int **         index,
   float **       value,
   float **       collb,
   float **       colub,
   float **       obj,
   float **       rowlb,
   float **       rowub);
d925 8
a932 8
   int **         start,
   int **         index,
   double **      value,
   double **      collb,
   double **      colub,
   double **      obj,
   double **      rowlb,
   double **      rowub);
d941 2
a942 2
   char ***       partList,
   float ***      shortageVolList);
d947 2
a948 2
   char ***       partList,
   double ***     shortageVolList);
d976 1
a976 1
   FILE ** mesgFile);
d980 1
a980 1
   char ** mesgFileAccessMode);
d984 1
a984 1
   char ** mesgFileName);
d1040 1
a1040 1
   char ** consumingOperationName,
d1045 1
a1045 1
   char ** producingOperationName,
d1050 2
a1051 2
   char ** demandedPartName,
   char ** demandName);
d1055 1
a1055 1
   char ** operationName);
d1059 1
a1059 1
   char ** partName);
d1067 1
a1067 1
   char ** consumingOperationName,
d1082 1
a1082 1
   void ** appData);
d1087 3
a1089 3
   float ** hardLower,
   float ** softLower,
   float ** hardUpper);
d1094 3
a1096 3
   double ** hardLower,
   double ** softLower,
   double ** hardUpper);
d1101 1
a1101 1
   float ** execCost);
d1106 1
a1106 1
   double ** execCost);
d1139 1
a1139 1
   float ** execVol);
d1144 1
a1144 1
   double ** execVol);
d1149 1
a1149 1
   witBoolean ** executable);
d1159 1
a1159 1
   float ** fssExecVol);
d1164 1
a1164 1
   double ** fssExecVol);
d1169 1
a1169 1
   float ** incLotSize);
d1174 1
a1174 1
   double ** incLotSize);
d1179 1
a1179 1
   float ** incLotSize2);
d1184 1
a1184 1
   double ** incLotSize2);
d1194 1
a1194 1
   float ** lotSize2Thresh);
d1199 1
a1199 1
   double ** lotSize2Thresh);
d1204 1
a1204 1
   float ** minLotSize);
d1209 1
a1209 1
   double ** minLotSize);
d1214 1
a1214 1
   float ** minLotSize2);
d1219 1
a1219 1
   double ** minLotSize2);
d1224 1
a1224 1
   float ** mrpExecVol);
d1229 1
a1229 1
   double ** mrpExecVol);
d1254 1
a1254 1
   char *** operationList);
d1264 1
a1264 1
   float ** yieldRate);
d1269 1
a1269 1
   double ** yieldRate);
d1282 1
a1282 1
   void ** appData);
d1293 1
a1293 1
   char *** partNameList);
d1298 1
a1298 1
   int ** buildAheadUB);
d1318 1
a1318 1
   float ** consVol);
d1323 1
a1323 1
   double ** consVol);
d1329 1
a1329 1
   char ** consumingOperationName,
d1336 1
a1336 1
   char ** consumingOperationName,
d1344 1
a1344 1
   char *** demandList);
d1349 1
a1349 1
   float ** excessVol);
d1354 1
a1354 1
   double ** excessVol);
d1364 1
a1364 1
   float ** shortageVol);
d1369 1
a1369 1
   double ** shortageVol);
d1374 1
a1374 1
   float ** mrpConsVol);
d1379 1
a1379 1
   double ** mrpConsVol);
d1384 1
a1384 1
   float ** mrpExcessVol);
d1389 1
a1389 1
   double ** mrpExcessVol);
d1394 1
a1394 1
   float ** mrpResidualVol);
d1399 1
a1399 1
   double ** mrpResidualVol);
d1424 1
a1424 1
   float ** prodVol);
d1429 1
a1429 1
   double ** prodVol);
d1435 1
a1435 1
   char ** producingOperationName,
d1441 1
a1441 1
   witBoolean **      propRtg);
d1446 1
a1446 1
   float ** reqVol);
d1451 1
a1451 1
   double ** reqVol);
d1456 1
a1456 1
   float ** residualVol);
d1461 1
a1461 1
   double ** residualVol);
d1477 1
a1477 1
   float ** scrapCost);
d1482 1
a1482 1
   double ** scrapCost);
d1493 1
a1493 1
   float ** scrapVol);
d1498 1
a1498 1
   double ** scrapVol);
d1508 1
a1508 1
   float ** shadowPrice);
d1513 1
a1513 1
   double ** shadowPrice);
d1523 3
a1525 3
   float ** hardLower,
   float ** softLower,
   float ** hardUpper);
d1530 3
a1532 3
   double ** hardLower,
   double ** softLower,
   double ** hardUpper);
d1537 1
a1537 1
   float ** stockCost);
d1542 1
a1542 1
   double ** stockCost);
d1565 1
a1565 1
   float ** stockVol);
d1570 1
a1570 1
   double ** stockVol);
d1575 1
a1575 1
   float ** supplyVol);
d1580 1
a1580 1
   double ** supplyVol);
d1585 1
a1585 1
   char *** partList);
d1597 1
a1597 1
   int **         periodStage);
d1602 5
a1606 5
   char ***       critPartNameList,
   int **         critPerList,
   char ***       demPartNameList,
   char ***       demandNameList,
   int **         shipPerList);
d1619 4
a1622 4
   char ***       partNameList,
   char ***       demandNameList,
   int **         shipPerList,
   float **       incShipVolList);
d1627 4
a1630 4
   char ***       partNameList,
   char ***       demandNameList,
   int **         shipPerList,
   double **      incShipVolList);
d1674 1
a1674 1
   char ** solverLogFileName);
d1697 1
a1697 1
   void ** appData);
d1704 1
a1704 1
   float ** consRate);
d1711 1
a1711 1
   double ** consRate);
d1718 1
a1718 1
   char  ** consumedPart);
d1781 1
a1781 1
   float ** fssSubVol);
d1788 1
a1788 1
   double ** fssSubVol);
d1795 1
a1795 1
   int ** impactPeriod);
d1823 1
a1823 1
   float ** mrpSubVol);
d1830 1
a1830 1
   double ** mrpSubVol);
d1844 1
a1844 1
   float ** offset);
d1851 1
a1851 1
   double ** offset);
d1858 1
a1858 1
   float ** routingShare);
d1865 1
a1865 1
   double ** routingShare);
d1879 1
a1879 1
   float ** subCost);
d1886 1
a1886 1
   double ** subCost);
d1901 1
a1901 1
   float ** subVol);
d1908 1
a1908 1
   double ** subVol);
d1916 1
a1916 1
   char ** title);
d1990 1
a1990 1
   WitRun ** theWitRunPtr);
d3078 1
a3078 1
   int ** buildAheadUB);
d3096 1
a3096 1
   float ** obj1CumShipReward);
d3102 1
a3102 1
   double ** obj1CumShipReward);
d3108 1
a3108 1
   float ** obj1ShipReward);
d3114 1
a3114 1
   double ** obj1ShipReward);
d3211 1
a3211 1
   float ** obj1ExecCost);
d3216 1
a3216 1
   double ** obj1ExecCost);
d3231 1
a3231 1
   int ** yield);
d3241 1
a3241 1
   float ** cycleTime);
d3246 1
a3246 1
   float ** incLotSize);
d3251 1
a3251 1
   float ** minLotSize);
d3256 1
a3256 1
   float ** mrpProdVol);
d3266 1
a3266 1
   float ** obj1ProdCost);
d3271 1
a3271 1
   float ** obj1ScrapCost);
d3276 1
a3276 1
   double ** obj1ScrapCost);
d3281 1
a3281 1
   float ** obj1StockCost);
d3286 1
a3286 1
   double ** obj1StockCost);
d3291 3
a3293 3
   float ** hardLower,
   float ** softLower,
   float ** hardUpper);
d3313 1
a3313 1
   int ** yield);
d3339 1
a3339 1
   float ** obj1SubCost);
d3346 1
a3346 1
   double ** obj1SubCost);
d3367 1
a3367 1
   float ** prodVol);
d3766 1
a3766 1
   void ** mem );
@


1.262
log
@Implemented the undocumented "wit34Allowed" attribute.
@
text
@d669 1
a669 1
   double **           peggedExecVolList);
@


1.261
log
@Implemented witIssueFatalMesg.
@
text
@d3801 4
@


1.260
log
@Added witGetObjectValue and witGetBoundsValue.
Moved witGetObjectValues to the undocumented section.
@
text
@d3754 7
a3800 4
WIT_DECLSPEC witReturnCode STDCALL witInterpretDevCmd (
   WitRun * const     theWitRun,
   const char * const theDevCmd);

@


1.259
log
@Minor update.
@
text
@d496 5
a500 1
WIT_DECLSPEC witReturnCode STDCALL witGetBuildWhenEmpty (
d502 1
a502 1
   witBoolean * buildWhenEmpty);
d1071 1
a1071 1
WIT_DECLSPEC witReturnCode STDCALL witGetObjValues (
d1073 1
a1073 2
   float * objValue,
   float * boundsValue);
d1075 1
a1075 1
WIT_DECLSPEC witReturnCode STDCALL witGetObjValuesDbl (
d1077 1
a1077 2
   double * objValue,
   double * boundsValue);
d3056 4
d3198 10
@


1.258
log
@Object name change.
@
text
@d373 1
a373 1
   witBoolean * *     propRtg);
d892 2
a893 2
   char * * *     partNameList,
   char * * *     operationNameList);
d1439 1
a1439 1
   witBoolean * *     propRtg);
d1600 5
a1604 5
   char * * *     critPartNameList,
   int * *        critPerList,
   char * * *     demPartNameList,
   char * * *     demandNameList,
   int * *        shipPerList);
@


1.257
log
@Object name changing.
@
text
@d2251 6
@


1.256
log
@Object name changing.
@
text
@d2566 5
d2631 2
a2632 2
   const char * const oldPartName,
   const char * const newPartName);
@


1.255
log
@Moved a function to its correct alphabetic position.
@
text
@d2624 5
@


1.254
log
@Stochastic Implosion
@
text
@a141 4
WIT_DECLSPEC witReturnCode STDCALL witCopyData (
   WitRun * const dupWitRun,
   WitRun * const origWitRun);

d158 4
@


1.253
log
@Stochastic Implosion
@
text
@d514 1
a514 1
WIT_DECLSPEC witReturnCode STDCALL witGetCurScenarioIndex (
d516 1
a516 1
   int * curScenarioIndex);
d2213 1
a2213 1
WIT_DECLSPEC witReturnCode STDCALL witSetCurScenarioIndex (
d2215 1
a2215 1
   const int curScenarioIndex);
@


1.252
log
@Stochastic Implosion
@
text
@d1239 5
a1248 5
WIT_DECLSPEC witReturnCode STDCALL witGetOperationStageIndex (
   WitRun * const     theWitRun,
   const char * const operationName,
   int *              stageIndex);

d1414 5
a1517 5
WIT_DECLSPEC witReturnCode STDCALL witGetPartStageIndex (
   WitRun * const     theWitRun,
   const char * const partName,
   int *              stageIndex);

d1589 1
a1589 1
WIT_DECLSPEC witReturnCode STDCALL witGetPerStageIndex (
d1591 1
a1591 1
   int **         perStageIndex);
d1593 1
a1593 1
WIT_DECLSPEC witReturnCode STDCALL witGetPerfPegging (
d1595 1
a1595 1
   witBoolean * perfPegging);
d2561 5
a2570 5
WIT_DECLSPEC witReturnCode STDCALL witSetOperationStageIndex (
   WitRun * const     theWitRun,
   const char * const operationName,
   const int          stageIndex);

d2619 5
a2653 5
WIT_DECLSPEC witReturnCode STDCALL witSetPartStageIndex (
   WitRun * const     theWitRun,
   const char * const partName,
   const int          stageIndex);

d2692 1
a2692 1
WIT_DECLSPEC witReturnCode STDCALL witSetPerStageIndex (
d2694 1
a2694 1
   const int *    perStageIndex);
d2696 1
a2696 1
WIT_DECLSPEC witReturnCode STDCALL witSetPerfPegging (
d2698 1
a2698 1
   const witBoolean perfPegging);
@


1.251
log
@Stochastic Implosion
@
text
@d1589 4
a1677 4
WIT_DECLSPEC witReturnCode STDCALL witGetStageIndex (
   WitRun * const theWitRun,
   int **         stageIndex);

d2692 4
a2743 4
WIT_DECLSPEC witReturnCode STDCALL witSetStageIndex (
   WitRun * const theWitRun,
   const int *    stageIndex);

@


1.250
log
@witGetExpCycle
@
text
@d1672 5
a1676 1
   witBoolean * stageByObject);
d1680 1
a1680 1
   witBoolean * stochMode);
d1684 1
a1684 1
   witBoolean * stochSolnMode);
d2737 4
d2742 1
a2742 1
   const witBoolean stageByObject);
d2745 1
a2745 1
   WitRun * const theWitRun,
@


1.249
log
@Stochastic Implosion
@
text
@d889 6
@


1.248
log
@Stochastic Implosion
@
text
@d1238 1
a1238 1
WIT_DECLSPEC witReturnCode STDCALL witGetOperationStageNo (
d1241 1
a1241 1
   int *              stageNo);
d1507 1
a1507 1
WIT_DECLSPEC witReturnCode STDCALL witGetPartStageNo (
d1510 1
a1510 1
   int *              stageNo);
d2556 1
a2556 1
WIT_DECLSPEC witReturnCode STDCALL witSetOperationStageNo (
d2559 1
a2559 1
   const int          stageNo);
d2639 1
a2639 1
WIT_DECLSPEC witReturnCode STDCALL witSetPartStageNo (
d2642 1
a2642 1
   const int          stageNo);
@


1.247
log
@Stochastic Implosion
@
text
@d514 1
a514 1
WIT_DECLSPEC witReturnCode STDCALL witGetCurScenarioNo (
d516 1
a516 1
   int * curScenarioNo);
d2203 1
a2203 1
WIT_DECLSPEC witReturnCode STDCALL witSetCurScenarioNo (
d2205 1
a2205 1
   const int curScenarioNo);
@


1.246
log
@Stochastic Implosion
@
text
@d139 3
a194 3
WIT_DECLSPEC witReturnCode STDCALL witDiscardStochSoln (
   WitRun * const theWitRun);

@


1.245
log
@Stochastic Implosion
@
text
@d1233 1
a1233 1
WIT_DECLSPEC witReturnCode STDCALL witGetOperationRecourseStage (
d1236 1
a1236 1
   witBoolean * recourseStage);
d1238 2
a1239 2
WIT_DECLSPEC witReturnCode STDCALL witGetOperationSelForDel (
   WitRun * const theWitRun,
d1241 1
a1241 1
   witBoolean * selForDel);
a1439 5
WIT_DECLSPEC witReturnCode STDCALL witGetPartRecourseStage (
   WitRun * const theWitRun,
   const char * const partName,
   witBoolean * recourseStage);

d1507 5
d2551 1
a2551 1
WIT_DECLSPEC witReturnCode STDCALL witSetOperationRecourseStage (
d2554 1
a2554 1
   const witBoolean recourseStage);
d2556 2
a2557 2
WIT_DECLSPEC witReturnCode STDCALL witSetOperationSelForDel (
   WitRun * const theWitRun,
d2559 1
a2559 1
   const witBoolean selForDel);
a2613 5
WIT_DECLSPEC witReturnCode STDCALL witSetPartRecourseStage (
   WitRun * const theWitRun,
   const char * const partName,
   const witBoolean recourseStage);

d2639 5
@


1.244
log
@Stochastic Implosion
@
text
@d514 4
a1651 4
WIT_DECLSPEC witReturnCode STDCALL witGetScenarioIndex (
   WitRun * const theWitRun,
   int * scenarioIndex);

d2203 4
a2713 4
WIT_DECLSPEC witReturnCode STDCALL witSetScenarioIndex (
   WitRun * const theWitRun,
   const int scenarioIndex);

@


1.243
log
@ASAP Pegging Order
@
text
@d1632 8
a1651 8
WIT_DECLSPEC witReturnCode STDCALL witGetScenarioProb (
   WitRun * const theWitRun,
   float * scenarioProb);

WIT_DECLSPEC witReturnCode STDCALL witGetScenarioProbDbl (
   WitRun * const theWitRun,
   double * scenarioProb);

d2694 8
a2713 8
WIT_DECLSPEC witReturnCode STDCALL witSetScenarioProb (
   WitRun * const theWitRun,
   const float scenarioProb);

WIT_DECLSPEC witReturnCode STDCALL witSetScenarioProbDbl (
   WitRun * const theWitRun,
   const double scenarioProb);

@


1.242
log
@ASAP Pegging Order
@
text
@d1272 1
a1272 1
WIT_DECLSPEC witReturnCode STDCALL witGetPartAsapPip (
d1275 1
a1275 1
   witBoolean * asapPip);
d2585 1
a2585 1
WIT_DECLSPEC witReturnCode STDCALL witSetPartAsapPip (
d2588 1
a2588 1
   const witBoolean asapPip);
@


1.241
log
@Stochastic Implosion
@
text
@d1272 5
d2585 5
@


1.240
log
@Stochastic Implosion
@
text
@a1977 3
WIT_DECLSPEC witReturnCode STDCALL witOptPreprocess (
   WitRun * const theWitRun);

d3320 3
@


1.239
log
@Stochastic Implosion
@
text
@d1663 1
a1663 1
WIT_DECLSPEC witReturnCode STDCALL witGetStochDataMode (
d1665 1
a1665 1
   witBoolean * stochDataMode);
d2723 1
a2723 1
WIT_DECLSPEC witReturnCode STDCALL witSetStochDataMode (
d2725 1
a2725 1
   const witBoolean stochDataMode);
@


1.238
log
@Stochastic Implosion
@
text
@a1626 8
WIT_DECLSPEC witReturnCode STDCALL witGetProbability (
   WitRun * const theWitRun,
   float * probability);

WIT_DECLSPEC witReturnCode STDCALL witGetProbabilityDbl (
   WitRun * const theWitRun,
   double * probability);

d1639 8
a2686 8
WIT_DECLSPEC witReturnCode STDCALL witSetProbability (
   WitRun * const theWitRun,
   const float probability);

WIT_DECLSPEC witReturnCode STDCALL witSetProbabilityDbl (
   WitRun * const theWitRun,
   const double probability);

d2699 8
@


1.237
log
@Stochastic Implosion
@
text
@d1234 5
a1243 5
WIT_DECLSPEC witReturnCode STDCALL witGetOperationSelForDel (
   WitRun * const theWitRun,
   const char * const operationName,
   witBoolean * selForDel);

a1451 5
WIT_DECLSPEC witReturnCode STDCALL witGetParts (
   WitRun * const theWitRun,
   int * lenPartList,
   char *** partList);

d1565 5
@


1.236
log
@Stochastic Implosion
@
text
@d1229 5
d1431 5
d2545 5
d2603 5
@


1.235
log
@Stochastic Implosion
@
text
@d1657 1
a1657 1
WIT_DECLSPEC witReturnCode STDCALL witGetStochSolnExists (
d1659 1
a1659 1
   witBoolean * stochSolnExists);
@


1.234
log
@Stochastic Implosion
@
text
@d1617 8
a1636 8
WIT_DECLSPEC witReturnCode STDCALL witGetScenarioProb (
   WitRun * const theWitRun,
   float * scenarioProb);

WIT_DECLSPEC witReturnCode STDCALL witGetScenarioProbDbl (
   WitRun * const theWitRun,
   double * scenarioProb);

d2667 8
a2686 8
WIT_DECLSPEC witReturnCode STDCALL witSetScenarioProb (
   WitRun * const theWitRun,
   const float scenarioProb);

WIT_DECLSPEC witReturnCode STDCALL witSetScenarioProbDbl (
   WitRun * const theWitRun,
   const double scenarioProb);

@


1.233
log
@Stochastic Implosion
@
text
@d1653 4
a1660 4
WIT_DECLSPEC witReturnCode STDCALL witGetStochasticMode (
   WitRun * const theWitRun,
   witBoolean * stochasticMode);

d2703 1
a2703 1
WIT_DECLSPEC witReturnCode STDCALL witSetStochasticMode (
d2705 1
a2705 1
   const witBoolean stochasticMode);
@


1.232
log
@Stochastic Implosion
@
text
@d192 3
d1653 1
a1653 1
WIT_DECLSPEC witReturnCode STDCALL witGetStochSolnAvail (
d1655 1
a1655 1
   witBoolean * stochSolnAvail);
@


1.231
log
@Stochastic Implosion
@
text
@d1650 4
@


1.230
log
@Stochastic Implosion
@
text
@d1650 1
a1650 1
WIT_DECLSPEC witReturnCode STDCALL witGetStochImpMode (
d1652 1
a1652 1
   witBoolean * stochImpMode);
d2696 1
a2696 1
WIT_DECLSPEC witReturnCode STDCALL witSetStochImpMode (
d2698 1
a2698 1
   const witBoolean stochImpMode);
@


1.229
log
@Stochastic Implosion
@
text
@d2920 3
@


1.228
log
@Stochastic Implosion
@
text
@a1613 8
WIT_DECLSPEC witReturnCode STDCALL witGetProbability (
   WitRun * const theWitRun,
   float * probability);

WIT_DECLSPEC witReturnCode STDCALL witGetProbabilityDbl (
   WitRun * const theWitRun,
   double * probability);

d1626 8
a2659 8
WIT_DECLSPEC witReturnCode STDCALL witSetProbability (
   WitRun * const theWitRun,
   const float probability);

WIT_DECLSPEC witReturnCode STDCALL witSetProbabilityDbl (
   WitRun * const theWitRun,
   const double probability);

d2672 8
@


1.227
log
@Stochastic Implosion
@
text
@d1614 8
d2660 8
@


1.226
log
@Stochastic implosion.
@
text
@d1622 4
d2660 4
@


1.225
log
@Stochastic Implosion.
@
text
@d1638 1
a1638 1
WIT_DECLSPEC witReturnCode STDCALL witGetStochImpActive (
d1640 1
a1640 1
   witBoolean * stochImpActive);
d2672 1
a2672 1
WIT_DECLSPEC witReturnCode STDCALL witSetStochImpActive (
d2674 1
a2674 1
   const witBoolean stochImpActive);
@


1.224
log
@Stochastic implosion.
@
text
@d1638 4
d2672 4
@


1.223
log
@Stochastic implosion.
@
text
@d1013 4
d2400 4
@


1.222
log
@Removed witThrowUnknownExc.
@
text
@d1630 4
d2656 4
@


1.221
log
@[disallowing scrap]
@
text
@a3659 3
WIT_DECLSPEC witReturnCode STDCALL witThrowUnknownExc (
   WitRun * const theWitRun);

@


1.220
log
@[disallowed backlog]
@
text
@d1440 5
d2553 5
@


1.219
log
@[disallowed backlog]
@
text
@a516 6
WIT_DECLSPEC witReturnCode STDCALL witGetDemandBacklogAllowed (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   witBoolean * backlogAllowed);

d735 6
a2160 6
WIT_DECLSPEC witReturnCode STDCALL witSetDemandBacklogAllowed (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const witBoolean backlogAllowed);

d2249 6
@


1.218
log
@[disallowed backlog]
@
text
@d517 6
a625 6
WIT_DECLSPEC witReturnCode STDCALL witGetDemandDisallowBacklog (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   witBoolean * disallowBacklog);

d2161 6
a2206 6
WIT_DECLSPEC witReturnCode STDCALL witSetDemandDisallowBacklog (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const witBoolean disallowBacklog);

@


1.217
log
@[disallowed backlog]
@
text
@d620 6
d2201 6
a2948 6
WIT_DECLSPEC witReturnCode STDCALL witGetDemandDisallowBacklog (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   witBoolean * disallowBacklog);

a3294 6
WIT_DECLSPEC witReturnCode STDCALL witSetDemandDisallowBacklog (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const witBoolean disallowBacklog);

@


1.216
log
@[backlog avoidance]
@
text
@d2925 1
a2925 1
WIT_DECLSPEC witReturnCode STDCALL witGetDemandBacklogAllowed (
d2929 1
a2929 1
   witBoolean * backlogAllowed);
d2931 1
a2931 1
WIT_DECLSPEC witReturnCode STDCALL witGetDemandBuildAheadLimit (
d2935 1
a2935 1
   int * buildAheadLimit);
d2937 1
a2937 1
WIT_DECLSPEC witReturnCode STDCALL witGetDemandBuildAheadUB (
d2941 1
a2941 1
   int ** buildAheadUB);
d3277 1
a3277 1
WIT_DECLSPEC witReturnCode STDCALL witSetDemandBacklogAllowed (
d3281 1
a3281 1
   const witBoolean backlogAllowed);
d3283 1
a3283 1
WIT_DECLSPEC witReturnCode STDCALL witSetDemandBuildAheadLimit (
d3287 1
a3287 1
   const int buildAheadLimit);
d3289 1
a3289 1
WIT_DECLSPEC witReturnCode STDCALL witSetDemandBuildAheadUB (
d3293 1
a3293 1
   const int * buildAheadUB);
@


1.215
log
@[backlog avoidance]
@
text
@d2925 6
d3277 6
@


1.214
log
@[backlog avoidance]
@
text
@a268 4
WIT_DECLSPEC witReturnCode STDCALL witGetBacklogAllowed (
   WitRun * const theWitRun,
   witBoolean * backlogAllowed);

a1960 4
WIT_DECLSPEC witReturnCode STDCALL witSetBacklogAllowed (
   WitRun * const theWitRun,
   const witBoolean backlogAllowed);

@


1.213
log
@witCopy<Object>Data
@
text
@d269 4
d1965 4
@


1.212
log
@witCopy<Object>Data
@
text
@d145 1
a145 1
   const char * const dupConsumingOperationName,
d148 1
a148 1
   const char * const origConsumingOperationName,
d153 1
a153 1
   const char * const dupProducingOperationName,
d156 1
a156 1
   const char * const origProducingOperationName,
d181 1
a181 1
   const char * const dupConsumingOperationName,
d185 1
a185 1
   const char * const origConsumingOperationName,
@


1.211
log
@witCopy<Object>Data
@
text
@d179 10
@


1.210
log
@witCopy<Object>Data
@
text
@d151 8
@


1.209
log
@witCopy<Object>Data
@
text
@d143 8
@


1.208
log
@witCopy<Object>Data
@
text
@d140 2
a141 2
   WitRun * const dstWitRun,
   WitRun * const srcWitRun);
d144 6
a149 6
   WitRun * const     dstWitRun,
   const char * const dstPartName,
   const char * const dstDemandName,
   WitRun * const     srcWitRun,
   const char * const srcPartName,
   const char * const srcDemandName);
d152 4
a155 4
   WitRun * const     dstWitRun,
   const char * const dstOperationName,
   WitRun * const     srcWitRun,
   const char * const srcOperationName);
d158 4
a161 4
   WitRun * const     dstWitRun,
   const char * const dstPartName,
   WitRun * const     srcWitRun,
   const char * const srcPartName);
@


1.207
log
@witCopy<Object>Data.
@
text
@d143 8
@


1.206
log
@witCopy<Object>Data
@
text
@d143 6
d151 1
a151 1
   const char * const dstpartName,
@


1.205
log
@witCopy<Object>Data
@
text
@d3601 1
a3601 1
WIT_DECLSPEC witReturnCode STDCALL witInterpDevCmd (
d3603 1
a3603 1
   const char * const theCmd);
@


1.204
log
@witCopy<Object>Data
@
text
@d143 6
@


1.203
log
@External opt implosion.
@
text
@d3592 1
a3592 1
WIT_DECLSPEC witReturnCode STDCALL witTestFatalMesg (
d3595 3
a3597 2
WIT_DECLSPEC witReturnCode STDCALL witThrowUnknownExc (
   WitRun * const theWitRun);
@


1.202
log
@External opt implosion.
@
text
@d2244 2
a2245 2
   WitRun * const theWitRun,
   const float * const soln);
d2248 2
a2249 2
   WitRun * const theWitRun,
   const double * const soln);
@


1.201
log
@External opt implosion.
@
text
@d834 1
a834 1
WIT_DECLSPEC witReturnCode STDCALL witGetExtOptIntVars (
@


1.200
log
@External opt implosion.
@
text
@d2792 3
@


1.199
log
@external optimzing implosion.
@
text
@d834 1
a834 1
WIT_DECLSPEC witReturnCode STDCALL witGetExtOptIntIndices (
d836 2
a837 2
   int **         intIndices,
   int *          numIntCols);
d2243 1
a2243 1
WIT_DECLSPEC witReturnCode STDCALL witSetExtOptColSol (
d2245 1
a2245 1
   const float * const colsol);
d2247 1
a2247 1
WIT_DECLSPEC witReturnCode STDCALL witSetExtOptColSolDbl (
d2249 1
a2249 1
   const double * const colsol);
@


1.198
log
@External opt implosion.
@
text
@d832 1
a832 1
   witBoolean * extOptActive);
d834 6
a839 1
WIT_DECLSPEC witReturnCode STDCALL witGetExtOptProb (
d850 1
a850 4
   float **       rowub,
   int **         intIndices,
   int *          numIntCols,
   float *        objSense);
d852 1
a852 1
WIT_DECLSPEC witReturnCode STDCALL witGetExtOptProbDbl (
d863 1
a863 4
   double **      rowub,
   int **         intIndices,
   int *          numIntCols,
   double *       objSense);
@


1.197
log
@External opt implosion.
@
text
@a214 4
WIT_DECLSPEC witReturnCode STDCALL witGetAllowIntCons (
   WitRun * const theWitRun,
   witBoolean * allowIntCons);

d942 4
a1907 4
WIT_DECLSPEC witReturnCode STDCALL witSetAllowIntCons (
   WitRun * const theWitRun,
   const witBoolean allowIntCons);

d2310 4
@


1.196
log
@External opt implosion.
@
text
@d215 4
a817 4
WIT_DECLSPEC witReturnCode STDCALL witGetEnforceIntCons (
   WitRun * const theWitRun,
   witBoolean * enforceIntCons);

d1908 4
a2231 4
WIT_DECLSPEC witReturnCode STDCALL witSetEnforceIntCons (
   WitRun * const theWitRun,
   const witBoolean enforceIntCons);

@


1.195
log
@External optimizing implosion.
@
text
@d814 4
d824 1
a824 1
   int * execEmptyBom);
d2228 4
@


1.194
log
@External opt implosion.
@
text
@d632 6
d1112 5
d1679 7
d2164 6
d2395 5
d2658 7
a3516 6
WIT_DECLSPEC witReturnCode STDCALL witGetDemandIntShipVols (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   witBoolean * intShipVols);

a3528 5
WIT_DECLSPEC witReturnCode STDCALL witGetOperationIntExecVols (
   WitRun * const theWitRun,
   const char * const operationName,
   witBoolean * intExecVols);

a3541 7
WIT_DECLSPEC witReturnCode STDCALL witGetSubsBomEntryIntSubVols (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   witBoolean * intSubVols);

a3564 6
WIT_DECLSPEC witReturnCode STDCALL witSetDemandIntShipVols (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const witBoolean intShipVols);

a3572 5
WIT_DECLSPEC witReturnCode STDCALL witSetOperationIntExecVols (
   WitRun * const theWitRun,
   const char * const operationName,
   const witBoolean intExecVols);

a3581 7
WIT_DECLSPEC witReturnCode STDCALL witSetSubsBomEntryIntSubVols (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const witBoolean intSubVols);

@


1.193
log
@External opt implosion.
@
text
@d541 14
d1038 6
d1444 12
@


1.192
log
@External opt implosion.
@
text
@d241 1
a241 1
WIT_DECLSPEC witReturnCode STDCALL witGetBomEntryEarliestPeriod (
d245 1
a245 1
   int * earliestPeriod);
d247 1
a247 1
WIT_DECLSPEC witReturnCode STDCALL witGetBomEntryConsumedPart (
d251 1
a251 1
   char ** consumedPartName);
d1024 2
a1025 2
WIT_DECLSPEC witReturnCode STDCALL witGetOperationExecutable (
   WitRun * const theWitRun,
d1027 2
a1028 1
   witBoolean ** executable);
d1034 1
a1034 1
   int *              execIndex);
d1046 5
@


1.191
log
@External opt implosion.
@
text
@d306 1
a306 1
   int *              colIndex);
d355 1
a355 1
   int *              rowIndex);
d546 1
a546 1
   int *              colIndex);
d667 1
a667 1
   int *              rowIndex);
d692 1
a692 1
   int *              colIndex);
d1033 1
a1033 1
   int *              colIndex);
d1341 1
a1341 1
   int *              rowIndex);
d1362 1
a1362 1
   int *              colIndex);
d1422 1
a1422 1
   int *              colIndex);
d1720 1
a1720 1
   int *              colIndex);
@


1.190
log
@External opt implosion.
@
text
@d301 7
d350 7
d541 7
d662 7
d687 7
d1029 6
d1358 6
d1418 6
d1714 8
@


1.189
log
@External opt implosion.
@
text
@d1296 6
@


1.188
log
@External opt implosion.
@
text
@d779 1
a779 1
WIT_DECLSPEC witReturnCode STDCALL witGetExtOptProblem (
d795 1
a795 1
WIT_DECLSPEC witReturnCode STDCALL witGetExtOptProblemDbl (
d2111 1
a2111 1
WIT_DECLSPEC witReturnCode STDCALL witSetExtOptColSolution (
d2115 1
a2115 1
WIT_DECLSPEC witReturnCode STDCALL witSetExtOptColSolutionDbl (
@


1.187
log
@External opt implosion.
@
text
@d779 32
a1117 32
WIT_DECLSPEC witReturnCode STDCALL witGetOptProblem (
   WitRun * const theWitRun,
   int *          numcols,
   int *          numrows,
   int **         start,
   int **         index,
   float **       value,
   float **       collb,
   float **       colub,
   float **       obj,
   float **       rowlb,
   float **       rowub,
   int **         intIndices,
   int *          numIntCols,
   float *        objSense);

WIT_DECLSPEC witReturnCode STDCALL witGetOptProblemDbl (
   WitRun * const theWitRun,
   int *          numcols,
   int *          numrows,
   int **         start,
   int **         index,
   double **      value,
   double **      collb,
   double **      colub,
   double **      obj,
   double **      rowlb,
   double **      rowub,
   int **         intIndices,
   int *          numIntCols,
   double *       objSense);

d2111 8
@


1.186
log
@External opt implosion.
@
text
@d3368 1
a3368 1
WIT_DECLSPEC witReturnCode STDCALL witGetDemandIntConShipVols (
d3372 1
a3372 1
   witBoolean * intConShipVols);
d3386 1
a3386 1
WIT_DECLSPEC witReturnCode STDCALL witGetOperationIntConExecVols (
d3389 1
a3389 1
   witBoolean * intConExecVols);
d3404 1
a3404 1
WIT_DECLSPEC witReturnCode STDCALL witGetSubsBomEntryIntConSubVols (
d3409 1
a3409 1
   witBoolean * intConSubVols);
d3434 1
a3434 1
WIT_DECLSPEC witReturnCode STDCALL witSetDemandIntConShipVols (
d3438 1
a3438 1
   const witBoolean intConShipVols);
d3448 1
a3448 1
WIT_DECLSPEC witReturnCode STDCALL witSetOperationIntConExecVols (
d3451 1
a3451 1
   const witBoolean intConExecVols);
d3462 1
a3462 1
WIT_DECLSPEC witReturnCode STDCALL witSetSubsBomEntryIntConSubVols (
d3467 1
a3467 1
   const witBoolean intConSubVols);
@


1.185
log
@External opt implosion.
@
text
@d191 1
a191 1
WIT_DECLSPEC witReturnCode STDCALL witFinishAsstOpt (
a218 4
WIT_DECLSPEC witReturnCode STDCALL witGetAsstOptActive (
   WitRun * const theWitRun,
   witBoolean * asstOptActive);

d775 4
d2639 1
a2639 1
WIT_DECLSPEC witReturnCode STDCALL witStartAsstOpt (
@


1.184
log
@Assisted opt implosion.
@
text
@a2638 3
WIT_DECLSPEC witReturnCode STDCALL witSolveOptProblem (
   WitRun * const theWitRun);

@


1.183
log
@Assisted opt implosion.
@
text
@d1097 4
a1100 1
   float **       rowub);
d1113 4
a1116 1
   double **      rowub);
@


1.182
log
@Custom opt implosion.
@
text
@d191 1
a191 1
WIT_DECLSPEC witReturnCode STDCALL witFinishCustOptImp (
d219 4
a454 4
WIT_DECLSPEC witReturnCode STDCALL witGetCustOptImpActive (
   WitRun * const theWitRun,
   witBoolean * custOptImpActive);

d2636 1
a2636 1
WIT_DECLSPEC witReturnCode STDCALL witStartCustOptImp (
@


1.181
log
@App controlled opt implosion.
@
text
@d191 1
a191 1
WIT_DECLSPEC witReturnCode STDCALL witFinishHeurAlloc (
d194 1
a194 1
WIT_DECLSPEC witReturnCode STDCALL witFinishOptImp (
d451 4
a1081 4
WIT_DECLSPEC witReturnCode STDCALL witGetOptImpActive (
   WitRun * const theWitRun,
   witBoolean * optImpActive);

d2636 1
a2636 1
WIT_DECLSPEC witReturnCode STDCALL witStartHeurAlloc (
d2639 1
a2639 1
WIT_DECLSPEC witReturnCode STDCALL witStartOptImp (
@


1.180
log
@App controlled opt implosion.
@
text
@d3388 4
@


1.179
log
@App controlled opt implosion.
@
text
@d1086 26
@


1.178
log
@App controlled opt implosion.
@
text
@d2607 1
a2607 1
WIT_DECLSPEC witReturnCode STDCALL witSolveOptImp (
a3419 4
WIT_DECLSPEC witReturnCode STDCALL witSetOptImpActive (
   WitRun * const theWitRun,
   const witBoolean optImpActive);

@


1.177
log
@Heuristic search increment.
@
text
@d194 3
d2607 3
d2613 3
@


1.176
log
@Heuristic search increment.
@
text
@d620 12
a795 8
WIT_DECLSPEC witReturnCode STDCALL witGetHeurSearchInc (
   WitRun * const theWitRun,
   float * heurSearchInc);

WIT_DECLSPEC witReturnCode STDCALL witGetHeurSearchIncDbl (
   WitRun * const theWitRun,
   double * heurSearchInc);

d2012 12
a2079 8
WIT_DECLSPEC witReturnCode STDCALL witSetHeurSearchInc (
   WitRun * const theWitRun,
   const float heurSearchInc);

WIT_DECLSPEC witReturnCode STDCALL witSetHeurSearchIncDbl (
   WitRun * const theWitRun,
   const double heurSearchInc);

@


1.175
log
@App controlled opt implosion.
@
text
@d784 8
d2064 8
@


1.174
log
@App controlled opt implosion.
@
text
@d3387 4
@


1.173
log
@App controlled opt implosion.
@
text
@d3312 4
@


1.172
log
@NSTN residualVol.
@
text
@a987 5
WIT_DECLSPEC witReturnCode STDCALL witGetOperationIntConExecVols (
   WitRun * const theWitRun,
   const char * const operationName,
   witBoolean * intConExecVols);

a1523 7
WIT_DECLSPEC witReturnCode STDCALL witGetSubsBomEntryIntConSubVols (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   witBoolean * intConSubVols);

a2198 5
WIT_DECLSPEC witReturnCode STDCALL witSetOperationIntConExecVols (
   WitRun * const theWitRun,
   const char * const operationName,
   const witBoolean intConExecVols);

a2456 7
WIT_DECLSPEC witReturnCode STDCALL witSetSubsBomEntryIntConSubVols (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const witBoolean intConSubVols);

a2681 6
WIT_DECLSPEC witReturnCode STDCALL witGetDemandIntConShipVols (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   witBoolean * intConShipVols);

a3027 6
WIT_DECLSPEC witReturnCode STDCALL witSetDemandIntConShipVols (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const witBoolean intConShipVols);

d3292 20
a3315 4
WIT_DECLSPEC witReturnCode STDCALL witSetNewPipPggOrder (
   WitRun * const theWitRun,
   const witBoolean newPipPggOrder);

d3320 1
a3320 1
WIT_DECLSPEC witReturnCode STDCALL witSetNonMrSelSplit (
d3322 2
a3323 1
   const witBoolean nonMrSelSplit);
d3330 5
a3334 1
WIT_DECLSPEC witReturnCode STDCALL witSetPartBaSelSplit (
d3336 17
a3352 2
   const char * const partName,
   const witBoolean baSelSplit);
d3354 1
a3354 1
WIT_DECLSPEC witReturnCode STDCALL witGetBopEntryMeSelSplit (
d3356 1
a3356 3
   const char * const producingOperationName,
   const int bopEntryIndex,
   witBoolean * meSelSplit);
d3364 1
a3364 1
WIT_DECLSPEC witReturnCode STDCALL witGetSrSelSplit (
d3366 3
a3368 1
   witBoolean * srSelSplit);
d3370 1
a3370 1
WIT_DECLSPEC witReturnCode STDCALL witSetSrSelSplit (
d3372 1
a3372 1
   const witBoolean srSelSplit);
d3374 1
a3374 1
WIT_DECLSPEC witReturnCode STDCALL witNoDependantWitRunVeneersIsOne (
d3376 1
a3376 1
   int* isOne);
d3378 4
a3381 2
WIT_DECLSPEC witReturnCode STDCALL witNoDependantWitRunVeneersDecr (
   WitRun * const theWitRun);
d3383 4
a3386 2
WIT_DECLSPEC witReturnCode STDCALL witNoDependantWitRunVeneersIncr (
   WitRun * const theWitRun);
d3388 3
a3390 2
WIT_DECLSPEC witReturnCode STDCALL witExhaustMemory (
   WitRun * const theWitRun);
d3392 6
a3397 6
WIT_DECLSPEC witReturnCode STDCALL witListUnissuedMsgs (
   WitRun * const theWitRun);

WIT_DECLSPEC witReturnCode STDCALL witMalloc (
   size_t size,
   void ** mem );
a3401 5
WIT_DECLSPEC witReturnCode STDCALL witExecStandAlone (
   WitRun * const theWitRun,
   int            argc,
   char *         argv[]);

@


1.171
log
@NSTN residualVols.
@
text
@d832 4
d2118 4
@


1.170
log
@App controlled opt implosion.
@
text
@d848 4
d2130 4
@


1.169
log
@Integrality constraints.
@
text
@d1060 4
@


1.168
log
@Removed optimizing implosion with lot sizes.
@
text
@d980 1
a980 1
WIT_DECLSPEC witReturnCode STDCALL witGetOperationIntExecVols (
d983 1
a983 1
   witBoolean * intExecVols);
d1517 1
a1517 1
WIT_DECLSPEC witReturnCode STDCALL witGetSubsBomEntryIntSubVols (
d1522 1
a1522 1
   witBoolean * intSubVols);
d2191 1
a2191 1
WIT_DECLSPEC witReturnCode STDCALL witSetOperationIntExecVols (
d2194 1
a2194 1
   const witBoolean intExecVols);
d2454 1
a2454 1
WIT_DECLSPEC witReturnCode STDCALL witSetSubsBomEntryIntSubVols (
d2459 1
a2459 1
   const witBoolean intSubVols);
d2686 1
a2686 1
WIT_DECLSPEC witReturnCode STDCALL witGetDemandIntShipVols (
d2690 1
a2690 1
   witBoolean * intShipVols);
d3038 1
a3038 1
WIT_DECLSPEC witReturnCode STDCALL witSetDemandIntShipVols (
d3042 1
a3042 1
   const witBoolean intShipVols);
@


1.167
log
@Opt implosion with integrality constraints.
@
text
@a2822 4
WIT_DECLSPEC witReturnCode STDCALL witGetOptWithLotSizes (
   WitRun * const theWitRun,
   witBoolean * optWithLotSizes);

a3160 4
WIT_DECLSPEC witReturnCode STDCALL witSetOptWithLotSizes (
   WitRun * const theWitRun,
   const witBoolean optWithLotSizes);

@


1.166
log
@ExecVol pegging for BOP entries.
@
text
@d980 5
d1517 7
d2054 1
a2054 1
   const witBoolean ForcedMultiEq);
d2191 5
d2454 7
d2686 6
d3042 6
@


1.165
log
@BOP entry execVol pegging.
@
text
@d454 1
a454 1
WIT_DECLSPEC witReturnCode STDCALL witGetDemandCoexVolPip (
d465 1
a465 1
WIT_DECLSPEC witReturnCode STDCALL witGetDemandCoexVolPipDbl (
@


1.164
log
@GPIP migration.
@
text
@d454 22
@


1.163
log
@GPIP migration
@
text
@a393 12
WIT_DECLSPEC witReturnCode STDCALL witGetBopEntryPipShare (
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   float ** pipShare);

WIT_DECLSPEC witReturnCode STDCALL witGetBopEntryPipShareDbl (
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   double ** pipShare);

a1857 12
WIT_DECLSPEC witReturnCode STDCALL witSetBopEntryPipShare (
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   const float * const pipShare);

WIT_DECLSPEC witReturnCode STDCALL witSetBopEntryPipShareDbl (
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   const double * const pipShare);

@


1.162
log
@Minor change.
@
text
@a769 4
WIT_DECLSPEC witReturnCode STDCALL witGetGroupPipMode (
   WitRun * const theWitRun,
   witBoolean * groupPipMode);

a2045 4
WIT_DECLSPEC witReturnCode STDCALL witSetGroupPipMode (
   WitRun * const theWitRun,
   const witBoolean groupPipMode);

@


1.161
log
@Removed the postSolveRecovery attribute.
@
text
@d1640 1
a1640 1
WIT_DECLSPEC witReturnCode STDCALL witHeurImplode (\
@


1.160
log
@New PIP pegging order.
@
text
@a1368 4
WIT_DECLSPEC witReturnCode STDCALL witGetPostSolveRecovery (
   WitRun * const theWitRun,
   witBoolean * postSolveRecovery);

a2341 4
WIT_DECLSPEC witReturnCode STDCALL witSetPostSolveRecovery (
   WitRun * const theWitRun,
   const witBoolean postSolveRecovery);

@


1.159
log
@Updated the copyright date on all source files.
@
text
@d3298 8
@


1.158
log
@Removed access to the oslMesgFileName attribute.
@
text
@a4 3
/* A TOOL FOR RESOURCE ALLOCATION (IMPLOSION)                                 */
/* FOR MULTI-STAGE/MULTIPERIOD CAPACITATED PRODUCTION PLANNING                */
/*                                                                            */
d6 1
a6 1
/* (C) COPYRIGHT International Business Machines Corp. 1993,1996,2000         */
@


1.157
log
@Modified code for OSL and COIN log file names.
@
text
@a2817 4
WIT_DECLSPEC witReturnCode STDCALL witGetOslMesgFileName (
   WitRun * const theWitRun,
   char ** oslMesgFileName);

a3153 4
WIT_DECLSPEC witReturnCode STDCALL witSetOslMesgFileName (
   WitRun * const theWitRun,
   const char * const oslMesgFileName);

@


1.156
log
@Moved hashTableSize functions.
@
text
@a1055 4
WIT_DECLSPEC witReturnCode STDCALL witGetOslMesgFileName (
   WitRun * const theWitRun,
   char ** oslMesgFileName);

d1400 4
a2249 4
WIT_DECLSPEC witReturnCode STDCALL witSetOslMesgFileName (
   WitRun * const theWitRun,
   const char * const oslMesgFileName);

d2373 4
d2818 4
d3158 4
a3308 8
WIT_DECLSPEC witReturnCode STDCALL witGetSolverLogFileName (
   WitRun * const theWitRun,
   char ** solverLogFileName);

WIT_DECLSPEC witReturnCode STDCALL witSetSolverLogFileName (
   WitRun * const theWitRun,
   const char * const solverLogFileName);

@


1.155
log
@GPIP
@
text
@a776 4
WIT_DECLSPEC witReturnCode STDCALL witGetHashTableSize (
   WitRun * const theWitRun,
   int * hashTableSize);

a2060 4
WIT_DECLSPEC witReturnCode STDCALL witSetHashTableSize (
   WitRun * const theWitRun,
   const int hashTableSize);

d2719 4
d3069 4
@


1.154
log
@Began [shared-resource pegging]
@
text
@d773 4
a1407 4
WIT_DECLSPEC witReturnCode STDCALL witGetSrpMode (
   WitRun * const theWitRun,
   witBoolean * srpMode);

d2061 4
a2384 4
WIT_DECLSPEC witReturnCode STDCALL witSetSrpMode (
   WitRun * const theWitRun,
   const witBoolean srpMode);

@


1.153
log
@[error recovery]
@
text
@d1404 4
d2381 4
@


1.152
log
@Error exceptions.
@
text
@a3369 3
WIT_DECLSPEC witReturnCode STDCALL witSetErrorRecovery (
   WitRun * const theWitRun);

@


1.151
log
@Error exceptions.
@
text
@d3441 1
a3441 1
      char * const        funcName_;
@


1.150
log
@WitErrorExc with MS compiler.
@
text
@a3424 2
class WitErrorExcData;

d3441 3
a3443 1
      WitErrorExcData * const myErrorExcData_;
@


1.149
log
@Error exceptions on MS compiler.
@
text
@d3431 4
a3434 2
      WitErrorExc (const WitErrorExcData &);
      WitErrorExc (const WitErrorExc     &);
d3443 1
a3443 1
      WitErrorExcData & myErrorExcData_;
@


1.148
log
@Experiment for MS trouble with WitErrorExc.
@
text
@d3419 2
a3420 3
/* This is the abstract base class for the type of exception that WIT throws, */
/* when it issues a message for which the mesgThrowErrorExc attribute is      */
/* WitTRUE.                                                                   */
d3425 2
d3431 3
a3433 30
      virtual const char *  funcName () const = 0;
      virtual int           mesgNum  () const = 0;
      virtual witReturnCode retCode  () const = 0;

   protected:

      WitErrorExc ();
      WitErrorExc (const WitErrorExc &);

      virtual ~WitErrorExc ();
   };

#endif /* __cplusplus */

/*----------------------------------------------------------------------------*/
/* Class TempExc                                                              */
/*----------------------------------------------------------------------------*/

#ifdef __cplusplus

class WitConcErrorExc;

class WIT_DECLSPEC WitTempExc
   {
   public:

      WitTempExc (const WitConcErrorExc &);
      WitTempExc (const WitTempExc &);

      ~WitTempExc ();
d3441 1
a3441 1
      WitConcErrorExc & myConcErrorExc_;
@


1.147
log
@Modified to export WitTempExc so errTest will link on Windows.
@
text
@d3426 1
a3426 1
class WitErrorExc
@


1.146
log
@Experiment for WitErrorExc trouble with MS complier.
@
text
@d3452 1
a3452 1
class WitTempExc
@


1.145
log
@[error recovery]
@
text
@d3445 28
@


1.144
log
@[multi-thread]
@
text
@d3370 3
@


1.143
log
@[multi-thread]
@
text
@a3370 74
/* WIT Attributes                                                             */
/* These are used as arguments to the "witAdd<Object>Va" functions that were  */
/* part of WIT 3.4 but are no longer documented.                              */
/* They are included here for compatibility with WIT 3.4 applications.        */
/*----------------------------------------------------------------------------*/

extern WIT_DECLSPEC WIT_CONST witAttr WitNaccAfterSoftLB;
extern WIT_DECLSPEC WIT_CONST witAttr WitNaccAfterOptImp;
extern WIT_DECLSPEC WIT_CONST witAttr WitNaccelerated;
extern WIT_DECLSPEC WIT_CONST witAttr WitNautoPriority;
extern WIT_DECLSPEC WIT_CONST witAttr WitNbuildAheadLimit;
extern WIT_DECLSPEC WIT_CONST witAttr WitNbuildWhenEmpty;
extern WIT_DECLSPEC WIT_CONST witAttr WitNcapCost;
extern WIT_DECLSPEC WIT_CONST witAttr WitNcomputeCriticalList;
extern WIT_DECLSPEC WIT_CONST witAttr WitNcumShipBounds;
extern WIT_DECLSPEC WIT_CONST witAttr WitNcycleTime;
extern WIT_DECLSPEC WIT_CONST witAttr WitNearliestPeriod;
extern WIT_DECLSPEC WIT_CONST witAttr WitNequitability;
extern WIT_DECLSPEC WIT_CONST witAttr WitNfallout;
extern WIT_DECLSPEC WIT_CONST witAttr WitNfeasible;
extern WIT_DECLSPEC WIT_CONST witAttr WitNgrossRev;
extern WIT_DECLSPEC WIT_CONST witAttr WitNhashTableSize;
extern WIT_DECLSPEC WIT_CONST witAttr WitNincLotSize;
extern WIT_DECLSPEC WIT_CONST witAttr WitNinvCost;
extern WIT_DECLSPEC WIT_CONST witAttr WitNlatestPeriod;
extern WIT_DECLSPEC WIT_CONST witAttr WitNmandEC;
extern WIT_DECLSPEC WIT_CONST witAttr WitNmessageFile;
extern WIT_DECLSPEC WIT_CONST witAttr WitNmessageFileAccessMode;
extern WIT_DECLSPEC WIT_CONST witAttr WitNmessageFileName;
extern WIT_DECLSPEC WIT_CONST witAttr WitNminLotSize;
extern WIT_DECLSPEC WIT_CONST witAttr WitNnPeriods;
extern WIT_DECLSPEC WIT_CONST witAttr WitNobj1CumShipReward;
extern WIT_DECLSPEC WIT_CONST witAttr WitNobj1ShipReward;
extern WIT_DECLSPEC WIT_CONST witAttr WitNobj1ProdCost;
extern WIT_DECLSPEC WIT_CONST witAttr WitNobj1ScrapCost;
extern WIT_DECLSPEC WIT_CONST witAttr WitNobj1StockCost;
extern WIT_DECLSPEC WIT_CONST witAttr WitNobj1SubCost;
extern WIT_DECLSPEC WIT_CONST witAttr WitNobj2SubPenalty;
extern WIT_DECLSPEC WIT_CONST witAttr WitNunitCost;
extern WIT_DECLSPEC WIT_CONST witAttr WitNobj2Winv;
extern WIT_DECLSPEC WIT_CONST witAttr WitNobj2Wrev;
extern WIT_DECLSPEC WIT_CONST witAttr WitNobj2Wserv;
extern WIT_DECLSPEC WIT_CONST witAttr WitNobj2Wsub;
extern WIT_DECLSPEC WIT_CONST witAttr WitNobjChoice;
extern WIT_DECLSPEC WIT_CONST witAttr WitNoffset;
extern WIT_DECLSPEC WIT_CONST witAttr WitNoptInitMethod;
extern WIT_DECLSPEC WIT_CONST witAttr WitNoslMessageFileName;
extern WIT_DECLSPEC WIT_CONST witAttr WitNoutputPrecision;
extern WIT_DECLSPEC WIT_CONST witAttr WitNpartBomSubsProdSched;
extern WIT_DECLSPEC WIT_CONST witAttr WitNpartDemandShipSched;
extern WIT_DECLSPEC WIT_CONST witAttr WitNpartProdSched;
extern WIT_DECLSPEC WIT_CONST witAttr WitNpartShipSched;
extern WIT_DECLSPEC WIT_CONST witAttr WitNperiodsPerYear;
extern WIT_DECLSPEC WIT_CONST witAttr WitNpostprocessed;
extern WIT_DECLSPEC WIT_CONST witAttr WitNpreprocessed;
extern WIT_DECLSPEC WIT_CONST witAttr WitNprintMessageNumber;
extern WIT_DECLSPEC WIT_CONST witAttr WitNpriority;
extern WIT_DECLSPEC WIT_CONST witAttr WitNprodBounds;
extern WIT_DECLSPEC WIT_CONST witAttr WitNprodVol;
extern WIT_DECLSPEC WIT_CONST witAttr WitNdemandVol;
extern WIT_DECLSPEC WIT_CONST witAttr WitNreqVol;
extern WIT_DECLSPEC WIT_CONST witAttr WitNshipLateLimit;
extern WIT_DECLSPEC WIT_CONST witAttr WitNshipVol;
extern WIT_DECLSPEC WIT_CONST witAttr WitNstockBounds;
extern WIT_DECLSPEC WIT_CONST witAttr WitNstopRunning;
extern WIT_DECLSPEC WIT_CONST witAttr WitNsupplyVol;
extern WIT_DECLSPEC WIT_CONST witAttr WitNtimesPrint;
extern WIT_DECLSPEC WIT_CONST witAttr WitNtitle;
extern WIT_DECLSPEC WIT_CONST witAttr WitNusageRate;
extern WIT_DECLSPEC WIT_CONST witAttr WitNusageTime;
extern WIT_DECLSPEC WIT_CONST witAttr WitNwbounds;
extern WIT_DECLSPEC WIT_CONST witAttr WitNyield;

/*----------------------------------------------------------------------------*/
@


1.142
log
@Updated WIT's exception throwing capability.
@
text
@d2120 2
a2121 1
   WitRun * const theWitRun);
@


1.141
log
@[multi-thread]
@
text
@a61 9
struct WitException
   {
   char          funcName[50];
   int           mesgNum;
   witReturnCode retCode;
   };

/*----------------------------------------------------------------------------*/

d819 1
a819 1
WIT_DECLSPEC witReturnCode STDCALL witGetMesgThrowException (
d822 1
a822 1
   witBoolean * mesgThrowException);
d2099 1
a2099 1
WIT_DECLSPEC witReturnCode STDCALL witSetMesgThrowException (
d2103 1
a2103 1
   const witBoolean mesgThrowException);
d3486 30
@


1.140
log
@Removed all variable-argument-list (outer layer) API functions.
@
text
@d3375 3
@


1.139
log
@[multi-thread]
@
text
@a2622 25
WIT_DECLSPEC witReturnCode STDCALL witAddBomEntryVa (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const char * const consumedPartName,
   ...);

WIT_DECLSPEC witReturnCode STDCALL witAddDemandVa (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   ...);

WIT_DECLSPEC witReturnCode STDCALL witAddPartVa (
   WitRun * const theWitRun,
   const char * const partName,
   const witAttr partCategory,
   ...);

WIT_DECLSPEC witReturnCode STDCALL witAddSubsBomEntryVa (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const char * const consumedPartName,
   ...);

@


1.138
log
@[multi-thread]
@
text
@d3395 5
@


1.137
log
@[multi-thread]
@
text
@d3382 3
@


1.136
log
@[multi-thread]:
   Moved PROLOG/EPILOG responsibility from the inner layer of the API
   to the outer layer.
@
text
@d846 4
d2128 3
@


1.135
log
@[multi-thread]
@
text
@d1696 1
a1696 1
   WitRun ** theWitRun);
@


1.134
log
@[exceptions]
@
text
@d54 1
a54 1
  class WitRun;
d58 1
a58 1
  typedef struct WitRunStruct WitRun;
d72 4
a75 1
  extern "C" {
d3495 5
a3499 1
  }
@


1.133
log
@[exceptions]
@
text
@d66 1
a66 1
   witReturnCode myReturnCode;
@


1.132
log
@[exceptions]
@
text
@d62 1
a62 1
struct witException
@


1.131
log
@[exceptions]
@
text
@d64 3
a66 2
   char          functionName_[50];
   witReturnCode myReturnCode_;
@


1.130
log
@[exceptions]
@
text
@d62 1
a62 1
struct witErrorExc
@


1.129
log
@[exceptions]
@
text
@d824 5
a1611 4
WIT_DECLSPEC witReturnCode STDCALL witGetThrowExcOnError (
   WitRun * const     theWitRun,
   witBoolean * const throwExcOnError);

d2100 6
a2538 5
WIT_DECLSPEC witReturnCode STDCALL witSetThrowExcOnError (
   WitRun * const   theWitRun,
   const witBoolean quiet,
   const witBoolean throwExcOnError);

@


1.128
log
@[exceptions]
@
text
@d62 1
a62 1
typedef struct witErrorExcStruct
a64 1

d66 1
a66 2
   }
   witErrorExc;
@


1.127
log
@[exceptions]
@
text
@d64 2
d1609 4
a1632 3
WIT_DECLSPEC witReturnCode STDCALL witShutDownHeurAlloc (
   WitRun * const theWitRun);

d2534 1
a2534 1
WIT_DECLSPEC witReturnCode STDCALL witSetThrowOnErrors (
d2537 1
a2537 1
   const witBoolean throwOnErrors);
d2575 3
@


1.126
log
@Changed names of obj1 attributes, e.g., obj1ScrapCost to scrapCost.
@
text
@d62 6
d2531 5
@


1.125
log
@Moved objective #2 functions to the undocumented section of wit.h., etc.
@
text
@d504 12
a585 24
WIT_DECLSPEC witReturnCode STDCALL witGetDemandObj1CumShipReward (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   float ** obj1CumShipReward);

WIT_DECLSPEC witReturnCode STDCALL witGetDemandObj1CumShipRewardDbl (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   double ** obj1CumShipReward);

WIT_DECLSPEC witReturnCode STDCALL witGetDemandObj1ShipReward (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   float ** obj1ShipReward);

WIT_DECLSPEC witReturnCode STDCALL witGetDemandObj1ShipRewardDbl (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   double ** obj1ShipReward);

d624 12
d897 10
a1016 10
WIT_DECLSPEC witReturnCode STDCALL witGetOperationObj1ExecCost (
   WitRun * const theWitRun,
   const char * const operationName,
   float ** obj1ExecCost);

WIT_DECLSPEC witReturnCode STDCALL witGetOperationObj1ExecCostDbl (
   WitRun * const theWitRun,
   const char * const operationName,
   double ** obj1ExecCost);

a1185 25
WIT_DECLSPEC witReturnCode STDCALL witGetPartObj1ScrapCost (
   WitRun * const theWitRun,
   const char * const partName,
   float ** obj1ScrapScrap);

WIT_DECLSPEC witReturnCode STDCALL witGetPartObj1ScrapCostDbl (
   WitRun * const theWitRun,
   const char * const partName,
   double ** obj1ScrapScrap);

WIT_DECLSPEC witReturnCode STDCALL witGetPartObj1ScrapCostDbl (
   WitRun * const theWitRun,
   const char * const partName,
   double ** obj1ScrapScrap);

WIT_DECLSPEC witReturnCode STDCALL witGetPartObj1StockCost (
   WitRun * const theWitRun,
   const char * const partName,
   float ** obj1StockCost);

WIT_DECLSPEC witReturnCode STDCALL witGetPartObj1StockCostDbl (
   WitRun * const theWitRun,
   const char * const partName,
   double ** obj1StockCost);

d1233 10
d1287 10
d1538 1
a1538 1
WIT_DECLSPEC witReturnCode STDCALL witGetSubsBomEntryObj1SubCost (
d1543 1
a1543 1
   float ** obj1SubCost);
d1545 1
a1545 1
WIT_DECLSPEC witReturnCode STDCALL witGetSubsBomEntryObj1SubCostDbl (
d1550 1
a1550 1
   double ** obj1SubCost);
d1552 1
a1552 1
WIT_DECLSPEC witReturnCode STDCALL witGetSubsBomEntryOffset (
d1557 1
a1557 1
   float ** offset);
d1559 1
a1559 1
WIT_DECLSPEC witReturnCode STDCALL witGetSubsBomEntryOffsetDbl (
d1564 1
a1564 1
   double ** offset);
d1566 1
a1566 1
WIT_DECLSPEC witReturnCode STDCALL witGetSubsBomEntryRoutingShare (
d1571 1
a1571 1
   float ** routingShare);
d1573 1
a1573 1
WIT_DECLSPEC witReturnCode STDCALL witGetSubsBomEntryRoutingShareDbl (
d1578 1
a1578 1
   double ** routingShare);
d1580 1
a1580 1
WIT_DECLSPEC witReturnCode STDCALL witGetSubsBomEntrySelForDel (
d1585 1
a1585 1
   witBoolean * selForDel);
d1946 12
d1988 1
a1988 1
WIT_DECLSPEC witReturnCode STDCALL witSetDemandObj1CumShipReward (
d1992 1
a1992 1
   const float * const obj1CumShipReward);
d1994 1
a1994 1
WIT_DECLSPEC witReturnCode STDCALL witSetDemandObj1CumShipRewardDbl (
d1998 1
a1998 1
   const double * const obj1CumShipReward);
d2000 1
a2000 1
WIT_DECLSPEC witReturnCode STDCALL witSetDemandObj1ShipReward (
d2004 1
a2004 13
   const float * const obj1ShipReward);

WIT_DECLSPEC witReturnCode STDCALL witSetDemandObj1ShipRewardDbl (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const double * const obj1ShipReward);

WIT_DECLSPEC witReturnCode STDCALL witSetDemandPriority (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const int * const priority);
d2006 1
a2006 1
WIT_DECLSPEC witReturnCode STDCALL witSetDemandSelForDel (
d2010 1
a2010 1
   const witBoolean selForDel);
d2012 1
a2012 1
WIT_DECLSPEC witReturnCode STDCALL witSetDemandShipLateUB (
d2016 1
a2016 1
   const int * shipLateUB);
d2129 10
a2208 10
WIT_DECLSPEC witReturnCode STDCALL witSetOperationObj1ExecCost (
   WitRun * const theWitRun,
   const char * const operationName,
   const float * const obj1ExecCost);

WIT_DECLSPEC witReturnCode STDCALL witSetOperationObj1ExecCostDbl (
   WitRun * const theWitRun,
   const char * const operationName,
   const double * const obj1ExecCost);

d2261 4
a2264 9
WIT_DECLSPEC witReturnCode STDCALL witSetPartObj1ScrapCost (
   WitRun * const theWitRun,
   const char * const partName,
   const float * const obj1ScrapScrap);

WIT_DECLSPEC witReturnCode STDCALL witSetPartObj1ScrapCostDbl (
   WitRun * const theWitRun,
   const char * const partName,
   const double * const obj1ScrapScrap);
d2266 1
a2266 1
WIT_DECLSPEC witReturnCode STDCALL witSetPartObj1StockCost (
d2269 1
a2269 1
   const float * const obj1StockCost);
d2271 1
a2271 1
WIT_DECLSPEC witReturnCode STDCALL witSetPartObj1StockCostDbl (
d2274 1
a2274 6
   const double * const obj1StockCost);

WIT_DECLSPEC witReturnCode STDCALL witSetPartPropRtg (
   WitRun * const           theWitRun,
   const char * const       partName,
   const witBoolean * const propRtg);
d2300 10
d2462 1
a2462 1
WIT_DECLSPEC witReturnCode STDCALL witSetSubsBomEntryObj1SubCost (
d2467 1
a2467 1
   const float * const obj1SubCost);
d2469 1
a2469 1
WIT_DECLSPEC witReturnCode STDCALL witSetSubsBomEntryObj1SubCostDbl (
d2474 1
a2474 1
   const double * const obj1SubCost);
d2476 1
a2476 1
WIT_DECLSPEC witReturnCode STDCALL witSetSubsBomEntryOffset (
d2481 1
a2481 1
   const float * const offset);
d2483 1
a2483 1
WIT_DECLSPEC witReturnCode STDCALL witSetSubsBomEntryOffsetDbl (
d2488 1
a2488 1
   const double * const offset);
d2490 1
a2490 1
WIT_DECLSPEC witReturnCode STDCALL witSetSubsBomEntryRoutingShare (
d2495 1
a2495 1
   const float * routingShare);
d2497 1
a2497 1
WIT_DECLSPEC witReturnCode STDCALL witSetSubsBomEntryRoutingShareDbl (
d2502 1
a2502 1
   const double * routingShare);
d2504 1
a2504 1
WIT_DECLSPEC witReturnCode STDCALL witSetSubsBomEntrySelForDel (
d2509 1
a2509 1
   const witBoolean selForDel);
d2688 24
d2790 10
d2854 20
d2920 14
d3034 24
d3122 10
d3176 20
d3247 14
@


1.124
log
@Moved set/get optWithLotSizes to the undocumented section of wit.h and
api.C.
@
text
@a447 8
WIT_DECLSPEC witReturnCode STDCALL witGetCapCost (
   WitRun * const theWitRun,
   float * capCost);

WIT_DECLSPEC witReturnCode STDCALL witGetCapCostDbl (
   WitRun * const theWitRun,
   double * capCost);

a573 12
WIT_DECLSPEC witReturnCode STDCALL witGetDemandGrossRev (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   float * grossRev);

WIT_DECLSPEC witReturnCode STDCALL witGetDemandGrossRevDbl (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   double * grossRev);

a787 8
WIT_DECLSPEC witReturnCode STDCALL witGetInvCost (
   WitRun * const theWitRun,
   float * invCost);

WIT_DECLSPEC witReturnCode STDCALL witGetInvCostDbl (
   WitRun * const theWitRun,
   double * invCost);

a834 50
WIT_DECLSPEC witReturnCode STDCALL witGetObj2Values (
   WitRun * const theWitRun,
   float * obj2RevValue,
   float * obj2InvValue,
   float * obj2ServValue,
   float * obj2SubValue);

WIT_DECLSPEC witReturnCode STDCALL witGetObj2ValuesDbl (
   WitRun * const theWitRun,
   double * obj2RevValue,
   double * obj2InvValue,
   double * obj2ServValue,
   double * obj2SubValue);

WIT_DECLSPEC witReturnCode STDCALL witGetObj2Winv (
   WitRun * const theWitRun,
   float * obj2Winv);

WIT_DECLSPEC witReturnCode STDCALL witGetObj2WinvDbl (
   WitRun * const theWitRun,
   double * obj2Winv);

WIT_DECLSPEC witReturnCode STDCALL witGetObj2Wrev (
   WitRun * const theWitRun,
   float * obj2Wrev);

WIT_DECLSPEC witReturnCode STDCALL witGetObj2WrevDbl (
   WitRun * const theWitRun,
   double * obj2Wrev);

WIT_DECLSPEC witReturnCode STDCALL witGetObj2Wserv (
   WitRun * const theWitRun,
   float * obj2Wserv);

WIT_DECLSPEC witReturnCode STDCALL witGetObj2WservDbl (
   WitRun * const theWitRun,
   double * obj2Wserv);

WIT_DECLSPEC witReturnCode STDCALL witGetObj2Wsub (
   WitRun * const theWitRun,
   float * obj2Wsub);

WIT_DECLSPEC witReturnCode STDCALL witGetObj2WsubDbl (
   WitRun * const theWitRun,
   double * obj2Wsub);

WIT_DECLSPEC witReturnCode STDCALL witGetObjChoice (
   WitRun * const theWitRun,
   int * objChoice);

a1016 10
WIT_DECLSPEC witReturnCode STDCALL witGetOperationObj2AuxCost (
   WitRun * const theWitRun,
   const char * const operationName,
   float * obj2AuxCost);

WIT_DECLSPEC witReturnCode STDCALL witGetOperationObj2AuxCostDbl (
   WitRun * const theWitRun,
   const char * const operationName,
   double * obj2AuxCost);

a1321 10
WIT_DECLSPEC witReturnCode STDCALL witGetPartUnitCost (
   WitRun * const theWitRun,
   const char * const partName,
   float * unitCost);

WIT_DECLSPEC witReturnCode STDCALL witGetPartUnitCostDbl (
   WitRun * const theWitRun,
   const char * const partName,
   double * unitCost);

a1329 8
WIT_DECLSPEC witReturnCode STDCALL witGetPeriodsPerYear (
   WitRun * const theWitRun,
   float * periodsPerYear);

WIT_DECLSPEC witReturnCode STDCALL witGetPeriodsPerYearDbl (
   WitRun * const theWitRun,
   double * periodsPerYear);

a1556 14
WIT_DECLSPEC witReturnCode STDCALL witGetSubsBomEntryObj2SubPenalty (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   float * obj2SubPenalty);

WIT_DECLSPEC witReturnCode STDCALL witGetSubsBomEntryObj2SubPenaltyDbl (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   double * obj2SubPenalty);

a1920 8
WIT_DECLSPEC witReturnCode STDCALL witSetCapCost (
   WitRun * const theWitRun,
   const float capCost);

WIT_DECLSPEC witReturnCode STDCALL witSetCapCostDbl (
   WitRun * const theWitRun,
   const double capCost);

a1980 12
WIT_DECLSPEC witReturnCode STDCALL witSetDemandGrossRev (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const float grossRev);

WIT_DECLSPEC witReturnCode STDCALL witSetDemandGrossRevDbl (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const double grossRev);

a2066 8
WIT_DECLSPEC witReturnCode STDCALL witSetInvCost (
   WitRun * const theWitRun,
   const float invCost);

WIT_DECLSPEC witReturnCode STDCALL witSetInvCostDbl (
   WitRun * const theWitRun,
   const double invCost);

a2114 36
WIT_DECLSPEC witReturnCode STDCALL witSetObj2Winv (
   WitRun * const theWitRun,
   const float obj2Winv);

WIT_DECLSPEC witReturnCode STDCALL witSetObj2WinvDbl (
   WitRun * const theWitRun,
   const double obj2Winv);

WIT_DECLSPEC witReturnCode STDCALL witSetObj2Wrev (
   WitRun * const theWitRun,
   const float obj2Wrev);

WIT_DECLSPEC witReturnCode STDCALL witSetObj2WrevDbl (
   WitRun * const theWitRun,
   const double obj2Wrev);

WIT_DECLSPEC witReturnCode STDCALL witSetObj2Wserv (
   WitRun * const theWitRun,
   const float obj2Wserv);

WIT_DECLSPEC witReturnCode STDCALL witSetObj2WservDbl (
   WitRun * const theWitRun,
   const double obj2Wserv);

WIT_DECLSPEC witReturnCode STDCALL witSetObj2Wsub (
   WitRun * const theWitRun,
   const float obj2Wsub);

WIT_DECLSPEC witReturnCode STDCALL witSetObj2WsubDbl (
   WitRun * const theWitRun,
   const double obj2Wsub);

WIT_DECLSPEC witReturnCode STDCALL witSetObjChoice (
   WitRun * const theWitRun,
   const int objChoice);

a2213 10
WIT_DECLSPEC witReturnCode STDCALL witSetOperationObj2AuxCost (
   WitRun * const theWitRun,
   const char * const operationName,
   const float obj2AuxCost);

WIT_DECLSPEC witReturnCode STDCALL witSetOperationObj2AuxCostDbl (
   WitRun * const theWitRun,
   const char * const operationName,
   const double obj2AuxCost);

a2324 10
WIT_DECLSPEC witReturnCode STDCALL witSetPartUnitCost (
   WitRun * const theWitRun,
   const char * const partName,
   const float unitCost);

WIT_DECLSPEC witReturnCode STDCALL witSetPartUnitCostDbl (
   WitRun * const theWitRun,
   const char * const partName,
   const double unitCost);

a2332 8
WIT_DECLSPEC witReturnCode STDCALL witSetPeriodsPerYear (
   WitRun * const theWitRun,
   const float periodsPerYear);

WIT_DECLSPEC witReturnCode STDCALL witSetPeriodsPerYearDbl (
   WitRun * const theWitRun,
   const double periodsPerYear);

a2480 14
WIT_DECLSPEC witReturnCode STDCALL witSetSubsBomEntryObj2SubPenalty (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const float obj2SubPenalty);

WIT_DECLSPEC witReturnCode STDCALL witSetSubsBomEntryObj2SubPenaltyDbl (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const double obj2SubPenalty);

d2661 8
d2681 12
d2705 8
d2721 60
d2837 10
d2852 8
d2871 14
d2939 8
d2959 12
d2983 8
d2999 46
d3096 10
d3111 8
d3129 15
@


1.123
log
@Made opt implosion use COIN unconditionally when COIN_BUILD is defined.
@
text
@a1133 4
WIT_DECLSPEC witReturnCode STDCALL witGetOptWithLotSizes (
   WitRun * const theWitRun,
   witBoolean * optWithLotSizes);

a2431 4
WIT_DECLSPEC witReturnCode STDCALL witSetOptWithLotSizes (
   WitRun * const theWitRun,
   const witBoolean optWithLotSizes);

d2924 4
d3082 4
@


1.122
log
@Vector PropRtg.
@
text
@a1508 4
WIT_DECLSPEC witReturnCode STDCALL witGetSolverIsCoin (
   WitRun * const theWitRun,
   witBoolean * solverIsCoin);

a2584 4
WIT_DECLSPEC witReturnCode STDCALL witSetSolverIsCoin (
   WitRun * const theWitRun,
   const witBoolean solverIsCoin);

@


1.121
log
@Vector PropRtg.
@
text
@a311 6
WIT_DECLSPEC witReturnCode STDCALL witGetBomEntryPropRouting (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   witBoolean * propRouting);

a1319 5
WIT_DECLSPEC witReturnCode STDCALL witGetPartPropRouting (
   WitRun * const theWitRun,
   const char * const partName,
   witBoolean * propRouting);

d1929 5
a1933 5
WIT_DECLSPEC witReturnCode STDCALL witSetBomEntryPropRouting (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const witBoolean propRouting);
a2491 5
WIT_DECLSPEC witReturnCode STDCALL witSetPartPropRouting (
   WitRun * const theWitRun,
   const char * const partName,
   const witBoolean propRouting);

d2493 2
a2494 2
   WitRun * const theWitRun,
   const char * const partName,
d2873 6
d2982 5
d3023 6
d3131 5
@


1.120
log
@Vector PropRt.
@
text
@d318 1
a318 1
WIT_DECLSPEC witReturnCode STDCALL witGetBomEntryPropRt (
d322 1
a322 1
   witBoolean * *     propRt);
d1331 1
a1331 1
WIT_DECLSPEC witReturnCode STDCALL witGetPartPropRt (
d1334 1
a1334 1
   witBoolean * *     propRt);
d2508 1
a2508 1
WIT_DECLSPEC witReturnCode STDCALL witSetPartPropRt (
d2511 1
a2511 1
   const witBoolean * const propRt);
@


1.119
log
@Vector propRt.
@
text
@d318 6
@


1.118
log
@Pegged Critical List.
@
text
@d1325 5
d2502 5
@


1.117
log
@Pegged Critical List.
@
text
@d1443 2
d1447 1
a1447 3
   int * *        shipPerList,
   char * * *     critPartNameList,
   int * *        critPerList);
@


1.116
log
@Pegged Critical List.
@
text
@d1440 9
@


1.115
log
@Pegged Critical List
@
text
@d1440 1
a1440 1
WIT_DECLSPEC witReturnCode STDCALL witGetPgdCritListNeeded (
d1442 1
a1442 1
   witBoolean * pgdCritListNeeded);
d2548 1
a2548 1
WIT_DECLSPEC witReturnCode STDCALL witSetPgdCritListNeeded (
d2550 1
a2550 1
   const witBoolean pgdCritListNeeded);
@


1.114
log
@Pegged Critical List.
@
text
@a455 4
WIT_DECLSPEC witReturnCode STDCALL witGetCompPgdCritList (
   WitRun * const theWitRun,
   witBoolean * compPgdCritList);

d1440 4
a2047 4
WIT_DECLSPEC witReturnCode STDCALL witSetCompPgdCritList (
   WitRun * const theWitRun,
   const witBoolean compPgdCritList);

d2548 4
@


1.113
log
@Changed terminology from "low priority proportionate routing" to
"tie breaking proportionate routing".
@
text
@d456 4
d2048 4
@


1.112
log
@Continued implmentation of low priority proportionate routing.
@
text
@a823 4
WIT_DECLSPEC witReturnCode STDCALL witGetLowPriPropRt (
   WitRun * const theWitRun,
   witBoolean * lowPriPropRt);

d1721 4
a2217 4
WIT_DECLSPEC witReturnCode STDCALL witSetLowPriPropRt (
   WitRun * const theWitRun,
   const witBoolean lowPriPropRt);

d2755 4
@


1.111
log
@Began work on [propRouting as penExec tie-breaker].
@
text
@d824 4
a1431 4
WIT_DECLSPEC witReturnCode STDCALL witGetPenExecOverPropRt (
   WitRun * const theWitRun,
   witBoolean * penExecOverPropRt);

d2218 4
a2535 4
WIT_DECLSPEC witReturnCode STDCALL witSetPenExecOverPropRt (
   WitRun * const theWitRun,
   const witBoolean penExecOverPropRt);

@


1.110
log
@Added "solverIsCoin" attribute.
@
text
@d1428 4
d2532 4
@


1.109
log
@Added:
   WitFATAL_RC
   witTestFatalMesg
@
text
@d1496 4
a2434 1

d2567 4
@


1.108
log
@PIP.
@
text
@d3183 3
d3275 1
@


1.107
log
@Continued implementation of PIP.
@
text
@d400 1
a400 1
   float * pipShare);
d406 1
a406 1
   double * pipShare);
d1990 1
a1990 1
   const float pipShare);
d1996 1
a1996 1
   const double pipShare);
@


1.106
log
@Double Precision.
@
text
@d396 12
d1985 12
@


1.105
log
@Double Precision.
@
text
@d788 1
a788 1
WIT_DECLSPEC witReturnCode STDCALL witGetPipSeqFromHeur (
d790 1
a790 1
   witBoolean * pipSeqFromHeur);
d1448 4
d2162 1
a2162 1
WIT_DECLSPEC witReturnCode STDCALL witSetPipSeqFromHeur (
d2164 1
a2164 1
   const witBoolean pipSeqFromHeur);
d2512 4
@


1.104
log
@Double Precision.
@
text
@d1988 6
@


1.103
log
@Double Precision.
@
text
@d766 9
a774 3
   int   *   lenList,
   char  *** partList,
   float *** shortageVolList);
@


1.102
log
@Double Precision.
@
text
@d474 10
d542 10
d622 10
d666 10
d712 12
d733 10
@


1.101
log
@Double Precision.
@
text
@d1372 8
@


1.100
log
@Double Precision.
@
text
@d512 10
d647 12
@


1.99
log
@Double Precision.
@
text
@d161 9
d178 10
@


1.98
log
@Double Precision.
@
text
@d215 6
d287 6
d305 6
d371 6
d383 6
d401 6
d477 6
d515 6
d539 6
d551 6
d591 6
d889 5
d899 5
d909 5
d919 5
d929 5
d939 5
d949 5
d969 5
d1004 5
d1092 5
d1107 5
d1117 5
d1127 5
d1137 5
d1167 5
d1177 5
d1209 5
d1219 5
d1278 5
d1381 7
d1458 7
d1493 7
d1514 7
d1542 7
d1556 7
d1577 7
d1619 1
a1619 1
WIT_DECLSPEC witReturnCode STDCALL witHeurImplode (
@


1.97
log
@Double Precision.
@
text
@d1505 6
d1559 6
d1577 6
d1637 6
d1649 6
d1711 6
d1729 5
d1753 6
d1765 6
d1795 6
d1969 5
d1979 5
d1989 5
d1999 5
d2009 5
d2019 5
d2049 5
d2106 5
d2218 7
d2309 7
d2337 7
d2351 7
d2371 7
@


1.96
log
@Double Precision.
@
text
@d808 5
d1036 10
d1078 5
d1900 5
a2443 5

WIT_DECLSPEC witReturnCode STDCALL witGetPartProdVol (
   WitRun * const theWitRun,
   const char * const partName,
   float ** prodVol);
@


1.95
log
@Double Precision.
@
text
@d945 5
@


1.94
log
@Double Precision.
@
text
@d1068 5
@


1.93
log
@Double Precision.
@
text
@d1016 5
d1966 5
@


1.92
log
@Double Precision.
@
text
@d427 8
d781 7
d1075 7
d1632 8
d1843 7
d1988 7
@


1.91
log
@Double Precision.
@
text
@d1070 5
@


1.90
log
@Double Precision.
@
text
@d1952 5
@


1.89
log
@Continued double precision.
@
text
@a566 4
WIT_DECLSPEC witReturnCode STDCALL witGetDoubleMode (
   WitRun * const theWitRun,
   int * doubleMode);

a1670 4

WIT_DECLSPEC witReturnCode STDCALL witSetDoubleMode (
   WitRun * const theWitRun,
   const witBoolean doubleMode);
@


1.88
log
@Continued double precision.
@
text
@d125 7
d1362 8
d1377 9
@


1.87
log
@Continued double precision.
@
text
@d672 7
d752 5
@


1.86
log
@Continued double precision.
@
text
@d226 6
d238 6
d378 4
d464 6
d614 4
d676 4
d684 4
d692 4
d700 4
d763 5
d838 5
d1060 5
d1077 4
d1164 7
d1185 7
d1199 7
d1262 7
d1423 6
d1435 6
d1547 4
d1598 6
d1680 4
d1736 4
d1744 4
d1752 4
d1760 4
d1785 5
d1830 5
d1929 5
d1946 4
d2006 7
d2027 7
d2041 7
d2082 7
@


1.85
log
@Continued double precision.
@
text
@d1235 4
d1963 4
@


1.84
log
@Continued double precision.
@
text
@d554 4
d1540 4
@


1.83
log
@Continued double precision.
@
text
@d592 4
d1560 4
@


1.82
log
@Continued double precision.
@
text
@d310 6
d1394 6
a1974 10

/*----------------------------------------------------------------------------*/
/* API functions to be used only in double precision mode.                    */
/*----------------------------------------------------------------------------*/

WIT_DECLSPEC witReturnCode STDCALL witGetBopEntryExpAversionDbl (
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   double * expAversion);
@


1.81
log
@Continued double precision.
@
text
@d532 1
a532 1
WIT_DECLSPEC witReturnCode STDCALL witGetDoublePrecision (
d534 1
a534 1
   int * doublePrecision);
d1505 1
a1505 1
WIT_DECLSPEC witReturnCode STDCALL witSetDoublePrecision (
d1507 1
a1507 1
   const witBoolean doublePrecision);
@


1.80
log
@Continued double precision.
@
text
@d1965 10
@


1.79
log
@Continued double precision.
@
text
@d532 4
d1504 4
@


1.78
log
@Removed the "pip" attribute.
@
text
@d434 1
a434 1
   float  ** fssShipVol);
@


1.77
log
@Continued implementation of PIP.
@
text
@a1001 4
WIT_DECLSPEC witReturnCode STDCALL witGetPip (
   WitRun * const theWitRun,
   witBoolean *   pip);

a1758 4

WIT_DECLSPEC witReturnCode STDCALL witSetPip (
   WitRun * const   theWitRun,
   const witBoolean pip);
@


1.76
log
@Changed last arguement in witSetSubsBomEntryConsRate prototype in wit.h from
   const float * consRate
to
  const float * const consRate
It is now consistent with other float* input parameters in wit.h
@
text
@d566 1
a566 1
WIT_DECLSPEC witReturnCode STDCALL witGetHeurPipSeq (
d568 1
a568 1
   witBoolean * heurPipSeq);
d1525 1
a1525 1
WIT_DECLSPEC witReturnCode STDCALL witSetHeurPipSeq (
d1527 1
a1527 1
   const witBoolean heurPipSeq);
@


1.75
log
@Implemented API function witAppendToPipSeq.
@
text
@d1808 1
a1808 1
   const float * consRate);
@


1.74
log
@Added API function witClearPipSeq.
@
text
@d118 7
@


1.73
log
@Added API function witGetPipSeq.
@
text
@d124 3
@


1.72
log
@Added pipExists attribute.
@
text
@d377 2
a378 2
   int * *            periodList,
   float * *          peggedVolList);
d999 8
@


1.71
log
@Added API function witBuildPip.
@
text
@d996 4
@


1.70
log
@Continued implementation of PIP.
@
text
@d118 3
@


1.69
log
@Continued implementation of PIP.
@
text
@d553 4
d1499 4
@


1.68
log
@Continued implementation of Post-Implosion Pegging.
@
text
@d475 10
@


1.67
log
@Continued implementation of post-implosion pegging.
@
text
@d367 10
d401 10
d447 10
d487 22
a966 4
WIT_DECLSPEC witReturnCode STDCALL witGetPerfPIPegging (
   WitRun * const theWitRun,
   witBoolean * perfPIPegging);

d975 4
a1712 4
WIT_DECLSPEC witReturnCode STDCALL witSetPerfPIPegging (
   WitRun * const theWitRun,
   const witBoolean perfPIPegging);

d1720 4
@


1.66
log
@Began implementation of post-implosion pegging.
@
text
@d915 4
a926 4
WIT_DECLSPEC witReturnCode STDCALL witGetPiPegging (
   WitRun * const theWitRun,
   witBoolean * piPegging);

d1661 4
a1667 4

WIT_DECLSPEC witReturnCode STDCALL witSetPiPegging (
   WitRun * const theWitRun,
   const witBoolean piPegging);
@


1.65
log
@Continued implementation of opt with COIN.
@
text
@d923 4
d1664 4
@


1.64
log
@Continued implementation of opt with COIN.
@
text
@a346 4
WIT_DECLSPEC witReturnCode STDCALL witGetSolverLogFileName (
   WitRun * const theWitRun,
   char ** solverLogFileName);

a1326 4
WIT_DECLSPEC witReturnCode STDCALL witSetSolverLogFileName (
   WitRun * const theWitRun,
   const char * const solverLogFileName);

d2181 8
@


1.63
log
@Minor change.
@
text
@d347 1
a347 1
WIT_DECLSPEC witReturnCode STDCALL witGetCoinLogFileName (
d349 1
a349 1
   char ** coinLogFileName);
d1331 1
a1331 1
WIT_DECLSPEC witReturnCode STDCALL witSetCoinLogFileName (
d1333 1
a1333 1
   const char * const coinLogFileName);
@


1.62
log
@Changed the routingShare attributes from scalars to vectors.
@
text
@d259 1
a259 1
   float * * routingShare);
d331 1
a331 1
   float * * routingShare);
d1087 1
a1087 1
   float * * routingShare);
@


1.61
log
@Continued implementation of opt with COIN.
@
text
@d259 1
a259 1
   float * routingShare);
d331 1
a331 1
   float * routingShare);
d1087 1
a1087 1
   float * routingShare);
d1259 1
a1259 1
   const float routingShare);
d1319 1
a1319 1
   const float routingShare);
d1797 1
a1797 1
   const float routingShare);
@


1.60
log
@Continued implementation of opt with COIN.
@
text
@d347 1
a347 1
WIT_DECLSPEC witReturnCode STDCALL witGetCoinMesgFileName (
d349 1
a349 1
   char ** coinMesgFileName);
d1331 1
a1331 1
WIT_DECLSPEC witReturnCode STDCALL witSetCoinMesgFileName (
d1333 1
a1333 1
   const char * const coinMesgFileName);
@


1.59
log
@Continued implementation of proportionate routing.
@
text
@d347 4
d1330 4
@


1.58
log
@Implemented OSL postSolve error recovery.
@
text
@a212 6
WIT_DECLSPEC witReturnCode STDCALL witGetBomEntryExpShare (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   float * expShare);

d255 6
a296 6
WIT_DECLSPEC witReturnCode STDCALL witGetBopEntryExpShare (
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   float * expShare);

d327 6
a1007 7
WIT_DECLSPEC witReturnCode STDCALL witGetSubsBomEntryExpShare (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   float * expShare);

d1078 7
a1220 6
WIT_DECLSPEC witReturnCode STDCALL witSetBomEntryExpShare (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const float expShare);

d1251 6
a1292 6
WIT_DECLSPEC witReturnCode STDCALL witSetBopEntryExpShare (
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   const float expShare);

d1311 6
a1734 7
WIT_DECLSPEC witReturnCode STDCALL witSetSubsBomEntryExpShare (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const float expShare);

d1783 7
@


1.57
log
@Continued implementation of proportionate routing.
@
text
@d927 4
d1664 4
@


1.56
log
@Continued implementation of proportionate routing.
@
text
@d213 6
d255 6
d1004 7
d1217 6
d1247 6
d1726 7
@


1.55
log
@Fixed mistake in recent commit
@
text
@d837 5
a922 4
WIT_DECLSPEC witReturnCode STDCALL witGetPropRouting (
   WitRun * const theWitRun,
   witBoolean * propRouting);

d1586 5
a1632 4

WIT_DECLSPEC witReturnCode STDCALL witSetPropRouting (
   WitRun * const theWitRun,
   const witBoolean propRouting);
@


1.54
log
@Modified function prototypes for witSetBo[m,p]EntryProductRate.
These prototypes are now consistent with others like witSetBopEntryOffset.
I needed this change because I am passing pointers to these functions as method parameters.
@
text
@d1183 1
a1183 1
   const float * float consRate);
@


1.53
log
@Continued implementation of proportionate routing.
@
text
@d1183 1
a1183 1
   const float * consRate);
d1279 1
a1279 1
   const float * productRate);
@


1.52
log
@Began implementation of Proportionate Routing.
@
text
@d285 1
a285 1
WIT_DECLSPEC witReturnCode STDCALL witGetBopEntryExpFactor (
d289 1
a289 1
   float * expFactor);
d918 4
d1257 1
a1257 1
WIT_DECLSPEC witReturnCode STDCALL witSetBopEntryExpFactor (
d1261 1
a1261 1
   const float expFactor);
d1627 4
@


1.51
log
@Added API function witShutDownHeurAlloc.
@
text
@d285 6
d1252 6
@


1.50
log
@Continued implementation of execPenalties on BOM entries and subs.
@
text
@d1081 3
@


1.49
log
@Added penalties on BOM entries and substitutes to pen-exec.
@
text
@d207 1
a207 1
WIT_DECLSPEC witReturnCode STDCALL witGetBomEntryFalloutRate (
d211 1
a211 1
   float * falloutRate);
d213 1
a213 1
WIT_DECLSPEC witReturnCode STDCALL witGetBomEntryUsePenalty (
d217 1
a217 1
   float * usePenalty);
a260 6
WIT_DECLSPEC witReturnCode STDCALL witGetBomEntryUsePenalty (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   float * usePenalty);

d960 7
a1064 7
WIT_DECLSPEC witReturnCode STDCALL witGetSubsBomEntryUsePenalty (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   float * usePenalty);

d1178 6
a1219 6
WIT_DECLSPEC witReturnCode STDCALL witSetBomEntryUsePenalty (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const float usePenalty);

d1650 7
a1732 7

WIT_DECLSPEC witReturnCode STDCALL witSetSubsBomEntryUsePenalty (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const float usePenalty);
@


1.48
log
@Continued implementation of user-specified heuristic starting solution.
@
text
@d213 6
d261 6
d1064 7
d1220 6
d1732 7
@


1.47
log
@Continued implementation of heuristic initial solution.
@
text
@a466 4
WIT_DECLSPEC witReturnCode STDCALL witGetHeurInitSoln (
   WitRun * const theWitRun,
   witBoolean * heurInitSoln);

d1068 4
a1355 4
WIT_DECLSPEC witReturnCode STDCALL witSetHeurInitSoln (
   WitRun * const theWitRun,
   const witBoolean heurInitSoln);

d1723 4
@


1.46
log
@Continued implementation of heuristic implosion from an initial solution.
Added some debugging code to Single-Source.
@
text
@d467 4
a474 4
WIT_DECLSPEC witReturnCode STDCALL witGetInitHeurSoln (
   WitRun * const theWitRun,
   witBoolean * initHeurSoln);

d1356 4
a1362 4

WIT_DECLSPEC witReturnCode STDCALL witSetInitHeurSoln (
   WitRun * const theWitRun,
   const witBoolean initHeurSoln);
@


1.45
log
@Began implementation of heuristic implosion from an initial solution.
@
text
@d467 1
a467 1
WIT_DECLSPEC witReturnCode STDCALL witGetHeurInitSoln (
d469 1
a469 1
   witBoolean * heurInitSoln);
d471 1
a471 1
WIT_DECLSPEC witReturnCode STDCALL witGetIndependentOffsets (
d473 1
a473 1
   int * independentOffsets);
d1356 1
a1356 1
WIT_DECLSPEC witReturnCode STDCALL witSetHeurInitSoln (
d1358 1
a1358 1
   const witBoolean heurInitSoln);
d1360 1
a1360 1
WIT_DECLSPEC witReturnCode STDCALL witSetIndependentOffsets (
d1362 1
a1362 1
   const witBoolean independentOffsets);
@


1.44
log
@Continued implementation of two-level lot sizes.
@
text
@d467 4
d1355 4
@


1.43
log
@Continued implementation of two-level lot sizes.
@
text
@d680 5
d1485 5
@


1.42
log
@Began implementation of opt implosion with lot sizes.
@
text
@d625 10
d640 5
d1446 10
d1460 5
@


1.41
log
@Continued implementation of Single-Source.
@
text
@d674 4
d1459 4
@


1.40
log
@Continued implementation of single-source.
@
text
@d249 6
d1166 6
@


1.39
log
@Trivial update.
@
text
@a254 6
WIT_DECLSPEC witReturnCode STDCALL witGetBopEntryByProduct (
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   witBoolean * byProduct);

d391 7
a397 1
WIT_DECLSPEC witReturnCode STDCALL witGetDemandSubVolPegging (
d401 1
a401 7
   const int shipPeriod,
   int * lenLists,
   char *** operationNameList,
   int ** bomEntryIndexList,
   int ** subsBomEntryIndexList,
   int ** execPeriodList,
   float ** peggedSubVolList);
d415 1
a415 1
WIT_DECLSPEC witReturnCode STDCALL witGetDemandSelForDel (
d419 7
a425 7
   witBoolean * selForDel);

WIT_DECLSPEC witReturnCode STDCALL witGetDemandPriority (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   int ** priority);
d805 5
d815 5
d825 5
a846 10
WIT_DECLSPEC witReturnCode STDCALL witGetParts (
   WitRun * const theWitRun,
   int * lenPartList,
   char *** partList);

WIT_DECLSPEC witReturnCode STDCALL witGetPartSelForDel (
   WitRun * const theWitRun,
   const char * const partName,
   witBoolean * selForDel);

d1008 1
a1008 1
WIT_DECLSPEC witReturnCode STDCALL witGetSubsBomEntrySubVol (
d1013 1
a1013 1
   float ** subVol);
d1015 1
a1015 1
WIT_DECLSPEC witReturnCode STDCALL witGetSubsBomEntrySelForDel (
d1020 1
a1020 1
   witBoolean * selForDel);
a1166 6
WIT_DECLSPEC witReturnCode STDCALL witSetBopEntryByProduct (
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   const witBoolean byProduct);

d1278 6
a1295 6
WIT_DECLSPEC witReturnCode STDCALL witSetDemandSelForDel (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const witBoolean selForDel);

d1483 10
a1504 5
WIT_DECLSPEC witReturnCode STDCALL witSetPartSelForDel (
   WitRun * const theWitRun,
   const char * const partName,
   const witBoolean selForDel);

d1630 1
a1630 1
WIT_DECLSPEC witReturnCode STDCALL witSetSubsBomEntrySubVol (
d1635 1
a1635 1
   const float * const subVol);
d1637 1
a1637 1
WIT_DECLSPEC witReturnCode STDCALL witSetSubsBomEntrySelForDel (
d1642 1
a1642 1
   const witBoolean selForDel);
d1745 6
d1888 6
@


1.38
log
@Trivial update.
@
text
@d359 1
a359 1
   const char * const partName,
d399 1
a399 1
   const char * const partName,
d557 1
a557 1
   char ** partName,
@


1.37
log
@Trivial update.
@
text
@d547 1
a547 1
   char * * consumingOperationName,
d552 1
a552 1
   char * * producingOperationName,
d557 2
a558 2
   char * * partName,
   char * * demandName);
d562 1
a562 1
   char * * operationName);
d574 1
a574 1
   char * * consumingOperationName,
@


1.36
log
@Continued implementation of object iteration.
@
text
@d2160 1
a2166 1
extern WIT_DECLSPEC WIT_CONST witAttr       WitINACTIVE;
@


1.35
log
@Continued implementation of object iteration.
@
text
@d116 1
a116 2
   WitRun * const theWitRun,
   witAttr * objItrState);
@


1.34
log
@Continued implementation of object iteration.
@
text
@d115 1
a115 1
WIT_DECLSPEC witReturnCode STDCALL witAdvanceItr (
d117 1
a117 1
   witAttr * curItrState);
a337 4
WIT_DECLSPEC witReturnCode STDCALL witGetCurItrState (
   WitRun * const theWitRun,
   witAttr * curItrState);

a475 29
WIT_DECLSPEC witReturnCode STDCALL witGetItrBomEntry (
   WitRun * const theWitRun,
   char * * consumingOperationName,
   int * bomEntryIndex);

WIT_DECLSPEC witReturnCode STDCALL witGetItrBopEntry (
   WitRun * const theWitRun,
   char * * producingOperationName,
   int * bopEntryIndex);

WIT_DECLSPEC witReturnCode STDCALL witGetItrDemand (
   WitRun * const theWitRun,
   char * * partName,
   char * * demandName);

WIT_DECLSPEC witReturnCode STDCALL witGetItrPart (
   WitRun * const theWitRun,
   char ** partName);

WIT_DECLSPEC witReturnCode STDCALL witGetItrOperation (
   WitRun * const theWitRun,
   char * * operationName);

WIT_DECLSPEC witReturnCode STDCALL witGetItrSubsBomEntry (
   WitRun * const theWitRun,
   char * * consumingOperationName,
   int * bomEntryIndex,
   int * subsBomEntryIndex);

a518 4
WIT_DECLSPEC witReturnCode STDCALL witGetObjChoice (
   WitRun * const theWitRun,
   int * objChoice);

d542 37
d1096 1
a1096 1
WIT_DECLSPEC witReturnCode STDCALL witResetItr (
@


1.33
log
@Continued implementation of object iteration.
@
text
@d84 1
a84 2
   const char * const consumedPartName
   );
d89 1
a89 2
   const char * const producedPartName
   );
d94 1
a94 2
   const char * const demandName
   );
d98 1
a98 2
   const char * const operationName
   );
d103 1
a103 2
   const witAttr partCategory
   );
d107 1
a107 2
   const char * const partAndOperationName
   );
d113 5
a117 2
   const char * const consumedPartName
   );
d120 1
a120 2
   WitRun * const theWitRun
   );
d124 1
a124 2
   WitRun * const srcWitRun
   );
d127 1
a127 2
   WitRun * theWitRun
   );
d131 1
a131 2
   const char * const fileName
   );
d140 1
a140 2
   float ** incVolList
   );
d150 1
a150 2
   const witBoolean * const asapMultiExecList
   );
d153 1
a153 2
   WitRun * const theWitRun
   );
d156 1
a156 2
   WitRun * const theWitRun
   );
d159 1
a159 2
   void * mem 
   );
d162 1
a162 2
   WitRun * const theWitRun
   );
d166 1
a166 2
   witBoolean * accAfterSoftLB
   );
d170 1
a170 2
   witBoolean * accAfterOptImp
   );
d174 1
a174 2
   witBoolean * accelerated
   );
d178 1
a178 2
   void ** appData
   );
d182 1
a182 2
   witBoolean * autoPriority
   );
d188 1
a188 2
   void ** appData
   );
d194 1
a194 2
   float ** consRate
   );
d200 1
a200 2
   int * earliestPeriod
   );
d206 1
a206 2
   char ** consumedPartName
   );
d212 1
a212 2
   float * falloutRate
   );
d218 1
a218 2
   int ** impactPeriod
   );
d224 1
a224 2
   int * latestPeriod
   );
d230 1
a230 2
   witBoolean * mandEC
   );
d236 1
a236 2
   int * nSubsBomEntries
   );
d242 1
a242 2
   float ** offset
   );
d248 1
a248 2
   witBoolean * selForDel
   );
d254 1
a254 2
   void ** appData
   );
d260 1
a260 2
   witBoolean * byProduct
   );
d266 1
a266 2
   int * earliestPeriod
   );
d272 1
a272 2
   witBoolean * expAllowed
   );
d278 1
a278 2
   float * expAversion
   );
d284 1
a284 2
   int ** impactPeriod
   );
d290 1
a290 2
   int * latestPeriod
   );
d296 1
a296 2
   float ** offset
   );
d302 1
a302 2
   float ** productRate
   );
d308 1
a308 2
   char ** producedPartName
   );
d314 1
a314 2
   witBoolean * selForDel
   );
d318 1
a318 2
   witBoolean * buildWhenEmpty
   );
d322 9
a330 2
   float * capCost
   );
d336 1
a336 7
   int ** critPeriod
   );

WIT_DECLSPEC witReturnCode STDCALL witGetCompPrices (
   WitRun * const theWitRun,
   witBoolean * compPrices
   );
d338 1
a338 1
WIT_DECLSPEC witReturnCode STDCALL witGetComputeCriticalList (
d340 1
a340 2
   witBoolean * computeCriticalList
   );
d346 1
a346 2
   void ** appData
   );
d354 1
a354 2
   float ** hardUpper
   );
d360 1
a360 2
   float ** demandVol
   );
d370 1
a370 2
   float ** peggedExecVolList
   );
d376 1
a376 2
   int  * focusHorizon
   );
d382 1
a382 2
   float  ** fssShipVol
   );
d388 1
a388 2
   float * grossRev
   );
d394 1
a394 2
   float ** obj1CumShipReward
   );
d400 1
a400 2
   float ** obj1ShipReward
   );
d412 1
a412 2
   float ** peggedSubVolList
   );
d418 1
a418 2
   int ** shipLateUB
   );
d424 1
a424 2
   float ** shipVol
   );
d430 1
a430 2
   witBoolean * selForDel
   );
d436 1
a436 2
   int ** priority
   );
d440 1
a440 2
   int * equitablity
   );
d444 1
a444 2
   int * execEmptyBom
   );
d448 1
a448 2
   float * expCutoff
   );
d452 1
a452 2
   witBoolean * feasible
   );
d458 1
a458 2
   float *** shortageVolList
   );
d462 1
a462 2
   witBoolean * forcedMultiEq
   );
d466 1
a466 2
   int * hashTableSize
   );
d470 1
a470 2
   witBoolean * heurAllocActive
   );
d474 1
a474 2
   int * independentOffsets
   );
d478 30
a507 2
   float * invCost
   );
d511 1
a511 2
   float * lotSizeTol
   );
d515 1
a515 2
   FILE ** mesgFile
   );
d519 1
a519 2
   char ** mesgFileAccessMode
   );
d523 1
a523 2
   char ** mesgFileName
   );
d528 1
a528 2
   witBoolean * mesgPrintMunber
   );
d533 1
a533 2
   witBoolean * mesgStopRunning
   );
d538 1
a538 2
   int * mesgTimesPrint
   );
d542 1
a542 2
   witBoolean * multiExec
   );
d546 1
a546 2
   witBoolean * multiRoute
   );
d550 1
a550 2
   int * nPeriods
   );
d554 1
a554 2
   int * objChoice
   );
d561 1
a561 2
   float * obj2SubValue
   );
d565 1
a565 2
   float * obj2Winv
   );
d569 1
a569 2
   float * obj2Wrev
   );
d573 1
a573 2
   float * obj2Wserv
   );
d577 1
a577 2
   float * obj2Wsub
   );
d582 1
a582 2
   float * boundsValue
   );
d587 1
a587 2
   void ** appData
   );
d594 1
a594 2
   float ** hardUpper
   );
d599 1
a599 2
   float * execPenalty
   );
d604 1
a604 2
   witBoolean ** executable
   );
d609 1
a609 2
   float ** execVol
   );
d614 1
a614 2
   witBoolean * exists
   );
d619 1
a619 2
   float ** fssExecVol
   );
d624 1
a624 2
   float ** incLotSize
   );
d629 1
a629 2
   float ** minLotSize
   );
d634 1
a634 2
   float ** mrpExecVol
   );
d639 1
a639 2
   int * nBomEntries
   );
d644 1
a644 2
   int * nBopEntries
   );
d649 1
a649 2
   float ** obj1ExecCost
   );
d654 1
a654 2
   float * obj2AuxCost
   );
d659 1
a659 2
   char *** operationList
   );
d664 1
a664 2
   witBoolean * selForDel
   );
d669 1
a669 2
   float ** yieldRate
   );
d673 1
a673 2
   witAttr * optInitMethod
   );
d677 1
a677 2
   char ** oslMesgFileName
   );
d681 1
a681 2
   int * outputPrecision
   );
d686 1
a686 2
   void ** appData
   );
d692 1
a692 2
   char *** partNameList
   );
d697 1
a697 2
   int ** buildAheadUB
   );
d702 1
a702 2
   witBoolean * buildAsap
   );
d707 1
a707 2
   witBoolean * buildNstn
   );
d712 1
a712 2
   witAttr * category
   );
d717 1
a717 2
   float ** consVol
   );
d724 1
a724 2
   int * bomEntryIndex
   );
d732 1
a732 2
   int * subsBomEntryIndex
   );
d738 1
a738 2
   char *** demandList
   );
d743 1
a743 2
   float ** excessVol
   );
d748 1
a748 2
   witBoolean * exists
   );
d753 1
a753 2
   float ** shortageVol
   );
d758 1
a758 2
   float ** mrpConsVol
   );
d763 1
a763 2
   float ** mrpExcessVol
   );
d768 1
a768 2
   float ** mrpResidualVol
   );
d773 1
a773 2
   int * nConsumingBomEntries
   );
d778 1
a778 2
   int * nConsumingSubsBomEntries
   );
d783 1
a783 2
   int * nProducingBopEntries
   );
d788 1
a788 2
   float ** obj1ScrapScrap
   );
d793 1
a793 2
   float ** obj1StockCost
   );
d800 1
a800 2
   int * bopEntryIndex
   );
d805 1
a805 2
   float ** reqVol
   );
d810 1
a810 2
   float ** residualVol
   );
d815 1
a815 2
   float ** scrapVol
   );
d820 1
a820 2
   float ** shadowPrice
   );
d827 1
a827 2
   float ** hardUpper
   );
d832 1
a832 2
   float ** stockVol
   );
d837 1
a837 2
   float ** supplyVol
   );
d842 1
a842 2
   char *** partList
   );
d847 1
a847 2
   witBoolean * selForDel
   );
d852 1
a852 2
   float * unitCost
   );
d856 1
a856 2
   witBoolean * penExec
   );
d860 1
a860 2
   witBoolean * perfPegging
   );
d864 1
a864 2
   float * periodsPerYear
   );
d868 1
a868 2
   witBoolean * postprocessed
   );
d872 1
a872 2
   witBoolean * prefHighStockSLBs
   );
d876 1
a876 2
   witBoolean * preprocessed
   );
d880 1
a880 2
   witBoolean * respectStockSLBs
   );
d884 1
a884 2
   witBoolean * roundReqVols
   );
d888 1
a888 2
   witBoolean * selSplit
   );
d892 1
a892 2
   witBoolean * skipFailures
   );
d896 1
a896 2
   witBoolean * stockReallocation
   );
d903 1
a903 2
   void ** appData
   );
d910 1
a910 2
   float ** consRate
   );
d917 1
a917 2
   char  ** consumedPart
   );
d924 1
a924 2
   int * earliestPeriod
   );
d931 1
a931 2
   witBoolean * expAllowed
   );
d938 1
a938 2
   float * expNetAversion
   );
d945 1
a945 2
   float * falloutRate
   );
d952 1
a952 2
   float ** fssSubVol
   );
d959 1
a959 2
   int ** impactPeriod
   );
d966 1
a966 2
   int * latestPeriod
   );
d973 1
a973 2
   witBoolean * mrpNetAllowed
   );
d980 1
a980 2
   float ** mrpSubVol
   );
d987 1
a987 2
   witBoolean * netAllowed
   );
d994 1
a994 2
   float ** obj1SubCost
   );
d1001 1
a1001 2
   float * obj2SubPenalty
   );
d1008 1
a1008 2
   float ** offset
   );
d1015 1
a1015 2
   float ** subVol
   );
d1022 1
a1022 2
   witBoolean * selForDel
   );
d1026 1
a1026 2
   char ** title
   );
d1030 1
a1030 2
   witBoolean * truncOffsets
   );
d1034 1
a1034 2
   witBoolean * twoWayMultiExec
   );
d1038 1
a1038 2
   witBoolean * focusHorizons
   );
d1042 1
a1042 2
   float * wbounds
   );
d1046 1
a1046 2
   witBoolean * wit34Compatible
   );
d1049 1
a1049 2
   WitRun * const theWitRun
   );
d1057 1
a1057 2
   float * incVol
   );
d1066 1
a1066 2
   witBoolean asapMultiExec
   );
d1069 1
a1069 2
   WitRun * const theWitRun
   );
d1072 1
a1072 2
   WitRun * const theWitRun
   );
d1075 1
a1075 2
   WitRun ** theWitRun
   );
d1078 1
a1078 2
   WitRun * const theWitRun
   );
d1081 1
a1081 2
   WitRun * const theWitRun
   );
d1084 1
a1084 2
   WitRun * const theWitRun
   );
d1087 1
a1087 2
   WitRun * const theWitRun
   );
d1090 1
a1090 2
   WitRun * const theWitRun
   );
d1094 4
a1097 2
   const char * const mesgFileName
   );
d1101 1
a1101 2
   const witBoolean accAfterSoftLB
   );
d1105 1
a1105 2
   const witBoolean accAfterOptImp
   );
d1109 1
a1109 2
   void * const appData
   );
d1113 1
a1113 2
   const witBoolean autoPriority
   );
d1119 1
a1119 2
   void * const appData
   );
d1125 1
a1125 2
   const float * consRate
   );
d1131 1
a1131 2
   const int earliestPeriod
   );
d1137 1
a1137 2
   const float falloutRate
   );
d1143 1
a1143 2
   const int latestPeriod
   );
d1149 1
a1149 2
   const witBoolean mandEC
   );
d1155 1
a1155 2
   const float * const offset
   );
d1161 1
a1161 2
   const witBoolean selForDel
   );
d1167 1
a1167 2
   void * const appData
   );
d1173 1
a1173 2
   const witBoolean byProduct
   );
d1179 1
a1179 2
   const int earliestPeriod
   );
d1185 1
a1185 2
   const witBoolean expAllowed
   );
d1191 1
a1191 2
   const float expAversion
   );
d1197 1
a1197 2
   const int latestPeriod
   );
d1203 1
a1203 2
   const float * const offset
   );
d1209 1
a1209 2
   const float * productRate
   );
d1215 1
a1215 2
   const witBoolean selForDel
   );
d1219 1
a1219 2
   const float capCost
   );
d1223 1
a1223 2
   const witBoolean compPrices
   );
d1227 1
a1227 2
   const witBoolean computeCriticalList
   );
d1233 1
a1233 2
   void * const appData
   );
d1241 1
a1241 2
   const float * const hardUpper
   );
d1247 1
a1247 2
   const float * const iDemandVol
   );
d1253 1
a1253 2
   const int  focusHorizon
   );
d1259 1
a1259 2
   const float * const  fssShipVol
   );
d1266 1
a1266 2
   const float grossRev
   );
d1272 1
a1272 2
   const float * const obj1CumShipReward
   );
d1278 1
a1278 2
   const float * const obj1ShipReward
   );
d1284 1
a1284 2
   const int * const priority
   );
d1290 1
a1290 2
   const int * shipLateUB
   );
d1296 1
a1296 2
   const float * const shipVol
   );
d1302 1
a1302 2
   const witBoolean selForDel
   );
d1306 1
a1306 2
   const int equitablity
   );
d1310 1
a1310 2
   const witBoolean execEmptyBom
   );
d1314 1
a1314 2
   const float expCutoff
   );
d1318 1
a1318 2
   const witBoolean ForcedMultiEq
   );
d1322 1
a1322 2
   const int hashTableSize
   );
d1326 1
a1326 2
   const witBoolean independentOffsets
   );
d1330 1
a1330 2
   const float invCost
   );
d1334 1
a1334 2
   const float lotSizeTol
   );
d1339 1
a1339 2
   const char * const mesgFileAccessMode
   );
d1344 1
a1344 2
   const char * const fileName
   );
d1350 1
a1350 2
   const witBoolean mesgPrintMunber
   );
d1356 1
a1356 2
   const witBoolean mesgStopRunning
   );
d1362 1
a1362 2
   const int mesgTimesPrint
   );
d1366 1
a1366 2
   const witBoolean multiExec
   );
d1370 1
a1370 2
   const witBoolean multiRoute
   );
d1374 1
a1374 2
   const int nPeriods
   );
d1378 1
a1378 2
   const float obj2Winv
   );
d1382 1
a1382 2
   const float obj2Wrev
   );
d1386 1
a1386 2
   const float obj2Wserv
   );
d1390 1
a1390 2
   const float obj2Wsub
   );
d1394 1
a1394 2
   const int objChoice
   );
d1399 1
a1399 2
   void * const appData
   );
d1406 1
a1406 2
   const float * const hardUpper
   );
d1411 1
a1411 2
   const float execPenalty
   );
d1416 1
a1416 2
   const float * const execVol
   );
d1421 1
a1421 2
   const float * const incLotSize
   );
d1426 1
a1426 2
   const float * const minLotSize
   );
d1431 1
a1431 2
   const float * const obj1ExecCost
   );
d1436 1
a1436 2
   const float obj2AuxCost
   );
d1441 1
a1441 2
   const witBoolean selForDel
   );
d1446 1
a1446 2
   const float * const yieldRate
   );
d1450 1
a1450 2
   const witAttr optInitMethod
   );
d1454 1
a1454 2
   const char * const oslMesgFileName
   );
d1458 1
a1458 2
   const int outputPrecision
   );
d1464 1
a1464 2
   void * const appData
   );
d1469 1
a1469 2
   const int * const buildAheadUB
   );
d1474 1
a1474 2
   const witBoolean buildAsap
   );
d1479 1
a1479 2
   const witBoolean buildNstn
   );
d1484 1
a1484 2
   const float * const obj1ScrapScrap
   );
d1489 1
a1489 2
   const float * const obj1StockCost
   );
d1496 1
a1496 2
   const float * const hardUpper
   );
d1501 1
a1501 2
   const float * const supplyVol
   );
d1506 1
a1506 2
   const witBoolean selForDel
   );
d1511 1
a1511 2
   const float unitCost
   );
d1515 1
a1515 2
   const witBoolean penExec
   );
d1519 1
a1519 2
   const witBoolean perfPegging
   );
d1523 1
a1523 2
   const float periodsPerYear
   );
d1527 1
a1527 2
   const witBoolean prefHighStockSLBs
   );
d1531 1
a1531 2
   const witBoolean respectStockSLBs
   );
d1535 1
a1535 2
   const witBoolean roundReqVols
   );
d1539 1
a1539 2
   const witBoolean selSplit
   );
d1543 1
a1543 2
   const witBoolean skipFailures
   );
d1547 1
a1547 2
   const witBoolean stockReallocation
   );
d1554 1
a1554 2
   void * const appData
   );
d1561 1
a1561 2
   const float * consRate
   );
d1568 1
a1568 2
   const int earliestPeriod
   );
d1575 1
a1575 2
   const witBoolean expAllowed
   );
d1582 1
a1582 2
   const float expNetAversion
   );
d1589 1
a1589 2
   const float falloutRate
   );
d1596 1
a1596 2
   const int latestPeriod
   );
d1603 1
a1603 2
   const witBoolean mrpNetAllowed
   );
d1610 1
a1610 2
   const witBoolean netAllowed
   );
d1617 1
a1617 2
   const float * const obj1SubCost
   );
d1624 1
a1624 2
   const float obj2SubPenalty
   );
d1631 1
a1631 2
   const float * const offset
   );
d1638 1
a1638 2
   const float * const subVol
   );
d1645 1
a1645 2
   const witBoolean selForDel
   );
d1649 1
a1649 2
   const char * const title
   );
d1653 1
a1653 2
   const witBoolean truncOffsets
   );
d1657 1
a1657 2
   const witBoolean twoWayMultiExec
   );
d1661 1
a1661 2
   const witBoolean useFocusHorizons
   );
d1665 1
a1665 2
   const float wbounds
   );
d1669 1
a1669 2
   const witBoolean wit34Compatible
   );
d1672 1
a1672 2
   WitRun * const theWitRun
   );
d1678 1
a1678 2
   const int maxListLen
   );
d1682 1
a1682 2
   const char * const fileName
   );
d1687 1
a1687 2
   const witFileFormat fileFormat
   );
d1692 1
a1692 2
   const witFileFormat fileFormat
   );
d1697 1
a1697 2
   const witFileFormat fileFormat
   );
d1709 1
a1709 2
   ...
   );
d1715 1
a1715 2
   ...
   );
d1721 1
a1721 2
   ...
   );
d1728 1
a1728 2
   ...
   );
d1734 1
a1734 2
   int * fallout
   );
d1740 1
a1740 2
   float * usageRate
   );
d1746 1
a1746 2
   float * usageTime
   );
d1752 1
a1752 2
   float * prodRate
   );
d1758 1
a1758 2
   int * buildAheadLimit
   );
d1764 1
a1764 2
   int ** buildAheadUB
   );
d1770 1
a1770 2
   witBoolean * prefBuildAhead
   );
d1776 1
a1776 2
   int * shipLateLimit
   );
d1780 1
a1780 2
   witBoolean * localBuildAhead
   );
d1784 1
a1784 2
   witBoolean * localMultiExec
   );
d1789 1
a1789 2
   int ** yield
   );
d1794 1
a1794 2
   int * buildAheadLimit
   );
d1799 1
a1799 2
   float ** cycleTime
   );
d1804 1
a1804 2
   float ** incLotSize
   );
d1809 1
a1809 2
   float ** minLotSize
   );
d1814 1
a1814 2
   float ** mrpProdVol
   );
d1819 1
a1819 2
   int * nBomEntries
   );
d1824 1
a1824 2
   float ** obj1ProdCost
   );
d1831 1
a1831 2
   float ** hardUpper
   );
d1836 1
a1836 2
   float ** prodVol
   );
d1841 1
a1841 2
   int ** yield
   );
d1845 1
a1845 2
   witBoolean * stockRealloc
   );
d1852 1
a1852 2
   int * fallout
   );
d1859 1
a1859 2
   float ** prodVol
   );
d1866 1
a1866 2
   float * usageRate
   );
d1872 1
a1872 2
   const int fallout
   );
d1878 1
a1878 2
   const float usageRate
   );
d1884 1
a1884 2
   const float usageTime
   );
d1890 1
a1890 2
   const float prodRate
   );
d1894 1
a1894 2
   const witBoolean buildWhenEmpty
   );
d1900 1
a1900 2
   const int buildAheadLimit
   );
d1906 1
a1906 2
   const int * buildAheadUB
   );
d1912 1
a1912 2
   const witBoolean prefBuildAhead
   );
d1918 1
a1918 2
   const int shipLateLimit
   );
d1922 1
a1922 2
   const witBoolean localBuildAhead
   );
d1926 1
a1926 2
   const witBoolean localMultiExec
   );
d1931 1
a1931 2
   const int * const yield
   );
d1936 1
a1936 2
   const int buildAheadLimit
   );
d1941 1
a1941 2
   const float * const cycleTime
   );
d1946 1
a1946 2
   const float * const incLotSize
   );
d1951 1
a1951 2
   const float * const minLotSize
   );
d1956 1
a1956 2
   const float * const obj1ProdCost
   );
d1963 1
a1963 2
   const float * const hardUpper
   );
d1968 1
a1968 2
   const float * const prodVol
   );
d1973 1
a1973 2
   const int * const yield
   );
d1977 1
a1977 2
   const witBoolean stockRealloc
   );
d1984 1
a1984 2
   const int fallout
   );
d1990 1
a1990 2
   const float * const prodVol
   );
d1997 1
a1997 2
   const float usageRate
   );
d2002 1
a2002 2
   const witFileFormat fileFormat
   );
d2010 1
a2010 2
   witBoolean * nonMrSelSplit
   );
d2014 1
a2014 2
   const witBoolean nonMrSelSplit
   );
d2019 1
a2019 2
   witBoolean * baSelSplit
   );
d2024 1
a2024 2
   const witBoolean baSelSplit
   );
d2030 1
a2030 2
   witBoolean * meSelSplit
   );
d2036 1
a2036 2
   const witBoolean meSelSplit
   );
d2040 1
a2040 2
   witBoolean * srSelSplit
   );
d2044 1
a2044 2
   const witBoolean srSelSplit
   );
d2048 1
a2048 2
   int* isOne
   );
d2051 1
a2051 2
   WitRun * const theWitRun
   );
d2054 1
a2054 2
   WitRun * const theWitRun
   );
d2057 1
a2057 2
   WitRun * const theWitRun
   );
d2061 1
a2061 2
   void ** mem 
   );
d2161 7
a2167 6
extern WIT_DECLSPEC WIT_CONST witAttr       WitITR_AT_PART;
extern WIT_DECLSPEC WIT_CONST witAttr       WitITR_AT_DEMAND;
extern WIT_DECLSPEC WIT_CONST witAttr       WitITR_AT_OPERATION;
extern WIT_DECLSPEC WIT_CONST witAttr       WitITR_AT_BOM_ENTRY;
extern WIT_DECLSPEC WIT_CONST witAttr       WitITR_AT_SUB_ENTRY;
extern WIT_DECLSPEC WIT_CONST witAttr       WitITR_AT_BOP_ENTRY;
@


1.32
log
@removed space between asterisks
@
text
@d2492 7
@


1.31
log
@Moved some API functions around.
@
text
@d458 1
a458 1
   char ** * operationNameList,
@


1.30
log
@Finished implementation of selection splitting for multi-route.
@
text
@a327 7
WIT_DECLSPEC witReturnCode STDCALL witGetBopEntryMeSelSplit (
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   witBoolean * meSelSplit
   );

a761 6
WIT_DECLSPEC witReturnCode STDCALL witGetPartBaSelSplit (
   WitRun * const theWitRun,
   const char * const partName,
   witBoolean * baSelSplit
   );

a1013 5
WIT_DECLSPEC witReturnCode STDCALL witGetSrSelSplit (
   WitRun * const theWitRun,
   witBoolean * srSelSplit
   );

a1365 7
WIT_DECLSPEC witReturnCode STDCALL witSetBopEntryMeSelSplit (
   WitRun * const theWitRun,
   const char * const producingOperationName,
   const int bopEntryIndex,
   const witBoolean meSelSplit
   );

a1685 6
WIT_DECLSPEC witReturnCode STDCALL witSetPartBaSelSplit (
   WitRun * const theWitRun,
   const char * const partName,
   const witBoolean baSelSplit
   );

a1786 5
WIT_DECLSPEC witReturnCode STDCALL witSetSrSelSplit (
   WitRun * const theWitRun,
   const witBoolean srSelSplit
   );

d2334 36
@


1.29
log
@Initial implementation of selection splitting for multi-route.
@
text
@a604 5
WIT_DECLSPEC witReturnCode STDCALL witGetNonMrSelSplit (
   WitRun * const theWitRun,
   witBoolean * nonMrSelSplit
   );

a1601 5
WIT_DECLSPEC witReturnCode STDCALL witSetNonMrSelSplit (
   WitRun * const theWitRun,
   const witBoolean nonMrSelSplit
   );

d2361 10
@


1.28
log
@The code:
WIT_DECLSPEC witReturnCode STDCALL witGetDemandGrossRev (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   float * grev
   );
WIT_DECLSPEC witReturnCode STDCALL witGetOperationNBopEntries (
   WitRun * const theWitRun,
   const char * const producingOperationName,
   int * nBomEntries
   );
was changed to be:
WIT_DECLSPEC witReturnCode STDCALL witGetDemandGrossRev (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   float * grossRev
   );
WIT_DECLSPEC witReturnCode STDCALL witGetOperationNBopEntries (
   WitRun * const theWitRun,
   const char * const producingOperationName,
   int * nBopEntries
   );
I changed this so wit.h works better with Dave Jensen's mshell code.
@
text
@d605 5
d1017 5
d1607 5
d1811 5
@


1.27
log
@Began implementation of selection splitting for stock reallocation.
@
text
@d442 1
a442 1
   float * grev
d715 1
a715 1
   int * nBomEntries
@


1.26
log
@Removed blanks between *'s.
For example "float * *" changed to "float **".
This is to allow DaveJensen's mshell code development to work more easily
@
text
@d1022 5
d1806 5
@


1.25
log
@Changed selStockRe attribute to stockReallocation (fullSR, internally).
@
text
@d147 1
a147 1
   float * * incVolList
d157 1
a157 1
   float * * incVolList,
d213 1
a213 1
   float * * consRate
d346 1
a346 1
   float * * productRate
d419 3
a421 3
   char * * * operationNameList,
   int * * execPeriodList,
   float * * peggedExecVolList
d465 5
a469 5
   char * * * operationNameList,
   int * * bomEntryIndexList,
   int * * subsBomEntryIndexList,
   int * * execPeriodList,
   float * * peggedSubVolList
d476 1
a476 1
   int * * shipLateUB
d1035 1
a1035 1
   float * * consRate
d1168 1
a1168 1
   char * * title
d2053 1
a2053 1
   int * * buildAheadUB
@


1.24
log
@Replaced uncondStockRe attribute with the old stockRealloc attribute.
@
text
@d1012 1
a1012 1
WIT_DECLSPEC witReturnCode STDCALL witGetSelStockRe (
d1014 1
a1014 1
   witBoolean * selStockRe
d1017 1
a1017 1
WIT_DECLSPEC witReturnCode STDCALL witGetSkipFailures (
d1019 1
a1019 1
   witBoolean * skipFailures
d1793 1
a1793 1
WIT_DECLSPEC witReturnCode STDCALL witSetSelStockRe (
d1795 1
a1795 1
   const witBoolean selStockRe
d1798 1
a1798 1
WIT_DECLSPEC witReturnCode STDCALL witSetSkipFailures (
d1800 1
a1800 1
   const witBoolean skipFailures
@


1.23
log
@Renamed mandatory stock reallocation to unconditional stock reallocation.
@
text
@a1180 5
WIT_DECLSPEC witReturnCode STDCALL witGetUncondStockRe (
   WitRun * const theWitRun,
   witBoolean * uncondStockRe
   );

a1927 5
   );

WIT_DECLSPEC witReturnCode STDCALL witSetUncondStockRe (
   WitRun * const theWitRun,
   const witBoolean uncondStockRe
@


1.22
log
@Changed attribute stockRealloc to mandStockRe.
@
text
@a556 5
WIT_DECLSPEC witReturnCode STDCALL witGetMandStockRe (
   WitRun * const theWitRun,
   witBoolean * mandStockRe
   );

d1181 5
a1581 5
WIT_DECLSPEC witReturnCode STDCALL witSetMandStockRe (
   WitRun * const theWitRun,
   const witBoolean mandStockRe
   );

d1933 5
@


1.21
log
@Continued implementation of selective stock reallocation.
@
text
@d557 5
a1026 5
WIT_DECLSPEC witReturnCode STDCALL witGetStockRealloc (
   WitRun * const theWitRun,
   witBoolean * stockRealloc
   );

d1582 5
a1812 5
WIT_DECLSPEC witReturnCode STDCALL witSetStockRealloc (
   WitRun * const theWitRun,
   const witBoolean stockRealloc
   );

d2158 5
d2312 5
@


1.20
log
@added witMalloc function
@
text
@d1012 1
a1012 1
WIT_DECLSPEC witReturnCode STDCALL witGetSelStockRealloc (
d1014 1
a1014 1
   witBoolean * selStockRealloc
a1231 5
WIT_DECLSPEC witReturnCode STDCALL witMalloc (
   size_t size,
   void ** mem 
   );

d1798 1
a1798 1
WIT_DECLSPEC witReturnCode STDCALL witSetSelStockRealloc (
d1800 1
a1800 1
   const witBoolean selStockRealloc
d2357 5
@


1.19
log
@Added selStockRealloc attribute.
@
text
@d1232 5
@


1.18
log
@Added shadowPrice and compPrices attributes.
@
text
@d1012 5
d1796 5
@


1.17
log
@Minor change.
@
text
@a362 5
WIT_DECLSPEC witReturnCode STDCALL witGetWit34Compatible (
   WitRun * const theWitRun,
   witBoolean * wit34Compatible
   );

d380 5
d928 6
d1191 5
d1402 1
a1402 1
WIT_DECLSPEC witReturnCode STDCALL witSetWit34Compatible (
d1404 1
a1404 1
   const witBoolean wit34Compatible
d1407 1
a1407 1
WIT_DECLSPEC witReturnCode STDCALL witSetCapCost (
d1409 1
a1409 1
   const float capCost
d1938 5
@


1.16
log
@Continued implementation of pegging.
@
text
@d417 1
a417 1
   int shipPeriod,
d463 1
a463 1
   int shipPeriod,
d971 1
a971 1
WIT_DECLSPEC witReturnCode STDCALL witGetPeggingNeeded (
d973 1
a973 1
   witBoolean * peggingNeeded
d1757 1
a1757 1
WIT_DECLSPEC witReturnCode STDCALL witSetPeggingNeeded (
d1759 1
a1759 1
   const witBoolean peggingNeeded
@


1.15
log
@Continued implementation of pegging.
@
text
@d413 11
d459 1
a459 12
WIT_DECLSPEC witReturnCode STDCALL witGetDemandPeggedExecVols (
   WitRun * const theWitRun,
   const char * const partName,
   const char * const demandName,
   int shipPeriod,
   int * lenLists,
   char * * * operationNameList,
   int * * execPeriodList,
   float * * peggedExecVolList
   );

WIT_DECLSPEC witReturnCode STDCALL witGetDemandPeggedSubVols (
d971 1
a971 1
WIT_DECLSPEC witReturnCode STDCALL witGetPegging (
d973 1
a973 1
   witBoolean * pegging
d1757 1
a1757 1
WIT_DECLSPEC witReturnCode STDCALL witSetPegging (
d1759 1
a1759 1
   const witBoolean pegging
@


1.14
log
@Continued implementation of pegging.
@
text
@d971 1
a971 1
WIT_DECLSPEC witReturnCode STDCALL witGetPerfPegging (
d973 1
a973 1
   witBoolean * perfPegging
d1757 1
a1757 1
WIT_DECLSPEC witReturnCode STDCALL witSetPerfPegging (
d1759 1
a1759 1
   const witBoolean perfPegging
@


1.13
log
@Continued implementation of pegging.
@
text
@a499 5
WIT_DECLSPEC witReturnCode STDCALL witGetDoPegging (
   WitRun * const theWitRun,
   witBoolean * doPegging
   );

d971 5
a1492 5
WIT_DECLSPEC witReturnCode STDCALL witSetDoPegging (
   WitRun * const theWitRun,
   const witBoolean doPegging
   );

d1757 5
a1769 5
   );

WIT_DECLSPEC witReturnCode STDCALL witSetDoPegging (
   WitRun * const theWitRun,
   const witBoolean doPegging
@


1.12
log
@Initial implementation of pegging.
@
text
@d456 14
a469 1
   float * * deltaExecVolList
@


1.11
log
@Added meSelSplitOK development parameter.
Added meSelSplit attribute.
Refactoring for sel-split for multi-exec.
@
text
@d122 4
d448 11
d487 1
a487 1
WIT_DECLSPEC witReturnCode STDCALL witGetHeurAllocActive (
d489 1
a489 1
   witBoolean * heurAllocActive
d529 5
d1480 5
d1757 5
@


1.10
log
@Used rusage for timing on AIX.
Made generic class StackSpSched use only 1 argument.
Added baSelSplit attribute.
Removed selSplit development parameter.
Added selSplitAll development parameter.
@
text
@d324 7
d1328 7
@


1.9
log
@Implemented EBS lower bound adjustment for sel-split.
@
text
@d734 6
d1641 6
@


1.8
log
@Implemented respectStockSLBs and prefHighStockSLBs global attributes.
@
text
@d123 2
a124 2
   WitRun * const lhsWitRun,
   WitRun * const rhsWitRun
@


1.7
log
@Replaced some scalar attributes with vector attributes:

   BOM entry  usageRate ==> consRate
   substitute usageRate ==> consRate
   BOP entry  prodRate  ==> productRate
@
text
@d940 5
d950 5
d1701 10
@


1.6
log
@Outer API: Merged all no-longer-documented functions into one section.
Outer API: Moved build-ahead by demand functions into the no-longer-documented
   section.
Simplified the rules for two-way multiple execution periods.
@
text
@d205 7
a274 7
WIT_DECLSPEC witReturnCode STDCALL witGetBomEntryUsageRate (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   float * usageRate
   );

d331 1
a331 1
WIT_DECLSPEC witReturnCode STDCALL witGetBopEntryProdRate (
d335 1
a335 1
   float * prodRate
d968 8
a1103 8
WIT_DECLSPEC witReturnCode STDCALL witGetSubsBomEntryUsageRate (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   float * usageRate
   );

d1216 7
a1264 7
WIT_DECLSPEC witReturnCode STDCALL witSetBomEntryUsageRate (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const float usageRate
   );

d1314 1
a1314 1
WIT_DECLSPEC witReturnCode STDCALL witSetBopEntryProdRate (
d1318 1
a1318 1
   const float prodRate
d1716 8
a1819 8
WIT_DECLSPEC witReturnCode STDCALL witSetSubsBomEntryUsageRate (
   WitRun * const theWitRun,
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const float usageRate
   );

d1921 7
d1935 7
d2064 8
d2079 7
d2093 7
d2212 8
@


1.5
log
@Finished implementing stock reallocation.
@
text
@a385 7
WIT_DECLSPEC witReturnCode STDCALL witGetDemandBuildAheadUB (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   int * * buildAheadUB
   );

a436 7
WIT_DECLSPEC witReturnCode STDCALL witGetDemandPrefBuildAhead (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   witBoolean * prefBuildAhead
   );

a1349 7
WIT_DECLSPEC witReturnCode STDCALL witSetDemandBuildAheadUB (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const int * buildAheadUB
   );

a1401 7
WIT_DECLSPEC witReturnCode STDCALL witSetDemandPrefBuildAhead (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   const witBoolean prefBuildAhead
   );

d1880 3
a1882 2
/* WIT API functions that were introduced in WIT 5.0 and later removed from   */
/* the documented API. They are included here for upward compatibility.       */
d1885 1
a1885 1
WIT_DECLSPEC witReturnCode STDCALL witGetLocalBuildAhead (
d1887 3
a1889 1
   witBoolean * localBuildAhead
d1892 1
a1892 1
WIT_DECLSPEC witReturnCode STDCALL witGetLocalMultiExec (
d1894 3
a1896 1
   witBoolean * localMultiExec
d1899 1
a1899 11
WIT_DECLSPEC witReturnCode STDCALL witSetLocalBuildAhead (
   WitRun * const theWitRun,
   const witBoolean localBuildAhead
   );

WIT_DECLSPEC witReturnCode STDCALL witSetLocalMultiExec (
   WitRun * const theWitRun,
   const witBoolean localMultiExec
   );

WIT_DECLSPEC witReturnCode STDCALL witGetPartBuildAheadLimit (
d1902 2
a1903 1
   int * buildAheadLimit
d1906 1
a1906 12
WIT_DECLSPEC witReturnCode STDCALL witSetPartBuildAheadLimit (
   WitRun * const theWitRun,
   const char * const partName,
   const int buildAheadLimit
   );

/*----------------------------------------------------------------------------*/
/* WIT API functions that were introduced in WIT 4.0 and later removed from   */
/* the documented API. They are included here for upward compatibility.       */
/*----------------------------------------------------------------------------*/

WIT_DECLSPEC witReturnCode STDCALL witGetBomEntryFallout (
d1910 2
a1911 1
   int * fallout
d1914 1
a1914 7
WIT_DECLSPEC witReturnCode STDCALL witGetOperationYield (
   WitRun * const theWitRun,
   const char * const operationName,
   int ** yield
   );

WIT_DECLSPEC witReturnCode STDCALL witGetSubsBomEntryFallout (
a1917 1
   const int subsBomEntryIndex,
d1921 1
a1921 1
WIT_DECLSPEC witReturnCode STDCALL witSetBomEntryFallout (
d1925 1
a1925 1
   const int fallout
d1928 1
a1928 1
WIT_DECLSPEC witReturnCode STDCALL witSetOperationYield (
d1930 3
a1932 2
   const char * const operationName,
   const int * const yield
d1935 1
a1935 1
WIT_DECLSPEC witReturnCode STDCALL witSetSubsBomEntryFallout (
d1937 3
a1939 4
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const int subsBomEntryIndex,
   const int fallout
d1942 1
a1942 7
/*----------------------------------------------------------------------------*/
/* WIT API functions that were introduced in WIT 3.4 or earlier and later     */
/* removed from the documented API. They are included here for upward         */
/* compatibility.                                                             */
/*----------------------------------------------------------------------------*/

WIT_DECLSPEC witReturnCode STDCALL witAddBomEntryVa (
d1944 3
a1946 3
   const char * const consumingOperationName,
   const char * const consumedPartName,
   ...
d1949 1
a1949 1
WIT_DECLSPEC witReturnCode STDCALL witAddDemandVa (
d1953 1
a1953 1
   ...
d1956 1
a1956 1
WIT_DECLSPEC witReturnCode STDCALL witAddPartVa (
d1958 1
a1958 3
   const char * const partName,
   const witAttr partCategory,
   ...
d1961 1
a1961 1
WIT_DECLSPEC witReturnCode STDCALL witAddSubsBomEntryVa (
d1963 1
a1963 4
   const char * const consumingOperationName,
   const int bomEntryIndex,
   const char * const consumedPartName,
   ...
d1966 1
a1966 1
WIT_DECLSPEC witReturnCode STDCALL witGetBomEntryUsageTime (
d1968 2
a1969 3
   const char * const consumingOperationName,
   const int bomEntryIndex,
   float * usageTime
d1972 1
a1972 1
WIT_DECLSPEC witReturnCode STDCALL witGetDemandBuildAheadLimit (
d1974 1
a1974 2
   const char * const demandedPartName,
   const char * const demandName,
a1977 7
WIT_DECLSPEC witReturnCode STDCALL witGetDemandShipLateLimit (
   WitRun * const theWitRun,
   const char * const demandedPartName,
   const char * const demandName,
   int * shipLateLimit
   );

d2034 8
d2050 7
d2076 14
d2097 22
d2163 7
@


1.4
log
@Removed the PRM PID number (product id number).
@
text
@d969 5
d1729 5
@


1.3
log
@Replaced "PRM" with "WIT".
Replaced "Production Resource Manager" with "Watson Implosion Technology".
Upgraded release # to 6.0.
@
text
@a8 1
/* 5799-QYH                                                                   */
@


1.2
log
@Updating wit/src in /u/wit/devbase to be in synch with /u/implode/devbase
@
text
@d2 2
a3 2
/* Production Resource Manager (PRM)                                          */
/* ========== ======== ======= =====                                          */
d43 1
a43 1
/* PRM typedefs.                                                              */
d70 1
a70 1
/* PRM API function return codes.                                             */
d79 1
a79 1
/* PRM API functions for the current release.                                 */
d1899 1
a1899 1
/* PRM API functions that were introduced in PRM 5.0 and later removed from   */
d1936 1
a1936 1
/* PRM API functions that were introduced in PRM 4.0 and later removed from   */
d1983 1
a1983 1
/* PRM API functions that were introduced in WIT 3.4 or earlier and later     */
d2208 1
a2208 1
/* PRM Attributes                                                             */
@


1.1
log
@Initial revision
@
text
@d10 1
a10 1
/* (C) COPYRIGHT International Business Machines Corp. 1993,1996              */
@


1.1.1.1
log
@Import wit
@
text
@@
