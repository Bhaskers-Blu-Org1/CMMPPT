head	1.16;
access;
symbols;
locks; strict;
comment	@ * @;


1.16
date	2011.09.28.23.49.11;	author rjw;	state Exp;
branches;
next	1.15;

1.15
date	2011.09.24.00.27.29;	author rjw;	state Exp;
branches;
next	1.14;

1.14
date	2011.08.30.20.17.23;	author rjw;	state Exp;
branches;
next	1.13;

1.13
date	2011.02.07.15.45.53;	author rjw;	state Exp;
branches;
next	1.12;

1.12
date	2011.02.03.00.22.56;	author rjw;	state Exp;
branches;
next	1.11;

1.11
date	2011.02.02.00.37.03;	author rjw;	state Exp;
branches;
next	1.10;

1.10
date	2011.01.26.23.47.30;	author rjw;	state Exp;
branches;
next	1.9;

1.9
date	2011.01.26.21.25.35;	author rjw;	state Exp;
branches;
next	1.8;

1.8
date	2011.01.26.00.22.56;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2011.01.25.21.49.38;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2011.01.20.21.38.09;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2011.01.20.00.26.43;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2011.01.18.23.27.15;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2011.01.14.00.35.17;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2011.01.13.00.38.41;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2011.01.12.23.09.23;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.16
log
@Revised the source code proprietary statement.
@
text
@//==============================================================================
// IBM Confidential
//
// OCO Source Materials
//
// Watson Implosion Technology
//
// (C) Copyright IBM Corp. 1993, 2011  All Rights Reserved
//
// The Source code for this program is not published or otherwise divested of
// its trade secrets, irrespective of what has been deposited with the U. S.
// Copyright office.
//==============================================================================

#ifndef CpxParSpecMgrH
#define CpxParSpecMgrH

//------------------------------------------------------------------------------
// Header file: "CpxParSpecMgr.h"
//
// Contains the declaration of class CpxParSpecMgr.
//------------------------------------------------------------------------------

#include <Assoc.h>
#include <Str.h>
#include <List.h>

//------------------------------------------------------------------------------
// Class CpxParSpecMgr
//
// "CPLEX Parameter Specification Manager"
// Responsible for owning and generally managing the CpxParSpecs of a Problem.
//
// Implemented in CpxParSpec.C.
//------------------------------------------------------------------------------

class WitCpxParSpecMgr: public WitProbAssoc
   {
   public:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitCpxParSpecMgr (WitProblem *);

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      ~WitCpxParSpecMgr ();

      //------------------------------------------------------------------------
      // Data access functions.
      //------------------------------------------------------------------------

      accessFunc (const WitList <WitCpxParSpec> &, myCpxParSpecs)
      accessFunc (const WitString &,               cplexParSpecName)
      accessFunc (int,                             cplexParSpecIntVal)
      accessFunc (double,                          cplexParSpecDblVal)

      //------------------------------------------------------------------------
      // Default value functions.
      //------------------------------------------------------------------------

      defaultValue (const char * defCplexParSpecName,   "NO_PARAM")
      defaultValue (int          defCplexParSpecIntVal, 0)
      defaultValue (double       defCplexParSpecDblVal, 0)

      //------------------------------------------------------------------------
      // "Set" functions.
      //------------------------------------------------------------------------

      void setCplexParSpecName   (const char *);
      void setCplexParSpecIntVal (int);
      void setCplexParSpecDblVal (double);

      //------------------------------------------------------------------------
      // Other public member functions.
      //------------------------------------------------------------------------

      void addIntCpxParSpec (const char * theName, int    theValue);
      void addDblCpxParSpec (const char * theName, double theValue);
         //
         // Each of these functions:
         //    Creates a CpxParSpec with the indicated type, name and value.
         //    Stores it at the end of myCpxParSpecs_.
         //    Deletes any existing CpxParSpec whose name matches theName.

      WitCpxParSpec * findCpxParSpec (const char * theName);
         //
         // Finds and returns the CpxParSpec owned by this CpxParSpecMgr whose
         // name matches theName, if any; otherwise returns NULL.

      void clearCpxParSpecs ();
         //
         // Deletes all of the CpxParSpecs owned by this CpxParSpecMgr.

      void display ();
         //
         // Displays the input data for this CpxParSpecMgr.

      void copyAttrsFrom (WitCpxParSpecMgr * theCpxParSpecMgr);
         //
         // Copies the input attributes of theCpxParSpecMgr into this
         // CpxParSpecMgr.

      void writeData ();
         //
         // Writes the section of the input data file for this CpxParSpecMgr.

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      void deleteMatchingCpxParSpec (const char * theName);
         //
         // If this CpxParSpecMgr owns a CpxParSpec whose name matches theName,
         // it is deleted.

      noCopyCtorAssign (WitCpxParSpecMgr);

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      WitList <WitCpxParSpec> myCpxParSpecs_;
         //
         // The CpxParSpecs owned by this CpxParSpecMgr.

      WitString cplexParSpecName_;
         //
         // The name of a CPLEX parameter specification to be created.

      int cplexParSpecIntVal_;
         //
         // The value of a CPLEX parameter specification of type int to be
         // created.

      double cplexParSpecDblVal_;
         //
         // The value of a CPLEX parameter specification of type double to be
         // created.

      bool addingSpecsByVal_;
         //
         // Setting the value of cplexParSpecIntVal_ or cplexParSpecDblVal_ will
         // cause of new CpxParSpec to be added, iff addingSpecsByVal_ is true.
   };

#endif
@


1.15
log
@Reverted to the version of 8-30-2011, which has the following differences:
   Release 7.0
   Old copyright dates (2006)
   The leading blanks in each line, which were lost with the 2011 copyright
      update, are restored.
Restored release # as 8.0.
@
text
@d1 8
a8 1
//------------------------------------------------------------------------------
d10 4
a13 6
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
// 
//------------------------------------------------------------------------------
@


1.14
log
@Revised the copyright date.
@
text
@d6 2
a7 2
//     IBM Confidential
//
d33 2
a34 64
{
public:

//------------------------------------------------------------------------
// Constructor functions.
//------------------------------------------------------------------------

WitCpxParSpecMgr (WitProblem *);

//------------------------------------------------------------------------
// Destructor function.
//------------------------------------------------------------------------

~WitCpxParSpecMgr ();

//------------------------------------------------------------------------
// Data access functions.
//------------------------------------------------------------------------

accessFunc (const WitList <WitCpxParSpec> &, myCpxParSpecs)
accessFunc (const WitString &,               cplexParSpecName)
accessFunc (int,                             cplexParSpecIntVal)
accessFunc (double,                          cplexParSpecDblVal)

//------------------------------------------------------------------------
// Default value functions.
//------------------------------------------------------------------------

defaultValue (const char * defCplexParSpecName,   "NO_PARAM")
defaultValue (int          defCplexParSpecIntVal, 0)
defaultValue (double       defCplexParSpecDblVal, 0)

//------------------------------------------------------------------------
// "Set" functions.
//------------------------------------------------------------------------

void setCplexParSpecName   (const char *);
void setCplexParSpecIntVal (int);
void setCplexParSpecDblVal (double);

//------------------------------------------------------------------------
// Other public member functions.
//------------------------------------------------------------------------

void addIntCpxParSpec (const char * theName, int    theValue);
void addDblCpxParSpec (const char * theName, double theValue);
//
// Each of these functions:
//    Creates a CpxParSpec with the indicated type, name and value.
//    Stores it at the end of myCpxParSpecs_.
//    Deletes any existing CpxParSpec whose name matches theName.

WitCpxParSpec * findCpxParSpec (const char * theName);
//
// Finds and returns the CpxParSpec owned by this CpxParSpecMgr whose
// name matches theName, if any; otherwise returns NULL.

void clearCpxParSpecs ();
//
// Deletes all of the CpxParSpecs owned by this CpxParSpecMgr.

void display ();
//
// Displays the input data for this CpxParSpecMgr.
d36 111
a146 49
void copyAttrsFrom (WitCpxParSpecMgr * theCpxParSpecMgr);
//
// Copies the input attributes of theCpxParSpecMgr into this
// CpxParSpecMgr.

void writeData ();
//
// Writes the section of the input data file for this CpxParSpecMgr.

private:

//------------------------------------------------------------------------
// Private member functions.
//------------------------------------------------------------------------

void deleteMatchingCpxParSpec (const char * theName);
//
// If this CpxParSpecMgr owns a CpxParSpec whose name matches theName,
// it is deleted.

noCopyCtorAssign (WitCpxParSpecMgr);

//------------------------------------------------------------------------
// Private member data.
//------------------------------------------------------------------------

WitList <WitCpxParSpec> myCpxParSpecs_;
//
// The CpxParSpecs owned by this CpxParSpecMgr.

WitString cplexParSpecName_;
//
// The name of a CPLEX parameter specification to be created.

int cplexParSpecIntVal_;
//
// The value of a CPLEX parameter specification of type int to be
// created.

double cplexParSpecDblVal_;
//
// The value of a CPLEX parameter specification of type double to be
// created.

bool addingSpecsByVal_;
//
// Setting the value of cplexParSpecIntVal_ or cplexParSpecDblVal_ will
// cause of new CpxParSpec to be added, iff addingSpecsByVal_ is true.
};
@


1.13
log
@CPLEX Parameters
@
text
@d6 2
a7 2
//     IBM Confidential 
// 
d33 64
a96 2
   {
   public:
d98 49
a146 111
      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitCpxParSpecMgr (WitProblem *);

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      ~WitCpxParSpecMgr ();

      //------------------------------------------------------------------------
      // Data access functions.
      //------------------------------------------------------------------------

      accessFunc (const WitList <WitCpxParSpec> &, myCpxParSpecs)
      accessFunc (const WitString &,               cplexParSpecName)
      accessFunc (int,                             cplexParSpecIntVal)
      accessFunc (double,                          cplexParSpecDblVal)

      //------------------------------------------------------------------------
      // Default value functions.
      //------------------------------------------------------------------------

      defaultValue (const char * defCplexParSpecName,   "NO_PARAM")
      defaultValue (int          defCplexParSpecIntVal, 0)
      defaultValue (double       defCplexParSpecDblVal, 0)

      //------------------------------------------------------------------------
      // "Set" functions.
      //------------------------------------------------------------------------

      void setCplexParSpecName   (const char *);
      void setCplexParSpecIntVal (int);
      void setCplexParSpecDblVal (double);

      //------------------------------------------------------------------------
      // Other public member functions.
      //------------------------------------------------------------------------

      void addIntCpxParSpec (const char * theName, int    theValue);
      void addDblCpxParSpec (const char * theName, double theValue);
         //
         // Each of these functions:
         //    Creates a CpxParSpec with the indicated type, name and value.
         //    Stores it at the end of myCpxParSpecs_.
         //    Deletes any existing CpxParSpec whose name matches theName.

      WitCpxParSpec * findCpxParSpec (const char * theName);
         //
         // Finds and returns the CpxParSpec owned by this CpxParSpecMgr whose
         // name matches theName, if any; otherwise returns NULL.

      void clearCpxParSpecs ();
         //
         // Deletes all of the CpxParSpecs owned by this CpxParSpecMgr.

      void display ();
         //
         // Displays the input data for this CpxParSpecMgr.

      void copyAttrsFrom (WitCpxParSpecMgr * theCpxParSpecMgr);
         //
         // Copies the input attributes of theCpxParSpecMgr into this
         // CpxParSpecMgr.

      void writeData ();
         //
         // Writes the section of the input data file for this CpxParSpecMgr.

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      void deleteMatchingCpxParSpec (const char * theName);
         //
         // If this CpxParSpecMgr owns a CpxParSpec whose name matches theName,
         // it is deleted.

      noCopyCtorAssign (WitCpxParSpecMgr);

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      WitList <WitCpxParSpec> myCpxParSpecs_;
         //
         // The CpxParSpecs owned by this CpxParSpecMgr.

      WitString cplexParSpecName_;
         //
         // The name of a CPLEX parameter specification to be created.

      int cplexParSpecIntVal_;
         //
         // The value of a CPLEX parameter specification of type int to be
         // created.

      double cplexParSpecDblVal_;
         //
         // The value of a CPLEX parameter specification of type double to be
         // created.

      bool addingSpecsByVal_;
         //
         // Setting the value of cplexParSpecIntVal_ or cplexParSpecDblVal_ will
         // cause of new CpxParSpec to be added, iff addingSpecsByVal_ is true.
   };
@


1.12
log
@CPLEX Parameters
@
text
@d53 3
a55 3
      accessFunc (const WitString &,               cpxParSpecName)
      accessFunc (int,                             cpxParSpecIntVal)
      accessFunc (double,                          cpxParSpecDblVal)
d61 3
a63 3
      defaultValue (const char * defCpxParSpecName,   "NO_PARAM")
      defaultValue (int          defCpxParSpecIntVal, 0)
      defaultValue (double       defCpxParSpecDblVal, 0)
d69 3
a71 3
      void setCpxParSpecName   (const char *);
      void setCpxParSpecIntVal (int);
      void setCpxParSpecDblVal (double);
d128 1
a128 1
      WitString cpxParSpecName_;
d132 1
a132 1
      int cpxParSpecIntVal_;
d137 1
a137 1
      double cpxParSpecDblVal_;
d144 1
a144 1
         // Setting the value of cpxParSpecIntVal_ or cpxParSpecDblVal_ will
@


1.11
log
@CPLEX Parameters
@
text
@d77 2
a78 2
      void addIntCpxParSpec (const char * theName, int    theVal);
      void addDblCpxParSpec (const char * theName, double theVal);
@


1.10
log
@CPLEX Parameters
@
text
@d53 3
a55 3
      accessFunc (const WitString &,               specCpxParName)
      accessFunc (int,                             specCpxParIntVal)
      accessFunc (double,                          specCpxParDblVal)
d61 3
a63 3
      defaultValue (const char * defSpecCpxParName,   "NO_PARAM")
      defaultValue (int          defSpecCpxParIntVal, 0)
      defaultValue (double       defSpecCpxParDblVal, 0)
d69 3
a71 3
      void setSpecCpxParName   (const char *);
      void setSpecCpxParIntVal (int);
      void setSpecCpxParDblVal (double);
d128 1
a128 1
      WitString specCpxParName_;
d130 1
a130 1
         // A specified CPLEX parameter name.
d132 1
a132 1
      int specCpxParIntVal_;
d134 2
a135 1
         // A specified int value for a CPLEX parameter.
d137 1
a137 1
      double specCpxParDblVal_;
d139 2
a140 1
         // A specified double value for a CPLEX parameter.
d144 1
a144 1
         // Setting the value of specCpxParIntVal_ or specCpxParDblVal_ will
@


1.9
log
@CPLEX Parameters
@
text
@d85 5
@


1.8
log
@CPLEX Parameters
@
text
@d80 4
a83 3
         // Each of these functions creates a CpxParSpec of the indicated type
         // with the indicated name and value and deletes any existing
         // CpxParSpec whose name matches theName.
@


1.7
log
@CPLEX Parameters
@
text
@d80 3
a82 4
         // Each of these functions adds to the list of CPLEX parameter settings
         // an instruction to set the CPLEX parameter that matches theName to
         // theVal and deletes any existing CpxParSpec whose name matches
         // theName.
a120 2
         // This is the ordered list of CPLEX parameter settings that have been
         // specified in this Problem.
@


1.6
log
@CPLEX Parameters
@
text
@d82 2
a83 1
         // theVal.
d87 1
a87 1
         // Removes all instructions to set the value of CPLEX parameters.
d108 5
@


1.5
log
@CPLEX Parameters
@
text
@d130 5
@


1.4
log
@CPLEX Parameters
@
text
@d97 1
a97 1
      void writeDataAttrs ();
d99 1
a99 1
         // Writes the attributes of this CpxParSpecMgr to an input data file.
@


1.3
log
@CPLEX Param Specs
@
text
@d77 2
a78 2
      void setIntCpxPar (const char * theName, int    theVal);
      void setDblCpxPar (const char * theName, double theVal);
@


1.2
log
@CPLEX Param Specs.
@
text
@d55 1
d63 1
d71 1
d126 4
@


1.1
log
@CPX Param Specs
@
text
@d54 1
d60 2
a61 1
      defaultValue (const char * defSpecCpxParName, "NO_PARAM")
d67 2
a68 1
      void setSpecCpxParName (const char *);
d119 4
@

