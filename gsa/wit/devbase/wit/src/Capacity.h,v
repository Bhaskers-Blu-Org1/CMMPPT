head	1.24;
access;
symbols
	sce_5_01_20080919:1.21
	latest_sce_4_20_20060523:1.17.0.2
	sce_4_20_20060523:1.17
	latest_sce4_20_OSL:1.16.0.2
	sce_4_20_OSL:1.16
	sce_410_withVa:1.16
	sce_4_05_20040511:1.16
	sce_4_00_20040201:1.13
	nextGenBranch:1.11.0.2
	nextGenRoot:1.11
	sce_3_30_20030627:1.11
	EndRw-branch:1.10.0.4
	Root-of-EndRw:1.10
	rwToStl:1.10.0.2
	latest_sce_3_10_20010924:1.5.0.2
	sce_3_10_20010924:1.5
	latest_sce_3_00_20010601:1.4.0.4
	sce_3_00_20010601:1.4
	latest_sce_2_31_20010308:1.4.0.2
	sce_2_31_20010308:1.4
	latest_sce_2_31_20001003:1.2.0.2
	sce_2_31_20001003:1.2
	start:1.1.1.1
	IBM:1.1.1;
locks; strict;
comment	@ * @;


1.24
date	2011.09.28.23.49.07;	author rjw;	state Exp;
branches;
next	1.23;

1.23
date	2011.09.24.00.27.25;	author rjw;	state Exp;
branches;
next	1.22;

1.22
date	2011.08.30.20.17.20;	author rjw;	state Exp;
branches;
next	1.21;

1.21
date	2007.05.10.21.58.10;	author rjw;	state Exp;
branches;
next	1.20;

1.20
date	2007.01.09.21.07.47;	author rjw;	state Exp;
branches;
next	1.19;

1.19
date	2007.01.09.19.14.14;	author rjw;	state Exp;
branches;
next	1.18;

1.18
date	2006.09.05.21.11.05;	author rjw;	state Exp;
branches;
next	1.17;

1.17
date	2006.05.02.17.33.55;	author rjw;	state Exp;
branches;
next	1.16;

1.16
date	2004.03.24.22.21.28;	author rjw;	state Exp;
branches;
next	1.15;

1.15
date	2004.03.23.19.14.23;	author rjw;	state Exp;
branches;
next	1.14;

1.14
date	2004.03.03.19.07.27;	author rjw;	state Exp;
branches;
next	1.13;

1.13
date	2003.11.11.18.29.12;	author rjw;	state Exp;
branches;
next	1.12;

1.12
date	2003.10.08.19.27.49;	author rjw;	state Exp;
branches;
next	1.11;

1.11
date	2003.01.02.22.18.21;	author rjw;	state Exp;
branches;
next	1.10;

1.10
date	2002.06.03.16.01.45;	author rjw;	state Exp;
branches;
next	1.9;

1.9
date	2002.05.30.20.08.56;	author rjw;	state Exp;
branches;
next	1.8;

1.8
date	2002.05.08.19.21.47;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2002.04.18.14.02.28;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2001.09.28.00.12.57;	author bobw;	state Exp;
branches;
next	1.5;

1.5
date	2001.09.19.18.50.56;	author bobw;	state Exp;
branches;
next	1.4;

1.4
date	2000.11.22.23.11.37;	author bobw;	state Exp;
branches;
next	1.3;

1.3
date	2000.11.21.20.03.20;	author bobw;	state Exp;
branches;
next	1.2;

1.2
date	2000.03.07.16.55.26;	author fasano;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.24.13.53.19;	author wit;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.24.13.53.19;	author wit;	state Exp;
branches;
next	;


desc
@@


1.24
log
@Revised the source code proprietary statement.
@
text
@//==============================================================================
// IBM Confidential
//
// OCO Source Materials
//
// Watson Implosion Technology
//
// (C) Copyright IBM Corp. 1993, 2011  All Rights Reserved
//
// The Source code for this program is not published or otherwise divested of
// its trade secrets, irrespective of what has been deposited with the U. S.
// Copyright office.
//==============================================================================

#ifndef CapacityH
#define CapacityH

//------------------------------------------------------------------------------
// Header file: "Capacity.h"
//
// Contains the declaration of class Capacity.
//------------------------------------------------------------------------------

#include <Part.h>

//------------------------------------------------------------------------------
// Class Capacity.
//
// Class Hierarchy:
//
// ProbAssoc
//    Component
//       DelComp
//          Node
//             Part
//                Capacity
//
// Implemented in MatCap.C.
//------------------------------------------------------------------------------

class WitCapacity: public WitPart
   {
   public:

      //------------------------------------------------------------------------
      // Public member functions.
      //------------------------------------------------------------------------

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitCapacity (const char * theName, WitCompMgr * theCompMgr);
         //
         // Part <<< theName.
         // Part <<< theCompMgr.

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      virtual ~WitCapacity ();

      //------------------------------------------------------------------------
      // Other public member functions.
      //------------------------------------------------------------------------

      virtual void          copySelfInto (WitCompMgr * theCompMgr);
      virtual void          recount      ();
      virtual WitCapacity * thisCap      ();
         //
         // Overrides from class Component.

      virtual WitMsgFrag categoryFrag ();
      virtual WitAttr    apiCategory  ();
      virtual bool       canStock     (WitPeriod t);
         //
         // Override from class Part.

      void copyAttrsFrom (WitCapacity * theCap);
         //
         // Copies the input attributes of theCap into this Capacity.

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      noCopyCtorAssign (WitCapacity);

      virtual WitPeriod findExplosionPeriod (WitPeriod fillPer);
         //
         // Override from class Part.

      virtual const char * categoryKeyWord ();
         //
         // Override from class Part.

      virtual void writeDataAttrs ();
         //
         // Override from class Component.
   };

#endif
@


1.23
log
@Reverted to the version of 8-30-2011, which has the following differences:
   Release 7.0
   Old copyright dates (2006)
   The leading blanks in each line, which were lost with the 2011 copyright
      update, are restored.
Restored release # as 8.0.
@
text
@d1 8
a8 1
//------------------------------------------------------------------------------
d10 4
a13 6
//     (c) Copyright IBM Corp. 2006.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
// 
//------------------------------------------------------------------------------
@


1.22
log
@Revised the copyright date.
@
text
@d3 1
a3 1
//     (c) Copyright IBM Corp. 2011.
d6 2
a7 2
//     IBM Confidential
//
d37 2
a38 47
{
public:

//------------------------------------------------------------------------
// Public member functions.
//------------------------------------------------------------------------

//------------------------------------------------------------------------
// Constructor functions.
//------------------------------------------------------------------------

WitCapacity (const char * theName, WitCompMgr * theCompMgr);
//
// Part <<< theName.
// Part <<< theCompMgr.

//------------------------------------------------------------------------
// Destructor function.
//------------------------------------------------------------------------

virtual ~WitCapacity ();

//------------------------------------------------------------------------
// Other public member functions.
//------------------------------------------------------------------------

virtual void          copySelfInto (WitCompMgr * theCompMgr);
virtual void          recount      ();
virtual WitCapacity * thisCap      ();
//
// Overrides from class Component.

virtual WitMsgFrag categoryFrag ();
virtual WitAttr    apiCategory  ();
virtual bool       canStock     (WitPeriod t);
//
// Override from class Part.

void copyAttrsFrom (WitCapacity * theCap);
//
// Copies the input attributes of theCap into this Capacity.

private:

//------------------------------------------------------------------------
// Private member functions.
//------------------------------------------------------------------------
d40 59
a98 14
noCopyCtorAssign (WitCapacity);

virtual WitPeriod findExplosionPeriod (WitPeriod fillPer);
//
// Override from class Part.

virtual const char * categoryKeyWord ();
//
// Override from class Part.

virtual void writeDataAttrs ();
//
// Override from class Component.
};
@


1.21
log
@Stochastic Implosion
@
text
@d3 1
a3 1
//     (c) Copyright IBM Corp. 2006.
d6 2
a7 2
//     IBM Confidential 
// 
d37 47
a83 2
   {
   public:
d85 14
a98 59
      //------------------------------------------------------------------------
      // Public member functions.
      //------------------------------------------------------------------------

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitCapacity (const char * theName, WitCompMgr * theCompMgr);
         //
         // Part <<< theName.
         // Part <<< theCompMgr.

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      virtual ~WitCapacity ();

      //------------------------------------------------------------------------
      // Other public member functions.
      //------------------------------------------------------------------------

      virtual void          copySelfInto (WitCompMgr * theCompMgr);
      virtual void          recount      ();
      virtual WitCapacity * thisCap      ();
         //
         // Overrides from class Component.

      virtual WitMsgFrag categoryFrag ();
      virtual WitAttr    apiCategory  ();
      virtual bool       canStock     (WitPeriod t);
         //
         // Override from class Part.

      void copyAttrsFrom (WitCapacity * theCap);
         //
         // Copies the input attributes of theCap into this Capacity.

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      noCopyCtorAssign (WitCapacity);

      virtual WitPeriod findExplosionPeriod (WitPeriod fillPer);
         //
         // Override from class Part.

      virtual const char * categoryKeyWord ();
         //
         // Override from class Part.

      virtual void writeDataAttrs ();
         //
         // Override from class Component.
   };
@


1.20
log
@witCopy<Object>Data
@
text
@d63 3
a65 1
      virtual WitMsgFrag categoryFrag ();
d67 1
a67 1
         // Override from class Part.
d69 3
a71 17
      virtual WitAttr apiCategory ();
         //
         // Override from class Part.

      virtual void copySelfInto (WitCompMgr * theCompMgr);
         //
         // Override from class Component.

      virtual void recount ();
         //
         // Override from class Component.

      virtual WitCapacity * thisCap ();
         //
         // Override from class Component.

      virtual bool canStock (WitPeriod t);
@


1.19
log
@witCopy<Object>Data
@
text
@d87 4
a102 4
      //------------------------------------------------------------------------
      // Other private member functions.
      //------------------------------------------------------------------------

a109 4

      void copyAttrsFrom (WitCapacity * theCap);
         //
         // Copies the input attributes of theCap into this Capacity.
@


1.18
log
@NSTN residualVols
@
text
@d63 1
a63 1
      virtual WitMsgFragID categoryFragID ();
@


1.17
log
@Updated the copyright date on all source files.
@
text
@a86 4
      virtual const WitDblFlexVec & residualVol ();
         //
         // Override from class Part.

@


1.16
log
@Double Precision.
@
text
@d3 1
a3 1
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
@


1.15
log
@Double Precision.
@
text
@d87 1
a87 1
      virtual const WitFlexVec <double> & residualVol ();
@


1.14
log
@Double Precision.
@
text
@d87 1
a87 1
      virtual const WitRealVec & residualVol ();
@


1.13
log
@Removed a bad function overload.
@
text
@d87 1
a87 1
      virtual const WitFlexVec <float> & residualVol ();
@


1.12
log
@Continued implementation of post-implosion pegging.
@
text
@d79 1
a79 1
      virtual WitCapacity * myCap ();
@


1.11
log
@Internal changes.
@
text
@d79 4
@


1.10
log
@Continued implementation of single-source.
@
text
@d79 1
a79 1
      virtual WitBoolean canStock (WitPeriod t);
@


1.9
log
@Continued implementation of single-source.
@
text
@a86 4
      virtual void compStockScrapVol (WitTVec <double> &, WitTVec <double> &);
         //
         // Override from class Part.

@


1.8
log
@Preliminary work on single source.
@
text
@d87 4
@


1.7
log
@Began implementation of object iteration.
@
text
@d83 1
a83 1
      virtual const WitFlexVec (float) & residualVol ();
@


1.6
log
@Continued development of Selective Stock Reallocation.
@
text
@d19 1
a19 1
#include <Material.h>
@


1.5
log
@Continued implementation of selective stock reallocation.
@
text
@a82 4
      virtual WitBoolean getMyCapacity (WitCapacity * & theCap);
         //
         // Override from class Part.

@


1.4
log
@Refactoring for selection splitting.
@
text
@d83 1
a83 1
      virtual WitBoolean isaCapacity (WitCapacity * & theCap);
@


1.3
log
@Began implementation of coarse selection splitting.
Made DynStack classes more general.
@
text
@d97 1
a97 3
      copyCtorAndAssignment (WitCapacity);
         //
         // Prevents unintentional copying and assignment.
@


1.2
log
@Updating wit/src in /u/wit/devbase to be in synch with /u/implode/devbase
@
text
@d71 1
a71 1
      virtual void copyInto (WitCompMgr * theCompMgr);
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
//     (c) Copyright IBM Corp. 1993,1994,1996.
@


1.1.1.1
log
@Import wit
@
text
@@
