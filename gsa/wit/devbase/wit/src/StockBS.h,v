head	1.25;
access;
symbols
	sce_5_01_20080919:1.21
	latest_sce_4_20_20060523:1.5.0.2
	sce_4_20_20060523:1.5
	latest_sce4_20_OSL:1.4.0.2
	sce_4_20_OSL:1.4
	sce_410_withVa:1.4
	sce_4_05_20040511:1.4
	sce_4_00_20040201:1.3
	nextGenBranch:1.3.0.12
	nextGenRoot:1.3
	sce_3_30_20030627:1.3
	EndRw-branch:1.3.0.10
	Root-of-EndRw:1.3
	rwToStl:1.3.0.8
	latest_sce_3_10_20010924:1.3.0.6
	sce_3_10_20010924:1.3
	latest_sce_3_00_20010601:1.3.0.4
	sce_3_00_20010601:1.3
	latest_sce_2_31_20010308:1.3.0.2
	sce_2_31_20010308:1.3
	latest_sce_2_31_20001003:1.2.0.2
	sce_2_31_20001003:1.2
	start:1.1.1.1
	IBM:1.1.1;
locks; strict;
comment	@ * @;


1.25
date	2011.09.28.23.50.34;	author rjw;	state Exp;
branches;
next	1.24;

1.24
date	2011.09.24.00.28.50;	author rjw;	state Exp;
branches;
next	1.23;

1.23
date	2011.08.30.20.18.18;	author rjw;	state Exp;
branches;
next	1.22;

1.22
date	2009.12.25.00.10.48;	author rjw;	state Exp;
branches;
next	1.21;

1.21
date	2008.07.02.17.48.37;	author rjw;	state Exp;
branches;
next	1.20;

1.20
date	2008.01.28.23.53.37;	author rjw;	state Exp;
branches;
next	1.19;

1.19
date	2008.01.18.22.41.00;	author rjw;	state Exp;
branches;
next	1.18;

1.18
date	2008.01.07.23.51.50;	author rjw;	state Exp;
branches;
next	1.17;

1.17
date	2008.01.04.20.25.28;	author rjw;	state Exp;
branches;
next	1.16;

1.16
date	2007.12.06.22.53.02;	author rjw;	state Exp;
branches;
next	1.15;

1.15
date	2007.12.06.22.01.22;	author rjw;	state Exp;
branches;
next	1.14;

1.14
date	2007.11.29.15.35.02;	author rjw;	state Exp;
branches;
next	1.13;

1.13
date	2007.11.28.23.23.50;	author rjw;	state Exp;
branches;
next	1.12;

1.12
date	2007.11.27.21.05.02;	author rjw;	state Exp;
branches;
next	1.11;

1.11
date	2007.10.18.23.14.45;	author rjw;	state Exp;
branches;
next	1.10;

1.10
date	2007.10.11.19.16.58;	author rjw;	state Exp;
branches;
next	1.9;

1.9
date	2007.10.01.19.52.16;	author rjw;	state Exp;
branches;
next	1.8;

1.8
date	2007.09.28.23.32.58;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2007.09.28.22.08.27;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2007.09.10.14.44.07;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2006.05.02.17.34.14;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2004.03.10.22.53.22;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2000.11.22.23.11.49;	author bobw;	state Exp;
branches;
next	1.2;

1.2
date	2000.03.07.16.56.59;	author fasano;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.24.13.53.30;	author wit;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.24.13.53.30;	author wit;	state Exp;
branches;
next	;


desc
@@


1.25
log
@Revised the source code proprietary statement.
@
text
@//==============================================================================
// IBM Confidential
//
// OCO Source Materials
//
// Watson Implosion Technology
//
// (C) Copyright IBM Corp. 1993, 2011  All Rights Reserved
//
// The Source code for this program is not published or otherwise divested of
// its trade secrets, irrespective of what has been deposited with the U. S.
// Copyright office.
//==============================================================================

#ifndef StockBSH
#define StockBSH

//------------------------------------------------------------------------------
// Header file: "StockBS.h"
//
// Contains the declaration of class StockBoundSet.
//------------------------------------------------------------------------------

#include <BoundSet.h>

//------------------------------------------------------------------------------
// class StockBoundSet
//
// The bounds on the stockVol of a Material.
//
// Class Hierarchy:
//
// ProbAssoc
//    BoundSet
//       StockBoundSet
//
// Implemented in BoundSet.C.
//------------------------------------------------------------------------------

class WitStockBoundSet: public WitBoundSet
   {
   public:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitStockBoundSet (WitMaterial * theMat);
         //
         // myMaterial_ <-- theMat.

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      virtual ~WitStockBoundSet ();

      //------------------------------------------------------------------------
      // Public virtual member functions.
      //------------------------------------------------------------------------

      virtual double        boundedVal           (WitPeriod);
      virtual const char *  myAttName            ();
      virtual WitDelComp *  myDelComp            ();
      virtual WitBoundSet * myMatchIn            (WitCompMgr *);
      virtual WitNode *     stageNode            ();
      virtual void          issueStage0MMCompMsg ();

   private:

      //------------------------------------------------------------------------
      // Private virtual member functions.
      //------------------------------------------------------------------------

      virtual WitMsgID     headingMsgID      ();
      virtual const char * boundedVectorName ();
      virtual void         idObjectForSoln   ();

      //------------------------------------------------------------------------
      // Other private member functions.
      //------------------------------------------------------------------------

      noCopyCtorAssign (WitStockBoundSet);

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      WitMaterial * const myMaterial_;
         //
         // The Material whose stockVol is bounded by this StockBoundSet.
   };

#endif
@


1.24
log
@Reverted to the version of 8-30-2011, which has the following differences:
   Release 7.0
   Old copyright dates (2006)
   The leading blanks in each line, which were lost with the 2011 copyright
      update, are restored.
Restored release # as 8.0.
@
text
@d1 8
a8 1
//------------------------------------------------------------------------------
d10 4
a13 6
//     (c) Copyright IBM Corp. 2006.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
// 
//------------------------------------------------------------------------------
@


1.23
log
@Revised the copyright date.
@
text
@d3 1
a3 1
//     (c) Copyright IBM Corp. 2011.
d6 2
a7 2
//     IBM Confidential
//
d36 2
a37 27
{
public:

//------------------------------------------------------------------------
// Constructor functions.
//------------------------------------------------------------------------

WitStockBoundSet (WitMaterial * theMat);
//
// myMaterial_ <-- theMat.

//------------------------------------------------------------------------
// Destructor function.
//------------------------------------------------------------------------

virtual ~WitStockBoundSet ();

//------------------------------------------------------------------------
// Public virtual member functions.
//------------------------------------------------------------------------

virtual double        boundedVal           (WitPeriod);
virtual const char *  myAttName            ();
virtual WitDelComp *  myDelComp            ();
virtual WitBoundSet * myMatchIn            (WitCompMgr *);
virtual WitNode *     stageNode            ();
virtual void          issueStage0MMCompMsg ();
d39 49
a87 24
private:

//------------------------------------------------------------------------
// Private virtual member functions.
//------------------------------------------------------------------------

virtual WitMsgID     headingMsgID      ();
virtual const char * boundedVectorName ();
virtual void         idObjectForSoln   ();

//------------------------------------------------------------------------
// Other private member functions.
//------------------------------------------------------------------------

noCopyCtorAssign (WitStockBoundSet);

//------------------------------------------------------------------------
// Private member data.
//------------------------------------------------------------------------

WitMaterial * const myMaterial_;
//
// The Material whose stockVol is bounded by this StockBoundSet.
};
@


1.22
log
@Multi-Objective Mode
@
text
@d3 1
a3 1
//     (c) Copyright IBM Corp. 2006.
d6 2
a7 2
//     IBM Confidential 
// 
d36 27
a62 2
   {
   public:
d64 24
a87 49
      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitStockBoundSet (WitMaterial * theMat);
         //
         // myMaterial_ <-- theMat.

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      virtual ~WitStockBoundSet ();

      //------------------------------------------------------------------------
      // Public virtual member functions.
      //------------------------------------------------------------------------

      virtual double        boundedVal           (WitPeriod);
      virtual const char *  myAttName            ();
      virtual WitDelComp *  myDelComp            ();
      virtual WitBoundSet * myMatchIn            (WitCompMgr *);
      virtual WitNode *     stageNode            ();
      virtual void          issueStage0MMCompMsg ();

   private:

      //------------------------------------------------------------------------
      // Private virtual member functions.
      //------------------------------------------------------------------------

      virtual WitMsgID     headingMsgID      ();
      virtual const char * boundedVectorName ();
      virtual void         idObjectForSoln   ();

      //------------------------------------------------------------------------
      // Other private member functions.
      //------------------------------------------------------------------------

      noCopyCtorAssign (WitStockBoundSet);

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      WitMaterial * const myMaterial_;
         //
         // The Material whose stockVol is bounded by this StockBoundSet.
   };
@


1.21
log
@Removed many conversions of string constant to char *.
@
text
@a59 1
      virtual void          writeCompSetClause   ();
@


1.20
log
@Stochastic Implosion
@
text
@d58 1
a58 1
      virtual WitAttr       myAttName            ();
d71 3
a73 3
      virtual WitMsgID headingMsgID      ();
      virtual WitAttr  boundedVectorName ();
      virtual void     idObjectForSoln   ();
@


1.19
log
@Stochastic Implosion
@
text
@d62 1
a62 1
      virtual int           objectStage          ();
@


1.18
log
@Stochastic Implosion
@
text
@d62 1
a62 1
      virtual int           stageIndex           ();
@


1.17
log
@Stochastic Implosion
@
text
@d57 7
a63 6
      virtual double        boundedVal         (WitPeriod);
      virtual WitAttr       myAttName          ();
      virtual WitDelComp *  myDelComp          ();
      virtual void          writeCompSetClause ();
      virtual WitBoundSet * myMatchIn          (WitCompMgr *);
      virtual void          issueStage0MisMatchDelCompMsg ();
@


1.16
log
@Stochastic Implosion
@
text
@d62 1
@


1.15
log
@Stochastic Implosion
@
text
@d57 4
a60 4
      virtual double        boundedVal         (WitPeriod)    const;
      virtual WitAttr       myAttName          ()             const;
      virtual WitDelComp *  myDelComp          ()             const;
      virtual void          writeCompSetClause ()             const;
d69 3
a71 3
      virtual WitMsgID headingMsgID      () const;
      virtual WitAttr  boundedVectorName () const;
      virtual void     idObjectForSoln   () const;
@


1.14
log
@Stochastic Implosion
@
text
@d57 5
a61 4
      virtual double       boundedVal (WitPeriod) const;
      virtual WitAttr      myAttName  ()          const;
      virtual WitDelComp * myDelComp  ()          const;
      virtual void         writeCompSetClause ()  const;
@


1.13
log
@Stochastic Implosion
@
text
@d60 1
@


1.12
log
@Stochastic Implosion
@
text
@d57 3
a59 3
      virtual double         boundedVal (WitPeriod) const;
      virtual WitAttr        myAttName  ()          const;
      virtual WitComponent * myComp     ()          const;
@


1.11
log
@Stochastic Implosion
@
text
@d57 3
a59 4
      virtual double         boundedVal              (WitPeriod) const;
      virtual WitAttr        myAttName               ()          const;
      virtual WitComponent * myComp                  ()          const;
      virtual void           writeStochDataSetClause ();
@


1.10
log
@Stochastic Implosion
@
text
@d57 4
a60 4
      virtual double    boundedVal              (WitPeriod) const;
      virtual WitAttr   myAttName               () const;
      virtual WitNode * myNode                  ();
      virtual void      writeStochDataSetClause ();
d68 3
a70 5
      virtual WitMsgID headingMsgID () const;

      virtual WitAttr boundedVectorName () const;

      virtual void idObjectForSoln () const;
@


1.9
log
@Stochastic Implosion
@
text
@a60 1
      virtual void      issueStage0MisMatchMsg  ();
@


1.8
log
@Stochastic Implosion
@
text
@d57 5
a61 4
      virtual double    boundedVal             (WitPeriod) const;
      virtual WitAttr   myAttName              () const;
      virtual WitNode * myNode                 ();
      virtual void      issueStage0MisMatchMsg ();
@


1.7
log
@Stochastic Implosion
@
text
@d57 4
a60 3
      virtual double boundedVal (WitPeriod) const;

      virtual WitAttr myAttName () const;
@


1.6
log
@Stochastic Implosion
@
text
@d59 1
a59 1
      virtual WitAttr apiAttr () const;
@


1.5
log
@Updated the copyright date on all source files.
@
text
@d26 7
a32 1
// Implemented in MatCap.C.
@


1.4
log
@Double Precision.
@
text
@d3 1
a3 1
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
@


1.3
log
@Refactoring for selection splitting.
@
text
@d51 1
a51 1
      virtual float boundedVal (WitPeriod) const;
@


1.2
log
@Updating wit/src in /u/wit/devbase to be in synch with /u/implode/devbase
@
text
@d71 1
a71 3
      copyCtorAndAssignment (WitStockBoundSet);
         //
         // Prevents unintentional copying and assignment.
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
//     (c) Copyright IBM Corp. 1993,1994,1996.
@


1.1.1.1
log
@Import wit
@
text
@@
