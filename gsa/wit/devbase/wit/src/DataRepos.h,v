head	1.4;
access;
symbols
	sce_5_01_20080919:1.1;
locks; strict;
comment	@ * @;


1.4
date	2011.09.28.23.49.13;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2011.09.24.00.27.30;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2011.08.30.20.17.23;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2007.11.12.16.30.11;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Revised the source code proprietary statement.
@
text
@//==============================================================================
// IBM Confidential
//
// OCO Source Materials
//
// Watson Implosion Technology
//
// (C) Copyright IBM Corp. 1993, 2011  All Rights Reserved
//
// The Source code for this program is not published or otherwise divested of
// its trade secrets, irrespective of what has been deposited with the U. S.
// Copyright office.
//==============================================================================

#ifndef DataReposH
#define DataReposH

//------------------------------------------------------------------------------
// Header file: "DataRepos.h"
//
// Contains the declaration of class DataRepos.
//------------------------------------------------------------------------------

#include <Assoc.h>

template <typename Variable> class WitVarRepos;
template <typename Object>   class WitAttRepos;

//------------------------------------------------------------------------------
// Class DataRepos
//
// Saves the current values of various variables and attributes and restores
// them to the saved values upon request. 
// Designed for use by heuristic allocation.
//
// Implemented in Repos.C.
//------------------------------------------------------------------------------

class WitDataRepos: public WitProbAssoc
   {
   public:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitDataRepos (WitProblem *);

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      ~WitDataRepos ();

      //------------------------------------------------------------------------
      // Other public member functions.
      //------------------------------------------------------------------------

      void saveVal (int    & theVar);
      void saveVal (bool   & theVar);
      void saveVal (double & theVar);
         //
         // Saves the current value of theVar.

      template <typename ObjByPtr>
            inline void saveVal (ObjByPtr * & thePtr)
         {
         savePtrVal (reinterpret_cast <void * &> (thePtr));
         }

      void saveExecVol (WitOperation * theOpn, WitPeriod thePer);
         //
         // Saves the execVol for theOpn in thePer.

      void saveSubVol (WitSubEntry * theSub, WitPeriod thePer);
         //
         // Saves the subVol for theSub in thePer.

      void restore ();
         //
         // Restores each variable saved in this DataRepos to the value it had
         // the first time it was saved since the most recent call to restore or
         // clear. Empties the set of saved variables.

      void restoreAndSave (WitDataRepos * theDataRepos);
         //
         // Same as restore, but clears theDataRepos and then saves in it the
         // current values of all the variables that are being restored.

      void clear ();
         //
         // Empties the set of saved variables.

      bool isEmpty ();
         //
         // Returns true, iff the set of saved variables is empty.

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      void savePtrVal (void * & theVoidPtr);
         //
         // Saves the current value of theVoidPtr.

      noCopyCtorAssign (WitDataRepos);

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      WitVarRepos <int>    * myIntRepos_;
      WitVarRepos <bool>   * myBoolRepos_;
      WitVarRepos <double> * myDblRepos_;
      WitVarRepos <void *> * myPtrRepos_;
         //
         // The VarReposes owned by this DataRepos.

      WitAttRepos <WitOperation> * execVolRepos_;
      WitAttRepos <WitSubEntry> *  subVolRepos_;
         //
         // The AttReposes owned by this DataRepos.
   };

#endif
@


1.3
log
@Reverted to the version of 8-30-2011, which has the following differences:
   Release 7.0
   Old copyright dates (2006)
   The leading blanks in each line, which were lost with the 2011 copyright
      update, are restored.
Restored release # as 8.0.
@
text
@d1 8
a8 1
//------------------------------------------------------------------------------
d10 4
a13 6
//     (c) Copyright IBM Corp. 2006.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
// 
//------------------------------------------------------------------------------
@


1.2
log
@Revised the copyright date.
@
text
@d3 1
a3 1
//     (c) Copyright IBM Corp. 2011.
d6 2
a7 2
//     IBM Confidential
//
d28 1
a28 1
// them to the saved values upon request.
d35 2
a36 44
{
public:

//------------------------------------------------------------------------
// Constructor functions.
//------------------------------------------------------------------------

WitDataRepos (WitProblem *);

//------------------------------------------------------------------------
// Destructor function.
//------------------------------------------------------------------------

~WitDataRepos ();

//------------------------------------------------------------------------
// Other public member functions.
//------------------------------------------------------------------------

void saveVal (int    & theVar);
void saveVal (bool   & theVar);
void saveVal (double & theVar);
//
// Saves the current value of theVar.

template <typename ObjByPtr>
inline void saveVal (ObjByPtr * & thePtr)
{
savePtrVal (reinterpret_cast <void * &> (thePtr));
}

void saveExecVol (WitOperation * theOpn, WitPeriod thePer);
//
// Saves the execVol for theOpn in thePer.

void saveSubVol (WitSubEntry * theSub, WitPeriod thePer);
//
// Saves the subVol for theSub in thePer.

void restore ();
//
// Restores each variable saved in this DataRepos to the value it had
// the first time it was saved since the most recent call to restore or
// clear. Empties the set of saved variables.
d38 83
a120 41
void restoreAndSave (WitDataRepos * theDataRepos);
//
// Same as restore, but clears theDataRepos and then saves in it the
// current values of all the variables that are being restored.

void clear ();
//
// Empties the set of saved variables.

bool isEmpty ();
//
// Returns true, iff the set of saved variables is empty.

private:

//------------------------------------------------------------------------
// Private member functions.
//------------------------------------------------------------------------

void savePtrVal (void * & theVoidPtr);
//
// Saves the current value of theVoidPtr.

noCopyCtorAssign (WitDataRepos);

//------------------------------------------------------------------------
// Private member data.
//------------------------------------------------------------------------

WitVarRepos <int>    * myIntRepos_;
WitVarRepos <bool>   * myBoolRepos_;
WitVarRepos <double> * myDblRepos_;
WitVarRepos <void *> * myPtrRepos_;
//
// The VarReposes owned by this DataRepos.

WitAttRepos <WitOperation> * execVolRepos_;
WitAttRepos <WitSubEntry> *  subVolRepos_;
//
// The AttReposes owned by this DataRepos.
};
@


1.1
log
@Stochastic Implosion
@
text
@d3 1
a3 1
//     (c) Copyright IBM Corp. 2006.
d6 2
a7 2
//     IBM Confidential 
// 
d28 1
a28 1
// them to the saved values upon request. 
d35 44
a78 2
   {
   public:
d80 41
a120 83
      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitDataRepos (WitProblem *);

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      ~WitDataRepos ();

      //------------------------------------------------------------------------
      // Other public member functions.
      //------------------------------------------------------------------------

      void saveVal (int    & theVar);
      void saveVal (bool   & theVar);
      void saveVal (double & theVar);
         //
         // Saves the current value of theVar.

      template <typename ObjByPtr>
            inline void saveVal (ObjByPtr * & thePtr)
         {
         savePtrVal (reinterpret_cast <void * &> (thePtr));
         }

      void saveExecVol (WitOperation * theOpn, WitPeriod thePer);
         //
         // Saves the execVol for theOpn in thePer.

      void saveSubVol (WitSubEntry * theSub, WitPeriod thePer);
         //
         // Saves the subVol for theSub in thePer.

      void restore ();
         //
         // Restores each variable saved in this DataRepos to the value it had
         // the first time it was saved since the most recent call to restore or
         // clear. Empties the set of saved variables.

      void restoreAndSave (WitDataRepos * theDataRepos);
         //
         // Same as restore, but clears theDataRepos and then saves in it the
         // current values of all the variables that are being restored.

      void clear ();
         //
         // Empties the set of saved variables.

      bool isEmpty ();
         //
         // Returns true, iff the set of saved variables is empty.

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      void savePtrVal (void * & theVoidPtr);
         //
         // Saves the current value of theVoidPtr.

      noCopyCtorAssign (WitDataRepos);

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      WitVarRepos <int>    * myIntRepos_;
      WitVarRepos <bool>   * myBoolRepos_;
      WitVarRepos <double> * myDblRepos_;
      WitVarRepos <void *> * myPtrRepos_;
         //
         // The VarReposes owned by this DataRepos.

      WitAttRepos <WitOperation> * execVolRepos_;
      WitAttRepos <WitSubEntry> *  subVolRepos_;
         //
         // The AttReposes owned by this DataRepos.
   };
@

