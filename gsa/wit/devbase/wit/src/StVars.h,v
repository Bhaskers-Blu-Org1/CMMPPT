head	1.35;
access;
symbols
	sce_5_01_20080919:1.29;
locks; strict;
comment	@ * @;


1.35
date	2011.09.28.23.50.29;	author rjw;	state Exp;
branches;
next	1.34;

1.34
date	2011.09.24.00.28.44;	author rjw;	state Exp;
branches;
next	1.33;

1.33
date	2011.08.30.20.18.14;	author rjw;	state Exp;
branches;
next	1.32;

1.32
date	2010.08.19.18.00.14;	author rjw;	state Exp;
branches;
next	1.31;

1.31
date	2010.03.24.21.31.03;	author rjw;	state Exp;
branches;
next	1.30;

1.30
date	2010.03.23.22.45.21;	author rjw;	state Exp;
branches;
next	1.29;

1.29
date	2008.03.03.22.35.43;	author rjw;	state Exp;
branches;
next	1.28;

1.28
date	2008.02.27.22.49.18;	author rjw;	state Exp;
branches;
next	1.27;

1.27
date	2008.02.13.20.22.56;	author rjw;	state Exp;
branches;
next	1.26;

1.26
date	2007.09.25.21.03.05;	author rjw;	state Exp;
branches;
next	1.25;

1.25
date	2007.09.07.20.25.12;	author rjw;	state Exp;
branches;
next	1.24;

1.24
date	2007.09.07.20.10.23;	author rjw;	state Exp;
branches;
next	1.23;

1.23
date	2007.09.07.15.19.30;	author rjw;	state Exp;
branches;
next	1.22;

1.22
date	2007.09.06.18.59.14;	author rjw;	state Exp;
branches;
next	1.21;

1.21
date	2007.09.05.22.23.58;	author rjw;	state Exp;
branches;
next	1.20;

1.20
date	2007.09.05.18.03.57;	author rjw;	state Exp;
branches;
next	1.19;

1.19
date	2007.09.04.23.01.56;	author rjw;	state Exp;
branches;
next	1.18;

1.18
date	2007.09.04.22.20.12;	author rjw;	state Exp;
branches;
next	1.17;

1.17
date	2007.08.24.15.48.08;	author rjw;	state Exp;
branches;
next	1.16;

1.16
date	2007.08.22.22.16.16;	author rjw;	state Exp;
branches;
next	1.15;

1.15
date	2007.08.16.21.27.41;	author rjw;	state Exp;
branches;
next	1.14;

1.14
date	2007.08.15.22.02.08;	author rjw;	state Exp;
branches;
next	1.13;

1.13
date	2007.08.15.21.36.43;	author rjw;	state Exp;
branches;
next	1.12;

1.12
date	2007.08.15.19.15.33;	author rjw;	state Exp;
branches;
next	1.11;

1.11
date	2007.08.14.15.03.01;	author rjw;	state Exp;
branches;
next	1.10;

1.10
date	2007.08.09.20.45.06;	author rjw;	state Exp;
branches;
next	1.9;

1.9
date	2007.08.09.20.17.42;	author rjw;	state Exp;
branches;
next	1.8;

1.8
date	2007.08.09.19.30.37;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2007.08.07.17.47.14;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2007.08.07.17.35.36;	author rjw;	state dead;
branches;
next	1.5;

1.5
date	2007.08.03.21.17.18;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2007.08.03.19.07.03;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2007.08.02.19.39.47;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2007.07.27.19.53.38;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2007.07.27.18.58.03;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.35
log
@Revised the source code proprietary statement.
@
text
@//==============================================================================
// IBM Confidential
//
// OCO Source Materials
//
// Watson Implosion Technology
//
// (C) Copyright IBM Corp. 1993, 2011  All Rights Reserved
//
// The Source code for this program is not published or otherwise divested of
// its trade secrets, irrespective of what has been deposited with the U. S.
// Copyright office.
//==============================================================================

#ifndef StVarsH
#define StVarsH

//------------------------------------------------------------------------------
// Header file: "StVars.h"
//
// Contains the declaration the following classes:
//
//    StScrapVar
//    StNonSubVar
//    StSubVar
//    StShipVar
//    StBddVar
//    StExecVar
//    StStockVar
//    StCumShipVar
//    StSlbvVar
//------------------------------------------------------------------------------

#include <StochVar.h>

//------------------------------------------------------------------------------
// class StScrapVar
//
// "Stochastic Scrap Variable"
// A scrap variable in a stochastic implosion optimization problem.
//
// Class hierarchy:
//
//    OptVC
//       OptVar
//          StochVar
//             StScrapVar
//
// Implemented in StVars.C.
//------------------------------------------------------------------------------

class WitStScrapVar: public WitStochVar
   {
   public:

      //-----------------------------------------------------------------------
      // Constructor functions.
      //-----------------------------------------------------------------------

      WitStScrapVar (WitPart *, WitStochLoc *);

      //-----------------------------------------------------------------------
      // Destructor function.
      //-----------------------------------------------------------------------

      virtual ~WitStScrapVar ();

      //-----------------------------------------------------------------------
      // Overriding public virtual member functions.
      //-----------------------------------------------------------------------

      virtual double compObjCoeff ();
      virtual void   uploadSolnTo (WitScenario *);

      //-----------------------------------------------------------------------
      // Access functions.
      //-----------------------------------------------------------------------

      accessFunc (WitPart *, myPart)

   private:

      //-----------------------------------------------------------------------
      // Private member functions.
      //-----------------------------------------------------------------------

      //-----------------------------------------------------------------------
      // Overriding private virtual member functions.
      //-----------------------------------------------------------------------

      virtual double       upperBoundVal ();
      virtual double       lowerBoundVal ();
      virtual const char * classText     ();
      virtual void         printItem     ();

      //-----------------------------------------------------------------------
      // Other private member functions.
      //-----------------------------------------------------------------------

      noCopyCtorAssign (WitStScrapVar);

      //-----------------------------------------------------------------------
      // Private member data.
      //-----------------------------------------------------------------------

      WitPart * const myPart_;
         //
         // The Part for this StScrapVar.
   };

//------------------------------------------------------------------------------
// class StNonSubVar
//
// "Stochastic Non-Substitution Variable"
// A non-substitution variable in a stochastic implosion optimization problem.
//
// Class hierarchy:
//
//    OptVC
//       OptVar
//          StochVar
//             StNonSubVar
//
// Implemented in StVars.C.
//------------------------------------------------------------------------------

class WitStNonSubVar: public WitStochVar
   {
   public:

      //-----------------------------------------------------------------------
      // Constructor functions.
      //-----------------------------------------------------------------------

      WitStNonSubVar (WitBomEntry *, WitStochLoc *);

      //-----------------------------------------------------------------------
      // Destructor function.
      //-----------------------------------------------------------------------

      virtual ~WitStNonSubVar ();

      //-----------------------------------------------------------------------
      // Overriding public virtual member functions.
      //-----------------------------------------------------------------------

      virtual double compObjCoeff ();
      virtual void   uploadSolnTo (WitScenario *);

      //-----------------------------------------------------------------------
      // Access functions.
      //-----------------------------------------------------------------------

      accessFunc (WitBomEntry *, myBomEnt)

   private:

      //-----------------------------------------------------------------------
      // Private member functions.
      //-----------------------------------------------------------------------

      //-----------------------------------------------------------------------
      // Overriding private virtual member functions.
      //-----------------------------------------------------------------------

      virtual double       upperBoundVal ();
      virtual double       lowerBoundVal ();
      virtual const char * classText     ();
      virtual void         printItem     ();

      //-----------------------------------------------------------------------
      // Other private member functions.
      //-----------------------------------------------------------------------

      noCopyCtorAssign (WitStNonSubVar);

      //-----------------------------------------------------------------------
      // Private member data.
      //-----------------------------------------------------------------------

      WitBomEntry * const myBomEnt_;
         //
         // The BomEntry for this StNonSubVar.
   };

//------------------------------------------------------------------------------
// class StSubVar
//
// "Stochastic Substitution Variable"
// A substitution variable in a stochastic implosion optimization problem.
//
// Class hierarchy:
//
//    OptVC
//       OptVar
//          StochVar
//             StSubVar
//
// Implemented in StVars.C.
//------------------------------------------------------------------------------

class WitStSubVar: public WitStochVar
   {
   public:

      //-----------------------------------------------------------------------
      // Constructor functions.
      //-----------------------------------------------------------------------

      WitStSubVar (WitSubEntry *, WitStochLoc *);

      //-----------------------------------------------------------------------
      // Destructor function.
      //-----------------------------------------------------------------------

      virtual ~WitStSubVar ();

      //-----------------------------------------------------------------------
      // Overriding public virtual member functions.
      //-----------------------------------------------------------------------

      virtual double compObjCoeff ();
      virtual void   uploadSolnTo (WitScenario *);

      //-----------------------------------------------------------------------
      // Access functions.
      //-----------------------------------------------------------------------

      accessFunc (WitSubEntry *, mySub)

   private:

      //-----------------------------------------------------------------------
      // Private member functions.
      //-----------------------------------------------------------------------

      //-----------------------------------------------------------------------
      // Overriding private virtual member functions.
      //-----------------------------------------------------------------------

      virtual double       upperBoundVal ();
      virtual double       lowerBoundVal ();
      virtual const char * classText     ();
      virtual void         printItem     ();

      //-----------------------------------------------------------------------
      // Other private member functions.
      //-----------------------------------------------------------------------

      noCopyCtorAssign (WitStSubVar);

      //-----------------------------------------------------------------------
      // Private member data.
      //-----------------------------------------------------------------------

      WitSubEntry * const mySub_;
         //
         // The SubEntry for this StSubVar.
   };

//------------------------------------------------------------------------------
// class StShipVar
//
// "Stochastic Shipment Variable"
// A shipment variable in a stochastic implosion optimization problem.
//
// Class hierarchy:
//
//    OptVC
//       OptVar
//          StochVar
//             StShipVar
//
// Implemented in StVars.C.
//------------------------------------------------------------------------------

class WitStShipVar: public WitStochVar
   {
   public:

      //-----------------------------------------------------------------------
      // Constructor functions.
      //-----------------------------------------------------------------------

      WitStShipVar (WitDemand *, WitStochLoc *);

      //-----------------------------------------------------------------------
      // Destructor function.
      //-----------------------------------------------------------------------

      virtual ~WitStShipVar ();

      //-----------------------------------------------------------------------
      // Overriding public virtual member functions.
      //-----------------------------------------------------------------------

      virtual double compObjCoeff ();
      virtual void   uploadSolnTo (WitScenario *);

      //-----------------------------------------------------------------------
      // Access functions.
      //-----------------------------------------------------------------------

      accessFunc (WitDemand *, myDemand)

   private:

      //-----------------------------------------------------------------------
      // Private member functions.
      //-----------------------------------------------------------------------

      //-----------------------------------------------------------------------
      // Overriding private virtual member functions.
      //-----------------------------------------------------------------------

      virtual double       upperBoundVal ();
      virtual double       lowerBoundVal ();
      virtual const char * classText     ();
      virtual void         printItem     ();

      //-----------------------------------------------------------------------
      // Other private member functions.
      //-----------------------------------------------------------------------

      noCopyCtorAssign (WitStShipVar);

      //-----------------------------------------------------------------------
      // Private member data.
      //-----------------------------------------------------------------------

      WitDemand * const myDemand_;
         //
         // The Demand for this StShipVar.
   };

//------------------------------------------------------------------------------
// class StBddVar
//
// "Stochastic Bounded Variable"
// A variable that corresponds to a BoundSet in a stochastic implosion
// optimization problem.
//
// Class hierarchy:
//
//    OptVC
//       OptVar
//          StochVar
//             StBddVar
//
// Implemented in StVars.C.
//------------------------------------------------------------------------------

class WitStBddVar: public WitStochVar
   {
   public:

      //-----------------------------------------------------------------------
      // Public member functions.
      //-----------------------------------------------------------------------

      virtual void genStSlbvVarIfNeeded ();
         //
         // Override from class StochVar.

      virtual WitBoundSet * myBoundSet () = 0;
         //
         // Returns the BoundSet that bounds this BoundedVar.

   protected:

      //-----------------------------------------------------------------------
      // Constructor functions.
      //-----------------------------------------------------------------------

      WitStBddVar (WitStochLoc *);

      //-----------------------------------------------------------------------
      // Destructor function.
      //-----------------------------------------------------------------------

      virtual ~WitStBddVar ();

      //-----------------------------------------------------------------------
      // Other protected member functions.
      //-----------------------------------------------------------------------

      double hardLB ();
      double hardUB ();

   private:

      //-----------------------------------------------------------------------
      // Private member functions.
      //-----------------------------------------------------------------------

      noCopyCtorAssign (WitStBddVar);
   };

//------------------------------------------------------------------------------
// class StExecVar
//
// "Stochastic Execution Variable"
// An execution variable in a stochastic implosion optimization problem.
//
// Class hierarchy:
//
//    OptVC
//       OptVar
//          StochVar
//             StBddVar
//                StExecVar
//
// Implemented in StVars.C.
//------------------------------------------------------------------------------

class WitStExecVar: public WitStBddVar
   {
   public:

      //-----------------------------------------------------------------------
      // Constructor functions.
      //-----------------------------------------------------------------------

      WitStExecVar (WitOperation *, WitStochLoc *);

      //-----------------------------------------------------------------------
      // Destructor function.
      //-----------------------------------------------------------------------

      virtual ~WitStExecVar ();

      //-----------------------------------------------------------------------
      // Overriding public virtual member functions.
      //-----------------------------------------------------------------------

      virtual double        compObjCoeff ();
      virtual void          uploadSolnTo (WitScenario *);
      virtual WitBoundSet * myBoundSet   ();

      //-----------------------------------------------------------------------
      // Access functions.
      //-----------------------------------------------------------------------

      accessFunc (WitOperation *, myOpn)

   private:

      //-----------------------------------------------------------------------
      // Private member functions.
      //-----------------------------------------------------------------------

      //-----------------------------------------------------------------------
      // Overriding private virtual member functions.
      //-----------------------------------------------------------------------

      virtual double       upperBoundVal ();
      virtual double       lowerBoundVal ();
      virtual const char * classText     ();
      virtual void         printItem     ();

      //-----------------------------------------------------------------------
      // Other private member functions.
      //-----------------------------------------------------------------------

      noCopyCtorAssign (WitStExecVar);

      //-----------------------------------------------------------------------
      // Private member data.
      //-----------------------------------------------------------------------

      WitOperation * const myOpn_;
         //
         // The Operation for this StExecVar.
   };

//------------------------------------------------------------------------------
// class StStockVar
//
// "Stochastic Stock Variable"
// An stock variable in a stochastic implosion optimization problem.
//
// Class hierarchy:
//
//    OptVC
//       OptVar
//          StochVar
//             StBddVar
//                StStockVar
//
// Implemented in StVars.C.
//------------------------------------------------------------------------------

class WitStStockVar: public WitStBddVar
   {
   public:

      //-----------------------------------------------------------------------
      // Constructor functions.
      //-----------------------------------------------------------------------

      WitStStockVar (WitMaterial *, WitStochLoc *);

      //-----------------------------------------------------------------------
      // Destructor function.
      //-----------------------------------------------------------------------

      virtual ~WitStStockVar ();

      //-----------------------------------------------------------------------
      // Overriding public virtual member functions.
      //-----------------------------------------------------------------------

      virtual double        compObjCoeff ();
      virtual void          uploadSolnTo (WitScenario *);
      virtual WitBoundSet * myBoundSet   ();

      //-----------------------------------------------------------------------
      // Access functions.
      //-----------------------------------------------------------------------

      accessFunc (WitMaterial *, myMat)

   private:

      //-----------------------------------------------------------------------
      // Private member functions.
      //-----------------------------------------------------------------------

      //-----------------------------------------------------------------------
      // Overriding private virtual member functions.
      //-----------------------------------------------------------------------

      virtual double       upperBoundVal ();
      virtual double       lowerBoundVal ();
      virtual const char * classText     ();
      virtual void         printItem     ();

      //-----------------------------------------------------------------------
      // Other private member functions.
      //-----------------------------------------------------------------------

      noCopyCtorAssign (WitStStockVar);

      //-----------------------------------------------------------------------
      // Private member data.
      //-----------------------------------------------------------------------

      WitMaterial * const myMat_;
         //
         // The Material for this StStockVar.
   };

//------------------------------------------------------------------------------
// class StCumShipVar
//
// "Stochastic Cumulative Shipment Variable"
// A cumulative shipment variable in a stochastic implosion optimization
// problem.
//
// Class hierarchy:
//
//    OptVC
//       OptVar
//          StochVar
//             StBddVar
//                StCumShipVar
//
// Implemented in StVars.C.
//------------------------------------------------------------------------------

class WitStCumShipVar: public WitStBddVar
   {
   public:

      //-----------------------------------------------------------------------
      // Constructor functions.
      //-----------------------------------------------------------------------

      WitStCumShipVar (WitDemand *, WitStochLoc *);

      //-----------------------------------------------------------------------
      // Destructor function.
      //-----------------------------------------------------------------------

      virtual ~WitStCumShipVar ();

      //-----------------------------------------------------------------------
      // Overriding public virtual member functions.
      //-----------------------------------------------------------------------

      virtual double        compObjCoeff ();
      virtual void          uploadSolnTo (WitScenario *);
      virtual WitBoundSet * myBoundSet   ();

      //-----------------------------------------------------------------------
      // Access functions.
      //-----------------------------------------------------------------------

      accessFunc (WitDemand *, myDemand)

   private:

      //-----------------------------------------------------------------------
      // Private member functions.
      //-----------------------------------------------------------------------

      //-----------------------------------------------------------------------
      // Overriding private virtual member functions.
      //-----------------------------------------------------------------------

      virtual double       upperBoundVal ();
      virtual double       lowerBoundVal ();
      virtual const char * classText     ();
      virtual void         printItem     ();

      //-----------------------------------------------------------------------
      // Other private member functions.
      //-----------------------------------------------------------------------

      noCopyCtorAssign (WitStCumShipVar);

      //-----------------------------------------------------------------------
      // Private member data.
      //-----------------------------------------------------------------------

      WitDemand * const myDemand_;
         //
         // The Demand for this StCumShipVar.
   };

//------------------------------------------------------------------------------
// class StSlbvVar
//
// "Stochastic Soft Lower Bound Violation Variable"
// A soft lower bound violation variable in a stochastic implosion optimization
// problem.
//
// Class hierarchy:
//
//    OptVC
//       OptVar
//          StochVar
//             StSlbvVar
//
// Implemented in StVars.C.
//------------------------------------------------------------------------------

class WitStSlbvVar: public WitStochVar
   {
   public:

      //-----------------------------------------------------------------------
      // Constructor functions.
      //-----------------------------------------------------------------------

      WitStSlbvVar (WitStBddVar *);

      //-----------------------------------------------------------------------
      // Destructor function.
      //-----------------------------------------------------------------------

      virtual ~WitStSlbvVar ();

      //-----------------------------------------------------------------------
      // Overriding public virtual member functions.
      //-----------------------------------------------------------------------

      virtual double compObjCoeff        ();
      virtual void   genStSlbConIfNeeded ();
      virtual double stBoundsCoeffVal    ();
      virtual void   uploadSolnTo        (WitScenario *);
      virtual bool   isStSlbvVar         ();

      //------------------------------------------------------------------------
      // Data access functions.
      //------------------------------------------------------------------------

      accessFunc (WitStBddVar *, myBddVar)

   private:

      //-----------------------------------------------------------------------
      // Private member functions.
      //-----------------------------------------------------------------------

      //-----------------------------------------------------------------------
      // Overriding private virtual member functions.
      //-----------------------------------------------------------------------

      virtual double       upperBoundVal ();
      virtual double       lowerBoundVal ();
      virtual const char * classText     ();
      virtual void         printItem     ();

      //-----------------------------------------------------------------------
      // Other private member functions.
      //-----------------------------------------------------------------------

      noCopyCtorAssign (WitStSlbvVar);

      //-----------------------------------------------------------------------
      // Private member data.
      //-----------------------------------------------------------------------

      WitStBddVar * const myBddVar_;
         //
         // The StBddVar for this StSlbvVar.
   };

#endif
@


1.34
log
@Reverted to the version of 8-30-2011, which has the following differences:
   Release 7.0
   Old copyright dates (2006)
   The leading blanks in each line, which were lost with the 2011 copyright
      update, are restored.
Restored release # as 8.0.
@
text
@d1 8
a8 1
//------------------------------------------------------------------------------
d10 4
a13 6
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
// 
//------------------------------------------------------------------------------
@


1.33
log
@Revised the copyright date.
@
text
@d6 2
a7 2
//     IBM Confidential
//
d48 2
a49 2
{
public:
d51 3
a53 3
//-----------------------------------------------------------------------
// Constructor functions.
//-----------------------------------------------------------------------
d55 1
a55 1
WitStScrapVar (WitPart *, WitStochLoc *);
d57 3
a59 3
//-----------------------------------------------------------------------
// Destructor function.
//-----------------------------------------------------------------------
d61 1
a61 1
virtual ~WitStScrapVar ();
d63 3
a65 3
//-----------------------------------------------------------------------
// Overriding public virtual member functions.
//-----------------------------------------------------------------------
d67 2
a68 2
virtual double compObjCoeff ();
virtual void   uploadSolnTo (WitScenario *);
d70 3
a72 3
//-----------------------------------------------------------------------
// Access functions.
//-----------------------------------------------------------------------
d74 1
a74 1
accessFunc (WitPart *, myPart)
d76 1
a76 1
private:
d78 3
a80 3
//-----------------------------------------------------------------------
// Private member functions.
//-----------------------------------------------------------------------
d82 3
a84 3
//-----------------------------------------------------------------------
// Overriding private virtual member functions.
//-----------------------------------------------------------------------
d86 4
a89 4
virtual double       upperBoundVal ();
virtual double       lowerBoundVal ();
virtual const char * classText     ();
virtual void         printItem     ();
d91 3
a93 3
//-----------------------------------------------------------------------
// Other private member functions.
//-----------------------------------------------------------------------
d95 1
a95 1
noCopyCtorAssign (WitStScrapVar);
d97 3
a99 3
//-----------------------------------------------------------------------
// Private member data.
//-----------------------------------------------------------------------
d101 4
a104 4
WitPart * const myPart_;
//
// The Part for this StScrapVar.
};
d123 2
a124 2
{
public:
d126 3
a128 3
//-----------------------------------------------------------------------
// Constructor functions.
//-----------------------------------------------------------------------
d130 1
a130 1
WitStNonSubVar (WitBomEntry *, WitStochLoc *);
d132 3
a134 3
//-----------------------------------------------------------------------
// Destructor function.
//-----------------------------------------------------------------------
d136 1
a136 1
virtual ~WitStNonSubVar ();
d138 3
a140 3
//-----------------------------------------------------------------------
// Overriding public virtual member functions.
//-----------------------------------------------------------------------
d142 2
a143 2
virtual double compObjCoeff ();
virtual void   uploadSolnTo (WitScenario *);
d145 3
a147 3
//-----------------------------------------------------------------------
// Access functions.
//-----------------------------------------------------------------------
d149 1
a149 1
accessFunc (WitBomEntry *, myBomEnt)
d151 1
a151 1
private:
d153 3
a155 3
//-----------------------------------------------------------------------
// Private member functions.
//-----------------------------------------------------------------------
d157 3
a159 3
//-----------------------------------------------------------------------
// Overriding private virtual member functions.
//-----------------------------------------------------------------------
d161 4
a164 4
virtual double       upperBoundVal ();
virtual double       lowerBoundVal ();
virtual const char * classText     ();
virtual void         printItem     ();
d166 3
a168 3
//-----------------------------------------------------------------------
// Other private member functions.
//-----------------------------------------------------------------------
d170 1
a170 1
noCopyCtorAssign (WitStNonSubVar);
d172 3
a174 3
//-----------------------------------------------------------------------
// Private member data.
//-----------------------------------------------------------------------
d176 4
a179 4
WitBomEntry * const myBomEnt_;
//
// The BomEntry for this StNonSubVar.
};
d198 2
a199 2
{
public:
d201 3
a203 3
//-----------------------------------------------------------------------
// Constructor functions.
//-----------------------------------------------------------------------
d205 1
a205 1
WitStSubVar (WitSubEntry *, WitStochLoc *);
d207 3
a209 3
//-----------------------------------------------------------------------
// Destructor function.
//-----------------------------------------------------------------------
d211 1
a211 1
virtual ~WitStSubVar ();
d213 3
a215 3
//-----------------------------------------------------------------------
// Overriding public virtual member functions.
//-----------------------------------------------------------------------
d217 2
a218 2
virtual double compObjCoeff ();
virtual void   uploadSolnTo (WitScenario *);
d220 3
a222 3
//-----------------------------------------------------------------------
// Access functions.
//-----------------------------------------------------------------------
d224 1
a224 1
accessFunc (WitSubEntry *, mySub)
d226 1
a226 1
private:
d228 3
a230 3
//-----------------------------------------------------------------------
// Private member functions.
//-----------------------------------------------------------------------
d232 3
a234 3
//-----------------------------------------------------------------------
// Overriding private virtual member functions.
//-----------------------------------------------------------------------
d236 4
a239 4
virtual double       upperBoundVal ();
virtual double       lowerBoundVal ();
virtual const char * classText     ();
virtual void         printItem     ();
d241 3
a243 3
//-----------------------------------------------------------------------
// Other private member functions.
//-----------------------------------------------------------------------
d245 1
a245 1
noCopyCtorAssign (WitStSubVar);
d247 3
a249 3
//-----------------------------------------------------------------------
// Private member data.
//-----------------------------------------------------------------------
d251 4
a254 4
WitSubEntry * const mySub_;
//
// The SubEntry for this StSubVar.
};
d273 2
a274 2
{
public:
d276 3
a278 3
//-----------------------------------------------------------------------
// Constructor functions.
//-----------------------------------------------------------------------
d280 1
a280 1
WitStShipVar (WitDemand *, WitStochLoc *);
d282 3
a284 3
//-----------------------------------------------------------------------
// Destructor function.
//-----------------------------------------------------------------------
d286 1
a286 1
virtual ~WitStShipVar ();
d288 3
a290 3
//-----------------------------------------------------------------------
// Overriding public virtual member functions.
//-----------------------------------------------------------------------
d292 2
a293 2
virtual double compObjCoeff ();
virtual void   uploadSolnTo (WitScenario *);
d295 3
a297 3
//-----------------------------------------------------------------------
// Access functions.
//-----------------------------------------------------------------------
d299 1
a299 1
accessFunc (WitDemand *, myDemand)
d301 1
a301 1
private:
d303 3
a305 3
//-----------------------------------------------------------------------
// Private member functions.
//-----------------------------------------------------------------------
d307 3
a309 3
//-----------------------------------------------------------------------
// Overriding private virtual member functions.
//-----------------------------------------------------------------------
d311 4
a314 4
virtual double       upperBoundVal ();
virtual double       lowerBoundVal ();
virtual const char * classText     ();
virtual void         printItem     ();
d316 3
a318 3
//-----------------------------------------------------------------------
// Other private member functions.
//-----------------------------------------------------------------------
d320 1
a320 1
noCopyCtorAssign (WitStShipVar);
d322 3
a324 3
//-----------------------------------------------------------------------
// Private member data.
//-----------------------------------------------------------------------
d326 4
a329 4
WitDemand * const myDemand_;
//
// The Demand for this StShipVar.
};
d349 2
a350 2
{
public:
d352 3
a354 3
//-----------------------------------------------------------------------
// Public member functions.
//-----------------------------------------------------------------------
d356 3
a358 3
virtual void genStSlbvVarIfNeeded ();
//
// Override from class StochVar.
d360 3
a362 3
virtual WitBoundSet * myBoundSet () = 0;
//
// Returns the BoundSet that bounds this BoundedVar.
d364 1
a364 1
protected:
d366 3
a368 3
//-----------------------------------------------------------------------
// Constructor functions.
//-----------------------------------------------------------------------
d370 1
a370 1
WitStBddVar (WitStochLoc *);
d372 3
a374 3
//-----------------------------------------------------------------------
// Destructor function.
//-----------------------------------------------------------------------
d376 1
a376 1
virtual ~WitStBddVar ();
d378 3
a380 3
//-----------------------------------------------------------------------
// Other protected member functions.
//-----------------------------------------------------------------------
d382 2
a383 2
double hardLB ();
double hardUB ();
d385 1
a385 1
private:
d387 3
a389 3
//-----------------------------------------------------------------------
// Private member functions.
//-----------------------------------------------------------------------
d391 2
a392 2
noCopyCtorAssign (WitStBddVar);
};
d412 2
a413 2
{
public:
d415 3
a417 3
//-----------------------------------------------------------------------
// Constructor functions.
//-----------------------------------------------------------------------
d419 1
a419 1
WitStExecVar (WitOperation *, WitStochLoc *);
d421 3
a423 3
//-----------------------------------------------------------------------
// Destructor function.
//-----------------------------------------------------------------------
d425 1
a425 1
virtual ~WitStExecVar ();
d427 3
a429 3
//-----------------------------------------------------------------------
// Overriding public virtual member functions.
//-----------------------------------------------------------------------
d431 3
a433 3
virtual double        compObjCoeff ();
virtual void          uploadSolnTo (WitScenario *);
virtual WitBoundSet * myBoundSet   ();
d435 3
a437 3
//-----------------------------------------------------------------------
// Access functions.
//-----------------------------------------------------------------------
d439 1
a439 1
accessFunc (WitOperation *, myOpn)
d441 1
a441 1
private:
d443 3
a445 3
//-----------------------------------------------------------------------
// Private member functions.
//-----------------------------------------------------------------------
d447 3
a449 3
//-----------------------------------------------------------------------
// Overriding private virtual member functions.
//-----------------------------------------------------------------------
d451 4
a454 4
virtual double       upperBoundVal ();
virtual double       lowerBoundVal ();
virtual const char * classText     ();
virtual void         printItem     ();
d456 3
a458 3
//-----------------------------------------------------------------------
// Other private member functions.
//-----------------------------------------------------------------------
d460 1
a460 1
noCopyCtorAssign (WitStExecVar);
d462 3
a464 3
//-----------------------------------------------------------------------
// Private member data.
//-----------------------------------------------------------------------
d466 4
a469 4
WitOperation * const myOpn_;
//
// The Operation for this StExecVar.
};
d489 2
a490 2
{
public:
d492 3
a494 3
//-----------------------------------------------------------------------
// Constructor functions.
//-----------------------------------------------------------------------
d496 1
a496 1
WitStStockVar (WitMaterial *, WitStochLoc *);
d498 3
a500 3
//-----------------------------------------------------------------------
// Destructor function.
//-----------------------------------------------------------------------
d502 1
a502 1
virtual ~WitStStockVar ();
d504 3
a506 3
//-----------------------------------------------------------------------
// Overriding public virtual member functions.
//-----------------------------------------------------------------------
d508 3
a510 3
virtual double        compObjCoeff ();
virtual void          uploadSolnTo (WitScenario *);
virtual WitBoundSet * myBoundSet   ();
d512 3
a514 3
//-----------------------------------------------------------------------
// Access functions.
//-----------------------------------------------------------------------
d516 1
a516 1
accessFunc (WitMaterial *, myMat)
d518 1
a518 1
private:
d520 3
a522 3
//-----------------------------------------------------------------------
// Private member functions.
//-----------------------------------------------------------------------
d524 3
a526 3
//-----------------------------------------------------------------------
// Overriding private virtual member functions.
//-----------------------------------------------------------------------
d528 4
a531 4
virtual double       upperBoundVal ();
virtual double       lowerBoundVal ();
virtual const char * classText     ();
virtual void         printItem     ();
d533 3
a535 3
//-----------------------------------------------------------------------
// Other private member functions.
//-----------------------------------------------------------------------
d537 1
a537 1
noCopyCtorAssign (WitStStockVar);
d539 3
a541 3
//-----------------------------------------------------------------------
// Private member data.
//-----------------------------------------------------------------------
d543 4
a546 4
WitMaterial * const myMat_;
//
// The Material for this StStockVar.
};
d567 2
a568 2
{
public:
d570 3
a572 3
//-----------------------------------------------------------------------
// Constructor functions.
//-----------------------------------------------------------------------
d574 1
a574 1
WitStCumShipVar (WitDemand *, WitStochLoc *);
d576 3
a578 3
//-----------------------------------------------------------------------
// Destructor function.
//-----------------------------------------------------------------------
d580 1
a580 1
virtual ~WitStCumShipVar ();
d582 3
a584 3
//-----------------------------------------------------------------------
// Overriding public virtual member functions.
//-----------------------------------------------------------------------
d586 3
a588 3
virtual double        compObjCoeff ();
virtual void          uploadSolnTo (WitScenario *);
virtual WitBoundSet * myBoundSet   ();
d590 3
a592 3
//-----------------------------------------------------------------------
// Access functions.
//-----------------------------------------------------------------------
d594 1
a594 1
accessFunc (WitDemand *, myDemand)
d596 1
a596 1
private:
d598 3
a600 3
//-----------------------------------------------------------------------
// Private member functions.
//-----------------------------------------------------------------------
d602 3
a604 3
//-----------------------------------------------------------------------
// Overriding private virtual member functions.
//-----------------------------------------------------------------------
d606 4
a609 4
virtual double       upperBoundVal ();
virtual double       lowerBoundVal ();
virtual const char * classText     ();
virtual void         printItem     ();
d611 3
a613 3
//-----------------------------------------------------------------------
// Other private member functions.
//-----------------------------------------------------------------------
d615 1
a615 1
noCopyCtorAssign (WitStCumShipVar);
d617 3
a619 3
//-----------------------------------------------------------------------
// Private member data.
//-----------------------------------------------------------------------
d621 4
a624 4
WitDemand * const myDemand_;
//
// The Demand for this StCumShipVar.
};
d644 2
a645 2
{
public:
d647 3
a649 3
//-----------------------------------------------------------------------
// Constructor functions.
//-----------------------------------------------------------------------
d651 1
a651 1
WitStSlbvVar (WitStBddVar *);
d653 3
a655 3
//-----------------------------------------------------------------------
// Destructor function.
//-----------------------------------------------------------------------
d657 1
a657 1
virtual ~WitStSlbvVar ();
d659 3
a661 3
//-----------------------------------------------------------------------
// Overriding public virtual member functions.
//-----------------------------------------------------------------------
d663 5
a667 5
virtual double compObjCoeff        ();
virtual void   genStSlbConIfNeeded ();
virtual double stBoundsCoeffVal    ();
virtual void   uploadSolnTo        (WitScenario *);
virtual bool   isStSlbvVar         ();
d669 3
a671 3
//------------------------------------------------------------------------
// Data access functions.
//------------------------------------------------------------------------
d673 1
a673 1
accessFunc (WitStBddVar *, myBddVar)
d675 1
a675 1
private:
d677 3
a679 3
//-----------------------------------------------------------------------
// Private member functions.
//-----------------------------------------------------------------------
d681 3
a683 3
//-----------------------------------------------------------------------
// Overriding private virtual member functions.
//-----------------------------------------------------------------------
d685 4
a688 4
virtual double       upperBoundVal ();
virtual double       lowerBoundVal ();
virtual const char * classText     ();
virtual void         printItem     ();
d690 3
a692 3
//-----------------------------------------------------------------------
// Other private member functions.
//-----------------------------------------------------------------------
d694 1
a694 1
noCopyCtorAssign (WitStSlbvVar);
d696 3
a698 3
//-----------------------------------------------------------------------
// Private member data.
//-----------------------------------------------------------------------
d700 4
a703 4
WitStBddVar * const myBddVar_;
//
// The StBddVar for this StSlbvVar.
};
@


1.32
log
@CPLEX
@
text
@d6 2
a7 2
//     IBM Confidential 
// 
d48 2
a49 2
   {
   public:
d51 3
a53 3
      //-----------------------------------------------------------------------
      // Constructor functions.
      //-----------------------------------------------------------------------
d55 1
a55 1
      WitStScrapVar (WitPart *, WitStochLoc *);
d57 3
a59 3
      //-----------------------------------------------------------------------
      // Destructor function.
      //-----------------------------------------------------------------------
d61 1
a61 1
      virtual ~WitStScrapVar ();
d63 3
a65 3
      //-----------------------------------------------------------------------
      // Overriding public virtual member functions.
      //-----------------------------------------------------------------------
d67 2
a68 2
      virtual double compObjCoeff ();
      virtual void   uploadSolnTo (WitScenario *);
d70 3
a72 3
      //-----------------------------------------------------------------------
      // Access functions.
      //-----------------------------------------------------------------------
d74 1
a74 1
      accessFunc (WitPart *, myPart)
d76 1
a76 1
   private:
d78 3
a80 3
      //-----------------------------------------------------------------------
      // Private member functions.
      //-----------------------------------------------------------------------
d82 3
a84 3
      //-----------------------------------------------------------------------
      // Overriding private virtual member functions.
      //-----------------------------------------------------------------------
d86 4
a89 4
      virtual double       upperBoundVal ();
      virtual double       lowerBoundVal ();
      virtual const char * classText     ();
      virtual void         printItem     ();
d91 3
a93 3
      //-----------------------------------------------------------------------
      // Other private member functions.
      //-----------------------------------------------------------------------
d95 1
a95 1
      noCopyCtorAssign (WitStScrapVar);
d97 3
a99 3
      //-----------------------------------------------------------------------
      // Private member data.
      //-----------------------------------------------------------------------
d101 4
a104 4
      WitPart * const myPart_;
         //
         // The Part for this StScrapVar.
   };
d123 2
a124 2
   {
   public:
d126 3
a128 3
      //-----------------------------------------------------------------------
      // Constructor functions.
      //-----------------------------------------------------------------------
d130 1
a130 1
      WitStNonSubVar (WitBomEntry *, WitStochLoc *);
d132 3
a134 3
      //-----------------------------------------------------------------------
      // Destructor function.
      //-----------------------------------------------------------------------
d136 1
a136 1
      virtual ~WitStNonSubVar ();
d138 3
a140 3
      //-----------------------------------------------------------------------
      // Overriding public virtual member functions.
      //-----------------------------------------------------------------------
d142 2
a143 2
      virtual double compObjCoeff ();
      virtual void   uploadSolnTo (WitScenario *);
d145 3
a147 3
      //-----------------------------------------------------------------------
      // Access functions.
      //-----------------------------------------------------------------------
d149 1
a149 1
      accessFunc (WitBomEntry *, myBomEnt)
d151 1
a151 1
   private:
d153 3
a155 3
      //-----------------------------------------------------------------------
      // Private member functions.
      //-----------------------------------------------------------------------
d157 3
a159 3
      //-----------------------------------------------------------------------
      // Overriding private virtual member functions.
      //-----------------------------------------------------------------------
d161 4
a164 4
      virtual double       upperBoundVal ();
      virtual double       lowerBoundVal ();
      virtual const char * classText     ();
      virtual void         printItem     ();
d166 3
a168 3
      //-----------------------------------------------------------------------
      // Other private member functions.
      //-----------------------------------------------------------------------
d170 1
a170 1
      noCopyCtorAssign (WitStNonSubVar);
d172 3
a174 3
      //-----------------------------------------------------------------------
      // Private member data.
      //-----------------------------------------------------------------------
d176 4
a179 4
      WitBomEntry * const myBomEnt_;
         //
         // The BomEntry for this StNonSubVar.
   };
d198 2
a199 2
   {
   public:
d201 3
a203 3
      //-----------------------------------------------------------------------
      // Constructor functions.
      //-----------------------------------------------------------------------
d205 1
a205 1
      WitStSubVar (WitSubEntry *, WitStochLoc *);
d207 3
a209 3
      //-----------------------------------------------------------------------
      // Destructor function.
      //-----------------------------------------------------------------------
d211 1
a211 1
      virtual ~WitStSubVar ();
d213 3
a215 3
      //-----------------------------------------------------------------------
      // Overriding public virtual member functions.
      //-----------------------------------------------------------------------
d217 2
a218 2
      virtual double compObjCoeff ();
      virtual void   uploadSolnTo (WitScenario *);
d220 3
a222 3
      //-----------------------------------------------------------------------
      // Access functions.
      //-----------------------------------------------------------------------
d224 1
a224 1
      accessFunc (WitSubEntry *, mySub)
d226 1
a226 1
   private:
d228 3
a230 3
      //-----------------------------------------------------------------------
      // Private member functions.
      //-----------------------------------------------------------------------
d232 3
a234 3
      //-----------------------------------------------------------------------
      // Overriding private virtual member functions.
      //-----------------------------------------------------------------------
d236 4
a239 4
      virtual double       upperBoundVal ();
      virtual double       lowerBoundVal ();
      virtual const char * classText     ();
      virtual void         printItem     ();
d241 3
a243 3
      //-----------------------------------------------------------------------
      // Other private member functions.
      //-----------------------------------------------------------------------
d245 1
a245 1
      noCopyCtorAssign (WitStSubVar);
d247 3
a249 3
      //-----------------------------------------------------------------------
      // Private member data.
      //-----------------------------------------------------------------------
d251 4
a254 4
      WitSubEntry * const mySub_;
         //
         // The SubEntry for this StSubVar.
   };
d273 2
a274 2
   {
   public:
d276 3
a278 3
      //-----------------------------------------------------------------------
      // Constructor functions.
      //-----------------------------------------------------------------------
d280 1
a280 1
      WitStShipVar (WitDemand *, WitStochLoc *);
d282 3
a284 3
      //-----------------------------------------------------------------------
      // Destructor function.
      //-----------------------------------------------------------------------
d286 1
a286 1
      virtual ~WitStShipVar ();
d288 3
a290 3
      //-----------------------------------------------------------------------
      // Overriding public virtual member functions.
      //-----------------------------------------------------------------------
d292 2
a293 2
      virtual double compObjCoeff ();
      virtual void   uploadSolnTo (WitScenario *);
d295 3
a297 3
      //-----------------------------------------------------------------------
      // Access functions.
      //-----------------------------------------------------------------------
d299 1
a299 1
      accessFunc (WitDemand *, myDemand)
d301 1
a301 1
   private:
d303 3
a305 3
      //-----------------------------------------------------------------------
      // Private member functions.
      //-----------------------------------------------------------------------
d307 3
a309 3
      //-----------------------------------------------------------------------
      // Overriding private virtual member functions.
      //-----------------------------------------------------------------------
d311 4
a314 4
      virtual double       upperBoundVal ();
      virtual double       lowerBoundVal ();
      virtual const char * classText     ();
      virtual void         printItem     ();
d316 3
a318 3
      //-----------------------------------------------------------------------
      // Other private member functions.
      //-----------------------------------------------------------------------
d320 1
a320 1
      noCopyCtorAssign (WitStShipVar);
d322 3
a324 3
      //-----------------------------------------------------------------------
      // Private member data.
      //-----------------------------------------------------------------------
d326 4
a329 4
      WitDemand * const myDemand_;
         //
         // The Demand for this StShipVar.
   };
d349 2
a350 2
   {
   public:
d352 3
a354 3
      //-----------------------------------------------------------------------
      // Public member functions.
      //-----------------------------------------------------------------------
d356 3
a358 3
      virtual void genStSlbvVarIfNeeded ();
         //
         // Override from class StochVar.
d360 3
a362 3
      virtual WitBoundSet * myBoundSet () = 0;
         //
         // Returns the BoundSet that bounds this BoundedVar.
d364 1
a364 1
   protected:
d366 3
a368 3
      //-----------------------------------------------------------------------
      // Constructor functions.
      //-----------------------------------------------------------------------
d370 1
a370 1
      WitStBddVar (WitStochLoc *);
d372 3
a374 3
      //-----------------------------------------------------------------------
      // Destructor function.
      //-----------------------------------------------------------------------
d376 1
a376 1
      virtual ~WitStBddVar ();
d378 3
a380 3
      //-----------------------------------------------------------------------
      // Other protected member functions.
      //-----------------------------------------------------------------------
d382 2
a383 2
      double hardLB ();
      double hardUB ();
d385 1
a385 1
   private:
d387 3
a389 3
      //-----------------------------------------------------------------------
      // Private member functions.
      //-----------------------------------------------------------------------
d391 2
a392 2
      noCopyCtorAssign (WitStBddVar);
   };
d412 2
a413 2
   {
   public:
d415 3
a417 3
      //-----------------------------------------------------------------------
      // Constructor functions.
      //-----------------------------------------------------------------------
d419 1
a419 1
      WitStExecVar (WitOperation *, WitStochLoc *);
d421 3
a423 3
      //-----------------------------------------------------------------------
      // Destructor function.
      //-----------------------------------------------------------------------
d425 1
a425 1
      virtual ~WitStExecVar ();
d427 3
a429 3
      //-----------------------------------------------------------------------
      // Overriding public virtual member functions.
      //-----------------------------------------------------------------------
d431 3
a433 3
      virtual double        compObjCoeff ();
      virtual void          uploadSolnTo (WitScenario *);
      virtual WitBoundSet * myBoundSet   ();
d435 3
a437 3
      //-----------------------------------------------------------------------
      // Access functions.
      //-----------------------------------------------------------------------
d439 1
a439 1
      accessFunc (WitOperation *, myOpn)
d441 1
a441 1
   private:
d443 3
a445 3
      //-----------------------------------------------------------------------
      // Private member functions.
      //-----------------------------------------------------------------------
d447 3
a449 3
      //-----------------------------------------------------------------------
      // Overriding private virtual member functions.
      //-----------------------------------------------------------------------
d451 4
a454 4
      virtual double       upperBoundVal ();
      virtual double       lowerBoundVal ();
      virtual const char * classText     ();
      virtual void         printItem     ();
d456 3
a458 3
      //-----------------------------------------------------------------------
      // Other private member functions.
      //-----------------------------------------------------------------------
d460 1
a460 1
      noCopyCtorAssign (WitStExecVar);
d462 3
a464 3
      //-----------------------------------------------------------------------
      // Private member data.
      //-----------------------------------------------------------------------
d466 4
a469 4
      WitOperation * const myOpn_;
         //
         // The Operation for this StExecVar.
   };
d489 2
a490 2
   {
   public:
d492 3
a494 3
      //-----------------------------------------------------------------------
      // Constructor functions.
      //-----------------------------------------------------------------------
d496 1
a496 1
      WitStStockVar (WitMaterial *, WitStochLoc *);
d498 3
a500 3
      //-----------------------------------------------------------------------
      // Destructor function.
      //-----------------------------------------------------------------------
d502 1
a502 1
      virtual ~WitStStockVar ();
d504 3
a506 3
      //-----------------------------------------------------------------------
      // Overriding public virtual member functions.
      //-----------------------------------------------------------------------
d508 3
a510 3
      virtual double        compObjCoeff ();
      virtual void          uploadSolnTo (WitScenario *);
      virtual WitBoundSet * myBoundSet   ();
d512 3
a514 3
      //-----------------------------------------------------------------------
      // Access functions.
      //-----------------------------------------------------------------------
d516 1
a516 1
      accessFunc (WitMaterial *, myMat)
d518 1
a518 1
   private:
d520 3
a522 3
      //-----------------------------------------------------------------------
      // Private member functions.
      //-----------------------------------------------------------------------
d524 3
a526 3
      //-----------------------------------------------------------------------
      // Overriding private virtual member functions.
      //-----------------------------------------------------------------------
d528 4
a531 4
      virtual double       upperBoundVal ();
      virtual double       lowerBoundVal ();
      virtual const char * classText     ();
      virtual void         printItem     ();
d533 3
a535 3
      //-----------------------------------------------------------------------
      // Other private member functions.
      //-----------------------------------------------------------------------
d537 1
a537 1
      noCopyCtorAssign (WitStStockVar);
d539 3
a541 3
      //-----------------------------------------------------------------------
      // Private member data.
      //-----------------------------------------------------------------------
d543 4
a546 4
      WitMaterial * const myMat_;
         //
         // The Material for this StStockVar.
   };
d567 2
a568 2
   {
   public:
d570 3
a572 3
      //-----------------------------------------------------------------------
      // Constructor functions.
      //-----------------------------------------------------------------------
d574 1
a574 1
      WitStCumShipVar (WitDemand *, WitStochLoc *);
d576 3
a578 3
      //-----------------------------------------------------------------------
      // Destructor function.
      //-----------------------------------------------------------------------
d580 1
a580 1
      virtual ~WitStCumShipVar ();
d582 3
a584 3
      //-----------------------------------------------------------------------
      // Overriding public virtual member functions.
      //-----------------------------------------------------------------------
d586 3
a588 3
      virtual double        compObjCoeff ();
      virtual void          uploadSolnTo (WitScenario *);
      virtual WitBoundSet * myBoundSet   ();
d590 3
a592 3
      //-----------------------------------------------------------------------
      // Access functions.
      //-----------------------------------------------------------------------
d594 1
a594 1
      accessFunc (WitDemand *, myDemand)
d596 1
a596 1
   private:
d598 3
a600 3
      //-----------------------------------------------------------------------
      // Private member functions.
      //-----------------------------------------------------------------------
d602 3
a604 3
      //-----------------------------------------------------------------------
      // Overriding private virtual member functions.
      //-----------------------------------------------------------------------
d606 4
a609 4
      virtual double       upperBoundVal ();
      virtual double       lowerBoundVal ();
      virtual const char * classText     ();
      virtual void         printItem     ();
d611 3
a613 3
      //-----------------------------------------------------------------------
      // Other private member functions.
      //-----------------------------------------------------------------------
d615 1
a615 1
      noCopyCtorAssign (WitStCumShipVar);
d617 3
a619 3
      //-----------------------------------------------------------------------
      // Private member data.
      //-----------------------------------------------------------------------
d621 4
a624 4
      WitDemand * const myDemand_;
         //
         // The Demand for this StCumShipVar.
   };
d644 2
a645 2
   {
   public:
d647 3
a649 3
      //-----------------------------------------------------------------------
      // Constructor functions.
      //-----------------------------------------------------------------------
d651 1
a651 1
      WitStSlbvVar (WitStBddVar *);
d653 3
a655 3
      //-----------------------------------------------------------------------
      // Destructor function.
      //-----------------------------------------------------------------------
d657 1
a657 1
      virtual ~WitStSlbvVar ();
d659 3
a661 3
      //-----------------------------------------------------------------------
      // Overriding public virtual member functions.
      //-----------------------------------------------------------------------
d663 5
a667 5
      virtual double compObjCoeff        ();
      virtual void   genStSlbConIfNeeded ();
      virtual double stBoundsCoeffVal    ();
      virtual void   uploadSolnTo        (WitScenario *);
      virtual bool   isStSlbvVar         ();
d669 3
a671 3
      //------------------------------------------------------------------------
      // Data access functions.
      //------------------------------------------------------------------------
d673 1
a673 1
      accessFunc (WitStBddVar *, myBddVar)
d675 1
a675 1
   private:
d677 3
a679 3
      //-----------------------------------------------------------------------
      // Private member functions.
      //-----------------------------------------------------------------------
d681 3
a683 3
      //-----------------------------------------------------------------------
      // Overriding private virtual member functions.
      //-----------------------------------------------------------------------
d685 4
a688 4
      virtual double       upperBoundVal ();
      virtual double       lowerBoundVal ();
      virtual const char * classText     ();
      virtual void         printItem     ();
d690 3
a692 3
      //-----------------------------------------------------------------------
      // Other private member functions.
      //-----------------------------------------------------------------------
d694 1
a694 1
      noCopyCtorAssign (WitStSlbvVar);
d696 3
a698 3
      //-----------------------------------------------------------------------
      // Private member data.
      //-----------------------------------------------------------------------
d700 4
a703 4
      WitStBddVar * const myBddVar_;
         //
         // The StBddVar for this StSlbvVar.
   };
@


1.31
log
@Removed OptObj classes.
@
text
@d35 1
a35 1
// A scrap variable in a stochastic implosion optimization model.
d110 1
a110 1
// A non-substitution variable in a stochastic implosion optimization model.
d185 1
a185 1
// A substitution variable in a stochastic implosion optimization model.
d260 1
a260 1
// A shipment variable in a stochastic implosion optimization model.
d336 1
a336 1
// optimization model.
d398 1
a398 1
// An execution variable in a stochastic implosion optimization model.
d475 1
a475 1
// An stock variable in a stochastic implosion optimization model.
d553 1
a553 1
// model.
d631 1
a631 1
// model.
@


1.30
log
@Removed class StBoundsObj.
@
text
@d67 2
a68 2
      virtual double stochCoeffVal ();
      virtual void   uploadSolnTo  (WitScenario *);
d142 2
a143 2
      virtual double stochCoeffVal ();
      virtual void   uploadSolnTo  (WitScenario *);
d217 2
a218 2
      virtual double stochCoeffVal ();
      virtual void   uploadSolnTo  (WitScenario *);
d292 2
a293 2
      virtual double stochCoeffVal ();
      virtual void   uploadSolnTo  (WitScenario *);
d431 3
a433 3
      virtual double        stochCoeffVal ();
      virtual void          uploadSolnTo  (WitScenario *);
      virtual WitBoundSet * myBoundSet    ();
d508 3
a510 3
      virtual double        stochCoeffVal ();
      virtual void          uploadSolnTo  (WitScenario *);
      virtual WitBoundSet * myBoundSet    ();
d586 3
a588 3
      virtual double        stochCoeffVal ();
      virtual void          uploadSolnTo  (WitScenario *);
      virtual WitBoundSet * myBoundSet    ();
d663 1
a664 1
      virtual double stochCoeffVal       ();
@


1.29
log
@Stochastic Implosion
@
text
@d667 1
@


1.28
log
@Stochastic Implosion
@
text
@d35 1
a35 1
// A scrap variable in a stochastic implosion optimization problem.
d110 1
a110 1
// A non-substitution variable in a stochastic implosion optimization problem.
d185 1
a185 1
// A substitution variable in a stochastic implosion optimization problem.
d260 1
a260 1
// A shipment variable in a stochastic implosion optimization problem.
d336 1
a336 1
// optimization problem.
d398 1
a398 1
// An execution variable in a stochastic implosion optimization problem.
d475 1
a475 1
// An stock variable in a stochastic implosion optimization problem.
d553 1
a553 1
// problem.
d631 1
a631 1
// problem.
@


1.27
log
@Stochastic Implosion
@
text
@d39 1
a39 1
//    OptProbEl
d114 1
a114 1
//    OptProbEl
d189 1
a189 1
//    OptProbEl
d264 1
a264 1
//    OptProbEl
d340 1
a340 1
//    OptProbEl
d402 1
a402 1
//    OptProbEl
d479 1
a479 1
//    OptProbEl
d557 1
a557 1
//    OptProbEl
d635 1
a635 1
//    OptProbEl
@


1.26
log
@Stochastic Implosion
@
text
@d672 1
a672 1
      accessFunc (WitStBddVar *, myStBddVar)
d699 1
a699 1
      WitStBddVar * const myStBddVar_;
@


1.25
log
@Stochastic Implosion
@
text
@d68 1
a68 1
      virtual void   uploadSoln    ();
d143 1
a143 1
      virtual void   uploadSoln    ();
d218 1
a218 1
      virtual void   uploadSoln    ();
d293 1
a293 1
      virtual void   uploadSoln    ();
d432 1
a432 1
      virtual void          uploadSoln    ();
d509 1
a509 1
      virtual void          uploadSoln    ();
d587 1
a587 1
      virtual void          uploadSoln    ();
d666 1
a666 1
      virtual void   uploadSoln          ();
@


1.24
log
@Stochastic Implosion
@
text
@d67 2
a68 3
      virtual double stochCoeffVal     ();
      virtual double stPrimaryCoeffVal ();
      virtual void   uploadSoln        ();
d142 2
a143 3
      virtual double stochCoeffVal     ();
      virtual double stPrimaryCoeffVal ();
      virtual void   uploadSoln        ();
d217 2
a218 3
      virtual double stochCoeffVal     ();
      virtual double stPrimaryCoeffVal ();
      virtual void   uploadSoln        ();
d292 2
a293 3
      virtual double stochCoeffVal     ();
      virtual double stPrimaryCoeffVal ();
      virtual void   uploadSoln        ();
d431 3
a433 4
      virtual double        stochCoeffVal     ();
      virtual double        stPrimaryCoeffVal ();
      virtual void          uploadSoln        ();
      virtual WitBoundSet * myBoundSet        ();
d508 3
a510 4
      virtual double        stochCoeffVal     ();
      virtual double        stPrimaryCoeffVal ();
      virtual void          uploadSoln        ();
      virtual WitBoundSet * myBoundSet        ();
d586 3
a588 4
      virtual double        stochCoeffVal     ();
      virtual double        stPrimaryCoeffVal ();
      virtual void          uploadSoln        ();
      virtual WitBoundSet * myBoundSet        ();
a664 1
      virtual double stPrimaryCoeffVal   ();
@


1.23
log
@Stochastic Implosion
@
text
@d67 1
d143 1
d219 1
d295 1
d435 1
d513 1
d592 1
d671 1
@


1.22
log
@Stochastic Implosion
@
text
@d67 2
a68 2
      virtual double stochCoeffVal ();
      virtual void   uploadSoln    ();
d142 2
a143 2
      virtual double stochCoeffVal ();
      virtual void   uploadSoln    ();
d217 2
a218 2
      virtual double stochCoeffVal ();
      virtual void   uploadSoln    ();
d292 2
a293 2
      virtual double stochCoeffVal ();
      virtual void   uploadSoln    ();
d431 3
a433 3
      virtual double        stochCoeffVal ();
      virtual void          uploadSoln    ();
      virtual WitBoundSet * myBoundSet    ();
d508 3
a510 3
      virtual double        stochCoeffVal ();
      virtual void          uploadSoln    ();
      virtual WitBoundSet * myBoundSet    ();
d586 3
a588 3
      virtual double        stochCoeffVal ();
      virtual void          uploadSoln    ();
      virtual WitBoundSet * myBoundSet    ();
d664 2
a665 1
      virtual double stochCoeffVal       ();
@


1.21
log
@Stochastic Implosion
@
text
@d356 4
a363 4
      void genStSlbvVarIfNeeded ();
         //
         // Generates an StSlbvVar for this StBddVar, if it needs one.

d663 9
a671 2
      virtual double stochCoeffVal ();
      virtual void   uploadSoln    ();
@


1.20
log
@Stochastic Implosion
@
text
@d26 1
d350 14
a390 4
      virtual WitBoundSet * myBoundSet () = 0;
         //
         // Returns the BoundSet that bounds this BoundedVar.

a391 4

      //-----------------------------------------------------------------------
      // Private member data.
      //-----------------------------------------------------------------------
d431 3
a433 2
      virtual double stochCoeffVal ();
      virtual void   uploadSoln    ();
d451 4
a454 5
      virtual double        upperBoundVal ();
      virtual double        lowerBoundVal ();
      virtual const char *  classText     ();
      virtual void          printItem     ();
      virtual WitBoundSet * myBoundSet    ();
d508 3
a510 2
      virtual double stochCoeffVal ();
      virtual void   uploadSoln    ();
d528 4
a531 5
      virtual double        upperBoundVal ();
      virtual double        lowerBoundVal ();
      virtual const char *  classText     ();
      virtual void          printItem     ();
      virtual WitBoundSet * myBoundSet    ();
d586 3
a588 2
      virtual double stochCoeffVal ();
      virtual void   uploadSoln    ();
d606 4
a609 5
      virtual double        upperBoundVal ();
      virtual double        lowerBoundVal ();
      virtual const char *  classText     ();
      virtual void          printItem     ();
      virtual WitBoundSet * myBoundSet    ();
d626 70
@


1.19
log
@Stochastic Implosion
@
text
@d363 7
d376 4
d443 5
a447 4
      virtual double       upperBoundVal ();
      virtual double       lowerBoundVal ();
      virtual const char * classText     ();
      virtual void         printItem     ();
d520 5
a524 4
      virtual double       upperBoundVal ();
      virtual double       lowerBoundVal ();
      virtual const char * classText     ();
      virtual void         printItem     ();
d598 5
a602 4
      virtual double       upperBoundVal ();
      virtual double       lowerBoundVal ();
      virtual const char * classText     ();
      virtual void         printItem     ();
@


1.18
log
@Stochastic Implosion
@
text
@d22 1
d32 3
a34 1
// An scrap variable in a stochastic implosion optimization problem.
d107 3
a109 1
// A substitution variable in a stochastic implosion optimization problem.
d182 2
d257 2
d331 46
d378 2
d387 2
a388 1
//             StExecVar
d393 1
a393 1
class WitStExecVar: public WitStochVar
d454 2
d463 2
a464 1
//             StStockVar
d469 1
a469 1
class WitStStockVar: public WitStochVar
d530 2
d540 2
a541 1
//             StCumShipVar
d546 1
a546 1
class WitStCumShipVar: public WitStochVar
@


1.17
log
@Stochastic Implosion
@
text
@d19 4
a23 1
//    StShipVar
a24 3
//    StExecVar
//    StNonSubVar
//    StSubVar
d103 2
a104 2
// class StStockVar
// An stock variable in a stochastic implosion optimization problem.
d111 1
a111 1
//             StStockVar
d116 1
a116 1
class WitStStockVar: public WitStochVar
d124 1
a124 1
      WitStStockVar (WitMaterial *, WitStochLoc *);
d130 1
a130 1
      virtual ~WitStStockVar ();
d143 1
a143 1
      accessFunc (WitMaterial *, myMat)
d164 1
a164 1
      noCopyCtorAssign (WitStStockVar);
d170 1
a170 1
      WitMaterial * const myMat_;
d172 1
a172 1
         // The Material for this StStockVar.
d176 2
a177 2
// class StShipVar
// A shipment variable in a stochastic implosion optimization problem.
d184 1
a184 1
//             StShipVar
d189 1
a189 1
class WitStShipVar: public WitStochVar
d197 1
a197 1
      WitStShipVar (WitDemand *, WitStochLoc *);
d203 1
a203 1
      virtual ~WitStShipVar ();
d216 1
a216 1
      accessFunc (WitDemand *, myDemand)
d237 1
a237 1
      noCopyCtorAssign (WitStShipVar);
d243 1
a243 1
      WitDemand * const myDemand_;
d245 1
a245 1
         // The Demand for this StShipVar.
d249 2
a250 3
// class StCumShipVar
// A cumulative shipment variable in a stochastic implosion optimization
// problem.
d257 1
a257 1
//             StCumShipVar
d262 1
a262 1
class WitStCumShipVar: public WitStochVar
d270 1
a270 1
      WitStCumShipVar (WitDemand *, WitStochLoc *);
d276 1
a276 1
      virtual ~WitStCumShipVar ();
d310 1
a310 1
      noCopyCtorAssign (WitStCumShipVar);
d318 1
a318 1
         // The Demand for this StCumShipVar.
d395 2
a396 2
// class StNonSubVar
// A substitution variable in a stochastic implosion optimization problem.
d403 1
a403 1
//             StNonSubVar
d408 1
a408 1
class WitStNonSubVar: public WitStochVar
d416 1
a416 1
      WitStNonSubVar (WitBomEntry *, WitStochLoc *);
d422 1
a422 1
      virtual ~WitStNonSubVar ();
d435 1
a435 1
      accessFunc (WitBomEntry *, myBomEnt)
d456 1
a456 1
      noCopyCtorAssign (WitStNonSubVar);
d462 1
a462 1
      WitBomEntry * const myBomEnt_;
d464 1
a464 1
         // The BomEntry for this StNonSubVar.
d468 3
a470 2
// class StSubVar
// A substitution variable in a stochastic implosion optimization problem.
d477 1
a477 1
//             StSubVar
d482 1
a482 1
class WitStSubVar: public WitStochVar
d490 1
a490 1
      WitStSubVar (WitSubEntry *, WitStochLoc *);
d496 1
a496 1
      virtual ~WitStSubVar ();
d509 1
a509 1
      accessFunc (WitSubEntry *, mySub)
d530 1
a530 1
      noCopyCtorAssign (WitStSubVar);
d536 1
a536 1
      WitSubEntry * const mySub_;
d538 1
a538 1
         // The SubEntry for this StSubVar.
@


1.16
log
@Stochastic Implosion
@
text
@d51 1
a51 1
      WitStScrapVar (WitPart *, WitScenPer *);
d124 1
a124 1
      WitStStockVar (WitMaterial *, WitScenPer *);
d197 1
a197 1
      WitStShipVar (WitDemand *, WitScenPer *);
d271 1
a271 1
      WitStCumShipVar (WitDemand *, WitScenPer *);
d344 1
a344 1
      WitStExecVar (WitOperation *, WitScenPer *);
d417 1
a417 1
      WitStNonSubVar (WitBomEntry *, WitScenPer *);
d490 1
a490 1
      WitStSubVar (WitSubEntry *, WitScenPer *);
@


1.15
log
@Stochastic Implosion
@
text
@d70 1
a70 4
      inline WitPart * myDerComp ()
         {
         return myPart_;
         }
d143 1
a143 4
      inline WitMaterial * myDerComp ()
         {
         return myMat_;
         }
d216 1
a216 4
      inline WitDemand * myDerComp ()
         {
         return myDemand_;
         }
d290 1
a290 4
      inline WitDemand * myDerComp ()
         {
         return myDemand_;
         }
d363 1
a363 4
      inline WitOperation * myDerComp ()
         {
         return myOpn_;
         }
d436 1
a436 4
      inline WitBomEntry * myDerComp ()
         {
         return myBomEnt_;
         }
d509 1
a509 4
      inline WitSubEntry * myDerComp ()
         {
         return mySub_;
         }
@


1.14
log
@Stochastic Implosion
@
text
@a19 1
//    StExecVar
d22 3
d182 153
d411 2
a412 2
// class StShipVar
// A shipment variable in a stochastic implosion optimization problem.
d419 1
a419 1
//             StShipVar
d424 1
a424 1
class WitStShipVar: public WitStochVar
d432 1
a432 1
      WitStShipVar (WitDemand *, WitScenPer *);
d438 1
a438 1
      virtual ~WitStShipVar ();
d451 1
a451 1
      inline WitDemand * myDerComp ()
d453 1
a453 1
         return myDemand_;
d475 1
a475 1
      noCopyCtorAssign (WitStShipVar);
d481 1
a481 1
      WitDemand * const myDemand_;
d483 1
a483 1
         // The Demand for this StShipVar.
d487 2
a488 3
// class StCumShipVar
// A cumulative shipment variable in a stochastic implosion optimization
// problem.
d495 1
a495 1
//             StCumShipVar
d500 1
a500 1
class WitStCumShipVar: public WitStochVar
d508 1
a508 1
      WitStCumShipVar (WitDemand *, WitScenPer *);
d514 1
a514 1
      virtual ~WitStCumShipVar ();
d527 1
a527 1
      inline WitDemand * myDerComp ()
d529 1
a529 1
         return myDemand_;
d551 1
a551 1
      noCopyCtorAssign (WitStCumShipVar);
d557 1
a557 1
      WitDemand * const myDemand_;
d559 1
a559 1
         // The Demand for this StCumShipVar.
@


1.13
log
@Stochastic Implosion
@
text
@d83 4
a86 4
      virtual double       compUpperBound ();
      virtual double       compLowerBound ();
      virtual const char * classText      ();
      virtual void         printItem      ();
d159 4
a162 4
      virtual double       compUpperBound ();
      virtual double       compLowerBound ();
      virtual const char * classText      ();
      virtual void         printItem      ();
d235 4
a238 4
      virtual double       compUpperBound ();
      virtual double       compLowerBound ();
      virtual const char * classText      ();
      virtual void         printItem      ();
d311 4
a314 4
      virtual double       compUpperBound ();
      virtual double       compLowerBound ();
      virtual const char * classText      ();
      virtual void         printItem      ();
d388 4
a391 4
      virtual double       compUpperBound ();
      virtual double       compLowerBound ();
      virtual const char * classText      ();
      virtual void         printItem      ();
@


1.12
log
@Stochastic Implosion
@
text
@d19 1
d104 76
@


1.11
log
@Stochastic Implosion
@
text
@d82 4
a85 2
      virtual void         printItem ();
      virtual const char * classText ();
d158 4
a161 2
      virtual void         printItem ();
      virtual const char * classText ();
a211 1
      virtual void   compBounds    ();
d234 4
a237 2
      virtual void         printItem ();
      virtual const char * classText ();
a288 1
      virtual void   compBounds    ();
d311 4
a314 2
      virtual void         printItem ();
      virtual const char * classText ();
@


1.10
log
@Stochastic Implosion
@
text
@d20 2
d174 151
@


1.9
log
@Stochastic Implosion
@
text
@d59 1
d133 1
@


1.8
log
@Stochastic Implosion
@
text
@d58 1
a58 1
      virtual double stochCoeffVal () const;
d79 1
a79 1
      virtual void         printItem () const;
d131 1
a131 1
      virtual double stochCoeffVal () const;
d152 1
a152 1
      virtual void         printItem () const;
@


1.7
log
@Stochastic Implosion
@
text
@d80 1
a80 1
      virtual const char * classText () const;
d153 1
a153 1
      virtual const char * classText () const;
@


1.6
log
@Stochastic Implosion
@
text
@d35 1
a35 1
// Implemented in StochVars.C.
d108 1
a108 1
// Implemented in StochVars.C.
@


1.5
log
@Stochastic Implosion
@
text
@@


1.4
log
@Stochastic Implosion
@
text
@a58 1
      virtual void   printItem     () const;
d79 1
a131 1
      virtual void   printItem     () const;
d152 1
@


1.3
log
@Stochastic Implosion
@
text
@d59 1
d132 1
@


1.2
log
@Stochastic Implosion
@
text
@d55 6
d127 6
@


1.1
log
@Stochastic Implosion
@
text
@a57 2
      accessFunc (WitPart *, myPart)

a123 2
      accessFunc (WitOperation *, myOpn)

@

