head	1.9;
access;
symbols
	sce_5_01_20080919:1.6
	latest_sce_4_20_20060523:1.6.0.2
	sce_4_20_20060523:1.6
	latest_sce4_20_OSL:1.5.0.2
	sce_4_20_OSL:1.5
	sce_410_withVa:1.5
	sce_4_05_20040511:1.4
	sce_4_00_20040201:1.3
	nextGenBranch:1.3.0.12
	nextGenRoot:1.3
	sce_3_30_20030627:1.3
	EndRw-branch:1.3.0.10
	Root-of-EndRw:1.3
	rwToStl:1.3.0.8
	latest_sce_3_10_20010924:1.3.0.6
	sce_3_10_20010924:1.3
	latest_sce_3_00_20010601:1.3.0.4
	sce_3_00_20010601:1.3
	latest_sce_2_31_20010308:1.3.0.2
	sce_2_31_20010308:1.3
	latest_sce_2_31_20001003:1.2.0.2
	sce_2_31_20001003:1.2
	start:1.1.1.1
	IBM:1.1.1;
locks; strict;
comment	@ * @;


1.9
date	2011.09.28.23.50.13;	author rjw;	state Exp;
branches;
next	1.8;

1.8
date	2011.09.24.00.28.41;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2011.08.30.20.18.12;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2006.05.02.17.34.13;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2005.02.08.22.33.25;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2004.03.10.22.53.21;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2000.11.22.23.11.49;	author bobw;	state Exp;
branches;
next	1.2;

1.2
date	2000.03.07.16.56.58;	author fasano;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.24.13.53.30;	author wit;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.24.13.53.30;	author wit;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Revised the source code proprietary statement.
@
text
@//==============================================================================
// IBM Confidential
//
// OCO Source Materials
//
// Watson Implosion Technology
//
// (C) Copyright IBM Corp. 1993, 2011  All Rights Reserved
//
// The Source code for this program is not published or otherwise divested of
// its trade secrets, irrespective of what has been deposited with the U. S.
// Copyright office.
//==============================================================================

#ifndef SolnWritH
#define SolnWritH

//------------------------------------------------------------------------------
// Header file: "SolnWrit.h"
//
// Contains the declaration of class SolnWriter.
//------------------------------------------------------------------------------

#include <Assoc.h>

//------------------------------------------------------------------------------
// class SolnWriter.
//
// Responsible for writing solutions to files.
//------------------------------------------------------------------------------

class WitSolnWriter: public WitProbAssoc
   {
   public:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitSolnWriter (WitProblem * theProblem);
         //
         // ProbAssoc <<< theProblem.

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      ~WitSolnWriter ();

      //------------------------------------------------------------------------
      // Other public member functions.
      //------------------------------------------------------------------------

      void writeCriticalList (
            const char *  fileName,
            WitFileFormat fileFormat,
            int           maxListLen);
         //
         // Writes the critical part list.

      void writeReqSched (const char * fileName, WitFileFormat fileFormat);
         //
         // Prints supply requirements schedule.

      void writeExecSched (
            const char * const fileName,
            const WitFileFormat fileFormat);
         //
         // Prints production schedule.
         // This output consists of one or two sections.
         // Each line of the first section contains the following information:
         //
         //   Operation Name
         //   Period
         //   Execution Volume
         //
         // This section is ordered by Operation and period.
         //
         // A second section is printed iff there are SubEntries. For each
         // SubEntry, it gives the execution volumes due to that SubEntry.
         //
         // After a header line for this section, each line of the second
         // section contains the following information:
         //
         //   Operation Name
         //   Name of Part Replaced
         //   BOM Entry Index
         //   Period
         //   Name of Part Consumed
         //   Substitute Index
         //   Production Volume
         //
         // This section is ordered by:
         //
         //    Operation
         //    BOM entry
         //    Period
         //    Substitute BOM entry

      void writeShipSched (
            const char * const fileName,
            const WitFileFormat fileFormat);
         //
         // Prints the shipment schedule.
         // Each line of output will contain the following information:
         //
         //    Product Name
         //    Demand Stream Name
         //    Period
         //    Shipment Volume
         //
         // Output will be ordered by demand stream and period.

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      noCopyCtorAssign (WitSolnWriter);

      const char * quoteCstring (
            const WitString & inputString,
            WitString &       quotedString);
         //
         // return the input string with quotes added in the buffer
         // named quotedString.  Caller must insure quotedString is
         // large enough to accomodate inputString with the quotes.

      char * formattedDouble (double theDbl, char * theCstring);
         //
         // Formats theDbl for output with outputPrecision digits beyond the
         // decimal point, stores the result in theCstring and returns
         // theCstring.
   };

#endif
@


1.8
log
@Reverted to the version of 8-30-2011, which has the following differences:
   Release 7.0
   Old copyright dates (2006)
   The leading blanks in each line, which were lost with the 2011 copyright
      update, are restored.
Restored release # as 8.0.
@
text
@d1 8
a8 1
//------------------------------------------------------------------------------
d10 4
a13 6
//     (c) Copyright IBM Corp. 2006.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
// 
//------------------------------------------------------------------------------
@


1.7
log
@Revised the copyright date.
@
text
@d3 1
a3 1
//     (c) Copyright IBM Corp. 2011.
d6 2
a7 2
//     IBM Confidential
//
d28 2
a29 80
{
public:

//------------------------------------------------------------------------
// Constructor functions.
//------------------------------------------------------------------------

WitSolnWriter (WitProblem * theProblem);
//
// ProbAssoc <<< theProblem.

//------------------------------------------------------------------------
// Destructor function.
//------------------------------------------------------------------------

~WitSolnWriter ();

//------------------------------------------------------------------------
// Other public member functions.
//------------------------------------------------------------------------

void writeCriticalList (
const char *  fileName,
WitFileFormat fileFormat,
int           maxListLen);
//
// Writes the critical part list.

void writeReqSched (const char * fileName, WitFileFormat fileFormat);
//
// Prints supply requirements schedule.

void writeExecSched (
const char * const fileName,
const WitFileFormat fileFormat);
//
// Prints production schedule.
// This output consists of one or two sections.
// Each line of the first section contains the following information:
//
//   Operation Name
//   Period
//   Execution Volume
//
// This section is ordered by Operation and period.
//
// A second section is printed iff there are SubEntries. For each
// SubEntry, it gives the execution volumes due to that SubEntry.
//
// After a header line for this section, each line of the second
// section contains the following information:
//
//   Operation Name
//   Name of Part Replaced
//   BOM Entry Index
//   Period
//   Name of Part Consumed
//   Substitute Index
//   Production Volume
//
// This section is ordered by:
//
//    Operation
//    BOM entry
//    Period
//    Substitute BOM entry

void writeShipSched (
const char * const fileName,
const WitFileFormat fileFormat);
//
// Prints the shipment schedule.
// Each line of output will contain the following information:
//
//    Product Name
//    Demand Stream Name
//    Period
//    Shipment Volume
//
// Output will be ordered by demand stream and period.
d31 100
a130 22
private:

//------------------------------------------------------------------------
// Private member functions.
//------------------------------------------------------------------------

noCopyCtorAssign (WitSolnWriter);

const char * quoteCstring (
const WitString & inputString,
WitString &       quotedString);
//
// return the input string with quotes added in the buffer
// named quotedString.  Caller must insure quotedString is
// large enough to accomodate inputString with the quotes.

char * formattedDouble (double theDbl, char * theCstring);
//
// Formats theDbl for output with outputPrecision digits beyond the
// decimal point, stores the result in theCstring and returns
// theCstring.
};
@


1.6
log
@Updated the copyright date on all source files.
@
text
@d3 1
a3 1
//     (c) Copyright IBM Corp. 2006.
d6 2
a7 2
//     IBM Confidential 
// 
d28 80
a107 2
   {
   public:
d109 22
a130 100
      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitSolnWriter (WitProblem * theProblem);
         //
         // ProbAssoc <<< theProblem.

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      ~WitSolnWriter ();

      //------------------------------------------------------------------------
      // Other public member functions.
      //------------------------------------------------------------------------

      void writeCriticalList (
            const char *  fileName,
            WitFileFormat fileFormat,
            int           maxListLen);
         //
         // Writes the critical part list.

      void writeReqSched (const char * fileName, WitFileFormat fileFormat);
         //
         // Prints supply requirements schedule.

      void writeExecSched (
            const char * const fileName,
            const WitFileFormat fileFormat);
         //
         // Prints production schedule.
         // This output consists of one or two sections.
         // Each line of the first section contains the following information:
         //
         //   Operation Name
         //   Period
         //   Execution Volume
         //
         // This section is ordered by Operation and period.
         //
         // A second section is printed iff there are SubEntries. For each
         // SubEntry, it gives the execution volumes due to that SubEntry.
         //
         // After a header line for this section, each line of the second
         // section contains the following information:
         //
         //   Operation Name
         //   Name of Part Replaced
         //   BOM Entry Index
         //   Period
         //   Name of Part Consumed
         //   Substitute Index
         //   Production Volume
         //
         // This section is ordered by:
         //
         //    Operation
         //    BOM entry
         //    Period
         //    Substitute BOM entry

      void writeShipSched (
            const char * const fileName,
            const WitFileFormat fileFormat);
         //
         // Prints the shipment schedule.
         // Each line of output will contain the following information:
         //
         //    Product Name
         //    Demand Stream Name
         //    Period
         //    Shipment Volume
         //
         // Output will be ordered by demand stream and period.

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      noCopyCtorAssign (WitSolnWriter);

      const char * quoteCstring (
            const WitString & inputString,
            WitString &       quotedString);
         //
         // return the input string with quotes added in the buffer
         // named quotedString.  Caller must insure quotedString is
         // large enough to accomodate inputString with the quotes.

      char * formattedDouble (double theDbl, char * theCstring);
         //
         // Formats theDbl for output with outputPrecision digits beyond the
         // decimal point, stores the result in theCstring and returns
         // theCstring.
   };
@


1.5
log
@Pegged Critical List.
@
text
@d3 1
a3 1
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
@


1.4
log
@Double Precision.
@
text
@d50 3
a52 3
            const char * const fileName,
            const WitFileFormat fileFormat,
            const int maxListLen);
@


1.3
log
@Refactoring for selection splitting.
@
text
@d125 1
a125 1
      char * formattedFloat (float theFloat, char * theCstring);
d127 1
a127 1
         // Formats theFloat for output with outputPrecision digits beyond the
@


1.2
log
@Updating wit/src in /u/wit/devbase to be in synch with /u/implode/devbase
@
text
@d115 1
a115 3
      copyCtorAndAssignment (WitSolnWriter);
         //
         // Prevents unintentional copying and assignment.
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
//     (c) Copyright IBM Corp. 1993,1994,1996.
@


1.1.1.1
log
@Import wit
@
text
@@
