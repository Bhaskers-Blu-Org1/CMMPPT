head	1.5;
access;
symbols
	sce_5_01_20080919:1.2
	latest_sce_4_20_20060523:1.2.0.2
	sce_4_20_20060523:1.2
	latest_sce4_20_OSL:1.1.0.2
	sce_4_20_OSL:1.1
	sce_410_withVa:1.1;
locks; strict;
comment	@ * @;


1.5
date	2011.09.28.23.49.31;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2011.09.24.00.27.52;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2011.08.30.20.17.38;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2006.05.02.17.34.02;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2004.12.15.16.39.25;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Revised the source code proprietary statement.
@
text
@//==============================================================================
// IBM Confidential
//
// OCO Source Materials
//
// Watson Implosion Technology
//
// (C) Copyright IBM Corp. 1993, 2011  All Rights Reserved
//
// The Source code for this program is not published or otherwise divested of
// its trade secrets, irrespective of what has been deposited with the U. S.
// Copyright office.
//==============================================================================

#ifndef MeSitePtH
#define MeSitePtH

//------------------------------------------------------------------------------
// Header file: "MeSitePt.h"
//
// Contains the declaration of class MeSitePt.
//------------------------------------------------------------------------------

#include <Util.h>

//------------------------------------------------------------------------------
// Class MeSitePt
//
// "Multi-Exec Site Point"
// Responsible for coordinating the multi-exec objects associated with a
// particular BopEntry and explosion period.
//
// Implemented in MultiEx.C.
//------------------------------------------------------------------------------

class WitMeSitePt
   {
   public:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitMeSitePt (
            WitBopEntry * theBopEnt,
            WitPeriod     firstExecPerVal,
            WitPeriod     lastExecPerVal,
            WitMeMgr *    theMeMgr);

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      ~WitMeSitePt ();

      //------------------------------------------------------------------------
      // Other public member functions.
      //------------------------------------------------------------------------

      WitPeriod nextExecPer (WitPeriod execPer, WitMeDir * theMeDir);
         //
         // Returns the next execution period for theMeDir and this MeSitePt
         // after execPer, if any; otherwise -1;

      void prtID ();
         //
         // Prints info identifying this MeSitePt.

      //------------------------------------------------------------------------
      // Data access functions.
      //------------------------------------------------------------------------

      accessFunc    (WitBopEntry *, myBopEnt)
      accessFunc    (WitPeriod,     firstExecPer)
      accessFunc    (WitPeriod,     lastExecPer)
      accessFunc    (WitMePt *,     myMePtForNstn)
      accessNonNull (WitMePt *,     myMePtForAsap)

      WitPeriod myExpPer ();
         //
         // Returns the explosion period associated with this MeSitePt.

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      noCopyCtorAssign (WitMeSitePt);

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      WitBopEntry * const myBopEnt_;
         //
         // The BopEntry associated with this MeSitePt.

      const WitPeriod firstExecPer_;
      const WitPeriod  lastExecPer_;
         //
         // The first and last execution periods corresponding to the explosion
         // period for this MeSitePt.

      WitMePt * myMePtForNstn_;
         //
         // The MePt owned by this MeSitePt for NSTN Multi-Exec.

      WitMePt * myMePtForAsap_;
         //
         // The MePt owned by this MeSitePt for ASAP Multi-Exec, in two-way
         // multi-exec mode; otherwise NULL.
   };

#endif
@


1.4
log
@Reverted to the version of 8-30-2011, which has the following differences:
   Release 7.0
   Old copyright dates (2006)
   The leading blanks in each line, which were lost with the 2011 copyright
      update, are restored.
Restored release # as 8.0.
@
text
@d1 8
a8 1
//------------------------------------------------------------------------------
d10 4
a13 6
//     (c) Copyright IBM Corp. 2006.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
// 
//------------------------------------------------------------------------------
@


1.3
log
@Revised the copyright date.
@
text
@d3 1
a3 1
//     (c) Copyright IBM Corp. 2011.
d6 2
a7 2
//     IBM Confidential
//
d32 2
a33 47
{
public:

//------------------------------------------------------------------------
// Constructor functions.
//------------------------------------------------------------------------

WitMeSitePt (
WitBopEntry * theBopEnt,
WitPeriod     firstExecPerVal,
WitPeriod     lastExecPerVal,
WitMeMgr *    theMeMgr);

//------------------------------------------------------------------------
// Destructor function.
//------------------------------------------------------------------------

~WitMeSitePt ();

//------------------------------------------------------------------------
// Other public member functions.
//------------------------------------------------------------------------

WitPeriod nextExecPer (WitPeriod execPer, WitMeDir * theMeDir);
//
// Returns the next execution period for theMeDir and this MeSitePt
// after execPer, if any; otherwise -1;

void prtID ();
//
// Prints info identifying this MeSitePt.

//------------------------------------------------------------------------
// Data access functions.
//------------------------------------------------------------------------

accessFunc    (WitBopEntry *, myBopEnt)
accessFunc    (WitPeriod,     firstExecPer)
accessFunc    (WitPeriod,     lastExecPer)
accessFunc    (WitMePt *,     myMePtForNstn)
accessNonNull (WitMePt *,     myMePtForAsap)

WitPeriod myExpPer ();
//
// Returns the explosion period associated with this MeSitePt.

private:
d35 74
a108 29
//------------------------------------------------------------------------
// Private member functions.
//------------------------------------------------------------------------

noCopyCtorAssign (WitMeSitePt);

//------------------------------------------------------------------------
// Private member data.
//------------------------------------------------------------------------

WitBopEntry * const myBopEnt_;
//
// The BopEntry associated with this MeSitePt.

const WitPeriod firstExecPer_;
const WitPeriod  lastExecPer_;
//
// The first and last execution periods corresponding to the explosion
// period for this MeSitePt.

WitMePt * myMePtForNstn_;
//
// The MePt owned by this MeSitePt for NSTN Multi-Exec.

WitMePt * myMePtForAsap_;
//
// The MePt owned by this MeSitePt for ASAP Multi-Exec, in two-way
// multi-exec mode; otherwise NULL.
};
@


1.2
log
@Updated the copyright date on all source files.
@
text
@d3 1
a3 1
//     (c) Copyright IBM Corp. 2006.
d6 2
a7 2
//     IBM Confidential 
// 
d32 47
a78 2
   {
   public:
d80 29
a108 74
      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitMeSitePt (
            WitBopEntry * theBopEnt,
            WitPeriod     firstExecPerVal,
            WitPeriod     lastExecPerVal,
            WitMeMgr *    theMeMgr);

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      ~WitMeSitePt ();

      //------------------------------------------------------------------------
      // Other public member functions.
      //------------------------------------------------------------------------

      WitPeriod nextExecPer (WitPeriod execPer, WitMeDir * theMeDir);
         //
         // Returns the next execution period for theMeDir and this MeSitePt
         // after execPer, if any; otherwise -1;

      void prtID ();
         //
         // Prints info identifying this MeSitePt.

      //------------------------------------------------------------------------
      // Data access functions.
      //------------------------------------------------------------------------

      accessFunc    (WitBopEntry *, myBopEnt)
      accessFunc    (WitPeriod,     firstExecPer)
      accessFunc    (WitPeriod,     lastExecPer)
      accessFunc    (WitMePt *,     myMePtForNstn)
      accessNonNull (WitMePt *,     myMePtForAsap)

      WitPeriod myExpPer ();
         //
         // Returns the explosion period associated with this MeSitePt.

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      noCopyCtorAssign (WitMeSitePt);

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      WitBopEntry * const myBopEnt_;
         //
         // The BopEntry associated with this MeSitePt.

      const WitPeriod firstExecPer_;
      const WitPeriod  lastExecPer_;
         //
         // The first and last execution periods corresponding to the explosion
         // period for this MeSitePt.

      WitMePt * myMePtForNstn_;
         //
         // The MePt owned by this MeSitePt for NSTN Multi-Exec.

      WitMePt * myMePtForAsap_;
         //
         // The MePt owned by this MeSitePt for ASAP Multi-Exec, in two-way
         // multi-exec mode; otherwise NULL.
   };
@


1.1
log
@Low-Pri Prop-Rt.
@
text
@d3 1
a3 1
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
@

