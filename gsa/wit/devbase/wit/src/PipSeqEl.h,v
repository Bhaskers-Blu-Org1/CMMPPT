head	1.6;
access;
symbols
	sce_5_01_20080919:1.3;
locks; strict;
comment	@ * @;


1.6
date	2011.09.28.23.49.56;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2011.09.24.00.28.19;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2011.08.30.20.17.57;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2006.08.08.17.38.44;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2006.08.03.18.59.33;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2006.08.03.17.38.33;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Revised the source code proprietary statement.
@
text
@//==============================================================================
// IBM Confidential
//
// OCO Source Materials
//
// Watson Implosion Technology
//
// (C) Copyright IBM Corp. 1993, 2011  All Rights Reserved
//
// The Source code for this program is not published or otherwise divested of
// its trade secrets, irrespective of what has been deposited with the U. S.
// Copyright office.
//==============================================================================

#ifndef PipSeqElH
#define PipSeqElH

//------------------------------------------------------------------------------
// Header file: "PipSeqEl.h"
//
// Contains the declaration of class PipSeqEl.
//------------------------------------------------------------------------------

#include <Util.h>

//------------------------------------------------------------------------------
// Class PipSeqEl
//
// "Post-Implosion Pegging Sequence Element."
//
// Represents an element in the shipment sequence for PIP,
// or represents no element in the shipment sequence (the "vacuous" element).
//
// Implemented in PipReq.C.
//------------------------------------------------------------------------------

class WitPipSeqEl
   {
   public:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitPipSeqEl (
            WitDemand * theDemand,
            WitPeriod   shipPer,
            int         theSeqNo);

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      ~WitPipSeqEl ();

      //------------------------------------------------------------------------
      // Other public member functions.
      //------------------------------------------------------------------------

      inline bool hasaShipment ()
         {
         return (myDemand_ != NULL);
         }

      //------------------------------------------------------------------------
      // Data access functions.
      //------------------------------------------------------------------------

      void getData (WitDemand * & theDemand, WitPeriod & shipPer);
         //
         // Sets theDemand and shipPer to the data for this PipSeqEl.

      bool isBefore (WitPipSeqEl * theSeqEl);
         //
         // Returns true, iff this PipSeqEl is before theSeqEl in the shipment
         // sequence.

      void print (FILE * theFile, const char * leadingBlanks);
         //
         // Prints this PipSeqEl to theFile.
         // leadingBlanks is to be a string of blanks to preceed the print.

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      noCopyCtorAssign (WitPipSeqEl);

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      WitDemand * const myDemand_;
         //
         // The Demand of the shipment sequence element represented by this
         // PipSeqEl, or NULL for the vacuous element.

      const WitPeriod shipPerFor_;
         //
         // The shipment period of the shipment sequence element represented by
         // this PipSeqEl, or -1 for the vacuous element.

      const int mySeqNo_;
         //
         // The sequence number of the shipment sequence element represented by
         // this PipSeqEl.
         // The vacuous element is assigned a sequence number higher than all
         // others.
   };

#endif
@


1.5
log
@Reverted to the version of 8-30-2011, which has the following differences:
   Release 7.0
   Old copyright dates (2006)
   The leading blanks in each line, which were lost with the 2011 copyright
      update, are restored.
Restored release # as 8.0.
@
text
@d1 8
a8 1
//------------------------------------------------------------------------------
d10 4
a13 6
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
// 
//------------------------------------------------------------------------------
@


1.4
log
@Revised the copyright date.
@
text
@d6 2
a7 2
//     IBM Confidential
//
d33 2
a34 46
{
public:

//------------------------------------------------------------------------
// Constructor functions.
//------------------------------------------------------------------------

WitPipSeqEl (
WitDemand * theDemand,
WitPeriod   shipPer,
int         theSeqNo);

//------------------------------------------------------------------------
// Destructor function.
//------------------------------------------------------------------------

~WitPipSeqEl ();

//------------------------------------------------------------------------
// Other public member functions.
//------------------------------------------------------------------------

inline bool hasaShipment ()
{
return (myDemand_ != NULL);
}

//------------------------------------------------------------------------
// Data access functions.
//------------------------------------------------------------------------

void getData (WitDemand * & theDemand, WitPeriod & shipPer);
//
// Sets theDemand and shipPer to the data for this PipSeqEl.

bool isBefore (WitPipSeqEl * theSeqEl);
//
// Returns true, iff this PipSeqEl is before theSeqEl in the shipment
// sequence.

void print (FILE * theFile, const char * leadingBlanks);
//
// Prints this PipSeqEl to theFile.
// leadingBlanks is to be a string of blanks to preceed the print.

private:
d36 71
a106 27
//------------------------------------------------------------------------
// Private member functions.
//------------------------------------------------------------------------

noCopyCtorAssign (WitPipSeqEl);

//------------------------------------------------------------------------
// Private member data.
//------------------------------------------------------------------------

WitDemand * const myDemand_;
//
// The Demand of the shipment sequence element represented by this
// PipSeqEl, or NULL for the vacuous element.

const WitPeriod shipPerFor_;
//
// The shipment period of the shipment sequence element represented by
// this PipSeqEl, or -1 for the vacuous element.

const int mySeqNo_;
//
// The sequence number of the shipment sequence element represented by
// this PipSeqEl.
// The vacuous element is assigned a sequence number higher than all
// others.
};
@


1.3
log
@BOP entry execVol pegging.
@
text
@d6 2
a7 2
//     IBM Confidential 
// 
d33 46
a78 2
   {
   public:
d80 27
a106 71
      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitPipSeqEl (
            WitDemand * theDemand,
            WitPeriod   shipPer,
            int         theSeqNo);

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      ~WitPipSeqEl ();

      //------------------------------------------------------------------------
      // Other public member functions.
      //------------------------------------------------------------------------

      inline bool hasaShipment ()
         {
         return (myDemand_ != NULL);
         }

      //------------------------------------------------------------------------
      // Data access functions.
      //------------------------------------------------------------------------

      void getData (WitDemand * & theDemand, WitPeriod & shipPer);
         //
         // Sets theDemand and shipPer to the data for this PipSeqEl.

      bool isBefore (WitPipSeqEl * theSeqEl);
         //
         // Returns true, iff this PipSeqEl is before theSeqEl in the shipment
         // sequence.

      void print (FILE * theFile, const char * leadingBlanks);
         //
         // Prints this PipSeqEl to theFile.
         // leadingBlanks is to be a string of blanks to preceed the print.

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      noCopyCtorAssign (WitPipSeqEl);

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      WitDemand * const myDemand_;
         //
         // The Demand of the shipment sequence element represented by this
         // PipSeqEl, or NULL for the vacuous element.

      const WitPeriod shipPerFor_;
         //
         // The shipment period of the shipment sequence element represented by
         // this PipSeqEl, or -1 for the vacuous element.

      const int mySeqNo_;
         //
         // The sequence number of the shipment sequence element represented by
         // this PipSeqEl.
         // The vacuous element is assigned a sequence number higher than all
         // others.
   };
@


1.2
log
@GPIP migration.
@
text
@d64 3
a66 1
      accessFunc (int, mySeqNo)
d68 6
a73 1
      void getData (WitDemand * & theDemand, WitPeriod & shipPer);
d75 2
a76 1
         // Sets theDemand and shipPer to the data for this SepSelEl.
@


1.1
log
@GPIP migration.
@
text
@d29 1
a29 1
// Implemented in GpipReq.C.
@

