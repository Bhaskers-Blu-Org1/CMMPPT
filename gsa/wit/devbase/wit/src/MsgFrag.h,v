head	1.7;
access;
symbols
	sce_5_01_20080919:1.4
	latest_sce_4_20_20060523:1.4.0.2
	sce_4_20_20060523:1.4
	latest_sce4_20_OSL:1.3.0.2
	sce_4_20_OSL:1.3
	sce_410_withVa:1.3
	sce_4_05_20040511:1.3
	sce_4_00_20040201:1.3
	nextGenBranch:1.2.0.6
	nextGenRoot:1.2
	sce_3_30_20030627:1.2
	EndRw-branch:1.2.0.4
	Root-of-EndRw:1.2
	rwToStl:1.2.0.2;
locks; strict;
comment	@ * @;


1.7
date	2011.09.28.23.49.37;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2011.09.24.00.27.58;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2011.08.30.20.17.42;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2006.05.02.17.34.03;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2003.12.01.21.05.04;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2002.08.01.20.16.35;	author austel;	state Exp;
branches;
next	1.1;

1.1
date	2002.07.09.19.52.34;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Revised the source code proprietary statement.
@
text
@//==============================================================================
// IBM Confidential
//
// OCO Source Materials
//
// Watson Implosion Technology
//
// (C) Copyright IBM Corp. 1993, 2011  All Rights Reserved
//
// The Source code for this program is not published or otherwise divested of
// its trade secrets, irrespective of what has been deposited with the U. S.
// Copyright office.
//==============================================================================

#ifndef MsgFragH
#define MsgFragH

//------------------------------------------------------------------------------
// Header file: "MsgFrag.h"
//
// Contains the declaration of class MsgFrag.
//------------------------------------------------------------------------------

#include <Util.h>

//------------------------------------------------------------------------------

class MclMsgFrag;

//------------------------------------------------------------------------------
// Class MsgFrag
//
// Wrapper for an MclMsgFrag.
//
// Implemented inline.
//------------------------------------------------------------------------------

class WitMsgFrag
   {
      //------------------------------------------------------------------------
      // Friends.
      //------------------------------------------------------------------------

      friend class WitMsgArg;
      friend class WitMsgFacility;

   public:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      inline WitMsgFrag (MclMsgFrag * theMclMsgFrag):
            myMclMsgFrag_ (theMclMsgFrag)
         {
         }

      inline WitMsgFrag (const WitMsgFrag & theMsgFrag):
            myMclMsgFrag_ (theMsgFrag.myMclMsgFrag_)
         {
         }
            //
            // Copy ctor.

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      inline ~WitMsgFrag ()
         {
         }

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      WitMsgFrag & operator = (const WitMsgFrag &);
         //
         // Not implemented; prevents unintentional assignment.

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      MclMsgFrag * const myMclMsgFrag_;
         //
         // The MclMsgFrag for which this MsgFrag is a wrapper.
   };

#endif
@


1.6
log
@Reverted to the version of 8-30-2011, which has the following differences:
   Release 7.0
   Old copyright dates (2006)
   The leading blanks in each line, which were lost with the 2011 copyright
      update, are restored.
Restored release # as 8.0.
@
text
@d1 8
a8 1
//------------------------------------------------------------------------------
d10 4
a13 6
//     (c) Copyright IBM Corp. 2006.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
// 
//------------------------------------------------------------------------------
@


1.5
log
@Revised the copyright date.
@
text
@d3 1
a3 1
//     (c) Copyright IBM Corp. 2011.
d6 2
a7 2
//     IBM Confidential
//
d34 52
a85 52
{
//------------------------------------------------------------------------
// Friends.
//------------------------------------------------------------------------

friend class WitMsgArg;
friend class WitMsgFacility;

public:

//------------------------------------------------------------------------
// Constructor functions.
//------------------------------------------------------------------------

inline WitMsgFrag (MclMsgFrag * theMclMsgFrag):
myMclMsgFrag_ (theMclMsgFrag)
{
}

inline WitMsgFrag (const WitMsgFrag & theMsgFrag):
myMclMsgFrag_ (theMsgFrag.myMclMsgFrag_)
{
}
//
// Copy ctor.

//------------------------------------------------------------------------
// Destructor function.
//------------------------------------------------------------------------

inline ~WitMsgFrag ()
{
}

private:

//------------------------------------------------------------------------
// Private member functions.
//------------------------------------------------------------------------

WitMsgFrag & operator = (const WitMsgFrag &);
//
// Not implemented; prevents unintentional assignment.

//------------------------------------------------------------------------
// Private member data.
//------------------------------------------------------------------------

MclMsgFrag * const myMclMsgFrag_;
//
// The MclMsgFrag for which this MsgFrag is a wrapper.
};
@


1.4
log
@Updated the copyright date on all source files.
@
text
@d3 1
a3 1
//     (c) Copyright IBM Corp. 2006.
d6 2
a7 2
//     IBM Confidential 
// 
d34 52
a85 52
   {
      //------------------------------------------------------------------------
      // Friends.
      //------------------------------------------------------------------------

      friend class WitMsgArg;
      friend class WitMsgFacility;

   public:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      inline WitMsgFrag (MclMsgFrag * theMclMsgFrag):
            myMclMsgFrag_ (theMclMsgFrag)
         {
         }

      inline WitMsgFrag (const WitMsgFrag & theMsgFrag):
            myMclMsgFrag_ (theMsgFrag.myMclMsgFrag_)
         {
         }
            //
            // Copy ctor.

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      inline ~WitMsgFrag ()
         {
         }

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      WitMsgFrag & operator = (const WitMsgFrag &);
         //
         // Not implemented; prevents unintentional assignment.

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      MclMsgFrag * const myMclMsgFrag_;
         //
         // The MclMsgFrag for which this MsgFrag is a wrapper.
   };
@


1.3
log
@Continued implementation of PIP.
@
text
@d3 1
a3 1
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
@


1.2
log
@More minor changes for vacpp.

The compiler complains if member functions are passed without an ampersand:

1589c1589
<          WitRun::witSetOperationYield,
---
>          &WitRun::witSetOperationYield,

It complains if "friend" declarations don't also have the word "class":
diff -r1.1 MsgFrag.h
39,40c39,40
<       friend WitMsgArg;
<       friend WitMsgFacility;
---
>       friend class WitMsgArg;
>       friend class WitMsgFacility;

It now can't figure out that a statement after a loop may not be executed!
diff -r1.70 BuildAhd.C
575a576
>    return NULL; // unreachable, but compiler complains


It also complained about missing "template<>" in many cases,
but since this seems odd, we are just suppressing the message for now
(see config/p_power64v5).  This is an example of a change that was NOT
made, but (presumably) would have to be to avoid the compiler warning.
diff -r1.47 ConsMR.C
180a181
> template<>
@
text
@d33 1
a33 1
class WitMsgFrag: public WitUtil
@


1.1
log
@Continued implementation of single-source.
@
text
@d39 2
a40 2
      friend WitMsgArg;
      friend WitMsgFacility;
@

