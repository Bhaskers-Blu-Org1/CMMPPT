head	1.11;
access;
symbols
	sce_5_01_20080919:1.7;
locks; strict;
comment	@ * @;


1.11
date	2011.09.28.23.50.31;	author rjw;	state Exp;
branches;
next	1.10;

1.10
date	2011.09.24.00.28.46;	author rjw;	state Exp;
branches;
next	1.9;

1.9
date	2011.08.30.20.18.16;	author rjw;	state Exp;
branches;
next	1.8;

1.8
date	2011.01.07.20.19.35;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2008.01.28.23.53.37;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2007.12.03.19.41.34;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2007.11.28.20.34.28;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2007.11.26.23.15.18;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2007.09.27.19.57.41;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2007.06.20.19.07.53;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2007.06.19.21.45.50;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.11
log
@Revised the source code proprietary statement.
@
text
@//==============================================================================
// IBM Confidential
//
// OCO Source Materials
//
// Watson Implosion Technology
//
// (C) Copyright IBM Corp. 1993, 2011  All Rights Reserved
//
// The Source code for this program is not published or otherwise divested of
// its trade secrets, irrespective of what has been deposited with the U. S.
// Copyright office.
//==============================================================================

#ifndef StochAttH
#define StochAttH

//------------------------------------------------------------------------------
// Header file: "StochAtt.h"
//
// Contains the declaration of class StochAtt.
//------------------------------------------------------------------------------

#include <Str.h>

//------------------------------------------------------------------------------
// Class StochAtt
//
// "Stochastic Attribute"
// A StochAtt represents a stochastic attribute: any attribute that is to be
// given special treatment in stochastic mode. The data of a StochAtt consists
// primarily of "meta-attributes", which specify which kinds of special
// treatment apply to the represented attribute.
//------------------------------------------------------------------------------

class WitStochAtt
   {
   public:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitStochAtt (const char *, WitAbsScenInputAtt *);

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      ~WitStochAtt ();

      //------------------------------------------------------------------------
      // Meta-attribute setting functions.
      //------------------------------------------------------------------------

      void setIsScenSpec        (bool);
      void setCanSetInStochMode (bool);
      void setCanSetInSolnMode  (bool);

      //------------------------------------------------------------------------
      // Data access functions.
      //------------------------------------------------------------------------

      accessFunc (const WitString &,    myName)
      accessFunc (bool,                 isScenSpec)
      accessFunc (bool,                 canSetInStochMode)
      accessFunc (bool,                 canSetInSolnMode)
      accessFunc (WitAbsScenInputAtt *, myAbsScenInputAtt)

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      noCopyCtorAssign (WitStochAtt);

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      WitString myName_;

      //------------------------------------------------------------------------
      // Meta-Attributes.
      //------------------------------------------------------------------------

      bool isScenSpec_;
         //
         // True, iff the attribute is scenario-specific.

      bool canSetInStochMode_;
         //
         // True, iff the attribute is an attribute that can be set in
         // stochastic mode.

      bool canSetInSolnMode_;
         //
         // True, iff the attribute is an attribute that can be set in
         // stochastic solution mode.

      //------------------------------------------------------------------------
      // Other private member data.
      //------------------------------------------------------------------------

      WitAbsScenInputAtt * const myAbsScenInputAtt_;
         //
         // The AbsScenInputAtt corresponding to this StochAtt, if any;
         // otherwise NULL.
   };

#endif
@


1.10
log
@Reverted to the version of 8-30-2011, which has the following differences:
   Release 7.0
   Old copyright dates (2006)
   The leading blanks in each line, which were lost with the 2011 copyright
      update, are restored.
Restored release # as 8.0.
@
text
@d1 8
a8 1
//------------------------------------------------------------------------------
d10 4
a13 6
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
// 
//------------------------------------------------------------------------------
@


1.9
log
@Revised the copyright date.
@
text
@d6 2
a7 2
//     IBM Confidential
//
d32 2
a33 2
{
public:
d35 3
a37 3
//------------------------------------------------------------------------
// Constructor functions.
//------------------------------------------------------------------------
d39 1
a39 1
WitStochAtt (const char *, WitAbsScenInputAtt *);
d41 3
a43 3
//------------------------------------------------------------------------
// Destructor function.
//------------------------------------------------------------------------
d45 1
a45 1
~WitStochAtt ();
d47 3
a49 3
//------------------------------------------------------------------------
// Meta-attribute setting functions.
//------------------------------------------------------------------------
d51 3
a53 3
void setIsScenSpec        (bool);
void setCanSetInStochMode (bool);
void setCanSetInSolnMode  (bool);
d55 3
a57 3
//------------------------------------------------------------------------
// Data access functions.
//------------------------------------------------------------------------
d59 5
a63 5
accessFunc (const WitString &,    myName)
accessFunc (bool,                 isScenSpec)
accessFunc (bool,                 canSetInStochMode)
accessFunc (bool,                 canSetInSolnMode)
accessFunc (WitAbsScenInputAtt *, myAbsScenInputAtt)
d65 1
a65 1
private:
d67 3
a69 3
//------------------------------------------------------------------------
// Private member functions.
//------------------------------------------------------------------------
d71 1
a71 1
noCopyCtorAssign (WitStochAtt);
d73 3
a75 3
//------------------------------------------------------------------------
// Private member data.
//------------------------------------------------------------------------
d77 1
a77 1
WitString myName_;
d79 3
a81 3
//------------------------------------------------------------------------
// Meta-Attributes.
//------------------------------------------------------------------------
d83 3
a85 3
bool isScenSpec_;
//
// True, iff the attribute is scenario-specific.
d87 4
a90 4
bool canSetInStochMode_;
//
// True, iff the attribute is an attribute that can be set in
// stochastic mode.
d92 4
a95 4
bool canSetInSolnMode_;
//
// True, iff the attribute is an attribute that can be set in
// stochastic solution mode.
d97 3
a99 3
//------------------------------------------------------------------------
// Other private member data.
//------------------------------------------------------------------------
d101 5
a105 5
WitAbsScenInputAtt * const myAbsScenInputAtt_;
//
// The AbsScenInputAtt corresponding to this StochAtt, if any;
// otherwise NULL.
};
@


1.8
log
@Minor correction.
@
text
@d6 2
a7 2
//     IBM Confidential 
// 
d32 2
a33 2
   {
   public:
d35 3
a37 3
      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------
d39 1
a39 1
      WitStochAtt (const char *, WitAbsScenInputAtt *);
d41 3
a43 3
      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------
d45 1
a45 1
      ~WitStochAtt ();
d47 3
a49 3
      //------------------------------------------------------------------------
      // Meta-attribute setting functions.
      //------------------------------------------------------------------------
d51 3
a53 3
      void setIsScenSpec        (bool);
      void setCanSetInStochMode (bool);
      void setCanSetInSolnMode  (bool);
d55 3
a57 3
      //------------------------------------------------------------------------
      // Data access functions.
      //------------------------------------------------------------------------
d59 5
a63 5
      accessFunc (const WitString &,    myName)
      accessFunc (bool,                 isScenSpec)
      accessFunc (bool,                 canSetInStochMode)
      accessFunc (bool,                 canSetInSolnMode)
      accessFunc (WitAbsScenInputAtt *, myAbsScenInputAtt)
d65 1
a65 1
   private:
d67 3
a69 3
      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------
d71 1
a71 1
      noCopyCtorAssign (WitStochAtt);
d73 3
a75 3
      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------
d77 1
a77 1
      WitString myName_;
d79 3
a81 3
      //------------------------------------------------------------------------
      // Meta-Attributes.
      //------------------------------------------------------------------------
d83 3
a85 3
      bool isScenSpec_;
         //
         // True, iff the attribute is scenario-specific.
d87 4
a90 4
      bool canSetInStochMode_;
         //
         // True, iff the attribute is an attribute that can be set in
         // stochastic mode.
d92 4
a95 4
      bool canSetInSolnMode_;
         //
         // True, iff the attribute is an attribute that can be set in
         // stochastic solution mode.
d97 3
a99 3
      //------------------------------------------------------------------------
      // Other private member data.
      //------------------------------------------------------------------------
d101 5
a105 5
      WitAbsScenInputAtt * const myAbsScenInputAtt_;
         //
         // The AbsScenInputAtt corresponding to this StochAtt, if any;
         // otherwise NULL.
   };
@


1.7
log
@Stochastic Implosion
@
text
@a38 2
      WitStochAtt (const char *);

@


1.6
log
@Stochastic Implosion
@
text
@d105 2
a106 1
         // The AbsScenInputAtt corresponding to this StochAtt, if any.
@


1.5
log
@Stochastic Implosion
@
text
@d61 5
a65 4
      accessFunc (const WitString &, myName)
      accessFunc (bool,              isScenSpec)
      accessFunc (bool,              canSetInStochMode)
      accessFunc (bool,              canSetInSolnMode)
@


1.4
log
@Stochastic Implosion
@
text
@a104 1

@


1.3
log
@Stochastic Implosion
@
text
@d41 2
d97 9
@


1.2
log
@Stochastic Implosion
@
text
@d51 1
a51 1
      void setScenSpec          (bool);
d60 1
a60 1
      accessFunc (bool,              scenSpec)
d82 1
a82 1
      bool scenSpec_;
a84 1
         // Default value: true.
a89 1
         // Default value: true.
a94 1
         // Default value: false.
@


1.1
log
@Stochastic Implosion
@
text
@d51 3
a53 3
      void setStochModeOK     (bool);
      void setStochSolnModeOK (bool);
      void setScenSpec        (bool);
a59 2
      accessFunc (bool,              stochModeOK)
      accessFunc (bool,              stochSolnModeOK)
d61 2
d82 6
a87 1
      bool stochModeOK_;
d93 1
a93 1
      bool stochSolnModeOK_;
a97 5

      bool scenSpec_;
         //
         // True, iff the attribute is scenario-specific.
         // Default value: true.
@

