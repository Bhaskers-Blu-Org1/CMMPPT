head	1.14;
access;
symbols
	sce_5_01_20080919:1.10;
locks; strict;
comment	@ * @;


1.14
date	2011.09.28.23.50.33;	author rjw;	state Exp;
branches;
next	1.13;

1.13
date	2011.09.24.00.28.49;	author rjw;	state Exp;
branches;
next	1.12;

1.12
date	2011.08.30.20.18.18;	author rjw;	state Exp;
branches;
next	1.11;

1.11
date	2010.08.19.18.00.15;	author rjw;	state Exp;
branches;
next	1.10;

1.10
date	2008.02.28.00.00.43;	author rjw;	state Exp;
branches;
next	1.9;

1.9
date	2008.01.25.00.19.23;	author rjw;	state Exp;
branches;
next	1.8;

1.8
date	2008.01.04.20.25.28;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2007.09.19.17.41.35;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2007.08.20.22.48.00;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2007.08.17.22.32.25;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2007.08.16.21.27.41;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2007.08.08.20.18.13;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2007.08.07.21.22.37;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2007.08.07.19.17.44;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.14
log
@Revised the source code proprietary statement.
@
text
@//==============================================================================
// IBM Confidential
//
// OCO Source Materials
//
// Watson Implosion Technology
//
// (C) Copyright IBM Corp. 1993, 2011  All Rights Reserved
//
// The Source code for this program is not published or otherwise divested of
// its trade secrets, irrespective of what has been deposited with the U. S.
// Copyright office.
//==============================================================================

#ifndef StochOptMgrH
#define StochOptMgrH

//------------------------------------------------------------------------------
// Header file: "StochOptMgr.h"
//
// Contains the declaration of class StochOptMgr.
//------------------------------------------------------------------------------

#include <StochAssoc.h>

//------------------------------------------------------------------------------
// Class StochOptMgr
//
// "Stochastic Optimization Manager"
// Performs stochastic optimizing implosion. An instance of this class exists
// for the duration of a call to witStochImplode. Owned by the StochModeMgr.
//
// Class hierarchy:
//
//    ProbAssoc
//       StochAssoc
//          StochOptMgr
//
// Implemented in StochOpt.C.
//------------------------------------------------------------------------------

class WitStochOptMgr: public WitStochAssoc
   {
   public:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitStochOptMgr (WitStochModeMgr *);

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      ~WitStochOptMgr ();

      //------------------------------------------------------------------------
      // Other public member functions.
      //------------------------------------------------------------------------

      void implode ();
         //
         // Performs stochastic implosion.

      //------------------------------------------------------------------------
      // Data access functions.
      //------------------------------------------------------------------------

      accessFunc (bool, uploadingSoln)

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      void startStochImp ();
         //
         // Initiates stochastic optimizing implosion.

      void finishStochImp ();
         //
         // Initiates stochastic optimizing implosion.

      void uploadObjValues ();
         //
         // Uploads the objective function values to the owning objects.

      void uploadScenSoln ();
         //
         // Uploads the Scenario-specific aspects of the stochastic implosion
         // solution to the Scenarios.

      noCopyCtorAssign (WitStochOptMgr);

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      WitStochImpOP * myStochImpOP_;
         //
         // The StochImpOP owned by this StochOptMgr, if any; otherwise NULL

      bool uploadingSoln_;
         //
         // True, iff the stochastic implosion solution is currently being
         // uploaded to the owning objects.
   };

#endif
@


1.13
log
@Reverted to the version of 8-30-2011, which has the following differences:
   Release 7.0
   Old copyright dates (2006)
   The leading blanks in each line, which were lost with the 2011 copyright
      update, are restored.
Restored release # as 8.0.
@
text
@d1 8
a8 1
//------------------------------------------------------------------------------
d10 4
a13 6
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
// 
//------------------------------------------------------------------------------
@


1.12
log
@Revised the copyright date.
@
text
@d6 2
a7 2
//     IBM Confidential
//
d38 2
a39 2
{
public:
d41 3
a43 3
//------------------------------------------------------------------------
// Constructor functions.
//------------------------------------------------------------------------
d45 1
a45 1
WitStochOptMgr (WitStochModeMgr *);
d47 3
a49 3
//------------------------------------------------------------------------
// Destructor function.
//------------------------------------------------------------------------
d51 1
a51 1
~WitStochOptMgr ();
d53 3
a55 3
//------------------------------------------------------------------------
// Other public member functions.
//------------------------------------------------------------------------
d57 3
a59 3
void implode ();
//
// Performs stochastic implosion.
d61 3
a63 3
//------------------------------------------------------------------------
// Data access functions.
//------------------------------------------------------------------------
d65 1
a65 1
accessFunc (bool, uploadingSoln)
d67 1
a67 1
private:
d69 3
a71 3
//------------------------------------------------------------------------
// Private member functions.
//------------------------------------------------------------------------
d73 3
a75 3
void startStochImp ();
//
// Initiates stochastic optimizing implosion.
d77 3
a79 3
void finishStochImp ();
//
// Initiates stochastic optimizing implosion.
d81 3
a83 3
void uploadObjValues ();
//
// Uploads the objective function values to the owning objects.
d85 4
a88 4
void uploadScenSoln ();
//
// Uploads the Scenario-specific aspects of the stochastic implosion
// solution to the Scenarios.
d90 1
a90 1
noCopyCtorAssign (WitStochOptMgr);
d92 3
a94 3
//------------------------------------------------------------------------
// Private member data.
//------------------------------------------------------------------------
d96 3
a98 3
WitStochImpOP * myStochImpOP_;
//
// The StochImpOP owned by this StochOptMgr, if any; otherwise NULL
d100 5
a104 5
bool uploadingSoln_;
//
// True, iff the stochastic implosion solution is currently being
// uploaded to the owning objects.
};
@


1.11
log
@CPLEX
@
text
@d6 2
a7 2
//     IBM Confidential 
// 
d38 2
a39 2
   {
   public:
d41 3
a43 3
      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------
d45 1
a45 1
      WitStochOptMgr (WitStochModeMgr *);
d47 3
a49 3
      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------
d51 1
a51 1
      ~WitStochOptMgr ();
d53 3
a55 3
      //------------------------------------------------------------------------
      // Other public member functions.
      //------------------------------------------------------------------------
d57 3
a59 3
      void implode ();
         //
         // Performs stochastic implosion.
d61 3
a63 3
      //------------------------------------------------------------------------
      // Data access functions.
      //------------------------------------------------------------------------
d65 1
a65 1
      accessFunc (bool, uploadingSoln)
d67 1
a67 1
   private:
d69 3
a71 3
      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------
d73 3
a75 3
      void startStochImp ();
         //
         // Initiates stochastic optimizing implosion.
d77 3
a79 3
      void finishStochImp ();
         //
         // Initiates stochastic optimizing implosion.
d81 3
a83 3
      void uploadObjValues ();
         //
         // Uploads the objective function values to the owning objects.
d85 4
a88 4
      void uploadScenSoln ();
         //
         // Uploads the Scenario-specific aspects of the stochastic implosion
         // solution to the Scenarios.
d90 1
a90 1
      noCopyCtorAssign (WitStochOptMgr);
d92 3
a94 3
      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------
d96 3
a98 3
      WitStochImpOP * myStochImpOP_;
         //
         // The StochImpOP owned by this StochOptMgr, if any; otherwise NULL
d100 5
a104 5
      bool uploadingSoln_;
         //
         // True, iff the stochastic implosion solution is currently being
         // uploaded to the owning objects.
   };
@


1.10
log
@Stochastic Implosion
@
text
@d96 1
a96 1
      WitStochImpOM * myStochImpOM_;
d98 1
a98 1
         // The StochImpOM owned by this StochOptMgr, if any; otherwise NULL
@


1.9
log
@Stochastic Implosion
@
text
@d96 1
a96 1
      WitStochImpOP * myStochImpOP_;
d98 1
a98 1
         // The StochImpOP owned by this StochOptMgr, if any; otherwise NULL
@


1.8
log
@Stochastic Implosion
@
text
@d19 1
a19 1
#include <Assoc.h>
d28 6
d37 1
a37 1
class WitStochOptMgr: public WitProbAssoc
a95 4
      WitStochModeMgr * const myStochModeMgr_;
         //
         // The StochModeMgr that owns this StochOptMgr.

@


1.7
log
@Stochastic Implosion
@
text
@a70 4
      void setUpOptProb ();
         //
         // Sets up the OptProb for stochstic implosion.

@


1.6
log
@Stochastic Implosion
@
text
@d59 1
a59 2
      accessFunc (WitStochModeMgr *, myStochModeMgr)
      accessFunc (bool,              uploadingSoln)
@


1.5
log
@Stochastic Implosion
@
text
@d59 2
a60 3
      accessFunc    (WitStochModeMgr *, myStochModeMgr)
      accessFunc    (bool,              uploadingSoln)
      accessNonNull (WitStochImpOP *,   myStochImpOP)
@


1.4
log
@Stochastic Implosion
@
text
@d25 2
a26 3
// Performs stochastic optimizing implosion in single stochastic LP mode. An
// instance of this class exists for the duration of a call to witStochImplode
// in single stochastic LP mode. Owned by the StochModeMgr.
@


1.3
log
@Stochastic Implosion
@
text
@a73 5
      void verifyData ();
         //
         // Verifies that the input data is valid for stochastic optimizing
         // implosion in single stochastic LP mode.

@


1.2
log
@Stochastic Implosion
@
text
@d91 5
d112 2
a113 2
         // True, iff this StochOptMgr is currently uploading the stochastic
         // implosion solution to the owning objects.
@


1.1
log
@Stochastic Implosion
@
text
@d87 1
a87 1
      void uploadSoln ();
d89 1
a89 1
         // Uploads the stochastic implosion solution to the owning objects.
@

