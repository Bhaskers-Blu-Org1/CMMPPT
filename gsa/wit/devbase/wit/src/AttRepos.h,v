head	1.4;
access;
symbols
	sce_5_01_20080919:1.1;
locks; strict;
comment	@ * @;


1.4
date	2011.09.28.23.49.01;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2011.09.24.00.27.19;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2011.08.30.20.17.15;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2007.11.09.00.40.46;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Revised the source code proprietary statement.
@
text
@//==============================================================================
// IBM Confidential
//
// OCO Source Materials
//
// Watson Implosion Technology
//
// (C) Copyright IBM Corp. 1993, 2011  All Rights Reserved
//
// The Source code for this program is not published or otherwise divested of
// its trade secrets, irrespective of what has been deposited with the U. S.
// Copyright office.
//==============================================================================

#ifndef AttReposH
#define AttReposH

//------------------------------------------------------------------------------
// Header file: "AttRepos.h"
//
// Contains the declaration of class template AttRepos <Object>.
//------------------------------------------------------------------------------

#include <TripStack.h>

//------------------------------------------------------------------------------
// Class Template AttRepos <Object>
//
// Save the current values of an attribute of type DblFlexVec owned by an object
// of type Object and restores them to the saved values upon request.
// The attribute values are retrieved and stored using member function pointers
// of class Object.
//
// Implemented in Repos.C.
//------------------------------------------------------------------------------

template <typename Object>
      class WitAttRepos: public WitProbAssoc
   {
   public:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitAttRepos (
         WitProblem *                     theProblem,
         const WitDblFlexVec & (Object::* theAccFunc) () const,
         void                  (Object::* theStoreFunc) (WitPeriod, double));

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      ~WitAttRepos ();

      //------------------------------------------------------------------------
      // Other public member functions.
      //------------------------------------------------------------------------

      void saveValAt (Object * theObject, WitPeriod thePer);
         //
         // Saves the value of the attribute for theObject in thePer.

      void restore ();
         //
         // Restores each attribute value saved in this AttRepos to the value it
         // had the first time it was saved since the most recent call to
         // restore or clear. Empties the set of saved attributes.

      void restoreAndSave (WitAttRepos * theAttRepos);
         //
         // Same as restore, but clears theAttRepos and then saves in it the
         // current values of all the attributes that are being restored.

      void clear ();
         //
         // Empties the set of saved attribute values.

      inline bool isEmpty ()
         {
         return savedTrips_.isEmpty ();
         }

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      noCopyCtorAssign (WitAttRepos);

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      WitTripStack <Object> savedTrips_;
         //
         // The set of saved values and corresponding Objects and Periods
         // currently stored by this AttRepos.

      const WitDblFlexVec & (Object::* const myAccFunc_) () const;
         //
         // The access function for the attribute.

      void (Object::* const myStoreFunc_) (WitPeriod, double);
         //
         // The member function of the Object class that sets the value of the
         // attribute in the indicated period to the indicated value.
   };

#endif
@


1.3
log
@Reverted to the version of 8-30-2011, which has the following differences:
   Release 7.0
   Old copyright dates (2006)
   The leading blanks in each line, which were lost with the 2011 copyright
      update, are restored.
Restored release # as 8.0.
@
text
@d1 8
a8 1
//------------------------------------------------------------------------------
d10 4
a13 6
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
// 
//------------------------------------------------------------------------------
@


1.2
log
@Revised the copyright date.
@
text
@d6 2
a7 2
//     IBM Confidential
//
d33 73
a105 73
class WitAttRepos: public WitProbAssoc
{
public:

//------------------------------------------------------------------------
// Constructor functions.
//------------------------------------------------------------------------

WitAttRepos (
WitProblem *                     theProblem,
const WitDblFlexVec & (Object::* theAccFunc) () const,
void                  (Object::* theStoreFunc) (WitPeriod, double));

//------------------------------------------------------------------------
// Destructor function.
//------------------------------------------------------------------------

~WitAttRepos ();

//------------------------------------------------------------------------
// Other public member functions.
//------------------------------------------------------------------------

void saveValAt (Object * theObject, WitPeriod thePer);
//
// Saves the value of the attribute for theObject in thePer.

void restore ();
//
// Restores each attribute value saved in this AttRepos to the value it
// had the first time it was saved since the most recent call to
// restore or clear. Empties the set of saved attributes.

void restoreAndSave (WitAttRepos * theAttRepos);
//
// Same as restore, but clears theAttRepos and then saves in it the
// current values of all the attributes that are being restored.

void clear ();
//
// Empties the set of saved attribute values.

inline bool isEmpty ()
{
return savedTrips_.isEmpty ();
}

private:

//------------------------------------------------------------------------
// Private member functions.
//------------------------------------------------------------------------

noCopyCtorAssign (WitAttRepos);

//------------------------------------------------------------------------
// Private member data.
//------------------------------------------------------------------------

WitTripStack <Object> savedTrips_;
//
// The set of saved values and corresponding Objects and Periods
// currently stored by this AttRepos.

const WitDblFlexVec & (Object::* const myAccFunc_) () const;
//
// The access function for the attribute.

void (Object::* const myStoreFunc_) (WitPeriod, double);
//
// The member function of the Object class that sets the value of the
// attribute in the indicated period to the indicated value.
};
@


1.1
log
@Stochastic Implosion
@
text
@d6 2
a7 2
//     IBM Confidential 
// 
d33 73
a105 73
      class WitAttRepos: public WitProbAssoc
   {
   public:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitAttRepos (
         WitProblem *                     theProblem,
         const WitDblFlexVec & (Object::* theAccFunc) () const,
         void                  (Object::* theStoreFunc) (WitPeriod, double));

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      ~WitAttRepos ();

      //------------------------------------------------------------------------
      // Other public member functions.
      //------------------------------------------------------------------------

      void saveValAt (Object * theObject, WitPeriod thePer);
         //
         // Saves the value of the attribute for theObject in thePer.

      void restore ();
         //
         // Restores each attribute value saved in this AttRepos to the value it
         // had the first time it was saved since the most recent call to
         // restore or clear. Empties the set of saved attributes.

      void restoreAndSave (WitAttRepos * theAttRepos);
         //
         // Same as restore, but clears theAttRepos and then saves in it the
         // current values of all the attributes that are being restored.

      void clear ();
         //
         // Empties the set of saved attribute values.

      inline bool isEmpty ()
         {
         return savedTrips_.isEmpty ();
         }

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      noCopyCtorAssign (WitAttRepos);

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      WitTripStack <Object> savedTrips_;
         //
         // The set of saved values and corresponding Objects and Periods
         // currently stored by this AttRepos.

      const WitDblFlexVec & (Object::* const myAccFunc_) () const;
         //
         // The access function for the attribute.

      void (Object::* const myStoreFunc_) (WitPeriod, double);
         //
         // The member function of the Object class that sets the value of the
         // attribute in the indicated period to the indicated value.
   };
@

