head	1.7;
access;
symbols
	sce_5_01_20080919:1.4;
locks; strict;
comment	@ * @;


1.7
date	2011.09.28.23.50.30;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2011.09.24.00.28.45;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2011.08.30.20.18.15;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2008.02.12.22.04.04;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2008.02.08.21.38.33;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2008.02.07.23.30.10;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2008.02.07.18.41.40;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Revised the source code proprietary statement.
@
text
@//==============================================================================
// IBM Confidential
//
// OCO Source Materials
//
// Watson Implosion Technology
//
// (C) Copyright IBM Corp. 1993, 2011  All Rights Reserved
//
// The Source code for this program is not published or otherwise divested of
// its trade secrets, irrespective of what has been deposited with the U. S.
// Copyright office.
//==============================================================================

#ifndef StageH
#define StageH

//------------------------------------------------------------------------------
// Header file: "Stage.h"
//
// Contains the declaration of class Stage.
//------------------------------------------------------------------------------

#include <StochAssoc.h>

//------------------------------------------------------------------------------
// Class Stage
//
// A stage for stochastic implosion.
//------------------------------------------------------------------------------

class WitStage: public WitStochAssoc
   {
   public:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitStage (int theIdx, WitStochModeMgr *);

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      ~WitStage ();

      //------------------------------------------------------------------------
      // Data access functions.
      //------------------------------------------------------------------------

      accessFunc (int, myIndex)

      inline bool isStage0 ()
         {
         return (myIndex_ == 0);
         }

      inline bool isStage1 ()
         {
         return (myIndex_ == 1);
         }

      //------------------------------------------------------------------------
      // Other public member functions.
      //------------------------------------------------------------------------

      bool includes (WitNode * theNode);
         //
         // Stage-by-object mode: returns true, iff theNode belongs to this
         //                       Stage.
         // Stage-by-period mode: returns true, unconditionally.

      bool includes (WitPeriod thePer);
         //
         // Stage-by-object mode: returns true, iff thePer belongs to this Stage
         // Stage-by-period mode: returns true, unconditionally.

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      noCopyCtorAssign (WitStage);

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      const int myIndex_;
         //
         // The index of this Stage.
   };

#endif
@


1.6
log
@Reverted to the version of 8-30-2011, which has the following differences:
   Release 7.0
   Old copyright dates (2006)
   The leading blanks in each line, which were lost with the 2011 copyright
      update, are restored.
Restored release # as 8.0.
@
text
@d1 8
a8 1
//------------------------------------------------------------------------------
d10 4
a13 6
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
// 
//------------------------------------------------------------------------------
@


1.5
log
@Revised the copyright date.
@
text
@d6 2
a7 2
//     IBM Confidential
//
d28 2
a29 2
{
public:
d31 3
a33 3
//------------------------------------------------------------------------
// Constructor functions.
//------------------------------------------------------------------------
d35 1
a35 1
WitStage (int theIdx, WitStochModeMgr *);
d37 3
a39 3
//------------------------------------------------------------------------
// Destructor function.
//------------------------------------------------------------------------
d41 1
a41 1
~WitStage ();
d43 3
a45 3
//------------------------------------------------------------------------
// Data access functions.
//------------------------------------------------------------------------
d47 1
a47 1
accessFunc (int, myIndex)
d49 4
a52 4
inline bool isStage0 ()
{
return (myIndex_ == 0);
}
d54 4
a57 4
inline bool isStage1 ()
{
return (myIndex_ == 1);
}
d59 3
a61 3
//------------------------------------------------------------------------
// Other public member functions.
//------------------------------------------------------------------------
d63 5
a67 5
bool includes (WitNode * theNode);
//
// Stage-by-object mode: returns true, iff theNode belongs to this
//                       Stage.
// Stage-by-period mode: returns true, unconditionally.
d69 4
a72 4
bool includes (WitPeriod thePer);
//
// Stage-by-object mode: returns true, iff thePer belongs to this Stage
// Stage-by-period mode: returns true, unconditionally.
d74 1
a74 1
private:
d76 3
a78 3
//------------------------------------------------------------------------
// Private member functions.
//------------------------------------------------------------------------
d80 1
a80 1
noCopyCtorAssign (WitStage);
d82 3
a84 3
//------------------------------------------------------------------------
// Private member data.
//------------------------------------------------------------------------
d86 4
a89 4
const int myIndex_;
//
// The index of this Stage.
};
@


1.4
log
@Stochastic Implosion
@
text
@d6 2
a7 2
//     IBM Confidential 
// 
d28 2
a29 2
   {
   public:
d31 3
a33 3
      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------
d35 1
a35 1
      WitStage (int theIdx, WitStochModeMgr *);
d37 3
a39 3
      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------
d41 1
a41 1
      ~WitStage ();
d43 3
a45 3
      //------------------------------------------------------------------------
      // Data access functions.
      //------------------------------------------------------------------------
d47 1
a47 1
      accessFunc (int, myIndex)
d49 4
a52 4
      inline bool isStage0 ()
         {
         return (myIndex_ == 0);
         }
d54 4
a57 4
      inline bool isStage1 ()
         {
         return (myIndex_ == 1);
         }
d59 3
a61 3
      //------------------------------------------------------------------------
      // Other public member functions.
      //------------------------------------------------------------------------
d63 5
a67 5
      bool includes (WitNode * theNode);
         //
         // Stage-by-object mode: returns true, iff theNode belongs to this
         //                       Stage.
         // Stage-by-period mode: returns true, unconditionally.
d69 4
a72 4
      bool includes (WitPeriod thePer);
         //
         // Stage-by-object mode: returns true, iff thePer belongs to this Stage
         // Stage-by-period mode: returns true, unconditionally.
d74 1
a74 1
   private:
d76 3
a78 3
      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------
d80 1
a80 1
      noCopyCtorAssign (WitStage);
d82 3
a84 3
      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------
d86 4
a89 4
      const int myIndex_;
         //
         // The index of this Stage.
   };
@


1.3
log
@Stochastic Implosion
@
text
@d49 10
@


1.2
log
@Stochastic Implosion
@
text
@d19 1
a19 1
#include <Util.h>
d27 1
a27 1
class WitStage
d35 1
a35 1
      WitStage (int theIdx, WitStageMgr *);
a78 5

      WitStageMgr * const myStageMgr_;
         //
         // THe StageMgr that owns this Stage.

@


1.1
log
@Stochastic Implosion
@
text
@d35 1
a35 1
      WitStage (int theIdx);
d49 15
d79 5
@

