head	1.13;
access;
symbols
	sce_5_01_20080919:1.6
	latest_sce_4_20_20060523:1.6.0.2
	sce_4_20_20060523:1.6
	latest_sce4_20_OSL:1.5.0.2
	sce_4_20_OSL:1.5
	sce_410_withVa:1.5;
locks; strict;
comment	@ * @;


1.13
date	2011.09.28.23.49.16;	author rjw;	state Exp;
branches;
next	1.12;

1.12
date	2011.09.24.00.27.32;	author rjw;	state Exp;
branches;
next	1.11;

1.11
date	2011.08.30.20.17.25;	author rjw;	state Exp;
branches;
next	1.10;

1.10
date	2010.07.30.20.20.13;	author rjw;	state Exp;
branches;
next	1.9;

1.9
date	2010.07.29.21.03.11;	author rjw;	state Exp;
branches;
next	1.8;

1.8
date	2010.07.28.19.27.46;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2010.06.29.19.56.41;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2006.05.02.17.33.57;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2005.01.15.00.20.07;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2005.01.13.17.24.20;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2005.01.06.20.34.09;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2004.12.28.22.34.26;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2004.12.28.19.21.18;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.13
log
@Revised the source code proprietary statement.
@
text
@//==============================================================================
// IBM Confidential
//
// OCO Source Materials
//
// Watson Implosion Technology
//
// (C) Copyright IBM Corp. 1993, 2011  All Rights Reserved
//
// The Source code for this program is not published or otherwise divested of
// its trade secrets, irrespective of what has been deposited with the U. S.
// Copyright office.
//==============================================================================

#ifndef DetAltPtH
#define DetAltPtH

//------------------------------------------------------------------------------
// Header file: "DetAltPt.h"
//
// Contains the declaration of class DetAltPt.
//------------------------------------------------------------------------------

#include <AltPt.h>

//------------------------------------------------------------------------------
// Class DetAltPt
//
// "Determined Alteration Point"
// A DetAltPt is an AltPt at which the selection configuration can be altered in
// a manner that is uniquely determined by the corresponding SelPt.
//
// Class Hierarchy:
//
// AltPt
//    DetAltPt
//
// Implemented in Selection.C.
//------------------------------------------------------------------------------

class WitDetAltPt: public WitAltPt
   {
   public:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitDetAltPt (WitDetSelPt *);

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      virtual ~WitDetAltPt ();

   private:

      //------------------------------------------------------------------------
      // Other private member functions.
      //------------------------------------------------------------------------

      virtual bool       hasResAlt       ();
      virtual void       alterSelection  ();
      virtual void       storeRecoveryPt ();
      virtual void       tempAlterSel    ();
      virtual void       cancelTempAlt   ();
      virtual WitSelPt * mySelPt         ();
      virtual void       printAlteration ();
         //
         // Overrides from class AltPt.

      noCopyCtorAssign (WitDetAltPt);

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      WitDetSelPt * const myDetSelPt_;
         //
         // The DetSelPt that owns this DetAltPt.
   };

#endif
@


1.12
log
@Reverted to the version of 8-30-2011, which has the following differences:
   Release 7.0
   Old copyright dates (2006)
   The leading blanks in each line, which were lost with the 2011 copyright
      update, are restored.
Restored release # as 8.0.
@
text
@d1 8
a8 1
//------------------------------------------------------------------------------
d10 4
a13 6
//     (c) Copyright IBM Corp. 2006.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
// 
//------------------------------------------------------------------------------
@


1.11
log
@Revised the copyright date.
@
text
@d3 1
a3 1
//     (c) Copyright IBM Corp. 2011.
d6 2
a7 2
//     IBM Confidential
//
d37 2
a38 30
{
public:

//------------------------------------------------------------------------
// Constructor functions.
//------------------------------------------------------------------------

WitDetAltPt (WitDetSelPt *);

//------------------------------------------------------------------------
// Destructor function.
//------------------------------------------------------------------------

virtual ~WitDetAltPt ();

private:

//------------------------------------------------------------------------
// Other private member functions.
//------------------------------------------------------------------------

virtual bool       hasResAlt       ();
virtual void       alterSelection  ();
virtual void       storeRecoveryPt ();
virtual void       tempAlterSel    ();
virtual void       cancelTempAlt   ();
virtual WitSelPt * mySelPt         ();
virtual void       printAlteration ();
//
// Overrides from class AltPt.
d40 38
a77 10
noCopyCtorAssign (WitDetAltPt);

//------------------------------------------------------------------------
// Private member data.
//------------------------------------------------------------------------

WitDetSelPt * const myDetSelPt_;
//
// The DetSelPt that owns this DetAltPt.
};
@


1.10
log
@Selection Recovery
@
text
@d3 1
a3 1
//     (c) Copyright IBM Corp. 2006.
d6 2
a7 2
//     IBM Confidential 
// 
d37 30
a66 2
   {
   public:
d68 10
a77 38
      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitDetAltPt (WitDetSelPt *);

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      virtual ~WitDetAltPt ();

   private:

      //------------------------------------------------------------------------
      // Other private member functions.
      //------------------------------------------------------------------------

      virtual bool       hasResAlt       ();
      virtual void       alterSelection  ();
      virtual void       storeRecoveryPt ();
      virtual void       tempAlterSel    ();
      virtual void       cancelTempAlt   ();
      virtual WitSelPt * mySelPt         ();
      virtual void       printAlteration ();
         //
         // Overrides from class AltPt.

      noCopyCtorAssign (WitDetAltPt);

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      WitDetSelPt * const myDetSelPt_;
         //
         // The DetSelPt that owns this DetAltPt.
   };
@


1.9
log
@Selection Recovery
@
text
@d58 7
a64 7
      virtual bool       hasResAlt         ();
      virtual void       alterSelection    ();
      virtual void       recAltForRecovery ();
      virtual void       tempAlterSel      ();
      virtual void       cancelTempAlt     ();
      virtual WitSelPt * mySelPt           ();
      virtual void       printAlteration   ();
@


1.8
log
@Selection Recovery
@
text
@d58 7
a64 7
      virtual bool       hasResAlt        ();
      virtual void       alterSelection   ();
      virtual void       recordAlteration ();
      virtual void       tempAlterSel     ();
      virtual void       cancelTempAlt    ();
      virtual WitSelPt * mySelPt          ();
      virtual void       printAlteration  ();
@


1.7
log
@Selection Reuse.
@
text
@d58 7
a64 6
      virtual bool       hasResAlt       ();
      virtual void       alterSelection  ();
      virtual void       tempAlterSel    ();
      virtual void       cancelTempAlt   ();
      virtual WitSelPt * mySelPt         ();
      virtual void       printAlteration ();
@


1.6
log
@Updated the copyright date on all source files.
@
text
@d33 1
a33 1
// Implemented in MultiSel.C.
@


1.5
log
@Low-Pri Prop-Rt.
@
text
@d3 1
a3 1
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
@


1.4
log
@Low-Pri Prop-Rt.
@
text
@d58 6
a63 5
      virtual bool       hasResAlt      ();
      virtual void       alterSelection ();
      virtual void       tempAlterSel   ();
      virtual void       cancelTempAlt  ();
      virtual WitSelPt * mySelPt        ();
@


1.3
log
@Low-Pri Prop-Rt.
@
text
@d58 4
a61 5
      virtual bool       hasResAlt          ();
      virtual void       alterSelection     ();
      virtual void       tempAlterSel       ();
      virtual void       cancelTempAlt      (WitSelCand *);
      virtual bool       cancelNeedsSelCand ();
@


1.2
log
@Low-Pri Prop-Rt.
@
text
@d58 5
a62 3
      virtual bool       hasResAlt      ();
      virtual void       alterSelection ();
      virtual void       tempAlterSel   ();
@


1.1
log
@Low-Pri Prop-Rt.
@
text
@a45 2
   private:

d52 2
d58 1
@

