head	1.111;
access;
symbols
	sce_5_01_20080919:1.64
	latest_sce_4_20_20060523:1.64.0.2
	sce_4_20_20060523:1.64
	latest_sce4_20_OSL:1.56.0.2
	sce_4_20_OSL:1.56
	sce_410_withVa:1.54
	sce_4_05_20040511:1.48
	sce_4_00_20040201:1.48
	nextGenBranch:1.38.0.2
	nextGenRoot:1.38
	sce_3_30_20030627:1.15
	EndRw-branch:1.2.0.12
	Root-of-EndRw:1.2
	rwToStl:1.2.0.10
	latest_sce_3_10_20010924:1.2.0.8
	sce_3_10_20010924:1.2
	latest_sce_3_00_20010601:1.2.0.6
	sce_3_00_20010601:1.2
	witXML:1.1.1.2
	xml:1.1.1
	latest_sce_2_31_20010308:1.2.0.4
	sce_2_31_20010308:1.2
	latest_sce_2_31_20001003:1.2.0.2
	sce_2_31_20001003:1.2
	start:1.1.1.2
	IBM:1.1.1.2;
locks; strict;
comment	@# @;


1.111
date	2011.08.25.23.27.13;	author rjw;	state Exp;
branches;
next	1.110;

1.110
date	2010.12.29.22.54.37;	author rjw;	state Exp;
branches;
next	1.109;

1.109
date	2010.12.29.22.36.00;	author rjw;	state Exp;
branches;
next	1.108;

1.108
date	2010.12.28.23.32.50;	author rjw;	state Exp;
branches;
next	1.107;

1.107
date	2010.11.22.22.00.32;	author rjw;	state Exp;
branches;
next	1.106;

1.106
date	2010.11.20.00.21.38;	author rjw;	state Exp;
branches;
next	1.105;

1.105
date	2010.11.19.23.23.52;	author rjw;	state Exp;
branches;
next	1.104;

1.104
date	2010.11.19.19.18.33;	author rjw;	state Exp;
branches;
next	1.103;

1.103
date	2010.11.18.21.33.21;	author rjw;	state Exp;
branches;
next	1.102;

1.102
date	2010.11.18.21.15.07;	author rjw;	state Exp;
branches;
next	1.101;

1.101
date	2010.11.18.17.38.47;	author rjw;	state Exp;
branches;
next	1.100;

1.100
date	2010.11.18.16.39.34;	author rjw;	state Exp;
branches;
next	1.99;

1.99
date	2010.11.18.00.16.03;	author rjw;	state Exp;
branches;
next	1.98;

1.98
date	2010.10.15.19.23.36;	author rjw;	state Exp;
branches;
next	1.97;

1.97
date	2010.10.12.15.06.50;	author rjw;	state Exp;
branches;
next	1.96;

1.96
date	2010.10.11.21.31.04;	author rjw;	state Exp;
branches;
next	1.95;

1.95
date	2010.06.09.21.53.40;	author rjw;	state Exp;
branches;
next	1.94;

1.94
date	2010.06.04.15.54.07;	author rjw;	state Exp;
branches;
next	1.93;

1.93
date	2010.06.02.18.38.42;	author rjw;	state Exp;
branches;
next	1.92;

1.92
date	2010.05.29.01.27.55;	author rjw;	state Exp;
branches;
next	1.91;

1.91
date	2010.05.29.00.45.27;	author rjw;	state Exp;
branches;
next	1.90;

1.90
date	2010.05.28.20.51.43;	author rjw;	state Exp;
branches;
next	1.89;

1.89
date	2010.05.27.23.27.56;	author rjw;	state Exp;
branches;
next	1.88;

1.88
date	2010.05.27.22.20.16;	author rjw;	state Exp;
branches;
next	1.87;

1.87
date	2010.05.27.21.22.07;	author rjw;	state Exp;
branches;
next	1.86;

1.86
date	2010.05.25.16.13.50;	author rjw;	state Exp;
branches;
next	1.85;

1.85
date	2010.05.24.22.35.58;	author rjw;	state Exp;
branches;
next	1.84;

1.84
date	2010.05.24.22.01.10;	author rjw;	state Exp;
branches;
next	1.83;

1.83
date	2010.05.24.16.26.05;	author rjw;	state Exp;
branches;
next	1.82;

1.82
date	2010.05.21.22.52.01;	author rjw;	state Exp;
branches;
next	1.81;

1.81
date	2010.05.20.21.05.41;	author rjw;	state Exp;
branches;
next	1.80;

1.80
date	2010.05.20.18.05.10;	author rjw;	state Exp;
branches;
next	1.79;

1.79
date	2010.05.20.17.40.17;	author rjw;	state Exp;
branches;
next	1.78;

1.78
date	2010.05.18.22.40.40;	author rjw;	state Exp;
branches;
next	1.77;

1.77
date	2010.05.12.18.38.08;	author rjw;	state Exp;
branches;
next	1.76;

1.76
date	2010.05.07.23.18.59;	author rjw;	state Exp;
branches;
next	1.75;

1.75
date	2010.05.07.22.39.40;	author rjw;	state Exp;
branches;
next	1.74;

1.74
date	2010.05.07.21.43.48;	author rjw;	state Exp;
branches;
next	1.73;

1.73
date	2010.05.07.21.08.12;	author rjw;	state Exp;
branches;
next	1.72;

1.72
date	2010.05.07.20.31.00;	author rjw;	state Exp;
branches;
next	1.71;

1.71
date	2010.05.06.22.00.38;	author rjw;	state Exp;
branches;
next	1.70;

1.70
date	2009.07.15.20.59.18;	author rjw;	state Exp;
branches;
next	1.69;

1.69
date	2009.07.15.19.19.37;	author rjw;	state Exp;
branches;
next	1.68;

1.68
date	2009.07.13.21.43.43;	author rjw;	state Exp;
branches;
next	1.67;

1.67
date	2009.07.13.21.38.44;	author dpc;	state Exp;
branches;
next	1.66;

1.66
date	2009.07.13.20.54.52;	author rjw;	state Exp;
branches;
next	1.65;

1.65
date	2009.07.13.13.13.39;	author dpc;	state Exp;
branches;
next	1.64;

1.64
date	2006.04.19.20.24.12;	author rjw;	state Exp;
branches;
next	1.63;

1.63
date	2006.04.19.19.51.09;	author rjw;	state Exp;
branches;
next	1.62;

1.62
date	2006.04.19.17.55.48;	author rjw;	state Exp;
branches;
next	1.61;

1.61
date	2006.04.19.17.34.39;	author rjw;	state Exp;
branches;
next	1.60;

1.60
date	2006.04.19.16.08.40;	author rjw;	state Exp;
branches;
next	1.59;

1.59
date	2006.04.18.21.41.34;	author rjw;	state Exp;
branches;
next	1.58;

1.58
date	2006.04.18.19.06.56;	author rjw;	state Exp;
branches;
next	1.57;

1.57
date	2006.04.14.19.18.58;	author rjw;	state Exp;
branches;
next	1.56;

1.56
date	2005.11.21.23.12.16;	author dpc;	state Exp;
branches;
next	1.55;

1.55
date	2005.11.21.22.04.24;	author dpc;	state Exp;
branches;
next	1.54;

1.54
date	2005.07.07.18.18.11;	author rjw;	state Exp;
branches;
next	1.53;

1.53
date	2005.07.07.16.00.58;	author rjw;	state Exp;
branches;
next	1.52;

1.52
date	2005.05.26.20.03.32;	author fasano;	state Exp;
branches;
next	1.51;

1.51
date	2005.05.17.17.30.44;	author rjw;	state Exp;
branches;
next	1.50;

1.50
date	2005.04.13.23.16.13;	author rjw;	state Exp;
branches;
next	1.49;

1.49
date	2004.12.08.17.21.38;	author fasano;	state Exp;
branches;
next	1.48;

1.48
date	2003.10.16.19.47.19;	author rjw;	state Exp;
branches;
next	1.47;

1.47
date	2003.09.18.18.30.17;	author rjw;	state Exp;
branches;
next	1.46;

1.46
date	2003.09.11.22.20.15;	author rjw;	state Exp;
branches;
next	1.45;

1.45
date	2003.09.10.23.02.31;	author rjw;	state Exp;
branches;
next	1.44;

1.44
date	2003.09.09.15.34.13;	author rjw;	state Exp;
branches;
next	1.43;

1.43
date	2003.08.06.17.52.44;	author rjw;	state Exp;
branches;
next	1.42;

1.42
date	2003.08.01.21.57.53;	author rjw;	state Exp;
branches;
next	1.41;

1.41
date	2003.07.31.20.04.44;	author rjw;	state Exp;
branches;
next	1.40;

1.40
date	2003.07.31.16.23.29;	author rjw;	state Exp;
branches;
next	1.39;

1.39
date	2003.07.30.22.47.24;	author rjw;	state Exp;
branches;
next	1.38;

1.38
date	2003.07.28.23.37.47;	author rjw;	state Exp;
branches;
next	1.37;

1.37
date	2003.07.28.22.47.44;	author rjw;	state Exp;
branches;
next	1.36;

1.36
date	2003.07.23.22.26.04;	author rjw;	state Exp;
branches;
next	1.35;

1.35
date	2003.07.18.21.13.38;	author rjw;	state Exp;
branches;
next	1.34;

1.34
date	2003.07.17.18.10.34;	author rjw;	state Exp;
branches;
next	1.33;

1.33
date	2003.07.17.15.21.30;	author rjw;	state Exp;
branches;
next	1.32;

1.32
date	2003.07.16.23.30.41;	author rjw;	state Exp;
branches;
next	1.31;

1.31
date	2003.07.16.23.12.59;	author rjw;	state Exp;
branches;
next	1.30;

1.30
date	2003.07.16.22.40.08;	author rjw;	state Exp;
branches;
next	1.29;

1.29
date	2003.07.16.22.06.49;	author rjw;	state Exp;
branches;
next	1.28;

1.28
date	2003.07.16.21.19.37;	author rjw;	state Exp;
branches;
next	1.27;

1.27
date	2003.07.16.20.25.43;	author rjw;	state Exp;
branches;
next	1.26;

1.26
date	2003.07.16.19.18.15;	author rjw;	state Exp;
branches;
next	1.25;

1.25
date	2003.07.16.17.30.18;	author rjw;	state Exp;
branches;
next	1.24;

1.24
date	2003.07.15.22.09.53;	author rjw;	state Exp;
branches;
next	1.23;

1.23
date	2003.07.15.21.11.27;	author rjw;	state Exp;
branches;
next	1.22;

1.22
date	2003.07.15.20.47.43;	author rjw;	state Exp;
branches;
next	1.21;

1.21
date	2003.07.15.20.07.23;	author rjw;	state Exp;
branches;
next	1.20;

1.20
date	2003.07.15.18.59.20;	author rjw;	state Exp;
branches;
next	1.19;

1.19
date	2003.07.15.16.13.38;	author rjw;	state Exp;
branches;
next	1.18;

1.18
date	2003.07.14.23.09.49;	author rjw;	state Exp;
branches;
next	1.17;

1.17
date	2003.07.14.21.08.50;	author rjw;	state Exp;
branches;
next	1.16;

1.16
date	2003.07.11.15.02.50;	author dpc;	state Exp;
branches;
next	1.15;

1.15
date	2003.07.03.15.44.53;	author dpc;	state Exp;
branches;
next	1.14;

1.14
date	2003.06.05.20.31.51;	author rjw;	state Exp;
branches;
next	1.13;

1.13
date	2003.06.05.19.48.22;	author rjw;	state Exp;
branches;
next	1.12;

1.12
date	2003.06.03.20.58.18;	author fasano;	state Exp;
branches;
next	1.11;

1.11
date	2003.05.21.17.37.03;	author rjw;	state Exp;
branches;
next	1.10;

1.10
date	2003.05.21.17.13.51;	author dpc;	state Exp;
branches;
next	1.9;

1.9
date	2003.05.20.16.02.39;	author fasano;	state Exp;
branches;
next	1.8;

1.8
date	2003.04.30.18.05.21;	author fasano;	state Exp;
branches;
next	1.7;

1.7
date	2003.04.28.19.58.27;	author fasano;	state Exp;
branches;
next	1.6;

1.6
date	2003.04.28.18.44.07;	author fasano;	state Exp;
branches;
next	1.5;

1.5
date	2003.04.28.18.35.04;	author fasano;	state Exp;
branches;
next	1.4;

1.4
date	2003.04.28.17.45.22;	author dpc;	state Exp;
branches;
next	1.3;

1.3
date	2002.12.20.15.04.28;	author fasano;	state Exp;
branches;
next	1.2;

1.2
date	2000.03.07.16.57.15;	author fasano;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.24.13.53.33;	author wit;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.24.13.53.33;	author wit;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2001.04.04.18.12.41;	author fasano;	state Exp;
branches;
next	;


desc
@@


1.111
log
@Removed COIN from WIT.
@
text
@# Notes:
# This makefile is included in makefiles in this directory and in 
# the ../$(platform) directories, so don't assume that the current
# directory is the one this makefile is in.

# $Header: /gsa/yktgsa/projects/w/wit/devbase/wit/src/appl.mk,v 1.110 2010/12/29 22:54:37 rjw Exp $

all: wit

appl_name = wit
include $(config_dir)ds.mk

# Define a directory whose subdirectories contain some of the included header
# files:
#
general_include_dir = $(ds_root_dir)$(sep)$(platform)$(sep)include

#-------------------------------------------------------------------------------
# Macros to facilitate building WIT when CPLEX is to be embedded into WIT.
#
# cplex_embedded_flag:
#    When WIT is to embed CPLEX, this is a C preprocessor flag that defines
#       macro that tells WIT to embed CPLEX.
#    Otherwise this is the null string.
#
# cplex_include_flag:
#    When WIT is to embed CPLEX, this is the include flag for the CPLEX header
#       file.
#    Otherwise this is the null string.
#
# cplex_lib_flags:
#    When WIT is to embed CPLEX and CPLEX is not to be linked in as a DLL on the
#       current platform, this is the set of flags for linking CPLEX into a
#       static library.
#    Otherwise this is the null string.
#
# Prereqisite macros:
#
#    WIT_CPLEX_HOME
#    ds_cplex_as_dll
#    ds_cplex_lib_dir
#    ds_cplex_link_flags
#
#    For the meaning of these macros, see the comment in ds.mk.
#-------------------------------------------------------------------------------

ifneq ($(WIT_CPLEX_HOME),)

      #-------------------------
      # CPLEX is to be embedded.
      #-------------------------

   cplex_embedded_flag = -DCPLEX_EMBEDDED

   cplex_include_flag  = -I$(WIT_CPLEX_HOME)/include/ilcplex

   ifeq ($(ds_cplex_as_dll),YES)

      cplex_lib_flags  =

   else

      cplex_lib_flags  = -L$(ds_cplex_lib_dir) -lcplex

   endif

else

      #-----------------------------
      # CPLEX is not to be embedded.
      #-----------------------------

   cplex_embedded_flag =
   cplex_include_flag  =
   cplex_lib_flags     =

endif

#-------------------------------------------------------------------------------

.SUFFIXES :
.SUFFIXES : .out .a .ln .o .cc .C .c .p .f .F .r .y .l .s .S .mod .sym .def .h .info .w .ch .web .sh .elc .el

exes	= \
	wit$(exe_ending) \
	MclModule$(exe_ending) \
	CplexModule$(exe_ending) \
        purewit$(exe_ending)


#-------------------------------------------------------------------------------
# the list of files in lib_objects and headers comes from 
# the include below
#-------------------------------------------------------------------------------

include ../src/sources.mk

cxx_objects = \
	wit.$(obj_suffix) \
	CplexMgr.$(obj_suffix) \
	$(lib_objects)

#-------------------------------------------------------------------------------
# sources includes all source except witLexer.l.
# "make depend" has a problem when witLexer.l is included.
#-------------------------------------------------------------------------------

extra_sources =             \
     witParse.y             \
       MsgFac.$(cxx_suffix) \
       MsgMgr.$(cxx_suffix) \
   MsgBuilder.$(cxx_suffix) \


sources = $(sort $(cxx_objects:.$(obj_suffix)=.$(cxx_suffix))) $(extra_sources)

objects = $(cxx_objects) 

#-------------------------------------------------------------------------------

ld_path_flags = -L.

# CPPFLAGS - for C Pre-Processor
# CXXFLAGS - for C++ Compiler
#			-I. is so that the right ytab.h is included
CPPFLAGS	= -I$(src_dir).                    \
               	    $(cplex_include_flag)          \
                  -I$(wituse_includes_dir)         \
                  -I.                              \
                    $(cplex_embedded_flag)         \

CFLAGS		= $(ds_comp_flags)

CXXFLAGS	= $(ds_comp_flags)


ld_paths		= $(ld_path_flags) \
		  -L$(WIT_ROOT_DIR)$(sep)$(platform)

LDFLAGS		= $(ds_link_flags) $(ld_paths)

ifeq ($(platform),sun4)
	LOADLIBES	= -lmcl \
			  $(ds_math_lib) 
else
ifeq ($(findstring linux,$(platform)),linux)
	LOADLIBES	= 
else
	LOADLIBES	= $(ds_math_lib)

endif
endif

vpath %.$(cxx_suffix) $(src_dir)
vpath %.h $(src_dir)
vpath %.y $(src_dir)
vpath %.l $(src_dir)


# Rule to build the wit stand-alone executable:

wit:	wit.o libwit.a
	$(CXX) $(ds_link_flags) $^ $(ds_cplex_link_flags) -o $@@


#wit.dll:	wit.o libwit.a
#	g++ -shared wit.o libwit.a -lm -mno-cygwin -o wit.dll 

# The make variables extra_regular_lib_objects and extra_prelinked_lib_objects
# should be set before this file (appl.mk) is included.  The first one should
# be set to extra files (not in $(lib_objects)) that should be included in
# libwit.a and libwitnl.a.  The second one (extra_prelinked_lib_objects) should
# be set to the names of prelinked object files (without the .o extension) that
# should be included in libwit.a.  (The non-prelinked version will be included
# in libwitnl.a)

# Make library

libwit.a:	$(lib_objects) MclModule CplexModule
	$(AR) $(ds_ar_update_flags) $@@ $^
	$(RANLIB) $@@


-lwit:	libwit.a

libwitnl.a:	$(lib_objects) \
		$(extra_nonlinked_objects)
	$(make_lib) $(ds_ar_update_flags) $(ld_paths) $(LOADLIBES) $@@ $^
	$(RANLIB) $@@

#-------------------------------------------------------------------------------
# Create the MclModule library object file.
#
# This file contains:
#    MsgFac.o
#    MsgMgr.o
#    The relevent contents of the MCL library
#-------------------------------------------------------------------------------

mcl_lib_dir = ..$(sep)..$(sep)mcl$(sep)$(platform)

MclModule: MsgFac.o MsgMgr.o MsgBuilder.o
	$(reloc_ld) -o $@@ $(ds_link_reloc_flags) -L$(mcl_lib_dir) $^ -lmcl

#-------------------------------------------------------------------------------
# Create the CplexModule library object file.
#
# In CPLEX-embedded mode, this file contains:
#    CplexMgr.o
#    The relevent contents of the CPLEX library
#
# In CPLEX-not-embedded mode, this file contains:
#    CplexMgr.o
#-------------------------------------------------------------------------------

CplexModule: CplexMgr.o
	$(reloc_ld) -o $@@ $(ds_link_reloc_flags) $^ $(cplex_lib_flags)
@


1.110
log
@Minor revision.
@
text
@d6 1
a6 1
# $Header: /gsa/yktgsa/projects/w/wit/devbase/wit/src/appl.mk,v 1.109 2010/12/29 22:36:00 rjw Exp $
a18 42
# WIT_COIN_HOME
#
# If COIN is to be embedded into WIT, WIT_COIN_HOME should be defined as the
# path where COIN files are found.
#
# If COIN is not to be embedded into WIT, WIT_COIN_HOME should be defined as
# NONE.
#
# The default value is given by default_wit_coin_home, which is specified in
# the Makefile for the platform.
#-------------------------------------------------------------------------------

ifeq ($(WIT_COIN_HOME),)

   WIT_COIN_HOME      = $(default_wit_coin_home)

endif


ifneq ($(WIT_COIN_HOME),NONE)

   coin_embedded_flag = -DCOIN_EMBEDDED

   coin_include_flag  = -I$(WIT_COIN_HOME)/include

   coin_objects       =                                \
      $(WIT_COIN_HOME)/Cbc/$(coin_platform)/*.o        \
      $(WIT_COIN_HOME)/Cgl/$(coin_platform)/*.o        \
      $(WIT_COIN_HOME)/Osi/OsiClp/$(coin_platform)/*.o \
      $(WIT_COIN_HOME)/Osi/$(coin_platform)/*.o        \
      $(WIT_COIN_HOME)/Clp/$(coin_platform)/*.o        \
      $(WIT_COIN_HOME)/Coin/$(coin_platform)/*.o       \

else

   coin_embedded_flag =
   coin_include_flag  =
   coin_objects       =

endif

#-------------------------------------------------------------------------------
a126 1
               	    $(coin_include_flag)           \
a129 1
                    $(coin_embedded_flag)          \
d180 1
a180 1
	$(AR) $(ds_ar_update_flags) $@@ $(coin_objects) $^
@


1.109
log
@Revised makefiles to use the MCL library instead of the MCL .o files.
This should eliminate putting mcl/unitTest into libwit.a, which resulted in
WIT application programs with two main functions.
@
text
@d6 1
a6 1
# $Header: /gsa/yktgsa/projects/w/wit/devbase/wit/src/appl.mk,v 1.108 2010/12/28 23:32:50 rjw Exp $
d151 1
a154 1
     witParse.y             \
@


1.108
log
@Changed name of library object CplexMgr to CplexModule.
@
text
@d6 1
a6 1
# $Header: /gsa/yktgsa/projects/w/wit/devbase/wit/src/appl.mk,v 1.107 2010/11/22 22:00:32 rjw Exp $
d128 1
a131 4
#intermediate_files = \
#	witLexer.C \
#	witParse.C \
#	ytab.h
d133 1
d136 2
d145 4
a148 1
# List of the extra object files needed for witlibnl.a:
d150 5
a155 4
# sources includes all source except witLexer.l.
# "make depend" has a problem when witLexer.l is included.
sources = $(sort $(cxx_objects:.$(obj_suffix)=.$(cxx_suffix))) \
	witParse.y 
d157 1
d159 1
a159 2
objects = \
        $(cxx_objects) 
d161 1
a179 2
# Define the directory under which the COIN libraries are to be found:
#
d223 2
a224 6
libwit.a:	  $(lib_objects) CplexModule
	$(AR) $(ds_ar_update_flags) $@@ \
        $(coin_objects)                \
        ../../mcl/$(platform)/*.o      \
        $(lib_objects)                 \
        CplexModule
d236 12
d249 1
d251 8
a258 3
# This file contains the contents of:
#    CplexMgr.o and the CPLEX library, in CPLEX embedded mode
#    CplexMgr.o and nothing else,      otherwise
d261 1
a261 2
	$(reloc_ld) -o $@@ $(ds_link_reloc_flags) \
		$^ $(cplex_lib_flags)
@


1.107
log
@CPLEX
@
text
@d6 1
a6 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.106 2010/11/20 00:21:38 rjw Exp $
d128 1
a128 1
	CplexMgr$(exe_ending) \
d220 1
a220 1
libwit.a:	  $(lib_objects) CplexMgr
d225 1
a225 1
        CplexMgr
d238 4
a241 1
# Create the CplexMgr library object file to link in the CPLEX libraries.
d243 1
a243 1
CplexMgr: CplexMgr.o 
@


1.106
log
@CPLEX
@
text
@d6 1
a6 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.105 2010/11/19 23:23:52 rjw Exp $
d61 1
a61 1
# WIT_CPLEX_HOME
d63 22
a84 2
# If CPLEX is to be embedded into WIT, WIT_CPLEX_HOME should be defined as the
# path where CPLEX files are found.
d86 1
a86 4
# If CPLEX is not to be embedded into WIT, WIT_CPLEX_HOME should be left
# undefined, or defined as the null string.
#
# The ds_* macros are defined in the config/p_*.mk files.
a98 3
   cplex_lib_dir       = $(WIT_CPLEX_HOME)/lib/$(ds_cplex_lib_subdir)


a100 4
         #-----------------------------------
         # CPLEX is to be linked in as a DLL.
         #-----------------------------------

a102 2
      cplex_link_flags = $(ds_posix_threads_flag) -L$(cplex_lib_dir) -lcplex122

d105 1
a105 8
         #---------------------------------------
         # CPLEX is not to be linked in as a DLL.
         #---------------------------------------

      cplex_lib_flags  = -L$(cplex_lib_dir) -lcplex

      cplex_link_flags = $(ds_posix_threads_flag)

a116 1
   cplex_lib_dir       =
a117 1
   cplex_link_flags    =
d204 1
a204 1
	$(CXX) $(ds_link_flags) $^ $(cplex_link_flags) -o $@@
@


1.105
log
@CPLEX
@
text
@d6 1
a6 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.104 2010/11/19 19:18:33 rjw Exp $
d68 2
@


1.104
log
@CPLEX
@
text
@d6 1
a6 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.103 2010/11/18 21:33:21 rjw Exp $
d80 1
a80 1
   cplex_lib_dir       = $(WIT_CPLEX_HOME)/lib/$(cplex_lib_subdir)
d83 1
a83 1
   ifeq ($(cplex_as_dll),YES)
d91 1
a91 1
      cplex_link_flags = $(posix_threads_flag) -L$(cplex_lib_dir) -lcplex122
d101 1
a101 1
      cplex_link_flags = $(posix_threads_flag)
d114 1
@


1.103
log
@CPLEX
@
text
@d6 1
a6 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.102 2010/11/18 21:15:07 rjw Exp $
d66 2
a67 4
# If CPLEX is not to be embedded into WIT, WIT_CPLEX_HOME should be defined as
# NONE.
#
# The default value is NONE.
d70 1
a70 8
ifeq ($(WIT_CPLEX_HOME),)

   WIT_CPLEX_HOME      = NONE

endif


ifneq ($(WIT_CPLEX_HOME),NONE)
@


1.102
log
@CPLEX
@
text
@d6 1
a6 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.101 2010/11/18 17:38:47 rjw Exp $
d81 3
a83 5
ifeq  ($(cplex_as_dll),YES)

      #---------------------------------------------
      # CPLEX is to be embedded, linked in as a DLL.
      #---------------------------------------------
a90 1
   cplex_lib_flags     =
d92 5
a96 1
   cplex_link_flags    = $(posix_threads_flag) -L$(cplex_lib_dir) -lcplex122
d98 1
a98 1
else
d100 1
a100 3
      #-------------------------------------------------
      # CPLEX is to be embedded, not linked in as a DLL.
      #-------------------------------------------------
d102 1
a102 1
   cplex_embedded_flag = -DCPLEX_EMBEDDED
d104 3
a106 1
   cplex_include_flag  = -I$(WIT_CPLEX_HOME)/include/ilcplex
d108 1
a108 1
   cplex_lib_dir       = $(WIT_CPLEX_HOME)/lib/$(cplex_lib_subdir)
d110 1
a110 1
   cplex_lib_flags     = -L$(cplex_lib_dir) -lcplex
a111 1
   cplex_link_flags    = $(posix_threads_flag)
d113 1
a113 1
endif
@


1.101
log
@CPLEX
@
text
@a0 2


d6 1
a6 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.100 2010/11/18 16:39:34 rjw Exp $
d83 4
d97 1
d99 3
a101 1
else # WIT_CPLEX_HOME != NONE and cplex_as_dll != YES:
d115 1
d117 3
a119 1
else # WIT_CPLEX_HOME = NONE:
@


1.100
log
@CPLEX
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.99 2010/11/18 00:16:03 rjw Exp $
d83 15
d108 4
a111 1
else
d203 1
a203 1
	$(CXX) $(ds_link_flags) $(cplex_link_flags) $^ -o $@@
@


1.99
log
@CPLEX
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.98 2010/10/15 19:23:36 rjw Exp $
d91 1
a91 1
   cplex_link_flags    = -lpthread
@


1.98
log
@CPLEX
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.97 2010/10/12 15:06:50 rjw Exp $
d87 1
a87 1
   cplex_lib_dir       = $(WIT_CPLEX_HOME)/$(cplex_lib_subdir)
@


1.97
log
@CPLEX
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.96 2010/10/11 21:31:04 rjw Exp $
d87 1
a87 1
   cplex_lib_dir       = $(WIT_CPLEX_HOME)/lib/$(cplex_lib_subdir)
@


1.96
log
@CPLEX
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.95 2010/06/09 21:53:40 rjw Exp $
d91 1
a91 1
   cplex_link_flags    = $(ds_pthread_flag)
@


1.95
log
@Upgraded to CPLEX 12.2, (with no license manager).
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.94 2010/06/04 15:54:07 rjw Exp $
d87 1
a87 1
   cplex_lib_dir       = $(WIT_CPLEX_HOME)/lib/x86_sles10_4.1/static_pic
d91 1
a91 1
   cplex_link_flags    = -pthread
@


1.94
log
@CPLEX
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.93 2010/06/02 18:38:42 rjw Exp $
d87 1
a87 1
   cplex_lib_dir       = $(WIT_CPLEX_HOME)/lib/x86_debian4.0_4.1/static_pic
@


1.93
log
@CPLEX
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.92 2010/05/29 01:27:55 rjw Exp $
d89 3
a91 1
   cplex_link_flags    = -L$(cplex_lib_dir) -lcplex -m32 -lm -pthread
d97 1
d109 1
d123 1
d185 2
a186 1
	$(CXX) $(ds_link_flags) $^ -o $@@ $(cplex_link_flags)
d201 1
a201 1
libwit.a:	  $(lib_objects)
d205 2
a206 1
        $(lib_objects)
a216 4
# List the COIN library files to be linked in.

#CoinSolver_libs = -lCbc -lCgl -lOsiClp -lOsi -lClp -lCoin

d219 1
d221 3
a223 5
# Run lexx and yacc, compile, and link 
#witLexer: witLexer.o witParse.o
#	$(reloc_ld) -o witLexer $(ds_link_reloc_flags)  $^
# Order is important here!  Some linkers will not use members of the .a
# file if it is not after the .o file.
@


1.92
log
@CPLEX
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.91 2010/05/29 00:45:27 rjw Exp $
d42 2
a53 2
   coin_embedded_flag = -DCOIN_EMBEDDED

d56 1
a58 1
   coin_embedded_flag =
d83 2
a90 2
   cplex_embedded_flag = -DCPLEX_EMBEDDED

d93 1
a95 1
   cplex_embedded_flag =
@


1.91
log
@CPLEX
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.90 2010/05/28 20:51:43 rjw Exp $
d21 1
a21 1
# COIN_EMBEDDED
d23 2
a24 2
# 1, if COIN is     to be embedded into WIT
# 0, if COIN is not to be embedded into WIT
d26 5
a30 1
# If left undefined, it defaults to 1.
d33 1
a33 1
ifndef COIN_EMBEDDED
d35 1
a35 1
   COIN_EMBEDDED = 1
a38 10
ifneq ($(COIN_EMBEDDED), 0)
ifneq ($(COIN_EMBEDDED), 1)

   This line is a deliberate makefile error. See the comment below.
      #
      # If make reports an error on the above line, it means that
      # COIN_EMBEDDED was defined as something other than 0 or 1.

endif
endif
d40 1
a40 1
ifeq ($(COIN_EMBEDDED), 1)
d42 1
a42 1
   coin_include_flag  = -I$(general_include_dir)$(sep)coin
d44 7
a50 7
   coin_objects       =                                 \
      $(coin_objs_path)/Cbc/$(coin_platform)/*.o        \
      $(coin_objs_path)/Cgl/$(coin_platform)/*.o        \
      $(coin_objs_path)/Osi/OsiClp/$(coin_platform)/*.o \
      $(coin_objs_path)/Osi/$(coin_platform)/*.o        \
      $(coin_objs_path)/Clp/$(coin_platform)/*.o        \
      $(coin_objs_path)/Coin/$(coin_platform)/*.o       \
@


1.90
log
@CPLEX
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.89 2010/05/27 23:27:56 rjw Exp $
d74 4
a77 2
# If CPLEX is not to be embedded into WIT, WIT_CPLEX_HOME should be undefined or
# defined as the empty string.
d80 8
a87 1
ifneq ($(WIT_CPLEX_HOME),)
@


1.89
log
@CPLEX
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.88 2010/05/27 22:20:16 rjw Exp $
d48 1
a48 1
   coin_include_flag = -I$(general_include_dir)$(sep)coin
d50 1
a50 1
   coin_objects      =                                  \
d58 2
d62 3
a64 2
   coin_include_flag =
   coin_objects      =
d141 1
a141 1
                  -DCOIN_EMBEDDED=$(COIN_EMBEDDED) \
@


1.88
log
@CPLEX
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.87 2010/05/27 21:22:07 rjw Exp $
d77 1
a77 1
   cplex_include_flag = -I$(WIT_CPLEX_HOME)/include/ilcplex
d79 1
a79 1
   cplex_lib_dir      = $(WIT_CPLEX_HOME)/lib/x86_debian4.0_4.1/static_pic
d81 1
a81 1
   cplex_link_flags   = -L$(cplex_lib_dir) -lcplex -m32 -lm -pthread
d83 1
a83 1
   cplex_embedded     = 1
d87 3
a89 3
   cplex_include_flag =
   cplex_link_flags   =
   cplex_embedded     = 0
d133 7
a139 7
CPPFLAGS	= -I$(src_dir).                      \
               	    $(coin_include_flag)             \
               	    $(cplex_include_flag)            \
                  -I$(wituse_includes_dir)           \
                  -I.                                \
                  -DCOIN_EMBEDDED=$(COIN_EMBEDDED)   \
                  -DCPLEX_EMBEDDED=$(cplex_embedded) \
@


1.87
log
@CPLEX
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.86 2010/05/25 16:13:50 rjw Exp $
d66 1
a66 1
# CPLEX_EMBEDDED
d68 2
a69 2
# 1, if CPLEX is     to be embedded into WIT
# 0, if CPLEX is not to be embedded into WIT
d71 2
a72 1
# If left undefined, it defaults to 0.
d75 1
a75 1
ifndef CPLEX_EMBEDDED
d77 1
a77 16
   CPLEX_EMBEDDED = 0

endif

ifneq ($(CPLEX_EMBEDDED), 0)
ifneq ($(CPLEX_EMBEDDED), 1)

   This line is a deliberate makefile error. See the comment below.
      #
      # If make reports an error on the above line, it means that
      # CPLEX_EMBEDDED was defined as something other than 0 or 1.

endif
endif

ifeq ($(CPLEX_EMBEDDED), 1)
d81 1
a81 1
   cplex_include_flag = -I$(WIT_CPLEX_HOME)/include/ilcplex
d83 1
a83 1
   cplex_link_flags   = -L$(cplex_lib_dir) -lcplex -m32 -lm -pthread
d89 1
d139 1
a139 1
                  -DCPLEX_EMBEDDED=$(CPLEX_EMBEDDED) \
@


1.86
log
@Simplifying the Makefiles.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.85 2010/05/24 22:35:58 rjw Exp $
d93 1
a93 2
   cplex_include_dir  = ../../../cplex121/include/ilcplex
   cplex_lib_dir      = ../../../cplex121/lib/x86_debian4.0_4.1/static_pic
d95 1
a95 1
   cplex_include_flag = -I$(cplex_include_dir)
@


1.85
log
@CPLEX
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.84 2010/05/24 22:01:10 rjw Exp $
a137 7
ifeq ($(platform),cygwinGcc)

$(cxx_objects): %.$(obj_suffix): %.C
	$(CXX) -c $(CPPFLAGS) $(CXXFLAGS) $< -o $@@

endif

@


1.84
log
@CPLEX
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.83 2010/05/24 16:26:05 rjw Exp $
d93 6
a98 1
   cplex_include_flag = -I../../../cplex121/include/ilcplex
d103 1
d195 1
a195 1
	$(CXX) $(ds_link_flags) $^ -o $@@
@


1.83
log
@Simplifying appl.mk
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.82 2010/05/21 22:52:01 rjw Exp $
a57 2
   coin_libs         = $(ds_coin_libs)

a61 1
   coin_libs         =
@


1.82
log
@CPLEX
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.81 2010/05/20 21:05:41 rjw Exp $
d178 1
a178 3
	LOADLIBES	= $(coin_libs)   \
			  -lmcl          \
			  $(ds_math_lib) \
@


1.81
log
@Embedded CPLEX.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.80 2010/05/20 18:05:10 rjw Exp $
d94 10
d153 1
@


1.80
log
@Preparing for embedded CPLEX.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.78 2010/05/18 22:40:40 rjw Exp $
d69 26
d141 6
a146 5
CPPFLAGS	= -I$(src_dir).                    \
               	    $(coin_include_flag)           \
                  -I$(wituse_includes_dir)         \
                  -I.                              \
                  -DCOIN_EMBEDDED=$(COIN_EMBEDDED) \
@


1.79
log
@Preparing for embedded CPLEX.
@
text
@d15 5
d48 1
a48 1
   coin_include_flag = -I../../../$(platform)/include/coin
@


1.78
log
@Preparing for embedded CPLEX.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.77 2010/05/12 18:38:08 rjw Exp $
d43 1
a43 1
   coin_include_flag = -I$(general_include_dir)$(sep)coin
d53 1
a53 1
   coin_libs     = $(ds_coin_libs)
a104 5
# Define a directory whose subdirectories contain some of the included header
# files:
#
general_include_dir = $(ds_root_dir)$(sep)$(platform)$(sep)include

a110 1
                  -I$(general_include_dir)         \
@


1.77
log
@Revising the build procedure.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.76 2010/05/07 23:18:59 rjw Exp $
d93 8
d159 3
@


1.76
log
@Revising the build procedure.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.75 2010/05/07 22:39:40 rjw Exp $
d16 1
a16 1
# WIT_EMBEDS_COIN
d24 1
a24 1
ifndef WIT_EMBEDS_COIN
d26 1
a26 1
   WIT_EMBEDS_COIN = 1
d30 2
a31 2
ifneq ($(WIT_EMBEDS_COIN), 0)
ifneq ($(WIT_EMBEDS_COIN), 1)
d36 1
a36 1
      # WIT_EMBEDS_COIN was defined as something other than 0 or 1.
d41 1
a41 1
ifeq ($(WIT_EMBEDS_COIN), 1)
d107 6
a112 6
CPPFLAGS	= -I$(src_dir).                        \
                  -I$(general_include_dir)             \
               	    $(coin_include_flag)               \
                  -I$(wituse_includes_dir)             \
                  -I.                                  \
                  -DWIT_EMBEDS_COIN=$(WIT_EMBEDS_COIN) \
@


1.75
log
@Revising the build procedure.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.74 2010/05/07 21:43:48 rjw Exp $
d43 1
a43 2
   coin_cppflags = -I$(general_include_dir)$(sep)coin \
                   -DOPT_IMPLODE                      \
d45 1
a45 1
   coin_objects  =                                      \
d57 3
a59 3
   coin_cppflags =
   coin_objects  =
   coin_libs     =
d107 6
a112 5
CPPFLAGS	= -I$(src_dir).            \
                  -I$(general_include_dir) \
                  -I$(wituse_includes_dir) \
                  -I.                      \
               	    $(coin_cppflags)       \
@


1.74
log
@Revising the build procedure.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.73 2010/05/07 21:08:12 rjw Exp $
d43 2
a44 1
   opt_implode_flag = -DOPT_IMPLODE
d46 1
a46 1
   coin_objects     =                                   \
d54 2
d58 3
a60 2
   opt_implode_flag =
   coin_objects     =
d108 5
a112 6
CPPFLAGS	= -I$(src_dir).                      \
                  -I$(general_include_dir)           \
		  -I$(general_include_dir)$(sep)coin \
		  -I$(wituse_includes_dir)           \
                  -I.                                \
                  $(opt_implode_flag)                \
d133 4
a136 3
	LOADLIBES	= $(ds_coin_libs) \
			  -lmcl \
			  $(ds_math_lib)
@


1.73
log
@Revising the build procedure.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.72 2010/05/07 20:31:00 rjw Exp $
d45 8
d56 1
d158 3
a160 8
	$(AR) $(ds_ar_update_flags) $@@                    \
        $(coin_objs_path)/Cbc/$(coin_platform)/*.o        \
        $(coin_objs_path)/Cgl/$(coin_platform)/*.o        \
        $(coin_objs_path)/Osi/OsiClp/$(coin_platform)/*.o \
        $(coin_objs_path)/Osi/$(coin_platform)/*.o        \
        $(coin_objs_path)/Clp/$(coin_platform)/*.o        \
        $(coin_objs_path)/Coin/$(coin_platform)/*.o       \
        ../../mcl/$(platform)/*.o                         \
@


1.72
log
@Revising the build procedure for multiple solvers.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.71 2010/05/06 22:00:38 rjw Exp $
d95 2
a96 2
CPPFLAGS	= -I$(src_dir). \
                  -I$(general_include_dir) \
d98 3
a100 2
		  -I$(wituse_includes_dir) \
                  -I.
d104 1
a104 2
CXXFLAGS	= $(ds_comp_flags) \
                  $(opt_implode_flag)
@


1.71
log
@Revising the build process.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.70 2009/07/15 20:59:18 rjw Exp $
d16 1
a16 1
# EMBED_COIN
d20 2
d24 1
a24 1
ifndef EMBED_COIN
d26 1
a26 1
   EMBED_COIN = 1
d30 2
a31 2
ifneq ($(EMBED_COIN), 0)
ifneq ($(EMBED_COIN), 1)
d33 1
a33 1
   Report an error.
d35 2
a36 2
      # If make reports an error on the above line, it means that EMBED_COIN was
      # defined as something other than 0 or 1.
d41 1
a41 1
ifeq ($(EMBED_COIN), 1)
@


1.70
log
@Moved the WIT .o files after the COIN and MCL .o files in the command to
build libwit.a.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.69 2009/07/15 19:19:37 rjw Exp $
d15 36
d100 3
a102 1
CXXFLAGS	= $(ds_comp_flags)
@


1.69
log
@Moved the definition of coin_objs_path from appl.mk to Makefile.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.68 2009/07/13 21:43:43 rjw Exp $
d109 1
a109 1
	$(AR) $(ds_ar_update_flags) $@@ $^                 \
d116 2
a117 1
        ../../mcl/$(platform)/*.o
@


1.68
log
@Minor revision.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.67 2009/07/13 21:38:44 dpc Exp $
a107 2
coin_objs_path = ../../COIN

@


1.67
log
@Removed hardcoding of Linux-O and linux/mcl
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.66 2009/07/13 20:54:52 rjw Exp $
d111 1
a111 1
	$(AR) $(ds_ar_update_flags) $@@ $^        \
@


1.66
log
@Added some line breaks.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.65 2009/07/13 13:13:39 dpc Exp $
d112 7
a118 7
        $(coin_objs_path)/Cbc/Linux-O/*.o        \
        $(coin_objs_path)/Cgl/Linux-O/*.o        \
        $(coin_objs_path)/Osi/OsiClp/Linux-O/*.o \
        $(coin_objs_path)/Osi/Linux-O/*.o        \
        $(coin_objs_path)/Clp/Linux-O/*.o        \
        $(coin_objs_path)/Coin/Linux-O/*.o       \
        ../../mcl/linux/*.o
@


1.65
log
@
Removed CoinSolver and MclClient from the build process.  We now link all
the object code together to build libwit.a.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.64 2006/04/19 20:24:12 rjw Exp $
d111 8
a118 1
	$(AR) $(ds_ar_update_flags) $@@ $^ $(coin_objs_path)/Cbc/Linux-O/*.o $(coin_objs_path)/Cgl/Linux-O/*.o $(coin_objs_path)/Osi/OsiClp/Linux-O/*.o $(coin_objs_path)/Osi/Linux-O/*.o $(coin_objs_path)/Clp/Linux-O/*.o $(coin_objs_path)/Coin/Linux-O/*.o ../../mcl/linux/*.o
@


1.64
log
@Removed osl_include_dir.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.63 2006/04/19 19:51:09 rjw Exp $
a19 2
	CoinSolver$(exe_ending) \
	MclClient$(exe_ending) \
a32 3
	MsgFac.$(obj_suffix) \
	MsgMgr.$(obj_suffix) \
	CoinSolver.$(obj_suffix) \
a36 4
extra_nonlinked_objects =   \
   MsgFac.$(obj_suffix)     \
   MsgMgr.$(obj_suffix)     \
   CoinSolver.$(obj_suffix) \
a67 1
coin_library_dir = $(ds_root_dir)$(sep)$(platform)$(sep)lib$(sep)coin
d70 2
a71 3
		  -L$(WIT_ROOT_DIR)$(sep)$(platform) \
		  -L$(MCL_ROOT_DIR)$(sep)$(platform) \
		  -L$(coin_library_dir)
a97 1

d107 5
a111 3
libwit.a:	$(lib_objects) \
		$(extra_prelinked_lib_objects)
	$(AR) $(ds_ar_update_flags) $@@ $^
d114 1
d124 1
a124 7
CoinSolver_libs = -lCbc -lCgl -lOsiClp -lOsi -lClp -lCoin

# Create the CoinSolver library object file to link in the COIN libraries.

CoinSolver: CoinSolver.o 
	$(reloc_ld) -o $@@ $(ds_link_reloc_flags) \
		 -L$(coin_library_dir) $^ $(CoinSolver_libs)
a128 8
# Compile MsgFac and link with MCL library
MclClient_libs = -lmcl
MclClient: MsgFac.o MsgMgr.o
	$(reloc_ld) -o MclClient $(ds_link_reloc_flags) \
		 -L..$(sep)..$(sep)mcl$(sep)$(platform) $^ $(MclClient_libs)



@


1.63
log
@More removal of OSL items from the makefiles.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.62 2006/04/19 17:55:48 rjw Exp $
d56 5
d66 5
a70 3
CPPFLAGS	= -I$(src_dir). -I$(osl_include_dir) \
		  -I$(osl_include_dir)$(sep)coin \
		  -I$(wituse_includes_dir) -I.
@


1.62
log
@Removed osl_library_dir from appl.mk.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.61 2006/04/19 17:34:39 rjw Exp $
d68 4
@


1.61
log
@Attempt to fix a build problem on AIX.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.60 2006/04/19 16:08:40 rjw Exp $
a67 6

# Define the directory in which the COIN libraries are to be found:
#
# coin_library_dir = ../../../$(platform)/lib/coin


d71 1
a71 1
		  -L$(osl_library_dir)$(sep)coin
d128 1
a128 1
		 -L$(osl_library_dir)$(sep)coin $^ $(CoinSolver_libs)
@


1.60
log
@Defined removed use of osl_library_dir.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.59 2006/04/18 21:41:34 rjw Exp $
d71 1
a71 1
coin_library_dir = ../../../$(platform)/lib/coin
d77 1
a77 1
		  -L$(coin_library_dir)
d134 1
a134 1
		 -L$(coin_library_dir) $^ $(CoinSolver_libs)
@


1.59
log
@Removed some OSL items.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.58 2006/04/18 19:06:56 rjw Exp $
a57 2
coin_library_dir = $(osl_library_dir)$(sep)coin

d69 5
@


1.58
log
@Removed class OslSolver.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.57 2006/04/14 19:18:58 rjw Exp $
a64 1
		  -I$(osl_include_dir)$(sep)osl \
a73 1
		  -L$(osl_library_dir) \
d78 1
a78 2
	LOADLIBES	= $(ds_osl_lib) \
			  -lmcl \
d84 1
a84 2
	LOADLIBES	= $(ds_osl_lib) \
			  $(ds_coin_libs)\
d99 1
a99 1
	$(CXX) $(ds_link_flags) $^ -o $@@ 
@


1.57
log
@Cut-over to COIN-only mode.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.56 2005/11/21 23:12:16 dpc Exp $
a19 1
	OslSolver$(exe_ending) \
a36 1
	OslSolver.$(obj_suffix) \
a44 1
   OslSolver.$(obj_suffix)  \
a126 7
# Compile OslSolver

OslSolver: OslSolver.o
	$(reloc_ld) -o OslSolver $(ds_link_reloc_flags) \
		 -L$(osl_library_dir) $^


@


1.56
log
@*** empty log message ***
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.55 2005/11/21 22:04:24 dpc Exp $
a62 10
ifneq ($(coin_build),)

   coin_build_flag = -DCOIN_BUILD

else

   coin_build_flag =

endif

d72 1
a72 1
CXXFLAGS	= $(ds_comp_flags) $(coin_build_flag)
d130 1
a130 17
# Compile OslSolver and link with OSL static library
# Note: this used to also put OslSolver into libwit.a but wcd removed that
# because it would update the timestamp of libwit.a even if the .o files
# in libwit were old.

# If the build is a COIN build, then don't link in any actual library files
# from OSL.

ifneq ($(coin_build),)

   OslSolver_libs =

else

   OslSolver_libs = $(ds_osl_lib) $(ds_fortran_lib)

endif
d134 1
a134 2
		 -L$(osl_library_dir) $^ $(OslSolver_libs) 

a135 1
# List the COIN library files to be linked in, if the build is a COIN build.
d137 1
a137 1
ifneq ($(coin_build),)
d139 1
a139 7
   CoinSolver_libs = -lCbc -lCgl -lOsiClp -lOsi -lClp -lCoin

else

   CoinSolver_libs =

endif
@


1.55
log
@The Linux build will handle making the generated lex/yacc code.
The sources for these code will now be regular build files.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.54 2005/07/07 18:18:11 rjw Exp $
d25 4
a28 4
intermediate_files = \
	witLexer.C \
	witParse.C \
	ytab.h
@


1.54
log
@[exceptions]
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.53 2005/07/07 16:00:58 rjw Exp $
d56 1
a56 4
        $(cxx_objects) \
        witParse.$(obj_suffix) \
        witLexer.$(obj_suffix) 

a128 1
		$(extra_regular_lib_objects) \
d135 1
a135 1
libwitnl.a:	$(lib_objects) $(extra_regular_lib_objects) \
a190 26
# create the parser
witParse.C ytab.h: \
   ../src/witParse.y\
   ../src/Parser.h \
   ../src/Parlex.h \
   ../src/SymTable.h \
   ../src/Entity.h \
   ../src/VecBS.h \
   ../src/WitRun.h
	yacc -d ../src/witParse.y
	mv -f y.tab.c witParse.C
	mv -f y.tab.h ytab.h


# create the lexer
witLexer.C: \
   ../src/witLexer.l \
   ../src/Parlex.h \
   ../src/Parser.h \
   ../src/SymTable.h \
   ../src/Entity.h \
   ../src/VecBS.h \
   ../src/WitRun.h \
   ./ytab.h
	$(LEX) ../src/witLexer.l
	mv -f lex.yy.c witLexer.C
@


1.53
log
@[exceptions]
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.52 2005/05/26 20:03:32 fasano Exp $
d198 1
a198 1
   ../src/witParse.h \
d213 1
a213 1
   ../src/witParse.h \
@


1.52
log
@modifed to build libwitnlns.a
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.51 2005/05/17 17:30:44 rjw Exp $
a197 1
   ../src/witLexer.h \
a211 1
   ../src/witLexer.h \
@


1.51
log
@Made opt implosion use COIN unconditionally when COIN_BUILD is defined.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.50 2005/04/13 23:16:13 rjw Exp $
d104 1
@


1.50
log
@Replaced Reference to Sbb with Cbc.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.49 2004/12/08 17:21:38 fasano Exp $
d147 14
a160 1
OslSolver_libs = $(ds_osl_lib) $(ds_fortran_lib)
d166 1
a166 1
# List the COIN library files to be linked in, if appropriate.
@


1.49
log
@modifed so name of lex executable is defined in config files
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.48 2003/10/16 19:47:19 rjw Exp $
d157 1
a157 1
   CoinSolver_libs = -lSbb -lCgl -lOsiClp -lOsi -lClp -lCoin
@


1.48
log
@Removed some inappropriate COIN-oriented stuff.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.47 2003/09/18 18:30:17 rjw Exp $
d207 1
a207 1
	lex ../src/witLexer.l
@


1.47
log
@Continued implementation of opt with COIN.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.46 2003/09/11 22:20:15 rjw Exp $
a103 1
			  $(ds_coin_libs) \
@


1.46
log
@Continued implementation of opt with COIN.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.45 2003/09/10 23:02:31 rjw Exp $
d20 1
a20 1
	OslMgr$(exe_ending) \
d38 1
a38 1
	OslMgr.$(obj_suffix) \
d47 1
a47 1
   OslMgr.$(obj_suffix)     \
d144 2
a145 2
# Compile OslMgr and link with OSL static library
# Note: this used to also put OslMgr into libwit.a but wcd removed that
d148 4
a151 4
OslMgr_libs = $(ds_osl_lib) $(ds_fortran_lib)
OslMgr: OslMgr.o
	$(reloc_ld) -o OslMgr $(ds_link_reloc_flags) \
		 -L$(osl_library_dir) $^ $(OslMgr_libs) 
@


1.45
log
@Moved the COIN library files.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.44 2003/09/09 15:34:13 rjw Exp $
d64 1
a64 3
osl_coin_include_dir = $(osl_include_dir)

coin_library_dir = $(osl_library_dir)/coin
d79 3
a81 3
CPPFLAGS	= -I$(src_dir). -I$(osl_coin_include_dir) \
		  -I$(osl_coin_include_dir)$(sep)coin \
		  -I$(osl_coin_include_dir)$(sep)osl \
@


1.44
log
@Continued implementation of Opt with COIN.
rjw
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.43 2003/08/06 17:52:44 rjw Exp $
d64 1
a64 1
# The same directories are used for both OSL and COIN:
d66 1
a66 2
osl_coin_library_dir = $(osl_library_dir)
osl_coin_include_dir = $(osl_include_dir)
d93 2
a94 1
		  -L$(osl_coin_library_dir)
d153 1
a153 1
		 -L$(osl_coin_library_dir) $^ $(OslMgr_libs) 
d172 1
a172 1
		 -L$(osl_coin_library_dir) $^ $(CoinSolver_libs)
@


1.43
log
@Fixed a bug when building WIT in non-COIN mode.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.42 2003/08/01 21:57:53 rjw Exp $
d160 1
a160 1
   CoinSolver_libs = -lClp -lOsiClp -lOsi -lCoin
@


1.42
log
@Continued implementation of opt with COIN.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.41 2003/07/31 20:04:44 rjw Exp $
d69 9
d88 1
a88 1
CXXFLAGS	= $(ds_comp_flags) -DCOIN_BUILD=$(COIN_BUILD)
d158 1
a158 1
ifeq ($(COIN_BUILD),1)
@


1.41
log
@Continued implementation of opt with COIN.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.40 2003/07/31 16:23:29 rjw Exp $
a63 12
# Determine the value to be specified for WIT's COIN_BUILD macro.

ifeq ($(coin_build),t)

   coin_build_val = 1

else

   coin_build_val = 0

endif

d79 1
a79 1
CXXFLAGS	= $(ds_comp_flags) -DCOIN_BUILD=$(coin_build_val)
d149 1
a149 1
ifeq ($(coin_build),t)
@


1.40
log
@Continued implementation of opt with COIN.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.39 2003/07/30 22:47:24 rjw Exp $
d64 1
a64 1
# Determine the value to be specified for WIT's USE_COIN macro.
d66 1
a66 1
ifeq ($(use_coin),yes)
d68 1
a68 1
   use_coin_val = 1
d72 1
a72 1
   use_coin_val = 0
d91 1
a91 1
CXXFLAGS	= $(ds_comp_flags) -DUSE_COIN=$(use_coin_val)
d161 1
a161 1
ifeq ($(use_coin),yes)
@


1.39
log
@Continued implementation of opt with COIN.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.38 2003/07/28 23:37:47 rjw Exp $
d21 1
a21 2
	CoinClient$(exe_ending) \
	ClpOsiSolver$(exe_ending) \
d39 1
a39 1
	ClpOsiSolver.$(obj_suffix) \
d44 5
a48 5
extra_nonlinked_objects =     \
   MsgFac.$(obj_suffix)       \
   MsgMgr.$(obj_suffix)       \
   OslMgr.$(obj_suffix)       \
   ClpOsiSolver.$(obj_suffix) \
d163 1
a163 1
   ClpOsiSolver_libs = -lClp -lOsiClp -lOsi -lCoin
d167 1
a167 1
   ClpOsiSolver_libs =
d171 1
a171 1
# Create the ClpOsiSolver library object file to link in the COIN libraries.
d173 1
a173 1
ClpOsiSolver: ClpOsiSolver.o 
d175 1
a175 1
		 -L$(osl_coin_library_dir) $^ $(ClpOsiSolver_libs)
@


1.38
log
@Continued implementation of opt with COIN.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.37 2003/07/28 22:47:44 rjw Exp $
a21 1
	OsiSolver$(exe_ending) \
a39 1
	OsiSolver.$(obj_suffix) \
a48 1
   OsiSolver.$(obj_suffix)    \
a159 47
#-------------------------------------------------------------------------------
# There are two alternative ways to link the COIN libraries into WIT:
#
# "Single File":
#    This technique linka all WIT object files that make COIN calls into one
#    library object file, called CoinClient, and links all relevent COIN
#    libraries into that file.
#
# "Multiple Files":
#    This techniquwe createa a separate library object file for each WIT object
#    file that makes COIN calls, e.g. OsiSolver for OsiSolver.o, and links into
#    each library object file only the COIN libraries needed by the
#    corresponding WIT object file.
#
# Both techniques are defined below. The selection of which technique is to be
# used is platform dependent and is specified by including the relevant library
# object file name(s) in the extra_prelinked_lib_objects variable in the WIT
# Makefile for the platform.
#-------------------------------------------------------------------------------

#-------------------------------------------------------------------------------
# The "Single File" technique for linking in the COIN libraries:
#-------------------------------------------------------------------------------

# List the COIN library files to be linked in, if appropriate.

ifeq ($(use_coin),yes)

   CoinClient_libs = -lOsiOsl -lOsiClp -lClp -lOsi -lCoin

else

   CoinClient_libs =

endif

# Create the CoinClient library object file to link in the COIN libraries.

CoinClient: OsiSolver.o ClpOsiSolver.o
	$(reloc_ld) -o $@@ $(ds_link_reloc_flags) \
		 -L$(osl_coin_library_dir) $^ $(CoinClient_libs)


#-------------------------------------------------------------------------------
# The "Multiple Files" technique for linking in the COIN libraries:
#-------------------------------------------------------------------------------

d164 1
a164 2
   OsiSolver_libs    = -lOsi -lCoin
   ClpOsiSolver_libs = -lOsiClp -lClp
a167 1
   OsiSolver_libs    =
d172 1
a172 5
# Create the multiple library object files to link in the COIN libraries.

OsiSolver: OsiSolver.o 
	$(reloc_ld) -o $@@ $(ds_link_reloc_flags) \
		 -L$(osl_coin_library_dir) $^ $(OsiSolver_libs)
@


1.37
log
@Fixed a makefile bug in building libwitnl.a.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.36 2003/07/23 22:26:04 rjw Exp $
a22 1
	OslOsiSolver$(exe_ending) \
a41 1
	OslOsiSolver.$(obj_suffix) \
a51 1
   OslOsiSolver.$(obj_suffix) \
d201 1
a201 1
CoinClient: OsiSolver.o OslOsiSolver.o ClpOsiSolver.o
a214 1
   OslOsiSolver_libs = -lOsiOsl
a219 1
   OslOsiSolver_libs =
a228 4

OslOsiSolver: OslOsiSolver.o 
	$(reloc_ld) -o $@@ $(ds_link_reloc_flags) \
		 -L$(osl_coin_library_dir) $^ $(OslOsiSolver_libs)
@


1.36
log
@Re-organized the COIN linking procedure.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.35 2003/07/18 21:13:38 rjw Exp $
d47 10
d152 1
a152 1
		$(patsubst %,%.$(obj_suffix),$(extra_prelinked_lib_objects))
@


1.35
log
@Continued implementation of opt with COIN.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.34 2003/07/17 18:10:34 rjw Exp $
d156 23
a178 10
# There are two alternative ways to link the COIN libraries into WIT: One way is
# to link all WIT object files that make COIN calls into one library object
# file, CoinClient, and link all relevent COIN libraries into that file. The
# other way is to create a separate library object file for each WIT object file
# that makes COIN calls, e.g. OsiSolver for OsiSolver.o, and link into each
# library object file only the COIN libraries needed by the corresponding WIT
# object file. The selection of which technique is to be used is platform
# dependent and is specified by including the relevant library object file
# name(s) in the extra_prelinked_lib_objects variable in the WIT Makefile for
# the platform.
d184 1
a184 1
   CoinClient_libs   = -lOsiOsl -lOsiClp -lClp -lOsi -lCoin
d186 22
a207 1
   OsiSolver_libs    =                         -lOsi -lCoin
d209 1
a209 1
   ClpOsiSolver_libs =          -lOsiClp -lClp
a212 2
   CoinClient_libs   =

d219 1
a219 5
# Create the various library object files to link in the COIN libraries.

CoinClient: OsiSolver.o OslOsiSolver.o ClpOsiSolver.o
	$(reloc_ld) -o $@@ $(ds_link_reloc_flags) \
		 -L$(osl_coin_library_dir) $^ $(CoinClient_libs)
d232 2
@


1.34
log
@Minor changes.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.33 2003/07/17 15:21:30 rjw Exp $
d24 1
a24 1
	ClpSolver$(exe_ending) \
d44 1
a44 1
	ClpSolver.$(obj_suffix) \
d175 1
a175 1
   ClpSolver_libs    =          -lOsiClp -lClp
d183 1
a183 1
   ClpSolver_libs    =
d189 1
a189 1
CoinClient: OsiSolver.o OslOsiSolver.o ClpSolver.o
d201 1
a201 1
ClpSolver: ClpSolver.o 
d203 1
a203 1
		 -L$(osl_coin_library_dir) $^ $(ClpSolver_libs)
@


1.33
log
@Continued work on building WIT with COIN.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.32 2003/07/16 23:30:41 rjw Exp $
d25 1
a25 2
	MsgFac$(exe_ending) \
	witLexer$(exe_ending) \
d40 1
d207 4
a210 4
MsgFac_libs = -lmcl
MsgFac: MsgFac.o MsgMgr.o
	$(reloc_ld) -o MsgFac $(ds_link_reloc_flags) \
		 -L..$(sep)..$(sep)mcl$(sep)$(platform) $^ $(MsgFac_libs)
d243 2
a244 2
witLexer: witLexer.o witParse.o
	$(reloc_ld) -o witLexer $(ds_link_reloc_flags)  $^
@


1.32
log
@Fixed a bug in make clean.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.31 2003/07/16 23:12:59 rjw Exp $
d21 1
a21 1
	CoinLink$(exe_ending) \
d156 11
d171 1
a171 1
   CoinLink_libs     = -lOsiOsl -lOsiClp -lClp -lOsi -lCoin
d179 1
a179 1
   CoinLink_libs     =
d187 1
a187 1
# Create the various library files to link in the COIN libraries.
d189 1
a189 1
CoinLink: OsiSolver.o OslOsiSolver.o ClpSolver.o
d191 1
a191 1
		 -L$(osl_coin_library_dir) $^ $(CoinLink_libs)
@


1.31
log
@Continued work on building WIT with COIN.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.30 2003/07/16 22:40:08 rjw Exp $
d22 3
@


1.30
log
@Continued work on makefiles for building WIT with and without COIN.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.29 2003/07/16 22:06:49 rjw Exp $
d39 3
a41 1
	CoinLink.$(obj_suffix) \
d175 1
a175 1
CoinLink: OsiSolver.o OslOsiSolver.o ClpSolver.o CoinLink.o 
@


1.29
log
@More work on makefiles for linking in COIN.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.28 2003/07/16 21:19:37 rjw Exp $
d155 5
a159 1
   CoinLink_libs = -lOsiOsl -lOsiClp -lClp -lOsi -lCoin
d163 5
a167 1
   CoinLink_libs =
d171 1
a171 1
# Create the CoinLink library file to link in the COIN libraries.
d176 12
@


1.28
log
@Reduced linker warnings.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.27 2003/07/16 20:25:43 rjw Exp $
d155 1
a155 5
#  CoinLink_libs     = -lOsiOsl -lOsiClp -lClp -lOsi -lCoin
   CoinLink_libs     =
   OsiSolver_libs    = -lOsi -lCoin
   OslOsiSolver_libs = -lOsiOsl
   ClpSolver_libs    = -lOsiClp -lClp
d159 1
a159 4
   CoinLink_libs     =
   OsiSolver_libs    =
   OslOsiSolver_libs =
   ClpSolver_libs    =
d165 1
a165 9
#oinLink: OsiSolver.o OslOsiSolver.o ClpSolver.o CoinLink.o 
#	$(reloc_ld) -o $@@ $(ds_link_reloc_flags) \
#		 -L$(osl_coin_library_dir) $^ $(CoinLink_libs)

CoinLink: CoinLink.o 
	$(reloc_ld) -o $@@ $(ds_link_reloc_flags) \
		 -L$(osl_coin_library_dir) $^

OsiSolver: OsiSolver.o 
d167 1
a167 11
		 -L$(osl_coin_library_dir) $^ $(OsiSolver_libs)


OslOsiSolver: OslOsiSolver.o 
	$(reloc_ld) -o $@@ $(ds_link_reloc_flags) \
		 -L$(osl_coin_library_dir) $^  $(OslOsiSolver_libs)

ClpSolver: ClpSolver.o 
	$(reloc_ld) -o $@@ $(ds_link_reloc_flags) \
		 -L$(osl_coin_library_dir) $^ $(ClpSolver_libs)

@


1.27
log
@Minor change.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.26 2003/07/16 19:18:15 rjw Exp $
d155 5
a159 1
   CoinLink_libs = -lOsiOsl -lOsiClp -lClp -lOsi -lCoin
d163 4
a166 1
   CoinLink_libs =
d172 9
a180 1
CoinLink: OsiSolver.o OslOsiSolver.o ClpSolver.o CoinLink.o 
d182 11
a192 1
		 -L$(osl_coin_library_dir) $^ $(CoinLink_libs)
@


1.26
log
@Improved the procedure for building WIT with COIN.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.25 2003/07/16 17:30:18 rjw Exp $
d68 5
d77 3
a79 3
CPPFLAGS	= -I$(src_dir). -I$(osl_include_dir) \
		  -I$(osl_include_dir)$(sep)coin \
		  -I$(osl_include_dir)$(sep)osl \
d89 1
a89 1
		  -L$(osl_library_dir)
d148 1
a148 1
		 -L$(osl_library_dir) $^ $(OslMgr_libs) 
d167 1
a167 1
		 -L$(osl_library_dir) $^ $(CoinLink_libs)
@


1.25
log
@Made changes to enable COIN to be linked to WIT on Linux.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.24 2003/07/15 22:09:53 rjw Exp $
a55 1

d146 11
a156 1
# Create the CoinLink library object to link in the COIN libraries.
d158 1
a158 1
CoinLink_libs = -lOsiOsl -lOsiClp -lClp -lOsi -lCoin
d160 2
a161 2
CoinLink: CoinLink.o 
	$(reloc_ld) -o CoinLink $(ds_link_reloc_flags) \
@


1.24
log
@Changed syntax of rule to build wit.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.23 2003/07/15 21:11:27 rjw Exp $
d149 1
a149 1
CoinLink_libs = -lClp -lCoin -lOsi -lOsiClp -lOsiOsl
d153 1
a153 1
		 -L$(osl_library_dir) $(CoinLink_libs) $^
@


1.23
log
@fixed a problem with the building of the CoinLink lib object.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.22 2003/07/15 20:47:43 rjw Exp $
d112 1
a112 1
	$(CXX) $(ds_link_flags) wit.o libwit.a -o wit 
d151 1
a151 1
CoinLink: CoinLink.o
@


1.22
log
@Moved the rule to build the WIT stand-alone executable to appl.mk.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.21 2003/07/15 20:07:23 rjw Exp $
d152 1
a152 1
	$(reloc_ld) $(ds_link_flags) -o CoinLink $(ds_link_reloc_flags) \
@


1.21
log
@Made libwit.a include witLexer.o and witParse.o directly, instead of through
   witLexer.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.20 2003/07/15 18:59:20 rjw Exp $
d108 3
a110 2
# Use the (default) implicit rule to make wit
#wit:	wit.o libwitnl.a
d112 1
@


1.20
log
@Made an explicit rule for building the WIT executable.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.19 2003/07/15 16:13:38 rjw Exp $
d123 1
@


1.19
log
@Added behavior to the makefiles that depends on the value of the use_coin
variable.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.18 2003/07/14 23:09:49 rjw Exp $
d61 1
a61 1
use_coin_val = 1
d65 1
a65 1
use_coin_val = 0
@


1.18
log
@Minor change.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.17 2003/07/14 21:08:50 rjw Exp $
d56 14
d79 1
a79 11


ifeq ($(use_coin),yes)

CXXFLAGS	= $(ds_comp_flags) -DUSE_COIN=1

else

CXXFLAGS	= $(ds_comp_flags) -DUSE_COIN=0

endif
d143 2
a144 1
# Link in COIN libraries
d147 1
d151 1
@


1.17
log
@Made the USE_COIN #define settable from the Makefile.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.16 2003/07/11 15:02:50 dpc Exp $
d139 2
a141 1
#oinLink_libs = -lClp -lCoin -lOsi -lOsiClp -lOsiOsl $(OslMgr_libs)
a144 6

# Compile RWClient and link with Rogue Wave library
#RWClient_libs = $(rw_lib)
#RWClient: RWClient.o
#	$(reloc_ld) -o RWClient $(ds_link_reloc_flags) \
#		-L$(rw_library_dir) $^ $(RWClient_libs)
@


1.16
log
@Removed reference to lex compatability flag, which is no longer used.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.15 2003/07/03 15:44:53 dpc Exp $
d65 13
a77 1
CXXFLAGS	= $(ds_comp_flags)
@


1.15
log
@Removed MsgMgr.c from sources.mk and moved it into the special pre-linked MsgFac.  This was done so that libwit.a could be properly built on Linux.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.14 2003/06/05 20:31:51 rjw Exp $
d83 1
a83 2
			  $(ds_math_lib) \
			  -L/usr/lib -ly -ll
d172 1
a172 1
	lex $(lex_comp_flag) ../src/witLexer.l
@


1.14
log
@Changed name of CoinSolver to CoinLink.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.13 2003/06/05 19:48:22 rjw Exp $
d78 1
a78 5
	LOADLIBES	= $(ds_osl_lib) \
			  $(ds_coin_libs) \
			  -lmcl \
			  $(ds_math_lib) \
			  -L/usr/lib -lfl
d125 2
a126 2
	$(reloc_ld) $(ds_link_flags) -o OslMgr $(ds_link_reloc_flags) \
		 -L$(osl_library_dir) $(OslMgr_libs) $^
d142 1
a142 1
MsgFac: MsgFac.o
@


1.13
log
@Continued implementation of opt with COIN.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.12 2003/06/03 20:58:18 fasano Exp $
d21 1
a21 1
	CoinSolver$(exe_ending) \
d39 1
a39 1
	CoinSolver.$(obj_suffix) \
d132 5
a136 5
CoinSolver_libs = -lClp -lCoin -lOsi -lOsiClp -lOsiOsl
#oinSolver_libs = -lClp -lCoin -lOsi -lOsiClp -lOsiOsl $(OslMgr_libs)
CoinSolver: CoinSolver.o
	$(reloc_ld) $(ds_link_flags) -o CoinSolver $(ds_link_reloc_flags) \
		 -L$(osl_library_dir) $(CoinSolver_libs) $^
@


1.12
log
@changes to build with COIN
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.11 2003/05/21 17:37:03 rjw Exp $
d132 2
a133 1
CoinSolver_libs = -lClp -lCoin -lOsi -lOsiClp -lOsiOsl $(OslMgr_libs)
@


1.11
log
@Continued implementation of opt with COIN.
Modified appl.mk to facilitate linking WIT to COIN.
@
text
@d1 1
a1 1
# Make file for compiling and linking WIT
d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.10 2003/05/21 17:13:51 dpc Exp $
d60 2
d132 1
a132 1
CoinSolver_libs = -lClp -lCoin -lOsi -lOsiClp -lOsiOsl
a133 1
#	$(reloc_ld) $(ds_link_flags) -o CoinSolver $(ds_link_reloc_flags) 
@


1.10
log
@Removed NO_AND_OR_NOT from the Linux stanza in defines.h
Added logic to test for either linux or zlinux platform in appl.mk
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.9 2003/05/20 16:02:39 fasano Exp $
d132 3
a134 3
	$(reloc_ld) $(ds_link_flags) -o CoinSolver $(ds_link_reloc_flags) 
#	$(reloc_ld) $(ds_link_flags) -o CoinSolver $(ds_link_reloc_flags) \
#	 -L$(osl_library_dir) $(CoinSolver_libs) $^
@


1.9
log
@changes to compile with coin
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.8 2003/04/30 18:05:21 fasano Exp $
d75 1
a75 1
ifeq ($(platform),linux)
@


1.8
log
@added stanza for linux
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.7 2003/04/28 19:58:27 fasano Exp $
d21 1
d39 1
d77 1
d83 1
d129 6
@


1.7
log
@put -ll and -ly back into link of wit
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.6 2003/04/28 18:44:07 fasano Exp $
d73 6
d83 1
@


1.6
log
@removed aix specfic linking option for lex and yacc
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.5 2003/04/28 18:35:04 fasano Exp $
d76 1
a76 1
			  -L/usr/lib 
@


1.5
log
@modifed to work on linux because linux did not handle .. in path name
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.4 2003/04/28 17:45:22 dpc Exp $
d76 1
a76 1
			  -L/usr/lib -ly -ll
@


1.4
log
@added use of lex_comp_flag
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.3 2002/12/20 15:04:28 fasano Exp $
d64 1
a64 1
		  -L$(WIT_ROOT_DIR)$(sep)..$(sep)mcl$(sep)$(platform) \
@


1.3
log
@removed references to rw when building
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/wit/src/appl.mk,v 1.2 2000/03/07 16:57:15 fasano Exp $
d143 1
d145 1
a145 1
	mv -f y.tab.c witParse.C
d158 1
a158 1
	lex ../src/witLexer.l
@


1.2
log
@Updating wit/src in /u/wit/devbase to be in synch with /u/implode/devbase
@
text
@d8 1
a8 1
# $Header: /u/implode/devbase/wit/src/appl.mk,v 3.140 1999/08/12 20:04:11 fasano Exp $
a20 1
	RWClient$(exe_ending) \
a35 1
	RWClient.$(obj_suffix) \
d57 1
a57 2
CPPFLAGS	= -I$(src_dir). -I$(osl_include_dir) -I$(rw_include_dir) \
		  -I$(wituse_includes_dir) \
a64 1
		  -L$(rw_library_dir) \
a68 1
	# Use -lrwtoolgs for now ... 
d71 1
a71 1
			  $(ds_math_lib) $(rw_lib) $(ds_fortran_lib)
a72 1
	# Explicitly use shared rw lib
d75 1
a75 1
			  $(ds_math_lib) $(rw_lib)s $(ds_fortran_lib) \
d120 4
a123 4
RWClient_libs = $(rw_lib)
RWClient: RWClient.o
	$(reloc_ld) -o RWClient $(ds_link_reloc_flags) \
		-L$(rw_library_dir) $^ $(RWClient_libs)
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import wit
@
text
@@


1.1.1.2
log
@Import
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/gars/src/appl.mk,v 1.1.1.1 2001/02/22 16:46:42 fasano Exp $
d10 3
d15 2
d18 28
a45 6
lib_objects = \
	witXML.$(obj_suffix) \
	witXMLErrorReporter.$(obj_suffix) \
	witXMLErrorHandler.$(obj_suffix) \
	witXMLApi.$(obj_suffix) \
	witXMLText.$(obj_suffix) 
d48 3
a50 5
	unitTest.$(obj_suffix) \
	$(lib_objects) 

# Get list of source files
sources = $(objects:.$(obj_suffix)=.$(cxx_suffix))
a52 6
headers =        \
	witXML.h   \
	witXMLErrorReporter.h   \
	witXMLErrorHandler.h   \
	witXMLApi.h   \
	witXMLText.h   
d56 6
a61 2
XERCESCROOT=/u/wit/power43/
XML_LIB=-lm $(XERCESCROOT)/lib/libxerces-c1_3.a
a62 2
CPPFLAGS	= -I$(src_dir). -I$(wituse_includes_dir) -I$(wit_api_includes_dir) -I$(rw_include_dir) -I../.. -I/u/wit/power43/include/xml -I/u/wit/liusz/wit/src
#CPPFLAGS	= -I$(src_dir). -I$(wituse_includes_dir) -I$(wit_api_includes_dir) -I$(rw_include_dir) -I../..   
d65 6
a70 20
LDFLAGS1 	= $(ds_link_flags) $(ld_path_flags) $(XML_LIB)
#reloc_ld=/usr/vacpp/bin/xlC
#ds_make_depend_flags        = -I/usr/vacpp/include

ifeq ($(platform),sun4)
LDFLAGS2 	= -L..$(sep)..$(sep)wit$(sep)$(platform) \
		  -L..$(sep)..$(sep)mcl$(sep)$(platform) \
		  -L$(rw_library_dir)
else
LDFLAGS2 	= -L..$(sep)..$(sep)wit$(sep)$(platform) \
		  -L$(rw_library_dir)  -qnotempinc -L$(XML_LIB)
endif

# last line above added by wally 5/23/96 because libwit.a currently needs
# RW code that isn't in libwit.a (especially on Sun's)
LDFLAGS 	= $(LDFLAGS1) $(LDFLAGS2) 
# LOADLIBES	= $(wit_api_lib) $(ds_math_lib)  \
# 		  $(ds_fortran_lib) \
# 		  $(lex_yacc_lib) \
# 		  $(rw_lib)
d74 3
a76 3
#	LOADLIBES	= -lwitnl \
	LOADLIBES	= -lwit \
			  $(rw_lib) 
d78 5
a82 2
LOADLIBES	= $(wit_api_lib)   \
		  $(rw_lib)
a84 2


d86 16
a101 2

unitTest:	unitTest.o libwitXML.a
d104 2
a105 1
libwitXML.a:	$(lib_objects)
d109 6
d116 55
@

