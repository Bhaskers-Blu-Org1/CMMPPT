head	1.19;
access;
symbols
	sce_5_01_20080919:1.13
	latest_sce_4_20_20060523:1.13.0.2
	sce_4_20_20060523:1.13
	latest_sce4_20_OSL:1.12.0.2
	sce_4_20_OSL:1.12
	sce_410_withVa:1.12
	sce_4_05_20040511:1.6
	sce_4_00_20040201:1.6
	nextGenBranch:1.6.0.2
	nextGenRoot:1.6
	sce_3_30_20030627:1.6;
locks; strict;
comment	@ * @;


1.19
date	2011.09.28.23.49.58;	author rjw;	state Exp;
branches;
next	1.18;

1.18
date	2011.09.24.00.28.21;	author rjw;	state Exp;
branches;
next	1.17;

1.17
date	2011.08.30.20.17.59;	author rjw;	state Exp;
branches;
next	1.16;

1.16
date	2010.07.26.17.48.44;	author rjw;	state Exp;
branches;
next	1.15;

1.15
date	2010.07.16.22.26.41;	author rjw;	state Exp;
branches;
next	1.14;

1.14
date	2010.06.18.23.11.15;	author rjw;	state Exp;
branches;
next	1.13;

1.13
date	2006.05.02.17.34.09;	author rjw;	state Exp;
branches;
next	1.12;

1.12
date	2005.03.02.22.56.28;	author rjw;	state Exp;
branches;
next	1.11;

1.11
date	2005.01.18.20.03.29;	author rjw;	state Exp;
branches;
next	1.10;

1.10
date	2004.12.28.19.21.19;	author rjw;	state Exp;
branches;
next	1.9;

1.9
date	2004.12.24.00.02.27;	author rjw;	state Exp;
branches;
next	1.8;

1.8
date	2004.12.10.16.49.44;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2004.12.06.22.38.16;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2003.04.01.20.34.29;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2003.03.21.23.36.54;	author rjw;	state dead;
branches;
next	1.4;

1.4
date	2003.03.19.16.48.24;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2003.03.03.21.07.32;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2003.03.01.01.17.32;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2003.02.28.20.47.38;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.19
log
@Revised the source code proprietary statement.
@
text
@//==============================================================================
// IBM Confidential
//
// OCO Source Materials
//
// Watson Implosion Technology
//
// (C) Copyright IBM Corp. 1993, 2011  All Rights Reserved
//
// The Source code for this program is not published or otherwise divested of
// its trade secrets, irrespective of what has been deposited with the U. S.
// Copyright office.
//==============================================================================

#ifndef PrSelMgrH
#define PrSelMgrH

//------------------------------------------------------------------------------
// Header file: "PrSelMgr.h"
//
// Contains the declaration of the following classes:
//
//    PrSelMgr.
//    PpoSelMgr.
//    CpoSelMgr.
//------------------------------------------------------------------------------

#include <SelMgr.h>

//------------------------------------------------------------------------------
// Class PrSelMgr
//
// "Proportionate Routing Selection Manager"
// Selection Manager for one of the two cases of proportionate routing.
//
// Class Hierarchy:
//
// ProbAssoc
//    SelMgr
//       PrSelMgr
//          PprSelMgr
//          CprSelMgr
//
// Implemented in PropRtg.C.
//------------------------------------------------------------------------------

class WitPrSelMgr: public WitSelMgr
   {
   public:

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      virtual ~WitPrSelMgr ();

   protected:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitPrSelMgr (WitPrCoord *);

      //------------------------------------------------------------------------
      // Data access functions.
      //------------------------------------------------------------------------

      accessFunc (WitPrCoord *, myPrCoord)

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      virtual bool selSplitNeeded ();
         //
         // Override from class SelMgr.

      noCopyCtorAssign (WitPrSelMgr);

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      WitPrCoord * const myPrCoord_;
         //
         // The PrCoord that owns this PrSelMgr.
   };

//------------------------------------------------------------------------------
// Class PprSelMgr
//
// "Production Proportionate Routing Selection Manager"
// Selection Manager for the production case of proportionate routing.
//
// Class Hierarchy:
//
// ProbAssoc
//    SelMgr
//       PrSelMgr
//          PprSelMgr
//
// Implemented in PropRtg.C.
//------------------------------------------------------------------------------

class WitPprSelMgr: public WitPrSelMgr
   {
   public:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitPprSelMgr (WitPrCoord *);

   private:

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      virtual ~WitPprSelMgr ();

      //------------------------------------------------------------------------
      // Other private member functions.
      //------------------------------------------------------------------------

      virtual WitAltPt *   myAltPtFor         (WitBopEntry *,
                                               WitConsEntry *,
                                               WitPeriod,
                                               WitPeriod);
      virtual bool         validForNetting    ();
      virtual bool         validForExecBounds ();
      virtual bool         validForLTBounds   ();
      virtual const char * selCaseName        ();
         //
         // Overrides from class SelMgr.
   };

//------------------------------------------------------------------------------
// Class CprSelMgr
//
// "Consumption Proportionate Routing Selection Manager"
// Selection Manager for the consumption case of proportionate routing.
//
// Class Hierarchy:
//
// ProbAssoc
//    SelMgr
//       PrSelMgr
//          CprSelMgr
//
// Implemented in PropRtg.C.
//------------------------------------------------------------------------------

class WitCprSelMgr: public WitPrSelMgr
   {
   public:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitCprSelMgr (WitPrCoord *);

   private:

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      virtual ~WitCprSelMgr ();

      //------------------------------------------------------------------------
      // Other private member functions.
      //------------------------------------------------------------------------

      virtual WitAltPt *   myAltPtFor         (WitBopEntry *,
                                               WitConsEntry *,
                                               WitPeriod,
                                               WitPeriod);
      virtual bool         validForNetting    ();
      virtual bool         validForExecBounds ();
      virtual bool         validForLTBounds   ();
      virtual const char * selCaseName        ();
         //
         // Overrides from class SelMgr.
   };

#endif
@


1.18
log
@Reverted to the version of 8-30-2011, which has the following differences:
   Release 7.0
   Old copyright dates (2006)
   The leading blanks in each line, which were lost with the 2011 copyright
      update, are restored.
Restored release # as 8.0.
@
text
@d1 8
a8 1
//------------------------------------------------------------------------------
d10 4
a13 6
//     (c) Copyright IBM Corp. 2006.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
// 
//------------------------------------------------------------------------------
@


1.17
log
@Revised the copyright date.
@
text
@d3 1
a3 1
//     (c) Copyright IBM Corp. 2011.
d6 2
a7 2
//     IBM Confidential
//
d43 2
a44 2
{
public:
d46 3
a48 3
//------------------------------------------------------------------------
// Destructor function.
//------------------------------------------------------------------------
d50 1
a50 1
virtual ~WitPrSelMgr ();
d52 1
a52 1
protected:
d54 3
a56 3
//------------------------------------------------------------------------
// Constructor functions.
//------------------------------------------------------------------------
d58 1
a58 1
WitPrSelMgr (WitPrCoord *);
d60 3
a62 3
//------------------------------------------------------------------------
// Data access functions.
//------------------------------------------------------------------------
d64 1
a64 1
accessFunc (WitPrCoord *, myPrCoord)
d66 1
a66 1
private:
d68 3
a70 3
//------------------------------------------------------------------------
// Private member functions.
//------------------------------------------------------------------------
d72 3
a74 3
virtual bool selSplitNeeded ();
//
// Override from class SelMgr.
d76 1
a76 1
noCopyCtorAssign (WitPrSelMgr);
d78 3
a80 3
//------------------------------------------------------------------------
// Private member data.
//------------------------------------------------------------------------
d82 4
a85 4
WitPrCoord * const myPrCoord_;
//
// The PrCoord that owns this PrSelMgr.
};
d104 2
a105 2
{
public:
d107 29
a135 29
//------------------------------------------------------------------------
// Constructor functions.
//------------------------------------------------------------------------

WitPprSelMgr (WitPrCoord *);

private:

//------------------------------------------------------------------------
// Destructor function.
//------------------------------------------------------------------------

virtual ~WitPprSelMgr ();

//------------------------------------------------------------------------
// Other private member functions.
//------------------------------------------------------------------------

virtual WitAltPt *   myAltPtFor         (WitBopEntry *,
WitConsEntry *,
WitPeriod,
WitPeriod);
virtual bool         validForNetting    ();
virtual bool         validForExecBounds ();
virtual bool         validForLTBounds   ();
virtual const char * selCaseName        ();
//
// Overrides from class SelMgr.
};
d154 2
a155 2
{
public:
d157 29
a185 29
//------------------------------------------------------------------------
// Constructor functions.
//------------------------------------------------------------------------

WitCprSelMgr (WitPrCoord *);

private:

//------------------------------------------------------------------------
// Destructor function.
//------------------------------------------------------------------------

virtual ~WitCprSelMgr ();

//------------------------------------------------------------------------
// Other private member functions.
//------------------------------------------------------------------------

virtual WitAltPt *   myAltPtFor         (WitBopEntry *,
WitConsEntry *,
WitPeriod,
WitPeriod);
virtual bool         validForNetting    ();
virtual bool         validForExecBounds ();
virtual bool         validForLTBounds   ();
virtual const char * selCaseName        ();
//
// Overrides from class SelMgr.
};
@


1.16
log
@Selection Recovery.
@
text
@d3 1
a3 1
//     (c) Copyright IBM Corp. 2006.
d6 2
a7 2
//     IBM Confidential 
// 
d43 2
a44 2
   {
   public:
d46 3
a48 3
      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------
d50 1
a50 1
      virtual ~WitPrSelMgr ();
d52 1
a52 1
   protected:
d54 3
a56 3
      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------
d58 1
a58 1
      WitPrSelMgr (WitPrCoord *);
d60 3
a62 3
      //------------------------------------------------------------------------
      // Data access functions.
      //------------------------------------------------------------------------
d64 1
a64 1
      accessFunc (WitPrCoord *, myPrCoord)
d66 1
a66 1
   private:
d68 3
a70 3
      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------
d72 3
a74 3
      virtual bool selSplitNeeded ();
         //
         // Override from class SelMgr.
d76 1
a76 1
      noCopyCtorAssign (WitPrSelMgr);
d78 3
a80 3
      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------
d82 4
a85 4
      WitPrCoord * const myPrCoord_;
         //
         // The PrCoord that owns this PrSelMgr.
   };
d104 2
a105 2
   {
   public:
d107 29
a135 29
      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitPprSelMgr (WitPrCoord *);

   private:

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      virtual ~WitPprSelMgr ();

      //------------------------------------------------------------------------
      // Other private member functions.
      //------------------------------------------------------------------------

      virtual WitAltPt *   myAltPtFor         (WitBopEntry *,
                                               WitConsEntry *,
                                               WitPeriod,
                                               WitPeriod);
      virtual bool         validForNetting    ();
      virtual bool         validForExecBounds ();
      virtual bool         validForLTBounds   ();
      virtual const char * selCaseName        ();
         //
         // Overrides from class SelMgr.
   };
d154 2
a155 2
   {
   public:
d157 29
a185 29
      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitCprSelMgr (WitPrCoord *);

   private:

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      virtual ~WitCprSelMgr ();

      //------------------------------------------------------------------------
      // Other private member functions.
      //------------------------------------------------------------------------

      virtual WitAltPt *   myAltPtFor         (WitBopEntry *,
                                               WitConsEntry *,
                                               WitPeriod,
                                               WitPeriod);
      virtual bool         validForNetting    ();
      virtual bool         validForExecBounds ();
      virtual bool         validForLTBounds   ();
      virtual const char * selCaseName        ();
         //
         // Overrides from class SelMgr.
   };
@


1.15
log
@Selection Recovery
@
text
@a134 5

      virtual void recoverSelections ();
         //
         // Override from class SelMgr.
         // Applies to both production and consumption prop-rtg.
a184 6

      virtual void recoverSelections ();
         //
         // Override from class SelMgr.
         // This is a no-op.
         // The PprSelMgr implementation covers both cases.
@


1.14
log
@Lead Time Bounds
@
text
@d135 5
d190 6
@


1.13
log
@Updated the copyright date on all source files.
@
text
@d131 1
d181 1
@


1.12
log
@Vector PropRtg.
@
text
@d3 1
a3 1
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
@


1.11
log
@Low-Pri Prop-Rt.
@
text
@d39 1
a39 1
// Implemented in PropRt.C.
d100 1
a100 1
// Implemented in PropRt.C.
d149 1
a149 1
// Implemented in PropRt.C.
@


1.10
log
@Low-Pri Prop-Rt.
@
text
@d29 1
a29 2
// Selection Manager for one of the two cases of Proportionate Routing.
// New Version
d91 1
a91 2
// Selection Manager for the production case of Proportionate Routing.
// New Version
d140 1
a140 2
// Selection Manager for the consumption case of Proportionate Routing.
// New Version
@


1.9
log
@Low-Pri Prop-Rt.
@
text
@d127 1
a127 1
      virtual WitSelAlt *  mySelAltFor        (WitBopEntry *,
d177 1
a177 1
      virtual WitSelAlt *  mySelAltFor        (WitBopEntry *,
@


1.8
log
@Low-Pri Prop-Rt.
@
text
@d15 6
d23 165
@


1.7
log
@Low-Pri Prop-Rt.
@
text
@d10 2
a11 2
#ifndef SkeletonH
#define SkeletonH
d14 1
a14 1
// Header file: "Skeleton.h"
@


1.6
log
@Continued implementation of proportionate routing.
@
text
@d10 2
a11 2
#ifndef PrSelMgrH
#define PrSelMgrH
d14 1
a14 7
// Header file: "PrSelMgr.h"
//
// Contains the declaration of the following classes:
//
//    PrSelMgr.
//    PprSelMgr.
//    CprSelMgr.
a16 162
#include <SelMgr.h>

//------------------------------------------------------------------------------
// Class PrSelMgr
//
// "Proportionate Routing Selection Manager"
// Selection Manager for one of the two cases of Proportionate Routing.
//
// Class Hierarchy:
//
// ProbAssoc
//    SelMgr
//       PrSelMgr
//          PprSelMgr
//          CprSelMgr
//
// Implemented in PropRt.C.
//------------------------------------------------------------------------------

class WitPrSelMgr: public WitSelMgr
   {
   public:

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      virtual ~WitPrSelMgr ();

   protected:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitPrSelMgr (WitPrCoord *);

      //------------------------------------------------------------------------
      // Data access functions.
      //------------------------------------------------------------------------

      accessFunc (WitPrCoord *, myPrCoord)

   private:

      //------------------------------------------------------------------------
      // Selection Splitting functions.
      //------------------------------------------------------------------------

      virtual bool selSplitNeeded ();
         //
         // Override from class SelMgr.

      //------------------------------------------------------------------------
      // Other private member functions.
      //------------------------------------------------------------------------

      noCopyCtorAssign (WitPrSelMgr);

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      WitPrCoord * const myPrCoord_;
         //
         // The PrCoord that owns this PrSelMgr.
   };

//------------------------------------------------------------------------------
// Class PprSelMgr
//
// "Production Proportionate Routing Selection Manager"
// Selection Manager for the production case of Proportionate Routing.
//
// Class Hierarchy:
//
// ProbAssoc
//    SelMgr
//       PrSelMgr
//          PprSelMgr
//
// Implemented in PropRt.C.
//------------------------------------------------------------------------------

class WitPprSelMgr: public WitPrSelMgr
   {
   public:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitPprSelMgr (WitPrCoord *);

   private:

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      virtual ~WitPprSelMgr ();

      //------------------------------------------------------------------------
      // Overrides from class SelMgr.
      //------------------------------------------------------------------------

      virtual WitSelPt *   mySelPtForAlt      (WitBopEntry *,
                                               WitConsEntry *,
                                               WitPeriod,
                                               WitPeriod);
      virtual bool         validForNetting    ();
      virtual bool         validForExecBounds ();
      virtual const char * selCaseName        ();
   };

//------------------------------------------------------------------------------
// Class CprSelMgr
//
// "Consumption Proportionate Routing Selection Manager"
// Selection Manager for the consumption case of Proportionate Routing.
//
// Class Hierarchy:
//
// ProbAssoc
//    SelMgr
//       PrSelMgr
//          CprSelMgr
//
// Implemented in PropRt.C.
//------------------------------------------------------------------------------

class WitCprSelMgr: public WitPrSelMgr
   {
   public:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitCprSelMgr (WitPrCoord *);

   private:

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      virtual ~WitCprSelMgr ();

      //------------------------------------------------------------------------
      // Overrides from class SelMgr.
      //------------------------------------------------------------------------

      virtual WitSelPt *   mySelPtForAlt      (WitBopEntry *,
                                               WitConsEntry *,
                                               WitPeriod,
                                               WitPeriod);
      virtual bool         validForNetting    ();
      virtual bool         validForExecBounds ();
      virtual const char * selCaseName        ();
   };

@


1.5
log
@Continued implementation of propotionate routing.
@
text
@d29 1
a29 1
// Selection Manager for a section of the Proportionate Routing Subsystem.
d44 1
a44 1
   protected:
d47 1
a47 1
      // Constructor functions.
d50 3
a52 1
      WitPrSelMgr (WitPrCoord *);
d55 1
a55 1
      // Destructor function.
d58 1
a58 1
      virtual ~WitPrSelMgr ();
d95 1
a95 2
// Selection Manager for ther production section of the Proportionate Routing
// Subsystem.
d117 2
a125 21
      // Other public member functions.
      //------------------------------------------------------------------------

      bool propRouting (WitPart * thePart, WitPeriod expPer);
         //
         // Returns true, iff proportionate routing is to be used at thePart
         // in expPer.

      bool active (WitBopEntry * theBopEnt, WitPeriod expPer);
         //
         // Returns true, iff theBopEnt is currently active for proportionate
         // explosions in expPer.

      double normExpShare (WitBopEntry * theBopEnt, WitPeriod expPer);
         //
         // Returns the normalized explosion share for theBopEnt in expPer.
         // Valid only if active (theBopEnt, expPer) is true.

   private:

      //------------------------------------------------------------------------
d142 1
a142 2
// Selection Manager for ther consumption section of the Proportionate Routing
// Subsystem.
d164 2
a170 21

      //------------------------------------------------------------------------
      // Other public member functions.
      //------------------------------------------------------------------------

      bool propRouting (WitBomEntry * theBomEnt, WitPeriod execPer);
         //
         // Returns true, iff proportionate routing is to be used at theBomEnt
         // in execPer.

      bool active (WitConsEntry * theConsEnt, WitPeriod execPer);
         //
         // Returns true, iff theConsEnt is currently active for proportionate
         // explosions in execPer.

      double normExpShare (WitConsEntry * theConsEnt, WitPeriod execPer);
         //
         // Returns the normalized explosion share for theConsEnt in execPer.
         // Valid only if active (theConsEnt, execPer) is true.

   private:
@


1.4
log
@Continued implementation of proportionate routing.
@
text
@@


1.3
log
@Continued implementation of proportionate routing.
@
text
@d16 5
a20 1
// Contains the declaration of class PrSelMgr.
d36 2
d39 1
a39 1
// Implemented in Routing.C.
d44 1
a44 1
   public:
d50 13
a62 1
      WitPrSelMgr (bool prodCaseVal, WitSelector *, WitPrCoord *);
d67 50
d120 22
a141 1
      virtual ~WitPrSelMgr ();
d154 22
d178 1
a178 1
      // Selection Splitting functions.
d181 1
a181 3
      virtual bool selSplitNeeded ();
         //
         // Override from class SelMgr.
d184 1
a184 1
      // Other private member functions.
d187 1
a187 1
      noCopyCtorAssign (WitPrSelMgr);
d190 1
a190 1
      // Private member data.
d193 6
a198 1
      const bool prodCase_;
d200 2
a201 4
         // If true,  this PrSelMgr is for the production  case of proportionate
         //           routing.
         // If false, this PrSelMgr is for the consumption case of proportionate
         //           routing.
d203 1
a203 1
      WitPrCoord * const myPrCoord_;
d205 16
a220 1
         // The PrCoord that owns this PrSelMgr.
@


1.2
log
@Continued implementation of proportionate routing.
@
text
@d16 1
a16 4
// Contains the declaration of the following classes:
//
//    ProdPrSelMgr.
//    ConsPrSelMgr.
d22 1
a22 1
// Class ProdPrSelMgr
d24 2
a25 3
// "Production Proportionate Routing Selection Manager"
// Selection Manager for the production section of the Proportionate Routing
// Subsystem.
d31 1
a31 1
//       ProdPrSelMgr
d36 1
a36 1
class WitProdPrSelMgr: public WitSelMgr
d44 1
a44 1
      WitProdPrSelMgr (WitSelector *, WitPrCoord *);
d52 1
a52 1
      virtual ~WitProdPrSelMgr ();
d78 1
a78 1
      noCopyCtorAssign (WitProdPrSelMgr);
d84 1
a84 1
      WitPrCoord * const myPrCoord_;
d86 4
a89 66
         // The PrCoord that owns this ProdPrSelMgr.
   };

//------------------------------------------------------------------------------
// Class ConsPrSelMgr
//
// "Consumption Proportionate Routing Selection Manager"
// Selection Manager for the consumption section of the Proportionate Routing
// Subsystem.
//
// Class Hierarchy:
//
// ProbAssoc
//    SelMgr
//       ConsPrSelMgr
//
// Implemented in Routing.C.
//------------------------------------------------------------------------------

class WitConsPrSelMgr: public WitSelMgr
   {
   public:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitConsPrSelMgr (WitSelector *, WitPrCoord *);

   private:

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      virtual ~WitConsPrSelMgr ();

      //------------------------------------------------------------------------
      // Overrides from class SelMgr.
      //------------------------------------------------------------------------

      virtual WitSelPt *   mySelPtForAlt      (WitBopEntry *,
                                               WitConsEntry *,
                                               WitPeriod,
                                               WitPeriod);
      virtual bool         validForNetting    ();
      virtual bool         validForExecBounds ();
      virtual const char * selCaseName        ();

      //------------------------------------------------------------------------
      // Selection Splitting functions.
      //------------------------------------------------------------------------

      virtual bool selSplitNeeded ();
         //
         // Override from class SelMgr.

      //------------------------------------------------------------------------
      // Other private member functions.
      //------------------------------------------------------------------------

      noCopyCtorAssign (WitConsPrSelMgr);

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------
d93 1
a93 1
         // The PrCoord that owns this ConsPrSelMgr.
@


1.1
log
@Continued implementation of proportionate routing.
@
text
@d48 1
a48 1
      WitProdPrSelMgr (WitSelector *, WitPrMgr *);
d88 1
a88 1
      WitPrMgr * const myPrMgr_;
d90 1
a90 1
         // The PrMgr that owns this ProdPrSelMgr.
d117 1
a117 1
      WitConsPrSelMgr (WitSelector *, WitPrMgr *);
d157 1
a157 1
      WitPrMgr * const myPrMgr_;
d159 1
a159 1
         // The PrMgr that owns this ProdPrSelMgr.
@

