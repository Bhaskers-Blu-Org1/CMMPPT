head	1.5;
access;
symbols
	sce_5_01_20080919:1.2
	latest_sce_4_20_20060523:1.2.0.2
	sce_4_20_20060523:1.2
	latest_sce4_20_OSL:1.1.0.2
	sce_4_20_OSL:1.1;
locks; strict;
comment	@ * @;


1.5
date	2011.09.28.23.49.28;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2011.09.24.00.27.47;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2011.08.30.20.17.35;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2006.05.02.17.34.01;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2005.09.15.19.47.10;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Revised the source code proprietary statement.
@
text
@//==============================================================================
// IBM Confidential
//
// OCO Source Materials
//
// Watson Implosion Technology
//
// (C) Copyright IBM Corp. 1993, 2011  All Rights Reserved
//
// The Source code for this program is not published or otherwise divested of
// its trade secrets, irrespective of what has been deposited with the U. S.
// Copyright office.
//==============================================================================

#ifndef IssueMsgExcH
#define IssueMsgExcH

//------------------------------------------------------------------------------
// Header file: "IssueMsgExc.h"
//
// Contains the declaration of class IssueMsgExc.
//------------------------------------------------------------------------------

#include <MsgArg.h>

//------------------------------------------------------------------------------
// Class IssueMsgExc
//
// "Issue Message Exception"
// An exception of this type is thrown, when the code needs to issue a message,
// but cannot locally determine a MsgFacility to use. The exception is caught by
// the API, which issues the message. An IssueMsgExc stores a MsgID and three
// MsgArgs that are to be used to issue the message.
//
// Implemented in MsgFac.C.
//------------------------------------------------------------------------------

class WitIssueMsgExc
   {
   public:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitIssueMsgExc (
            WitMsgID          theMsgID,
            const WitMsgArg & theMsgArg1,
            const WitMsgArg & theMsgArg2,
            const WitMsgArg & theMsgArg3);

      WitIssueMsgExc (const WitIssueMsgExc &);

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      ~WitIssueMsgExc ();

      //------------------------------------------------------------------------
      // Data access functions.
      //------------------------------------------------------------------------

      accessFunc (WitMsgID,          myMsgID)
      accessFunc (const WitMsgArg &, myMsgArg1)
      accessFunc (const WitMsgArg &, myMsgArg2)
      accessFunc (const WitMsgArg &, myMsgArg3)

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      WitMsgArg & operator = (const WitMsgArg &);
         //
         // Not implemented.

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      WitMsgID myMsgID_;
         //
         // The MsgID of the Msg to be issued.

      WitMsgArg myMsgArg1_;
      WitMsgArg myMsgArg2_;
      WitMsgArg myMsgArg3_;
         //
         // The MsgArgs to be used in issuing the Msg.
   };

#endif
@


1.4
log
@Reverted to the version of 8-30-2011, which has the following differences:
   Release 7.0
   Old copyright dates (2006)
   The leading blanks in each line, which were lost with the 2011 copyright
      update, are restored.
Restored release # as 8.0.
@
text
@d1 8
a8 1
//------------------------------------------------------------------------------
d10 4
a13 6
//     (c) Copyright IBM Corp. 2006.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
// 
//------------------------------------------------------------------------------
@


1.3
log
@Revised the copyright date.
@
text
@d3 1
a3 1
//     (c) Copyright IBM Corp. 2011.
d6 2
a7 2
//     IBM Confidential
//
d34 2
a35 29
{
public:

//------------------------------------------------------------------------
// Constructor functions.
//------------------------------------------------------------------------

WitIssueMsgExc (
WitMsgID          theMsgID,
const WitMsgArg & theMsgArg1,
const WitMsgArg & theMsgArg2,
const WitMsgArg & theMsgArg3);

WitIssueMsgExc (const WitIssueMsgExc &);

//------------------------------------------------------------------------
// Destructor function.
//------------------------------------------------------------------------

~WitIssueMsgExc ();

//------------------------------------------------------------------------
// Data access functions.
//------------------------------------------------------------------------

accessFunc (WitMsgID,          myMsgID)
accessFunc (const WitMsgArg &, myMsgArg1)
accessFunc (const WitMsgArg &, myMsgArg2)
accessFunc (const WitMsgArg &, myMsgArg3)
d37 51
a87 24
private:

//------------------------------------------------------------------------
// Private member functions.
//------------------------------------------------------------------------

WitMsgArg & operator = (const WitMsgArg &);
//
// Not implemented.

//------------------------------------------------------------------------
// Private member data.
//------------------------------------------------------------------------

WitMsgID myMsgID_;
//
// The MsgID of the Msg to be issued.

WitMsgArg myMsgArg1_;
WitMsgArg myMsgArg2_;
WitMsgArg myMsgArg3_;
//
// The MsgArgs to be used in issuing the Msg.
};
@


1.2
log
@Updated the copyright date on all source files.
@
text
@d3 1
a3 1
//     (c) Copyright IBM Corp. 2006.
d6 2
a7 2
//     IBM Confidential 
// 
d34 29
a62 2
   {
   public:
d64 24
a87 51
      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitIssueMsgExc (
            WitMsgID          theMsgID,
            const WitMsgArg & theMsgArg1,
            const WitMsgArg & theMsgArg2,
            const WitMsgArg & theMsgArg3);

      WitIssueMsgExc (const WitIssueMsgExc &);

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      ~WitIssueMsgExc ();

      //------------------------------------------------------------------------
      // Data access functions.
      //------------------------------------------------------------------------

      accessFunc (WitMsgID,          myMsgID)
      accessFunc (const WitMsgArg &, myMsgArg1)
      accessFunc (const WitMsgArg &, myMsgArg2)
      accessFunc (const WitMsgArg &, myMsgArg3)

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      WitMsgArg & operator = (const WitMsgArg &);
         //
         // Not implemented.

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      WitMsgID myMsgID_;
         //
         // The MsgID of the Msg to be issued.

      WitMsgArg myMsgArg1_;
      WitMsgArg myMsgArg2_;
      WitMsgArg myMsgArg3_;
         //
         // The MsgArgs to be used in issuing the Msg.
   };
@


1.1
log
@[multi-thread]
@
text
@d3 1
a3 1
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
@

