head	1.6;
access;
symbols
	sce_5_01_20080919:1.3
	latest_sce_4_20_20060523:1.1.0.4
	sce_4_20_20060523:1.1
	latest_sce4_20_OSL:1.1.0.2
	sce_4_20_OSL:1.1;
locks; strict;
comment	@ * @;


1.6
date	2011.09.28.23.50.51;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2011.09.24.00.29.06;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2011.08.30.20.18.30;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2008.03.21.14.56.33;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2006.06.08.14.28.26;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2005.11.21.22.05.39;	author dpc;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Revised the source code proprietary statement.
@
text
@/* A Bison parser, made by GNU Bison 2.3.  */

/* Skeleton interface for Bison's Yacc-like parsers in C

   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
   Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street, Fifth Floor,
   Boston, MA 02110-1301, USA.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     RELEASE = 258,
     ADD = 259,
     SET = 260,
     READ = 261,
     PROBLEM = 262,
     PART = 263,
     OPERATION = 264,
     BOM_ENTRY = 265,
     SUB_ENTRY = 266,
     BOP_ENTRY = 267,
     DEMAND = 268,
     PART_WITH_OPERATION = 269,
     SINGLE = 270,
     SPARSE = 271,
     DENSE = 272,
     END_BOUNDS = 273,
     HARDLB = 274,
     SOFTLB = 275,
     HARDUB = 276,
     CAPACITY = 277,
     MATERIAL = 278,
     IDENTIFIER = 279,
     STRING = 280,
     DOUBLE = 281,
     INTEGER = 282,
     BOOLEAN = 283,
     CATEGORY = 284,
     EXEC_BOUNDS = 285,
     STOCK_BOUNDS = 286,
     CUM_SHIP_BOUNDS = 287
   };
#endif
/* Tokens.  */
#define RELEASE 258
#define ADD 259
#define SET 260
#define READ 261
#define PROBLEM 262
#define PART 263
#define OPERATION 264
#define BOM_ENTRY 265
#define SUB_ENTRY 266
#define BOP_ENTRY 267
#define DEMAND 268
#define PART_WITH_OPERATION 269
#define SINGLE 270
#define SPARSE 271
#define DENSE 272
#define END_BOUNDS 273
#define HARDLB 274
#define SOFTLB 275
#define HARDUB 276
#define CAPACITY 277
#define MATERIAL 278
#define IDENTIFIER 279
#define STRING 280
#define DOUBLE 281
#define INTEGER 282
#define BOOLEAN 283
#define CATEGORY 284
#define EXEC_BOUNDS 285
#define STOCK_BOUNDS 286
#define CUM_SHIP_BOUNDS 287




#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE
#line 99 "../src/witParse.y"
{
    int    intval;
    double doubleval;
    char * strval;
    bool   boolval;
    int    cval;
    int    pval;
    int    btype;
}
/* Line 1489 of yacc.c.  */
#line 123 "witParse.tab.h"
	YYSTYPE;
# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
# define YYSTYPE_IS_TRIVIAL 1
#endif

extern YYSTYPE yylval;

@


1.5
log
@Reverted to the version of 8-30-2011, which has the following differences:
   Release 7.0
   Old copyright dates (2006)
   The leading blanks in each line, which were lost with the 2011 copyright
      update, are restored.
Restored release # as 8.0.
@
text
@d111 1
a111 1
#line 94 "../src/witParse.y"
@


1.4
log
@Revised the copyright date.
@
text
@d113 7
a119 7
int    intval;
double doubleval;
char * strval;
bool   boolval;
int    cval;
int    pval;
int    btype;
@


1.3
log
@Source files generated by a new version of Flex and Bison.
@
text
@d113 7
a119 7
    int    intval;
    double doubleval;
    char * strval;
    bool   boolval;
    int    cval;
    int    pval;
    int    btype;
@


1.2
log
@Switched from using yacc to bison.
@
text
@d1 1
a1 1
/* A Bison parser, made by GNU Bison 1.875c.  */
d3 4
a6 2
/* Skeleton parser for Yacc-like parsing with Bison,
   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003 Free Software Foundation, Inc.
d20 12
a31 2
   Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.  */
d33 2
a34 4
/* As a special exception, when this file is copied by Bison into a
   Bison output file, you may use that output file without restriction.
   This special exception was added by the Free Software Foundation
   in version 1.24 of Bison.  */
d74 1
d109 2
a110 1
#if ! defined (YYSTYPE) && ! defined (YYSTYPE_IS_DECLARED)
d112 1
a112 1
typedef union YYSTYPE {
d120 4
a123 3
} YYSTYPE;
/* Line 1268 of yacc.c.  */
#line 111 "witParse.tab.h"
a130 2


@


1.1
log
@Adding witLexer.C, witParse.C and ytab.h to the src code.  Also modified
witLexer.l and witParse.y to remove gnu and win32 dependencies.
@
text
@d1 62
a62 2
#ifndef YYERRCODE
#define YYERRCODE 256
d64 31
d96 5
a100 31
#define RELEASE 257
#define ADD 258
#define SET 259
#define READ 260
#define PROBLEM 261
#define PART 262
#define OPERATION 263
#define BOM_ENTRY 264
#define SUB_ENTRY 265
#define BOP_ENTRY 266
#define DEMAND 267
#define PART_WITH_OPERATION 268
#define SINGLE 269
#define SPARSE 270
#define DENSE 271
#define END_BOUNDS 272
#define HARDLB 273
#define SOFTLB 274
#define HARDUB 275
#define CAPACITY 276
#define MATERIAL 277
#define IDENTIFIER 278
#define STRING 279
#define DOUBLE 280
#define INTEGER 281
#define BOOLEAN 282
#define CATEGORY 283
#define EXEC_BOUNDS 284
#define STOCK_BOUNDS 285
#define CUM_SHIP_BOUNDS 286
typedef union {
d109 7
d117 3
@

