head	1.2;
access;
symbols;
locks; strict;
comment	@ * @;


1.2
date	2004.12.28.19.21.19;	author rjw;	state dead;
branches;
next	1.1;

1.1
date	2004.12.27.22.33.16;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Low-Pri Prop-Rt.
@
text
@//------------------------------------------------------------------------------
//
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
// 
//------------------------------------------------------------------------------

#ifndef PrAltH
#define PrAltH

//------------------------------------------------------------------------------
// Header file: "PrAlt.h"
//
// Contains the declaration of class PrAlt.
//------------------------------------------------------------------------------

#include <SelAlt.h>

//------------------------------------------------------------------------------
// Class PrAlt
//
// "Proportionate Routing Alteration"
// A PrAlt is a SelAlt that represents an alteration of the selection
// configuration for Proportionate Routing.
// Specifically, a PrAlt represents the deactivation of a particular RtCand in a
// particular period for Proportionate Routing purposes.
//
// Class Hierarchy:
//
// SelAlt
//    PrAlt
//
// Implemented in PropRt.C.
//------------------------------------------------------------------------------

class WitPrAlt: public WitSelAlt
   {
   public:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitPrAlt (WitPrPt * thePrPt);

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      virtual ~WitPrAlt ();

   private:

      //------------------------------------------------------------------------
      // Other private member functions.
      //------------------------------------------------------------------------

      virtual void       alterSelection ();
      virtual void       tempAlterSel   ();
      virtual WitSelPt * mySelPt        ();
         //
         // Overrides from class SelAlt.

      noCopyCtorAssign (WitPrAlt);

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      WitPrPt * const myPrPt_;
         //
         // The PrPt for this PrAlt.
   };

#endif
@


1.1
log
@Low-Pri Prop-Rt.
@
text
@@

