head	1.3;
access;
symbols;
locks; strict;
comment	@ * @;


1.3
date	2010.07.30.20.20.12;	author rjw;	state dead;
branches;
next	1.2;

1.2
date	2010.07.29.21.03.11;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2010.07.27.20.57.56;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Selection Recovery
@
text
@//------------------------------------------------------------------------------
//
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
// 
//------------------------------------------------------------------------------

#ifndef AltSetH
#define AltSetH

//------------------------------------------------------------------------------
// Header file: "AltSet.h"
//
// Contains the declaration of class template AltSet <Owner, Site>.
//------------------------------------------------------------------------------

#include <PairStack.h>
#include <Schedule.h>

//------------------------------------------------------------------------------
// Class template AltSet <Owner, Site>
//
// "Alteration Set"
// The set of all (Site, Period) pairs at which the selection configuration case
// modeled by an Owner has been altered.
// This template is used for selection recovery.
//
// Implemented in Selector.C.
//------------------------------------------------------------------------------

template <typename Owner, typename Site> 
      class WitAltSet
   {
   public:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitAltSet (Owner * theOwner);

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      ~WitAltSet ();

      //------------------------------------------------------------------------
      // Other public member functions.
      //------------------------------------------------------------------------

      void recAltForRecovery (Site * theSite, WitPeriod thePer);
         //
         // Records the fact that the configuration of the handled selection
         // case is being altered at theSite in thePer.

      void recoverSelections ();
         //
         // Restores the configuration of the handled selection case to its
         // original state.

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      noCopyCtorAssign (WitAltSet);

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      Owner * const myOwner_;
         //
         // The Onwer that models the selection case handled by this AltSet.

      WitPairStack <Site, WitPeriod> alteredPairs_;
         //
         // The set of (Site, Period) pairs at which the configuration of the
         // handled selection case was altered in the current incHeurAlloc.

      WitSchedule <Site, bool> alteredAt_;
         //
         // alteredAt_ (theSite)[thePer] is true, iff the configuration of the
         // handled selection case was altered in the current incHeurAlloc at
         // theSite in thePer.
   };

#endif
@


1.2
log
@Selection Recovery
@
text
@@


1.1
log
@Selection Recovery
@
text
@d54 1
a54 1
      void recordAlteration (Site * theSite, WitPeriod thePer);
@

