head	1.3;
access;
symbols;
locks; strict;
comment	@ * @;


1.3
date	2003.12.24.23.25.56;	author rjw;	state dead;
branches;
next	1.2;

1.2
date	2003.12.23.17.56.20;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2003.12.19.19.01.02;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Continued implementation of PIP.
@
text
@//------------------------------------------------------------------------------
//
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
// 
//------------------------------------------------------------------------------

#ifndef PerPairMgrH
#define PerPairMgrH

//------------------------------------------------------------------------------
// Header file: "PerPairMgr.h"
//
// Contains the declaration of class template Pip::PerPairMgr <FirstEl>
//------------------------------------------------------------------------------

#include <Assoc.h>
#include <ObjStack.h>
#include <PtrSched.h>

//------------------------------------------------------------------------------
// Class template PerPairMgr <FirstEl>
//
// "Period Pair Manager"
//
// Responsible for creating and owning PerPair <FirstEl> instances for each
// FirstEl and period in a Problem.
//
// Implemented in PerPair.C.
//------------------------------------------------------------------------------

template <typename FirstEl> 
      class WitPerPairMgr: public WitProbAssoc
   {
   public:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitPerPairMgr (WitProblem *);

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      ~WitPerPairMgr ();

      //------------------------------------------------------------------------
      // Other public member functions.
      //------------------------------------------------------------------------

      WitPerPair <FirstEl> * myPerPairFor (
            FirstEl * theFirstEl,
            WitPeriod thePer);
         //
         // Returns the PerPair owned by this PerPairMgr for theFirstEl and
         // thePer, creating it, if necessary.

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      noCopyCtorAssign (WitPerPairMgr);

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      WitObjStack <WitPerPair <FirstEl> > myPerPairs_;
         //
         // The PerPairs owned by this PerPairMgr.

      WitPtrSched <FirstEl, WitPerPair <FirstEl> > myPairSched_;
         //
         // myPairSched_.myPtrAt (theFirstEl, thePer) is the PerPair owned by
         // this PerPairMgr for theFirstEl in thePer.
   };

#endif
@


1.2
log
@Continued implementation of PIP.
@
text
@@


1.1
log
@Continued implementation of PIP.
@
text
@d31 1
a31 1
// Implemented in Stack.C.
@

