head	1.2;
access;
symbols;
locks; strict;
comment	@ * @;


1.2
date	2003.05.09.18.55.42;	author rjw;	state dead;
branches;
next	1.1;

1.1
date	2003.04.29.19.55.32;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Attempt to fix syntax errors from GCC compiler.
@
text
@//------------------------------------------------------------------------------
//
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
// 
//------------------------------------------------------------------------------

#ifndef RtSiteCompH
#define RtSiteCompH

//------------------------------------------------------------------------------
// Header file: "RtSiteComp.h"
//
// Contains the declaration and inline implementation of class RtSiteComp.
//------------------------------------------------------------------------------

#include <Part.h>
#include <BomEntry.h>

//------------------------------------------------------------------------------
// Class RtSiteComp
//
// Represents the Component (either a Part or a BomEntry) represented by an
// RtSite.
// The purpose of this class is to allow Part * and BomEntry * values to be
// passed to functions and be implicitly converted to the corresponding
// RtSite *. This is accomplished by implicitly constructing an RtSiteComp,
// which is then converted to the corresponding RtSite *.
//------------------------------------------------------------------------------

class WitRtSiteComp
   {
   public:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      inline WitRtSiteComp (WitPart * thePart):
            myRtSite_ (thePart->myRtSite ())
         {
         }

      inline WitRtSiteComp (WitBomEntry * theBomEnt):
            myRtSite_ (theBomEnt->myRtSite ())
         {
         }

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      inline ~WitRtSiteComp ()
         {
         }

      //------------------------------------------------------------------------
      // Other public member functions.
      //------------------------------------------------------------------------

      inline operator WitRtSite * ()
         {
         return myRtSite_;
         }

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      noCopyCtorAssign (WitRtSiteComp);

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      WitRtSite * const myRtSite_;
   };

#endif
@


1.1
log
@Continued implementation of proportionate routing.
@
text
@@

