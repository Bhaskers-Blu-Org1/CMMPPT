head	1.4;
access;
symbols;
locks; strict;
comment	@ * @;


1.4
date	2003.03.03.21.40.06;	author rjw;	state dead;
branches;
next	1.3;

1.3
date	2003.03.03.21.07.26;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2003.02.27.19.20.17;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2003.02.25.22.17.05;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Continued implementation of proportionate routing.
@
text
@//------------------------------------------------------------------------------
//
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
// 
//------------------------------------------------------------------------------

#ifndef ConcOrCand1H
#define ConcOrCand1H

//------------------------------------------------------------------------------
// Header file: "ConcOrCand1.h"
//
// Contains the declaration of the following classes:
//
//    ProdOrCand.
//    ConsOrCand.
//
// These are the "concrete" OrCand classes.
//------------------------------------------------------------------------------

#include <OrCand1.h>

//------------------------------------------------------------------------------
// Class ProdOrCand
//
// "Production Routing Candidate"
// Represents a BopEntry in its role as a candidate for production routing.
//
// Class Hierarchy:
//
// OrCand
//    ProdOrCand
//
// Implemented in OldRt1.C.
//------------------------------------------------------------------------------

class WitProdOrCand: public WitOrCand
   {
   public:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitProdOrCand (WitBopEntry *, WitProdOrMgr *);

   private:

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      virtual ~WitProdOrCand ();

      //------------------------------------------------------------------------
      // Overrides from class OrCand.
      //------------------------------------------------------------------------

      virtual bool           isEligible  (WitPeriod);
      virtual WitBillEntry * myBillEntry ();

      //------------------------------------------------------------------------
      // Other private member functions.
      //------------------------------------------------------------------------

      noCopyCtorAssign (WitProdOrCand);

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      WitBopEntry * const myBopEnt_;
         //
         // The BopEntry represented by this ProdOrCand.
   };

//------------------------------------------------------------------------------
// Class ConsOrCand
//
// "Consumption Routing Candidate"
// Represents a ConsEntry in its role as a candidate for consumption routing.
//
// Class Hierarchy:
//
// OrCand
//    ConsOrCand
//
// Implemented in OldRt1.C.
//------------------------------------------------------------------------------

class WitConsOrCand: public WitOrCand
   {
   public:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitConsOrCand (WitConsEntry *, WitConsOrMgr *);

   private:

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      virtual ~WitConsOrCand ();

      //------------------------------------------------------------------------
      // Overrides from class OrCand.
      //------------------------------------------------------------------------

      virtual bool           isEligible  (WitPeriod);
      virtual WitBillEntry * myBillEntry ();

      //------------------------------------------------------------------------
      // Other private member functions.
      //------------------------------------------------------------------------

      noCopyCtorAssign (WitConsOrCand);

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      WitConsEntry * const myConsEnt_;
         //
         // The ConsEntry represented by this ConsOrCand.
   };

#endif
@


1.3
log
@Continued implementation of proportionate routing.
@
text
@@


1.2
log
@Continued implementation of proportionate routing.
@
text
@a61 1
      virtual void           prtOpPtID   ();
a115 1
      virtual void           prtOpPtID   ();
@


1.1
log
@Continued implementation of proportionate routing.
@
text
@d62 1
a62 1
      virtual void           prtPrPtID   ();
d117 1
a117 1
      virtual void           prtPrPtID   ();
@

