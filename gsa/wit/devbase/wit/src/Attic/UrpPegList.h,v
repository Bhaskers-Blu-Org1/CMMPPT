head	1.2;
access;
symbols;
locks; strict;
comment	@ * @;


1.2
date	2006.03.03.20.46.57;	author rjw;	state dead;
branches;
next	1.1;

1.1
date	2006.01.12.20.46.54;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.2
log
@[shared-resource pegging]
@
text
@//------------------------------------------------------------------------------
//
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
// 
//------------------------------------------------------------------------------

#ifndef UrpPegListH
#define UrpPegListH

//------------------------------------------------------------------------------
// Header file: "UrpPegList.h"
//
// Contains the declaration of class template UrpPegList <SrcComp>.
//------------------------------------------------------------------------------

#include <TripStack.h>
#include <Assoc.h>

//------------------------------------------------------------------------------
// Class template UrpPegList <SrcComp>
//
// A list of pegging triples: (SrcComp, shipPer, pegVol).
//
// Implemented in URP.C.
//------------------------------------------------------------------------------

template <typename SrcComp> 
      class WitUrpPegList: public WitProbAssoc
   {
   public:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitUrpPegList (WitProblem *);

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      ~WitUrpPegList ();

      //------------------------------------------------------------------------
      // Other public member functions.
      //------------------------------------------------------------------------

      void append (SrcComp * theSrcComp, WitPeriod thePer, double pegVol);
         //
         // Appends (theSrcComp, thePer, pegVol) to this UrpPegList.

      void consolidate (WitSchedule <SrcComp, double> & workSched);
         //
         // Merges the each set of PegTrips in this UrpPegList that share the
         // same ScrComp and shipPer into a single PegTrip.
         // Uses workSched as a working Schedule.
         // This function assumes that all entries in workSched are 0 when
         // it begins; when it ends, it restores workSched to this state.

      void getPegTrips (WitTripStack <SrcComp> & thePegTrips);
         //
         // Sets thePegTrips to the pegging list in forward order.

      double pegVolFor (SrcComp * theSrcComp, WitPeriod thePer);
         //
         // If there exists pegVol such that (theSrcComp, thePer, pegVol) is in
         // this UrpPegList, pegVol is returned; otherwise 0.0 is returned.
         // Uses a linear-time search.

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      noCopyCtorAssign (WitUrpPegList);

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      WitTripStack <SrcComp> myPegTrips_;
         //
         // The pegging list, stored in reverse order.
   };

#endif
@


1.1
log
@[shared-resource pegging]
@
text
@@

