head	1.2;
access;
symbols;
locks; strict;
comment	@ * @;


1.2
date	2010.09.28.19.25.16;	author rjw;	state dead;
branches;
next	1.1;

1.1
date	2010.07.30.20.20.14;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Modifiable Heuristic Allocation
@
text
@//------------------------------------------------------------------------------
//
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
// 
//------------------------------------------------------------------------------

#ifndef RecoverySetH
#define RecoverySetH

//------------------------------------------------------------------------------
// Header file: "RecoverySet.h"
//
// Contains the declaration of class template RecoverySet <Owner, Site>.
//------------------------------------------------------------------------------

#include <PairStack.h>
#include <Schedule.h>

//------------------------------------------------------------------------------
// Class template RecoverySet <Owner, Site>
//
// The set of all points (Site, Period) at which the configuration of the
// handled selection case is to be restored to its initial state.
// This template is used for selection recovery.
//
// Implemented in Selection.C.
//------------------------------------------------------------------------------

template <typename Owner, typename Site> 
      class WitRecoverySet
   {
   public:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitRecoverySet (Owner * theOwner);

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      ~WitRecoverySet ();

      //------------------------------------------------------------------------
      // Other public member functions.
      //------------------------------------------------------------------------

      void storeRecoveryPt (Site * theSite, WitPeriod thePer);
         //
         // Stores (theSite, thePer) as a point at which the configuration of
         // the handled selection case is to be restored to its initial state.

      void recoverInitState ();
         //
         // Restores the configuration of the handled selection case to its
         // initial state.

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      noCopyCtorAssign (WitRecoverySet);

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      Owner * const myOwner_;
         //
         // The Owner that models the selection case handled by this
         // RecoverySet.

      WitPairStack <Site, WitPeriod> recoveryPts_;
         //
         // The set of (Site, Period) pairs at which the configuration of the
         // handled selection case is to be restored to its initial state.

      WitSchedule <Site, bool> isRecoveryPt_;
         //
         // isRecoveryPt_ (theSite)[thePer] is true, iff the configuration of
         // the handled selection case is to be restored to its initial state at
         // theSite in thePer.
   };

#endif
@


1.1
log
@Selection Recovery
@
text
@@

