head	1.8;
access;
symbols;
locks; strict;
comment	@ * @;


1.8
date	2007.05.04.23.27.11;	author rjw;	state dead;
branches;
next	1.7;

1.7
date	2007.04.30.21.34.58;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2007.04.26.22.35.18;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2007.04.26.21.32.27;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2007.04.26.20.45.31;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2007.04.25.23.30.30;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2007.04.24.22.40.57;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2007.04.18.22.27.02;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Stochastic Implosion
@
text
@//------------------------------------------------------------------------------
//
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
// 
//------------------------------------------------------------------------------

#ifndef StochAccessH
#define StochAccessH

//------------------------------------------------------------------------------
// Header file: "StochAccess.h"
//
// Contains the declaration of class StochAccess.
//------------------------------------------------------------------------------

#include <StochDataMgr.h>
#include <Demand.h>
#include <Opn.h>
#include <SubEntry.h>

//------------------------------------------------------------------------------
// Class StochAccess
//
// "Stochastic Implosion Access"
//
// Same as PreAccess, but for stochastic implosion.
// See PreAccess.h.
//------------------------------------------------------------------------------

class WitStochAccess
   {
      friend class WitScenario;

   private:

      //------------------------------------------------------------------------
      // Update access functions.
      //------------------------------------------------------------------------

      updateAccess (double,        probability, WitStochDataMgr)
      updateAccess (WitDblFlexVec, demandVol,   WitDemand)

      //------------------------------------------------------------------------
      // Unimplemented functions
      //------------------------------------------------------------------------

       WitStochAccess ();
      ~WitStochAccess ();

      noCopyCtorAssign (WitStochAccess);
   };

#endif
@


1.7
log
@Stochastic Implosion
@
text
@@


1.6
log
@Stochastic Implosion
@
text
@d19 1
a19 1
#include <StochImploder.h>
d43 1
a43 1
      updateAccess (double,        probability, WitStochImploder)
@


1.5
log
@Stochastic Implosion
@
text
@a44 3
      updateAccess (WitDblFlexVec, shipVol,     WitDemand)
      updateAccess (WitDblFlexVec, execVol,     WitOperation)
      updateAccess (WitDblFlexVec, subVol,      WitSubEntry)
@


1.4
log
@Stochastic Implosion
@
text
@d22 1
d47 1
@


1.3
log
@Stochastic Implosion
@
text
@d21 1
d45 1
@


1.2
log
@Stochastic Implosion
@
text
@d43 1
@


1.1
log
@Stochastic Implosion
@
text
@d19 1
d41 2
a42 1
      updateAccess (WitDblFlexVec, demandVol, WitDemand)
@

