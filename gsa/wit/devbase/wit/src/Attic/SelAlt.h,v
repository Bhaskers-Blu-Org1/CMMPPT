head	1.5;
access;
symbols;
locks; strict;
comment	@ * @;


1.5
date	2004.12.28.19.21.19;	author rjw;	state dead;
branches;
next	1.4;

1.4
date	2004.12.22.19.57.26;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2004.12.21.22.13.49;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2004.12.20.22.39.36;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2004.12.20.21.47.36;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Low-Pri Prop-Rt.
@
text
@//------------------------------------------------------------------------------
//
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
// 
//------------------------------------------------------------------------------

#ifndef SelAltH
#define SelAltH

//------------------------------------------------------------------------------
// Header file: "SelAlt.h"
//
// Contains the declaration of class SelAlt.
//------------------------------------------------------------------------------

#include <Util.h>

//------------------------------------------------------------------------------
// Class SelAlt
//
// "Selection Alteration"
// Represents an alteration to the selection configuration.
//
// Class Hierarchy:
//
// SelAlt
//    DetSelAlt
//
// Implemented in MultiSel.C.
//------------------------------------------------------------------------------

class WitSelAlt
   {
   public:

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      virtual ~WitSelAlt ();

      //------------------------------------------------------------------------
      // Other public member functions.
      //------------------------------------------------------------------------

      virtual void alterSelection () = 0;
         //
         // Alters the selection configuration in the manner represented by this
         // SelAlt.

      virtual void tempAlterSel () = 0;
         //
         // Temporarily alters the selection configuration in the manner
         // represented by this SelAlt.

      virtual WitSelPt * mySelPt () = 0;
         //
         // The SelPt at which this SelAlt represents selection alteration.

      void setPending (bool);
         //
         // "Set" function for pending_.

      //------------------------------------------------------------------------
      // Data access functions.
      //------------------------------------------------------------------------

      accessFunc (bool, pending)

   protected:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitSelAlt ();

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      noCopyCtorAssign (WitSelAlt);

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      bool pending_;
         //
         // true, iff the configuration is to be altered with this SelAlt.
   };

#endif
@


1.4
log
@Low-Pri Prop-Rt.
@
text
@@


1.3
log
@Low-Pri Prop-Rt.
@
text
@d54 5
@


1.2
log
@Low-Pri Prop-Rt.
@
text
@d25 1
a25 1
// Represents an alteration to the selection scheme.
d43 1
a43 1
      ~WitSelAlt ();
d49 19
d83 8
@


1.1
log
@Low-Pri Prop-Rt.
@
text
@d26 7
d40 6
a56 6
      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      ~WitSelAlt ();

@

