head	1.6;
access;
symbols;
locks; strict;
comment	@ * @;


1.6
date	2007.07.27.18.58.03;	author rjw;	state dead;
branches;
next	1.5;

1.5
date	2007.07.27.16.33.31;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2007.07.26.21.09.27;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2007.07.26.19.23.35;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2007.07.23.23.08.23;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2007.07.23.21.19.55;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Stochastic Implosion
@
text
@//------------------------------------------------------------------------------
//
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
// 
//------------------------------------------------------------------------------

#ifndef DerStVarsH
#define DerStVarsH

//------------------------------------------------------------------------------
// Header file: "DerStVars.h"
//
// Contains the declaration the following classes:
//
//    StScrapVar
//    StExecVar
//------------------------------------------------------------------------------

#include <StochVar.h>

//------------------------------------------------------------------------------
// class StScrapVar
// An scrap variable in a stochastic implosion optimization problem.
//
// Class hierarchy:
//
//    OptProbEl
//       OptVar
//          StochVar
//             StScrapVar
//
// Implemented in StochVars.C.
//------------------------------------------------------------------------------

class WitStScrapVar: public WitStochVar
   {
   public:

      //-----------------------------------------------------------------------
      // Constructor functions.
      //-----------------------------------------------------------------------

      WitStScrapVar (WitPart *, WitScenPer *);

      //-----------------------------------------------------------------------
      // Destructor function.
      //-----------------------------------------------------------------------

      virtual ~WitStScrapVar ();

      //-----------------------------------------------------------------------
      // Access functions.
      //-----------------------------------------------------------------------

      accessFunc (WitPart *, myPart)

      inline WitPart * myDerComp ()
         {
         return myPart_;
         }

   private:

      //-----------------------------------------------------------------------
      // Private member functions.
      //-----------------------------------------------------------------------

      //-----------------------------------------------------------------------
      // Overriding private virtual member functions.
      //-----------------------------------------------------------------------

      virtual const char * classText () const;

      //-----------------------------------------------------------------------
      // Other private member functions.
      //-----------------------------------------------------------------------

      noCopyCtorAssign (WitStScrapVar);

      //-----------------------------------------------------------------------
      // Private member data.
      //-----------------------------------------------------------------------

      WitPart * const myPart_;
         //
         // The Part for this StScrapVar.
   };

//------------------------------------------------------------------------------
// class StExecVar
// An execution variable in a stochastic implosion optimization problem.
//
// Class hierarchy:
//
//    OptProbEl
//       OptVar
//          StochVar
//             StExecVar
//
// Implemented in StochVars.C.
//------------------------------------------------------------------------------

class WitStExecVar: public WitStochVar
   {
   public:

      //-----------------------------------------------------------------------
      // Constructor functions.
      //-----------------------------------------------------------------------

      WitStExecVar (WitOperation *, WitScenPer *);

      //-----------------------------------------------------------------------
      // Destructor function.
      //-----------------------------------------------------------------------

      virtual ~WitStExecVar ();

      //-----------------------------------------------------------------------
      // Access functions.
      //-----------------------------------------------------------------------

      accessFunc (WitOperation *, myOpn)

      inline WitOperation * myDerComp ()
         {
         return myOpn_;
         }

   private:

      //-----------------------------------------------------------------------
      // Private member functions.
      //-----------------------------------------------------------------------

      //-----------------------------------------------------------------------
      // Overriding private virtual member functions.
      //-----------------------------------------------------------------------

      virtual const char * classText () const;

      //-----------------------------------------------------------------------
      // Other private member functions.
      //-----------------------------------------------------------------------

      noCopyCtorAssign (WitStExecVar);

      //-----------------------------------------------------------------------
      // Private member data.
      //-----------------------------------------------------------------------

      WitOperation * const myOpn_;
         //
         // The Operation for this StExecVar.
   };

#endif
@


1.5
log
@Stochastic Implosion
@
text
@@


1.4
log
@Stochastic Implosion
@
text
@d18 1
d25 68
@


1.3
log
@Stochastic Implosion
@
text
@d70 10
@


1.2
log
@Stochastic Implosion
@
text
@d45 1
a45 1
      WitStExecVar (WitOperation *, WitScenario *, WitPeriod);
@


1.1
log
@Stochastic Implosion
@
text
@d59 5
@

