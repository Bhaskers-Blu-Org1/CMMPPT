head	1.5;
access;
symbols;
locks; strict;
comment	@ * @;


1.5
date	2007.11.07.21.50.13;	author rjw;	state dead;
branches;
next	1.4;

1.4
date	2007.06.05.21.06.01;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2007.04.18.22.27.02;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2007.02.28.20.04.59;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2007.02.27.21.03.05;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Stochastic Implosion
@
text
@//------------------------------------------------------------------------------
//
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
// 
//------------------------------------------------------------------------------

#ifndef PostAccessH
#define PostAccessH

//------------------------------------------------------------------------------
// Header file: "PostAccess.h"
//
// Contains the declaration of class PostAccess.
//------------------------------------------------------------------------------

#include <Global.h>
#include <Material.h>
#include <Demand.h>
#include <BomEntry.h>

//------------------------------------------------------------------------------
// Class PostAccess
//
// "Postprocessing Access"
//
// Privately declares update access functions for data members of various
// classes that have declared this class to be a friend.
// The access functions are made available to the classes responsible for
// postprocessing by declaring these classes friends of this class.
// No instances of this class are to be created: the constructors and destructor
// are not implemented.
//
// All implementation is inline.
//------------------------------------------------------------------------------

class WitPostAccess
   {
      friend class WitPostprocessor;
      friend class WitFeasChkr;

   private:

      //------------------------------------------------------------------------
      // Update access functions.
      //------------------------------------------------------------------------

      updateAccess (bool,          feasible,    WitGlobalComp)
      updateAccess (WitDblFlexVec, consVol,     WitPart)
      updateAccess (WitDblFlexVec, prodVol,     WitPart)
      updateAccess (WitDblFlexVec, scrapVol,    WitPart)
      updateAccess (WitDblFlexVec, residualVol, WitPart)
      updateAccess (WitDblFlexVec, stockVol,    WitMaterial)
      updateAccess (WitDblFlexVec, cumShipVol,  WitDemand)
      updateAccess (WitDblFlexVec, fssShipVol,  WitDemand)
      updateAccess (WitDblFlexVec, nonSubVol,   WitBomEntry)

      //------------------------------------------------------------------------
      // Unimplemented functions
      //------------------------------------------------------------------------

       WitPostAccess ();
      ~WitPostAccess ();

      noCopyCtorAssign (WitPostAccess);
   };

#endif
@


1.4
log
@Stochastic Implosion
@
text
@@


1.3
log
@Stochastic Implosion
@
text
@d29 8
a36 2
// Same as PreAccess, but for postprocessing.
// See PreAccess.h.
@


1.2
log
@[disallowed backlog]
@
text
@d15 2
@


1.1
log
@[disallowed backlog]
@
text
@d18 2
d42 9
a50 2
      updateAccess (WitDblFlexVec, nonSubVol, WitBomEntry)
      updateAccess (bool,          feasible,  WitGlobalComp)
@

