head	1.2;
access;
symbols;
locks; strict;
comment	@ * @;


1.2
date	2004.12.15.16.39.25;	author rjw;	state dead;
branches;
next	1.1;

1.1
date	2004.12.13.19.07.34;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Low-Pri Prop-Rt.
@
text
@//------------------------------------------------------------------------------
//
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
// 
//------------------------------------------------------------------------------

#ifndef MeCoordH
#define MeCoordH

//------------------------------------------------------------------------------
// Header file: "MeCoordPt.h"
//
// Contains the declaration of class MeCoordPt.
//------------------------------------------------------------------------------

#include <Util.h>

//------------------------------------------------------------------------------
// Class MeCoordPt
//
// "Multi-Exec Coordination Point"
// Responsible for coordinating the multi-exec objects associated with a
// particular BopEntry and explosion period.
//
// Implemented in MultiEx.C.
//------------------------------------------------------------------------------

class WitMeCoordPt
   {
   public:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitMeCoordPt (
            WitBopEntry * theBopEnt,
            WitPeriod     firstExecPerVal,
            WitPeriod     lastExecPerVal,
            WitMeMgr *    theMeMgr);

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      ~WitMeCoordPt ();

      //------------------------------------------------------------------------
      // Other public member functions.
      //------------------------------------------------------------------------

      WitPeriod nextExecPer (WitPeriod execPer, WitMeDir * theMeDir);
         //
         // Returns the next execution period for theMeDir and this MeCoordPt
         // after execPer, if any; otherwise -1;

      void prtID ();
         //
         // Prints info identifying this MeCoordPt.

      //------------------------------------------------------------------------
      // Data access functions.
      //------------------------------------------------------------------------

      accessFunc    (WitBopEntry *, myBopEnt)
      accessFunc    (WitPeriod,     firstExecPer)
      accessFunc    (WitPeriod,     lastExecPer)
      accessFunc    (WitMePt *,     myMePtForNstn)
      accessNonNull (WitMePt *,     myMePtForAsap)

      WitPeriod myExpPer ();
         //
         // Returns the explosion period associated with this MeCoordPt.

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      noCopyCtorAssign (WitMeCoordPt);

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      WitBopEntry * const myBopEnt_;
         //
         // The BopEntry associated with this MeCoordPt.

      const WitPeriod firstExecPer_;
      const WitPeriod  lastExecPer_;
         //
         // The first and last execution periods corresponding to the explosion
         // period for this MeCoordPt.

      WitMePt * myMePtForNstn_;
         //
         // The MePt owned by this MeCoordPt for NSTN Multi-Exec.

      WitMePt * myMePtForAsap_;
         //
         // The MePt owned by this MeCoordPt for ASAP Multi-Exec, in two-way
         // multi-exec mode; otherwise NULL.
   };

#endif
@


1.1
log
@Low-Pri Prop-Rt.
@
text
@@

