head	1.10;
access;
symbols
	latest_sce_4_20_20060523:1.4.0.2
	sce_4_20_20060523:1.4
	latest_sce4_20_OSL:1.3.0.2
	sce_4_20_OSL:1.3
	sce_410_withVa:1.3
	sce_4_05_20040511:1.3
	sce_4_00_20040201:1.2
	nextGenBranch:1.2.0.6
	nextGenRoot:1.2
	sce_3_30_20030627:1.2
	EndRw-branch:1.2.0.4
	Root-of-EndRw:1.2
	rwToStl:1.2.0.2;
locks; strict;
comment	@ * @;


1.10
date	2007.08.01.21.50.40;	author rjw;	state dead;
branches;
next	1.9;

1.9
date	2007.08.01.20.12.25;	author rjw;	state Exp;
branches;
next	1.8;

1.8
date	2007.06.22.19.04.04;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2006.10.03.15.08.59;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2006.08.18.19.32.52;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2006.08.18.18.43.39;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2006.05.02.17.34.06;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2004.02.06.23.27.10;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2002.08.29.23.06.28;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2002.08.26.22.49.05;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Stochastic Implosion
@
text
@//------------------------------------------------------------------------------
//
//     (c) Copyright IBM Corp. 2006.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
//
//------------------------------------------------------------------------------

#ifndef OptObjsH
#define OptObjsH

//------------------------------------------------------------------------------
// Header file: "OptObjs.h"
//
// Contains the declaration of the following classes, derived from class OptObj:
//
//    BoundsObj
//    PrimaryObj
//    Obj1Obj
//    RevObj
//    InvObj
//    ServObj
//    SubObj
//    Obj2Obj
//------------------------------------------------------------------------------

#include <OptObj.h>

//------------------------------------------------------------------------------
// class BoundsObj
//
// The Bounds objective for the optimization problem.
//
// Class hierarchy:
//
//    ProbAssoc
//       OptObj
//          BoundsObj
//
// Implemented in OptObjs.C.
//------------------------------------------------------------------------------

class WitBoundsObj: public WitOptObj
   {
   public:

      //-----------------------------------------------------------------------
      // Constructor functions.
      //-----------------------------------------------------------------------

      WitBoundsObj (WitDetImpOP * theDetImpOP);

      //-----------------------------------------------------------------------
      // Destructor function.
      //-----------------------------------------------------------------------

      virtual ~WitBoundsObj ();

      //-----------------------------------------------------------------------
      // Overriding public virtual member functions.
      //-----------------------------------------------------------------------

      virtual double coeffVal (const WitOptVar * theVar) const;

   private:

      //-----------------------------------------------------------------------
      // Private member functions.
      //-----------------------------------------------------------------------

      noCopyCtorAssign (WitBoundsObj);
   };

//------------------------------------------------------------------------------
// class PrimaryObj
//
// The primary objective for objective #1 of the optimization problem.
//
// Class hierarchy:
//
//    ProbAssoc
//       OptObj
//          PrimaryObj
//
// Implemented in OptObjs.C.
//------------------------------------------------------------------------------

class WitPrimaryObj: public WitOptObj
   {
   public:

      //-----------------------------------------------------------------------
      // Constructor functions.
      //-----------------------------------------------------------------------

      WitPrimaryObj (WitDetImpOP * theDetImpOP);

      //-----------------------------------------------------------------------
      // Destructor function.
      //-----------------------------------------------------------------------

      virtual ~WitPrimaryObj ();

      //-----------------------------------------------------------------------
      // Overriding public virtual member functions.
      //-----------------------------------------------------------------------

      virtual double coeffVal (const WitOptVar * theVar) const;

   private:

      //-----------------------------------------------------------------------
      // Private member functions.
      //-----------------------------------------------------------------------

      noCopyCtorAssign (WitPrimaryObj);
   };

//------------------------------------------------------------------------------
// class Obj1Obj
//
// Objective #1 for the optimization problem.
//
// Class hierarchy:
//
//    ProbAssoc
//       OptObj
//          Obj1Obj
//
// Implemented in OptObjs.C.
//------------------------------------------------------------------------------

class WitObj1Obj: public WitOptObj
   {
   public:

      //-----------------------------------------------------------------------
      // Constructor functions.
      //-----------------------------------------------------------------------

      WitObj1Obj (WitDetImpOP * theDetImpOP);

      //-----------------------------------------------------------------------
      // Destructor function.
      //-----------------------------------------------------------------------

      virtual ~WitObj1Obj ();

      //-----------------------------------------------------------------------
      // Overriding public virtual member functions.
      //-----------------------------------------------------------------------

      virtual double coeffVal (const WitOptVar * theVar) const;

   private:

      //-----------------------------------------------------------------------
      // Private member functions.
      //-----------------------------------------------------------------------

      noCopyCtorAssign (WitObj1Obj);

      //-----------------------------------------------------------------------
      // Private member data.
      //-----------------------------------------------------------------------

      WitDetImpOP * const myDetImpOP_;
         //
         // The DetImpOP to which this Obj1Obj belongs.
   };

//------------------------------------------------------------------------------
// class RevObj
//
// The revenue objective for objective #2 of the optimization problem.
//
// Class hierarchy:
//
//    ProbAssoc
//       OptObj
//          RevObj
//
// Implemented in OptObjs.C.
//------------------------------------------------------------------------------

class WitRevObj: public WitOptObj
   {
   public:

      //-----------------------------------------------------------------------
      // Constructor functions.
      //-----------------------------------------------------------------------

      WitRevObj (WitDetImpOP * theDetImpOP);

      //-----------------------------------------------------------------------
      // Destructor function.
      //-----------------------------------------------------------------------

      virtual ~WitRevObj ();

      //-----------------------------------------------------------------------
      // Overriding public virtual member functions.
      //-----------------------------------------------------------------------

      virtual double coeffVal (const WitOptVar * theVar) const;

   private:

      //-----------------------------------------------------------------------
      // Private member functions.
      //-----------------------------------------------------------------------

      noCopyCtorAssign (WitRevObj);
   };

//------------------------------------------------------------------------------
// class InvObj
//
// The inventory objective for objective #2 of the optimization problem.
//
// Class hierarchy:
//
//    ProbAssoc
//       OptObj
//          InvObj
//
// Implemented in OptObjs.C.
//------------------------------------------------------------------------------

class WitInvObj: public WitOptObj
   {
   public:

      //-----------------------------------------------------------------------
      // Constructor functions.
      //-----------------------------------------------------------------------

      WitInvObj (WitDetImpOP * theDetImpOP);

      //-----------------------------------------------------------------------
      // Destructor function.
      //-----------------------------------------------------------------------

      virtual ~WitInvObj ();

      //-----------------------------------------------------------------------
      // Overriding public virtual member functions.
      //-----------------------------------------------------------------------

      virtual double coeffVal (const WitOptVar * theVar) const;

   private:

      //-----------------------------------------------------------------------
      // Private member functions.
      //-----------------------------------------------------------------------

      noCopyCtorAssign (WitInvObj);
   };

//------------------------------------------------------------------------------
// class ServObj
//
// The serviceability objective for objective #2 of the optimization problem.
//
// Class hierarchy:
//
//    ProbAssoc
//       OptObj
//          ServObj
//
// Implemented in OptObjs.C.
//------------------------------------------------------------------------------

class WitServObj: public WitOptObj
   {
   public:

      //-----------------------------------------------------------------------
      // Constructor functions.
      //-----------------------------------------------------------------------

      WitServObj (WitDetImpOP * theDetImpOP);

      //-----------------------------------------------------------------------
      // Destructor function.
      //-----------------------------------------------------------------------

      virtual ~WitServObj ();

      //-----------------------------------------------------------------------
      // Overriding public virtual member functions.
      //-----------------------------------------------------------------------

      virtual double coeffVal (const WitOptVar * theVar) const;

   private:

      //-----------------------------------------------------------------------
      // Private member functions.
      //-----------------------------------------------------------------------

      noCopyCtorAssign (WitServObj);
   };

//------------------------------------------------------------------------------
// class SubObj
//
// The substitute objective for objective #2 of the optimization problem.
//
// Class hierarchy:
//
//    ProbAssoc
//       OptObj
//          SubObj
//
// Implemented in OptObjs.C.
//------------------------------------------------------------------------------

class WitSubObj: public WitOptObj
   {
   public:

      //-----------------------------------------------------------------------
      // Constructor functions.
      //-----------------------------------------------------------------------

      WitSubObj (WitDetImpOP * theDetImpOP);

      //-----------------------------------------------------------------------
      // Destructor function.
      //-----------------------------------------------------------------------

      virtual ~WitSubObj ();

      //-----------------------------------------------------------------------
      // Overriding public virtual member functions.
      //-----------------------------------------------------------------------

      virtual double coeffVal (const WitOptVar * theVar) const;

   private:

      //-----------------------------------------------------------------------
      // Private member functions.
      //-----------------------------------------------------------------------

      noCopyCtorAssign (WitSubObj);
   };

//------------------------------------------------------------------------------
// class Obj2Obj
//
// Objective #2 for the optimization problem.
//
// Class hierarchy:
//
//    ProbAssoc
//       OptObj
//          Obj2Obj
//
// Implemented in OptObjs.C.
//------------------------------------------------------------------------------

class WitObj2Obj: public WitOptObj
   {
   public:

      //-----------------------------------------------------------------------
      // Constructor functions.
      //-----------------------------------------------------------------------

      WitObj2Obj (WitDetImpOP * theDetImpOP);

      //-----------------------------------------------------------------------
      // Destructor function.
      //-----------------------------------------------------------------------

      virtual ~WitObj2Obj ();

      //-----------------------------------------------------------------------
      // Overriding public virtual member functions.
      //-----------------------------------------------------------------------

      virtual double coeffVal (const WitOptVar * theVar) const;

   private:

      //-----------------------------------------------------------------------
      // Private member functions.
      //-----------------------------------------------------------------------

      noCopyCtorAssign (WitObj2Obj);

      //-----------------------------------------------------------------------
      // Private member data.
      //-----------------------------------------------------------------------

      WitDetImpOP * const myDetImpOP_;
         //
         // The DetImpOP to which this Obj2Obj belongs.
   };

#endif
@


1.9
log
@Stochastic Implosion
@
text
@@


1.8
log
@Stochastic Implosion
@
text
@d35 6
d80 6
d125 6
d178 6
d223 6
d268 6
d313 6
d358 6
@


1.7
log
@App controlled opt implosion.
@
text
@d46 1
a46 1
      WitBoundsObj (WitImpOptProb * theImpOptProb);
d85 1
a85 1
      WitPrimaryObj (WitImpOptProb * theImpOptProb);
d124 1
a124 1
      WitObj1Obj (WitImpOptProb * theImpOptProb);
d150 1
a150 1
      WitImpOptProb * const myImpOptProb_;
d152 1
a152 1
         // The ImpOptProb to which this Obj1Obj belongs.
d171 1
a171 1
      WitRevObj (WitImpOptProb * theImpOptProb);
d210 1
a210 1
      WitInvObj (WitImpOptProb * theImpOptProb);
d249 1
a249 1
      WitServObj (WitImpOptProb * theImpOptProb);
d288 1
a288 1
      WitSubObj (WitImpOptProb * theImpOptProb);
d327 1
a327 1
      WitObj2Obj (WitImpOptProb * theImpOptProb);
d353 1
a353 1
      WitImpOptProb * const myImpOptProb_;
d355 1
a355 1
         // The ImpOptProb to which this Obj2Obj belongs.
@


1.6
log
@App controlled opt implode.
@
text
@d33 1
a33 1
// The Bounds objective for the optimization model.
d72 1
a72 1
// The primary objective for objective #1 of the optimization model.
d111 1
a111 1
// Objective #1 for the optimization model.
d158 1
a158 1
// The revenue objective for objective #2 of the optimization model.
d197 1
a197 1
// The inventory objective for objective #2 of the optimization model.
d236 1
a236 1
// The serviceability objective for objective #2 of the optimization model.
d275 1
a275 1
// The substitute objective for objective #2 of the optimization model.
d314 1
a314 1
// Objective #2 for the optimization model.
@


1.5
log
@App controlled opt implosion.
@
text
@d32 1
d34 2
d71 1
d73 2
d110 1
d112 2
d157 1
d159 2
d196 1
d198 2
d235 1
d237 2
d274 1
d276 2
d313 1
d315 2
@


1.4
log
@Updated the copyright date on all source files.
@
text
@d43 1
a43 1
      WitBoundsObj (WitImpOM * theImpOM);
d79 1
a79 1
      WitPrimaryObj (WitImpOM * theImpOM);
d115 1
a115 1
      WitObj1Obj (WitImpOM * theImpOM);
d141 1
a141 1
      WitImpOM * const myImpOM_;
d143 1
a143 1
         // The ImpOM to which this Obj1Obj belongs.
d159 1
a159 1
      WitRevObj (WitImpOM * theImpOM);
d195 1
a195 1
      WitInvObj (WitImpOM * theImpOM);
d231 1
a231 1
      WitServObj (WitImpOM * theImpOM);
d267 1
a267 1
      WitSubObj (WitImpOM * theImpOM);
d303 1
a303 1
      WitObj2Obj (WitImpOM * theImpOM);
d329 1
a329 1
      WitImpOM * const myImpOM_;
d331 1
a331 1
         // The ImpOM to which this Obj2Obj belongs.
@


1.3
log
@Continued double precision.
@
text
@d3 1
a3 1
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
@


1.2
log
@Continued implementation of opt implosion with lot sizes.
@
text
@d55 1
a55 1
      virtual float coeffVal (const WitOptVar * theVar) const;
d91 1
a91 1
      virtual float coeffVal (const WitOptVar * theVar) const;
d127 1
a127 1
      virtual float coeffVal (const WitOptVar * theVar) const;
d171 1
a171 1
      virtual float coeffVal (const WitOptVar * theVar) const;
d207 1
a207 1
      virtual float coeffVal (const WitOptVar * theVar) const;
d243 1
a243 1
      virtual float coeffVal (const WitOptVar * theVar) const;
d279 1
a279 1
      virtual float coeffVal (const WitOptVar * theVar) const;
d315 1
a315 1
      virtual float coeffVal (const WitOptVar * theVar) const;
@


1.1
log
@Continued implementation of opt implosion with lot sizes.
@
text
@d28 1
a28 1
#include <PerCon.h>
@

