head	1.10;
access;
symbols;
locks; strict;
comment	@ * @;


1.10
date	2006.08.29.17.37.53;	author rjw;	state dead;
branches;
next	1.9;

1.9
date	2006.08.28.23.05.50;	author rjw;	state Exp;
branches;
next	1.8;

1.8
date	2006.08.28.21.29.56;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2006.08.28.17.22.23;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2006.08.28.15.58.32;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2006.08.25.23.21.47;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2006.08.25.22.17.09;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2006.08.25.19.02.29;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2006.08.24.20.50.27;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2006.08.24.17.50.52;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.10
log
@App controlled opt implosion.
@
text
@//------------------------------------------------------------------------------
//
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
// 
//------------------------------------------------------------------------------

#ifndef ApiFuncAidH
#define ApiFuncAidH

//------------------------------------------------------------------------------
// Header file: "ApiFuncAid.h"
//
// Contains the declaration of enum  ReqsInit::Tag.
// Contains the declaration of enum  ReqdOptState::Tag;
// Contains the declaration of class ApiFuncAid.
//------------------------------------------------------------------------------

#include <Str.h>

//------------------------------------------------------------------------------
// Enum ReqsInit::Tag
//
// "Requires Initialization Tag"
// A tag to indicate whether or not an API function is only allowed to be
// called after witInitialize or witCopyData has been called for the same
// WitRun.
//------------------------------------------------------------------------------

namespace WitReqsInit
   {
   enum Tag
      {
      yes,    // Initialization     required.
      no,     // Initialization not required.
      invalid // Invalid value.
      };
   };

//------------------------------------------------------------------------------
// Enum ReqOptState:Tag
//
// "Required Optimizing Implosion State Tag"
// A tag to indicate the required state of optimizing implosion when an API
// function is called.
//------------------------------------------------------------------------------

namespace WitReqOptState
   {
   enum Tag
      {
      active,   // Opt implosion must be   active.
      inactive, // Opt implosion must be inactive.
      either,   // Opt implosion may be active or inactive.
      invalid   // Invalid value.
      };
   };

//------------------------------------------------------------------------------
// Class ApiFuncAid
//
// "API Function Aid"
// Each ApiFuncAid is responsible for assisting in the use one API function.
// Each WitRun contains exactly one ApiFuncAid for each outer API function
// that has a WitRun argument (i.e., all except witFree and witMalloc).
//------------------------------------------------------------------------------

class WitApiFuncAid
   {
   public:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitApiFuncAid (
            WitRun *            theWitRun,
            const WitString &   theFuncName,
            WitReqsInit::Tag    theReqsInitTag,
            WitReqOptState::Tag theReqOptStateTag);

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      ~WitApiFuncAid ();

      //------------------------------------------------------------------------
      // Other public member functions.
      //------------------------------------------------------------------------

      void startMyFunc ();
         //
         // Takes action appropriate for the beginning of a call to this 
         // ApiFuncAid's API function.

      //------------------------------------------------------------------------
      // Data access functions.
      //------------------------------------------------------------------------

      accessFunc (const WitString &, myFuncName)

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      void validateAttValues ();
         //
         // Checks the validity of the attributes of this ApiFuncAid.

      inline WitMsgFacility & myMsgFac ();

      noCopyCtorAssign (WitApiFuncAid);

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      WitRun * const myWitRun_;
         //
         // The WitRun for this ApiFuncAid.

      const WitString myFuncName_;
         //
         // The name of the API function.

      const WitReqsInit::Tag myReqsInitTag_;
         //
         // Indicates whether or not the API function is only allowed to be
         // called after witInitialize or witCopyData has been called for the
         // same WitRun.

      const WitReqOptState::Tag myReqOptStateTag_;
         //
         // Indicates the required state of optimizing implosion when the API
         // function is called.
   };

#endif
@


1.9
log
@App contolled opt implosion.
@
text
@@


1.8
log
@App controlled opt implosion.
@
text
@d66 2
a67 1
// Each WitRun contains exactly one ApiFuncAid for each outer API function.
@


1.7
log
@App controlled opt implosion.
@
text
@d17 1
d26 1
a26 1
// "Requires Initialization"
d36 22
a57 3
      yes,
      no,
      invalid
d65 2
a66 3
// Each ApiFuncAid is responsible for assisting in the use one specific API
// function. Each WitRun contains exactly one ApiFuncAid for each outer API
// function.
d78 4
a81 3
            WitRun *          theWitRun,
            const WitString & theFuncName,
            WitReqsInit::Tag  theReqsInitTag);
d110 4
d135 5
@


1.6
log
@App Controlled opt implosion.
@
text
@d16 1
a16 1
// Contains the declaration of enum  AfaAttVal.
a22 19
// Enum AfaAttVal
//
// "API Function Aid Attribute Value"
// The allowed values for most ApiFuncAid attributes.
// Each attribute only allows a proper subset of these values.
// The "invalid" value is invalid for any attribute.
//------------------------------------------------------------------------------

namespace WitNonClass
   {
   enum AfaAttVal
      {
      invalid,
      any,
      postInit,
      };
   };

//------------------------------------------------------------------------------
d26 3
a28 2
// A tag to inidicate whether or not an API function is only allowed to be
// call after witInitialize or witCopyData has been called for the same WitRun.
d61 1
a61 1
            AfaAttVal         reqdInitStateVal);
d106 1
a106 1
      const AfaAttVal reqdInitState_;
d108 3
a110 7
         // Valid values:
         //    postInit: 
         //       The API function is only allowed to be called after
         //       witInitialize (or witCopyData).
         //    any:
         //       The API function is allowed to be called before
         //       witInitialize (or witCopyData).
@


1.5
log
@App controlled opt implosion.
@
text
@d28 1
a28 1
// The "undefined" value is invalid for any attribute.
d35 1
a35 1
      undefined,
d42 18
@


1.4
log
@App controlled opt implosion.
@
text
@d16 1
d23 19
d61 1
a61 1
            bool              reqPostInitVal);
d106 1
a106 1
      const bool reqPostInit_;
d108 7
a114 2
         // true, iff the API function is only allowed to be called after
         // witInitialize (or witCopyData).
@


1.3
log
@App controlled opt implosion.
@
text
@d84 1
a84 1
         // The name of the API function for this ApiFuncAid.
d88 2
a89 2
         // true, iff this ApiFuncAid's API function is only allowed to be
         // called after witInitialize.
@


1.2
log
@App controlled opt implosion.
@
text
@a18 1
#include <StateTags.h>
d39 3
a41 4
            WitRun *,
            const char *,
            WitInitState::Tag,
            WitOptImpState::Tag);
d82 1
a82 1
      WitString myFuncName_;
d86 1
a86 1
      const WitInitState::Tag reqInitState_;
d88 2
a89 7
         // Specifies the witInitialize state that's required when this
         // ApiFuncAid's API function is called.

      const WitOptImpState::Tag reqOptImpState_;
         //
         // Specifies the opt implosion state that's required when this
         // ApiFuncAid's API function is called.
@


1.1
log
@App controlled opt implosion.
@
text
@d40 1
d55 5
d72 2
d80 4
d90 2
a91 2
         // Specifies the witInitialize state that's required when the API
         // function is called.
d95 2
a96 2
         // Specifies the opt implosion state that's required when the API
         // function is called.
@

