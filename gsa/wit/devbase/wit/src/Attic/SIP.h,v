head	1.4;
access;
symbols;
locks; strict;
comment	@ * @;


1.4
date	2007.04.10.20.49.29;	author rjw;	state dead;
branches;
next	1.3;

1.3
date	2007.04.10.18.14.55;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2007.04.10.16.33.21;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2007.04.09.18.41.24;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Stochastic Implosion
@
text
@//------------------------------------------------------------------------------
//
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
// 
//------------------------------------------------------------------------------

#ifndef SIPH
#define SIPH

//------------------------------------------------------------------------------
// Header file: "SIP.h"
//
// Contains the declaration of the following class:
//
//    SIP
//------------------------------------------------------------------------------

#include <Assoc.h>
#include <PtrVec.h>

//------------------------------------------------------------------------------
// Class SIP
//
// "Stochastic Implosion Problem"
// Responsible for maintaining the data for a stochastic implosion problem.
//
// Class Hierarchy:
//
// ProbAssoc
//    SIP
//------------------------------------------------------------------------------

class WitSIP: public WitProbAssoc
   {
   public:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitSIP (WitProblem *);

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      ~WitSIP ();

      //------------------------------------------------------------------------
      // Other public member functions.
      //------------------------------------------------------------------------

      void copyAttrsFrom (WitSIP * theSIP);
         //
         // Copies the input attributes of theSIP into this SIP.

      void writeData ();
         //
         // Writes the section of the input data file for this SIP.

      void display ();
         //
         // Displays the input and preprocessing data for this SIP.

      //------------------------------------------------------------------------
      // "Set" functions.
      //------------------------------------------------------------------------

      void setCurScenario (WitScenario *);

      //------------------------------------------------------------------------
      // Data access functions.
      //------------------------------------------------------------------------

      accessFunc (WitScenario *, curScenario)

      inline WitScenario * myScenario (int theIdx)
         {
         return myScenarios_[theIdx];
         }

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      noCopyCtorAssign (WitSIP);

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      const int nScenarios_;
         //
         // The number of Scenarios owned by this SIP.

      WitPtrVec <WitScenario> myScenarios_;
         //
         // myScenarios_[theIdx] is the Scenario owned by this SIP whose index
         // is theIdx.

      WitScenario * curScenario_;
         //
         // The current Scenario.
   };

#endif
@


1.3
log
@Stochastic Implosion
@
text
@@


1.2
log
@Stochastic Implosion
@
text
@d72 1
a72 4
      void setCurScenarioByIdx (int theIdx);
         //
         // Sets curScenario_ to be the Scenario owned by this SIP whose index
         // is theIdx.
d80 5
@


1.1
log
@Stochastic Implosion.
@
text
@d22 1
d56 21
d81 2
d94 13
@

