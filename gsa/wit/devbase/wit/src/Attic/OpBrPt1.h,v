head	1.3;
access;
symbols;
locks; strict;
comment	@ * @;


1.3
date	2003.03.03.21.07.29;	author rjw;	state dead;
branches;
next	1.2;

1.2
date	2003.02.28.20.47.35;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2003.02.27.19.20.20;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Continued implementation of proportionate routing.
@
text
@//------------------------------------------------------------------------------
//
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
// 
//------------------------------------------------------------------------------

#ifndef OpBrPtH
#define OpBrPtH

//------------------------------------------------------------------------------
// Header file: "OpBrPt.h"
//
// Contains the declaration of class OpBrPt.
//------------------------------------------------------------------------------

#include <Util.h>

//------------------------------------------------------------------------------
// Class OpBrPt
//
// "Proportionate Routing Branching Point"
//
// A OpBrPt represents an OrSite and a period at which proportionate routing is
// to be performed.
//
// Implemented in OldPr1.C.
//------------------------------------------------------------------------------

class WitOpBrPt: public WitUtil
   {
   public:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitOpBrPt (WitOrSite *, WitPeriod, WitOpCoord *);

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      ~WitOpBrPt ();

      //------------------------------------------------------------------------
      // Other public member functions.
      //------------------------------------------------------------------------

      void update ();
         //
         // Updates this OpBrPt for a status change.

      void print ();
         //
         // Prints the current state of this OpBrPt.

      //------------------------------------------------------------------------
      // Data access functions.
      //------------------------------------------------------------------------

      accessFunc (WitOrSite *,  myOrSite)
      accessFunc (WitOpCoord *, myOpCoord)
      accessFunc (double,       totInclShare)
      accessFunc (bool,         singleton)

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      noCopyCtorAssign (WitOpBrPt);

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      WitOrSite * const myOrSite_;
         //
         // The OrSite represented by this OpBrPt.

      const WitPeriod myPer_;
         //
         // The period represented by this OpBrPt.

      WitOpCoord * const myOpCoord_;
         //
         // The OpCoord that owns this OpBrPt.

      double totInclShare_;
         //
         // The sum of theOrCand->myBillEntry ()->expShare () over all OrCands
         // for myOrSite_ that are currently active for proportionate explosion
         // in myPer_.

      bool singleton_;
         //
         // singleton_ is true, iff there is exactly one OrCand for myOrSite_
         // currently active for proportionate explosions in myPer_.
   };

#endif
@


1.2
log
@Continued implementation of proportionate routing.
@
text
@@


1.1
log
@Continued implementation of proportionate routing.
@
text
@d10 2
a11 2
#ifndef PrBrPtH
#define PrBrPtH
d14 1
a14 1
// Header file: "PrBrPt.h"
@

