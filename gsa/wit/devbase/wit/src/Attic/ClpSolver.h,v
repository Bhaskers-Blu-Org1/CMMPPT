head	1.6;
access;
symbols
	sce_3_30_20030627:1.5;
locks; strict;
comment	@ * @;


1.6
date	2003.07.18.21.13.38;	author rjw;	state dead;
branches;
next	1.5;

1.5
date	2003.06.05.19.48.18;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2003.06.04.17.11.06;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2003.05.30.22.41.03;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2003.05.30.18.19.10;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2003.05.28.22.19.27;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Continued implementation of opt with COIN.
@
text
@//------------------------------------------------------------------------------
//
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
// 
//------------------------------------------------------------------------------

#ifndef ClpSolverH
#define ClpSolverH

//------------------------------------------------------------------------------
// Header file: "ClpSolver.h"
//
// Contains the declaration of class ClpSolver.
//------------------------------------------------------------------------------

#include <OsiSolver.h>

//------------------------------------------------------------------------------
// Forward declarations of COIN classes.
//------------------------------------------------------------------------------

class OsiClpSolverInterface;
class ClpSimplex;

//------------------------------------------------------------------------------
// class ClpSolver
//
// Responsible for solving an OptModel by using CLP through the OSI interface,
// and by using SBB.
//
// Class Hierarchy:
//
// ProbAssoc
//    OptSolver
//       OsiSolver
//          ClpSolver
//------------------------------------------------------------------------------

class WitClpSolver: public WitOsiSolver
   {
   public:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitClpSolver (WitOptModel *);

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      virtual ~WitClpSolver ();

      //------------------------------------------------------------------------
      // Other private member functions.
      //------------------------------------------------------------------------

      virtual void solve ();
         //
         // Override from class OptSolver.

      void solveLpUnAcc ();
         //
         // Makes appropriate calls to CLP to solve the optimization problem as
         // an LP in unaccelerated mode.

      void checkSolnStatus ();
         //
         // Checks the status of the solution.
         // Issues an error, if it is anything other than optimal.

      ClpSimplex * myClpSimplex ();
         //
         // Returns the ClpSimplex for this ClpSolver.
         // Requires that myOsiClpSI_ is not NULL.

      virtual OsiSolverInterface * myOsiSI ();
         //
         // Override from class OsiSolver.

      noCopyCtorAssign (WitClpSolver);

      //-----------------------------------------------------------------------
      // Private member data.
      //-----------------------------------------------------------------------

      OsiClpSolverInterface * myOsiClpSI_;
         //
         // The OsiSolverInterface owned by this ClpSolver, or NULL.
   };

#endif
@


1.5
log
@Continued implementation of opt with COIN.
@
text
@@


1.4
log
@Continued implementation of opt with COIN.
@
text
@a39 2
//
// Implemented in ClpSolverI.h.
@


1.3
log
@Continued implementation of opt with COIN.
@
text
@d22 7
d84 5
d99 1
a99 1
      OsiSolverInterface * myOsiSI_;
@


1.2
log
@Continued implementation of opt with COIN.
@
text
@d67 1
a67 1
      void passFixedModel ();
d69 7
a75 1
         // Passes the fixed parts of the optimization model to CLP.
@


1.1
log
@Continued implementation of opt with COIN.
@
text
@d19 1
a19 1
#include <OptSolver.h>
d31 2
a32 1
//       ClpSolver
d37 1
a37 1
class WitClpSolver: public WitOptSolver
d67 8
d80 4
@

