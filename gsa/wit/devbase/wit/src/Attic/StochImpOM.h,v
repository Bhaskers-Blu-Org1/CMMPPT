head	1.5;
access;
symbols
	sce_5_01_20080919:1.2;
locks; strict;
comment	@ * @;


1.5
date	2010.08.19.18.00.15;	author rjw;	state dead;
branches;
next	1.4;

1.4
date	2010.03.24.21.31.03;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2010.03.23.22.45.21;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2008.02.29.23.24.30;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2008.02.28.00.00.43;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.5
log
@CPLEX
@
text
@//------------------------------------------------------------------------------
//
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
// 
//------------------------------------------------------------------------------

#ifndef StochImpOMH
#define StochImpOMH

//------------------------------------------------------------------------------
// Header file: "StochImpOM.h"
//
// Contains the declaration of class StochImpOM.
//------------------------------------------------------------------------------

#include <OptModel.h>
#include <List.h>

//------------------------------------------------------------------------------
// class StochImpOM
//
// "Stochastic Implosion Optimization Model"
//
// Class hierarchy:
//
//    ProbAssoc
//       OptModel
//          StochImpOM
//
// Implemented in StochOpt.C.
//------------------------------------------------------------------------------

class WitStochImpOM: public WitOptModel
   {
   public:

      //-----------------------------------------------------------------------
      // Constructor functions.
      //-----------------------------------------------------------------------

      WitStochImpOM (WitStochModeMgr *);

      //-----------------------------------------------------------------------
      // Destructor function.
      //-----------------------------------------------------------------------

      virtual ~WitStochImpOM ();

      //-----------------------------------------------------------------------
      // Overriding public virtual member functions.
      //-----------------------------------------------------------------------

      virtual bool needDual         ();
      virtual void reportInfeasible ();
      virtual void reportUnbounded  ();

      //-----------------------------------------------------------------------
      // OptVC item printing functions.
      //
      // Each of these functions prints its argument to modelFile ().
      //-----------------------------------------------------------------------

      void printItem (WitNode *);
      void printItem (WitDemand *);
      void printItem (WitBomEntry *);
      void printItem (WitSubEntry *);
      void printItem (WitStBddVar *);

      //-----------------------------------------------------------------------
      // Access functions.
      //-----------------------------------------------------------------------

      accessFunc    (WitStochModeMgr *,                myStochModeMgr)
      accessFunc    (WitScenGroup *,                   myScenGroupForStage0)
      accessNonNull (WitExecPerSched <WitBillEntry> *, myExecPerSched)

   private:

      //-----------------------------------------------------------------------
      // Overriding private virtual member functions.
      //-----------------------------------------------------------------------

      virtual void generateVariables   ();
      virtual void generateConstraints ();
      virtual void postGenFixed        ();
      virtual void postGenFlexible     ();
      virtual void printOptVCHeading   ();
      virtual void doScreening         ();

      //-----------------------------------------------------------------------
      // Other private member functions.
      //-----------------------------------------------------------------------

      void buildScenGroups ();
         //
         // Creates theScenGroups to be owned by this StochImpOM.
         // To be called during construction.

      bool positiveHardLBsExist  ();
         //
         // Returns true iff there is at least one BoundSet with a positive
         // hardLB in some Scenario.

      bool disallowedScrapExists ();
         //
         // Returns true iff there is at least one Part with
         // scrapAllowed == false.

      noCopyCtorAssign (WitStochImpOM);

      //-----------------------------------------------------------------------
      // Private member data.
      //-----------------------------------------------------------------------

      WitStochModeMgr * const myStochModeMgr_;
         //
         // The StochModeMgr for this StochImpOM.

      WitList <WitScenGroup> myScenGroups_;
         //
         // The ScenGroups owned by this StochImpOM.

      WitScenGroup * myScenGroupForStage0_;
         //
         // The ScenGroup owned by this StochImpOM for Stage 0.

      WitExecPerSched <WitBillEntry> * myExecPerSched_;
         //
         // The ExecPerSched owned by this StochImpOM during fixed matrix
         // generation; otherwise NULL.
   };

#endif
@


1.4
log
@Removed OptObj classes.
@
text
@@


1.3
log
@Removed class StBoundsObj.
@
text
@a78 1
      accessNonNull (WitStochObj *,                    myStochObj)
d86 6
a91 7
      virtual void        generateVariables   ();
      virtual void        generateConstraints ();
      virtual WitOptObj * generateObjectives  ();
      virtual void        postGenFixed        ();
      virtual void        postGenFlexible     ();
      virtual void        printOptVCHeading   ();
      virtual void        doScreening         ();
a133 4

      WitStochObj * myStochObj_;
         //
         // The StochObj owned by this StochImpOM.
@


1.2
log
@Stochastic Implosion
@
text
@a79 1
      accessNonNull (WitStBoundsObj *,                 myStBoundsObj)
d137 1
a137 2
      WitStochObj *    myStochObj_;
      WitStBoundsObj * myStBoundsObj_;
d139 1
a139 1
         // The OptObjs owned by this StochImpOM.
@


1.1
log
@Stochastic Implosion
@
text
@d63 1
a63 1
      // Each of these functions prints its argument to optProbFile ().
@

