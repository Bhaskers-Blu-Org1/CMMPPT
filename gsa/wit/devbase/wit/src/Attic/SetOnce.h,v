head	1.3;
access;
symbols;
locks; strict;
comment	@ * @;


1.3
date	2006.08.28.15.58.32;	author rjw;	state dead;
branches;
next	1.2;

1.2
date	2006.08.25.19.56.44;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2006.08.25.19.02.29;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.3
log
@App Controlled opt implosion.
@
text
@//------------------------------------------------------------------------------
//
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
// 
//------------------------------------------------------------------------------

#ifndef SetOnceH
#define SetOnceH

//------------------------------------------------------------------------------
// Header file: "SetOnce.h"
//
// Contains the declaration of class template SetOnce <Value>.
//------------------------------------------------------------------------------

#include <Util.h>

//------------------------------------------------------------------------------
// Class template SetOnce <Value>
//
// For any type, Value, a SetOnce <Value> is a Value that must be set before it
// is used and must be cleared before it is set again.
//
// All implementation is inline.
//------------------------------------------------------------------------------

template <typename Value> 
      class WitSetOnce
   {
   public:

      //-----------------------------------------------------------------------
      // Constructor functions.
      //-----------------------------------------------------------------------

      inline WitSetOnce ():
            myValue_   (),
            specified_ (false)
         {
         }

      //-----------------------------------------------------------------------
      // Destructor function.
      //-----------------------------------------------------------------------

      inline ~WitSetOnce ()
         {
         }

      //-----------------------------------------------------------------------
      // Other public member functions.
      //-----------------------------------------------------------------------

      inline void operator = (Value theValue)
         {
         nonMsgAssert (not specified_);

         myValue_   = theValue;

         specified_ = true;
         }

      inline operator const Value & () const
         {
         nonMsgAssert (specified_);

         return myValue_;
         }

      inline void clear ()
         {
         nonMsgAssert (specified_);

         specified_ = false;
         }

   private:

      //-----------------------------------------------------------------------
      // Private member functions.
      //-----------------------------------------------------------------------

      noCopyCtorAssign (WitSetOnce);

      //-----------------------------------------------------------------------
      // Private member data.
      //-----------------------------------------------------------------------

      Value myValue_;
         //
         // The value of this SetOnce <Value>.

      bool specified_;
         //
         // true, iff the value of this SetOnce <Value> has been specified.
   };

#endif
@


1.2
log
@App controlled opt implosion.
@
text
@@


1.1
log
@App controlled opt implosion.
@
text
@d59 1
a59 1
         witAssert (not specified_);
d68 1
a68 1
         witAssert (specified_);
d75 1
a75 1
         witAssert (specified_);
@

