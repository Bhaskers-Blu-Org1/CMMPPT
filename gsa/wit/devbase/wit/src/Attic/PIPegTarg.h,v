head	1.5;
access;
symbols;
locks; strict;
comment	@ * @;


1.5
date	2003.09.30.15.40.54;	author rjw;	state dead;
branches;
next	1.4;

1.4
date	2003.09.29.23.29.41;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2003.09.29.19.25.49;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2003.09.26.20.55.13;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2003.09.25.19.29.02;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Continued implementation of post-implosion pegging.
@
text
@//------------------------------------------------------------------------------
//
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
// 
//------------------------------------------------------------------------------

#ifndef PIPegTargH
#define PIPegTargH

//------------------------------------------------------------------------------
// Header file: "PIPegTarg.h"
//
// Contains the declaration of class PIPegTarg.
//------------------------------------------------------------------------------

#include <Util.h>

//------------------------------------------------------------------------------
// Class PIPegTarg
//
// "Post-Implosion Pegging Target"
// Each instance corresponds to a Demand and shipPer and stores the pegging for
// that Demand in that shipPer.
//------------------------------------------------------------------------------

class WitPIPegTarg: public WitUtil
   {
   public:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitPIPegTarg (WitDemand *, WitPeriod);

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      ~WitPIPegTarg ();

      //------------------------------------------------------------------------
      // Other public member functions.
      //------------------------------------------------------------------------

      //------------------------------------------------------------------------
      // Data access functions.
      //------------------------------------------------------------------------

      accessFunc (WitDemand *, myDemand)
      accessFunc (WitPeriod,   myShipPer)

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      noCopyCtorAssign (WitPIPegTarg);

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      WitDemand * const myDemand_;
         //
         // The Demand for this PIPegTarg.

      const WitPeriod myShipPer_;
         //
         // The shipment period for this PIPegTarg.
   };

#endif
@


1.4
log
@Contined implementation of post-implosion pegging.
@
text
@@


1.3
log
@Continued implementation of post-implosion pegging.
@
text
@d37 1
a37 1
      WitPIPegTarg (WitProblem *);
d53 3
d67 8
@


1.2
log
@Continued implementation of post-implosion pegging.
@
text
@d19 1
a19 1
#include <ObjStack.h>
a63 7

      WitObjStack <WitPartPerVol> supVolPegging_;
         //
         // The supplyVol pegging for this PIPegTarg.
         // For each triple in this list, (thePart, supPer, incSupVol), the
         // consumption of incSupVol units of the supply of thePart in supPer is
         // pegged to the Demand and shipPer for this PIPegTarg.
@


1.1
log
@Continued implementation of post-implosion pegging.
@
text
@d19 1
a19 1
#include <Util.h>
d23 4
d37 1
a37 1
      WitPIPegTarg ();
d64 7
@

