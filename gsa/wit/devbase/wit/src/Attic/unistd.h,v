head	1.2;
access;
symbols;
locks; strict;
comment	@ * @;


1.2
date	2006.03.24.19.16.12;	author rjw;	state dead;
branches;
next	1.1;

1.1
date	2006.03.21.16.18.14;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Removed unistd.h.
Regenerated witLexer.C.
Minor updates for GPIP.
@
text
@//------------------------------------------------------------------------------
//
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
// 
//------------------------------------------------------------------------------

#ifndef unistdH
#define unistdH

//------------------------------------------------------------------------------
// Header file: "unistd.h"
//
// This file intensionally has no C++ content.
// It is needed in WIT for the following reason:
//
// The file witLexer.C, which is automatically generated by flex when WIT is
// being built on Linux, contains the following statement:
//
//    #include <unistd.h>
//    
// While unistd.h seems to be a standard file on UNIX platforms (including
// Linux), it is not present on other platforms such as Windows and so this
// statement would  normally result in a compile-time error on non-UNIX
// platforms. Unfortunately, this #include statement does not correspond to any
// statement in the file witLexer.l from which witLexer.C is generated, and so
// we have no way to prevent flex from automatically placing it in witLexer.C.
// But fortunately, we have determined that witLexer.C does not actually need
// any of the content of unistd.h. Thus by adding this dummy version of unistd.h
// to WIT's main source directory, we were able to make the #include statement
// harmless on all platforms.
//
// Apparently flex generates the #include statement because the generated code
// uses the function isatty (), which is declared in unistd.h. To solve this
// problem, we added the following line to witLexer.l:
//
//    #define YY_NEVER_INTERACTIVE 1
//
// This causes the line in witLexer.C that uses isatty () to be skipped in
// compilation, due to an #if #else #endif sequence.
//------------------------------------------------------------------------------

#endif
@


1.1
log
@Added unistd.h in order to solve a problem with witLexer.C on some platforms.
@
text
@@

