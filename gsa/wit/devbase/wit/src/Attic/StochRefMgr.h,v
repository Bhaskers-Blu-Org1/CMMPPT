head	1.2;
access;
symbols;
locks; strict;
comment	@ * @;


1.2
date	2007.06.08.18.09.41;	author rjw;	state dead;
branches;
next	1.1;

1.1
date	2007.05.24.21.57.11;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Stochastic Implosion
@
text
@//------------------------------------------------------------------------------
//
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
// 
//------------------------------------------------------------------------------

#ifndef StochRefMgrH
#define StochRefMgrH

//------------------------------------------------------------------------------
// Header file: "StochRefMgr.h"
//
// Contains the declaration of class StochRefMgr.
//------------------------------------------------------------------------------

#include <Assoc.h>
#include <RefMap.h>

//------------------------------------------------------------------------------
// Class StochRefMgr
//
// "Stochastic Reference Manager"
// Owns and works with references to all of the stochastic attributes.
//
// Implemented in StochImp.C.
//------------------------------------------------------------------------------

class WitStochRefMgr: public WitProbAssoc
   {
   public:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitStochRefMgr (WitStochModeMgr *);

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      ~WitStochRefMgr ();

      //------------------------------------------------------------------------
      // Other public member functions.
      //------------------------------------------------------------------------

      void acquireRefs ();
         //
         // Causes all Components to pass references to their stochastic data
         // to this StochRefMgr.

      void restoreInput ();
         //
         // Restores the values of all stochastic input attributes to the values
         // saved in the current Scenario.

      void clearSoln ();
         //
         // Clears the stochastic solution data.

      void restoreSoln ();
         //
         // Restores the values of all stochastic solution attributes to the
         // values saved in the current Scenario.

      void setObjValues (
            double objValueVal,
            double boundsValueVal);
         //
         // Sets the objective function values to the arguments.

      //------------------------------------------------------------------------
      // Reference receiving functions.
      // Each of these functions stores its arguments on the assumption that
      // they are references to the similarly named data members of the
      // Component for which passStochRefs () is currently being called.
      //------------------------------------------------------------------------

      void receivePartRefs      (WitDblFlexVec &    scrapVolArg);
      void receiveMaterialRefs  (WitDblFlexVec &    stockVolArg);
      void receiveDemandRefs    (WitDblFlexVec &   demandVolArg,
                                 WitDblFlexVec &     shipVolArg,
                                 WitDblFlexVec &  cumShipVolArg);
      void receiveOperationRefs (WitDblFlexVec &     execVolArg);
      void receiveSubEntryRefs  (WitDblFlexVec &      subVolArg);
      void receiveOptImpData    (double        &    objValueArg,
                                 double        & boundsValueArg);

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      accessNonNull (WitComponent *, passRefsComp)

      noCopyCtorAssign (WitStochRefMgr);

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      WitStochModeMgr * myStochModeMgr_;
         //
         // The StochModeMgr that owns this StochRefMgr.

      WitComponent * passRefsComp_;
         //
         // The Component for which passStochRefs is currently being called, if
         // any; otherwise NULL.

      //------------------------------------------------------------------------
      // References to stochastic input attributes.
      //------------------------------------------------------------------------

      WitRefMap <WitDemand,    WitDblFlexVec> demandVol_;

      //------------------------------------------------------------------------
      // References to stochastic solution attributes.
      //------------------------------------------------------------------------

      WitRefMap <WitPart,      WitDblFlexVec> scrapVol_;
      WitRefMap <WitMaterial,  WitDblFlexVec> stockVol_;
      WitRefMap <WitDemand,    WitDblFlexVec> shipVol_;
      WitRefMap <WitDemand,    WitDblFlexVec> cumShipVol_;
      WitRefMap <WitOperation, WitDblFlexVec> execVol_;
      WitRefMap <WitSubEntry,  WitDblFlexVec> subVol_;

      //------------------------------------------------------------------------
      // Pointers to stochastic solution attributes.
      //------------------------------------------------------------------------

      double * objValuePtr_;
      double * boundsValuePtr_;
   };

#endif
@


1.1
log
@Stochastic Implosion
@
text
@@

