head	1.6;
access;
symbols;
locks; strict;
comment	@ * @;


1.6
date	2006.03.03.22.22.05;	author rjw;	state dead;
branches;
next	1.5;

1.5
date	2006.03.03.20.46.56;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2006.01.20.18.31.59;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2006.01.12.22.09.24;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2006.01.12.20.07.43;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2006.01.12.16.28.33;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.6
log
@[shared-resource pegging]
@
text
@//------------------------------------------------------------------------------
//
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
// 
//------------------------------------------------------------------------------

#ifndef SrpOwnerH
#define SrpOwnerH

//------------------------------------------------------------------------------
// Header file: "SrpOwner.h"
//
// Contains the declaration of class SrpOwner.
//------------------------------------------------------------------------------

#include <PipOwner.h>

//------------------------------------------------------------------------------
// Class SrpOwner
//
// "Shared-Resource Pegging Owner"
// Owns and manages the pegging for the Shared-Resource Pegging Subsystem.
//
// Class Hierarchy:
//
// ProbAssoc
//    PipOwner
//       SrpOwner
//
// Implemented in SRP.C.
//------------------------------------------------------------------------------

class WitSrpOwner: public WitPipOwner
   {
   public:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitSrpOwner (WitProblem *);

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      ~WitSrpOwner ();

      //------------------------------------------------------------------------
      // Overrides from class PipOwner.
      //------------------------------------------------------------------------

      virtual void getExecVolTrips (
            WitDemand *       theDemand,
            WitPeriod         shipPer,
            WitOpnTripStack & execVolTrips);

      virtual void getSubVolTrips (
            WitDemand *       theDemand,
            WitPeriod         shipPer,
            WitSubTripStack & subVolTrips);

      virtual void getPartPegTrips (
            WitDemand *        theDemand,
            WitPeriod          shipPer,
            WitPipPartAtt::Tag theAttTag,
            WitPartTripStack & thePegTrips);

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      void checkRestrictions ();
         //
         // Verifies that the various data restrictions for SRP are met.

      noCopyCtorAssign (WitSrpOwner);
   };

#endif
@


1.5
log
@[shared-resource pegging]
@
text
@@


1.4
log
@[shared-resource pegging]
@
text
@a19 1
#include <PtrSched.h>
a82 9

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      WitPtrSched <WitDemand, WitOpnTripStack> myExecVolTrips_;
         //
         // myExecVolTrips_.myElemAt (theDemand, shipPer) is the execVol pegging
         // of theDemand in shipPer, stored in reverse order.
@


1.3
log
@[shared-resource pegging]
@
text
@a82 4
      void buildPegging ();
         //
         // Builds the pegging.

@


1.2
log
@[shared-resource pegging]
@
text
@d45 1
a45 1
      WitSrpOwner (WitPipSeqMgr *);
@


1.1
log
@[shared-resource pegging]
@
text
@d19 1
a19 1
#include <PipCoord.h>
d31 1
a31 1
//    PipCoord
d37 1
a37 1
class WitSrpOwner: public WitPipCoord
d54 1
a54 1
      // Overrides from class PipCoord.
@

