head	1.13;
access;
symbols
	sce_5_01_20080919:1.5;
locks; strict;
comment	@ * @;


1.13
date	2010.03.24.21.31.02;	author rjw;	state dead;
branches;
next	1.12;

1.12
date	2010.03.18.22.46.29;	author rjw;	state Exp;
branches;
next	1.11;

1.11
date	2010.03.18.22.35.01;	author rjw;	state Exp;
branches;
next	1.10;

1.10
date	2010.02.05.20.41.52;	author rjw;	state Exp;
branches;
next	1.9;

1.9
date	2010.01.06.23.20.48;	author rjw;	state Exp;
branches;
next	1.8;

1.8
date	2009.12.21.20.35.47;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2009.11.19.21.05.10;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2009.11.13.19.01.24;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2008.03.03.22.35.42;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2008.02.27.23.43.42;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2007.08.09.20.17.42;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2007.08.09.19.30.35;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2007.08.01.21.50.40;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.13
log
@Removed OptObj classes.
@
text
@//------------------------------------------------------------------------------
//
//     (c) Copyright IBM Corp. 2006.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
//
//------------------------------------------------------------------------------

#ifndef DetObjsH
#define DetObjsH

//------------------------------------------------------------------------------
// Header file: "DetObjs.h"
//
// Contains the declaration of the following classes:
//
//    DetObj
//    ZeroObj
//------------------------------------------------------------------------------

#include <OptObj.h>

//------------------------------------------------------------------------------
// class DetObj
//
// Objective for the deterministic optimization model.
//
// Class hierarchy:
//
//    ProbAssoc
//       OptObj
//          DetObj
//
// Implemented in DetObjs.C.
//------------------------------------------------------------------------------

class WitDetObj: public WitOptObj
   {
   public:

      //-----------------------------------------------------------------------
      // Constructor functions.
      //-----------------------------------------------------------------------

      WitDetObj (WitDetImpOM * theDetImpOM);

      //-----------------------------------------------------------------------
      // Destructor function.
      //-----------------------------------------------------------------------

      virtual ~WitDetObj ();

      //-----------------------------------------------------------------------
      // Overriding public virtual member functions.
      //-----------------------------------------------------------------------

      virtual double coeffVal (WitOptVar * theVar);

   private:

      //-----------------------------------------------------------------------
      // Private member functions.
      //-----------------------------------------------------------------------

      noCopyCtorAssign (WitDetObj);

      //-----------------------------------------------------------------------
      // Private member data.
      //-----------------------------------------------------------------------

      WitDetImpOM * const myDetImpOM_;
         //
         // The DetImpOM to which this DetObj belongs.
   };

//------------------------------------------------------------------------------
// class ZeroObj
//
// An Objective whose value is always zero.
// Used as the nominal objective in multiple objectives mode.
//
// Class hierarchy:
//
//    ProbAssoc
//       OptObj
//          ZeroObj
//
// Implemented in DetObjs.C.
//------------------------------------------------------------------------------

class WitZeroObj: public WitOptObj
   {
   public:

      //-----------------------------------------------------------------------
      // Constructor functions.
      //-----------------------------------------------------------------------

      WitZeroObj (WitDetImpOM *);

      //-----------------------------------------------------------------------
      // Destructor function.
      //-----------------------------------------------------------------------

      virtual ~WitZeroObj ();

      //-----------------------------------------------------------------------
      // Overriding public virtual member functions.
      //-----------------------------------------------------------------------

      virtual double coeffVal (WitOptVar *);

   private:

      //-----------------------------------------------------------------------
      // Private member functions.
      //-----------------------------------------------------------------------

      noCopyCtorAssign (WitZeroObj);
   };

#endif
@


1.12
log
@Removed class PrimaryObj.
@
text
@@


1.11
log
@Removed class BoundsObj.
@
text
@a17 1
//    PrimaryObj
a24 45
// class PrimaryObj
//
// The primary objective of the optimization model.
//
// Class hierarchy:
//
//    ProbAssoc
//       OptObj
//          PrimaryObj
//
// Implemented in DetObjs.C.
//------------------------------------------------------------------------------

class WitPrimaryObj: public WitOptObj
   {
   public:

      //-----------------------------------------------------------------------
      // Constructor functions.
      //-----------------------------------------------------------------------

      WitPrimaryObj (WitDetImpOM * theDetImpOM);

      //-----------------------------------------------------------------------
      // Destructor function.
      //-----------------------------------------------------------------------

      virtual ~WitPrimaryObj ();

      //-----------------------------------------------------------------------
      // Overriding public virtual member functions.
      //-----------------------------------------------------------------------

      virtual double coeffVal (WitOptVar * theVar);

   private:

      //-----------------------------------------------------------------------
      // Private member functions.
      //-----------------------------------------------------------------------

      noCopyCtorAssign (WitPrimaryObj);
   };

//------------------------------------------------------------------------------
@


1.10
log
@multi-obj mode
@
text
@a17 1
//    BoundsObj
a25 45
// class BoundsObj
//
// The Bounds objective for the optimization model.
//
// Class hierarchy:
//
//    ProbAssoc
//       OptObj
//          BoundsObj
//
// Implemented in DetObjs.C.
//------------------------------------------------------------------------------

class WitBoundsObj: public WitOptObj
   {
   public:

      //-----------------------------------------------------------------------
      // Constructor functions.
      //-----------------------------------------------------------------------

      WitBoundsObj (WitDetImpOM * theDetImpOM);

      //-----------------------------------------------------------------------
      // Destructor function.
      //-----------------------------------------------------------------------

      virtual ~WitBoundsObj ();

      //-----------------------------------------------------------------------
      // Overriding public virtual member functions.
      //-----------------------------------------------------------------------

      virtual double coeffVal (WitOptVar * theVar);

   private:

      //-----------------------------------------------------------------------
      // Private member functions.
      //-----------------------------------------------------------------------

      noCopyCtorAssign (WitBoundsObj);
   };

//------------------------------------------------------------------------------
@


1.9
log
@Multi-objective mode
@
text
@d173 1
a173 1
// Used as the nominal objective in multi-objective mode.
@


1.8
log
@Removed some references to objective #1.
@
text
@d21 1
d169 46
@


1.7
log
@Obj1Obj ==> DetObj
@
text
@d73 1
a73 1
// The primary objective for objective #1 of the optimization model.
@


1.6
log
@Removing objective #2.
@
text
@d20 1
a20 1
//    Obj1Obj
d116 1
a116 1
// class Obj1Obj
d118 1
a118 1
// Objective #1 for the optimization model.
d124 1
a124 1
//          Obj1Obj
d129 1
a129 1
class WitObj1Obj: public WitOptObj
d137 1
a137 1
      WitObj1Obj (WitDetImpOM * theDetImpOM);
d143 1
a143 1
      virtual ~WitObj1Obj ();
d157 1
a157 1
      noCopyCtorAssign (WitObj1Obj);
d165 1
a165 1
         // The DetImpOM to which this Obj1Obj belongs.
@


1.5
log
@Stochastic Implosion
@
text
@a20 5
//    RevObj
//    InvObj
//    ServObj
//    SubObj
//    Obj2Obj
a167 233
//------------------------------------------------------------------------------
// class RevObj
//
// The revenue objective for objective #2 of the optimization model.
//
// Class hierarchy:
//
//    ProbAssoc
//       OptObj
//          RevObj
//
// Implemented in DetObjs.C.
//------------------------------------------------------------------------------

class WitRevObj: public WitOptObj
   {
   public:

      //-----------------------------------------------------------------------
      // Constructor functions.
      //-----------------------------------------------------------------------

      WitRevObj (WitDetImpOM * theDetImpOM);

      //-----------------------------------------------------------------------
      // Destructor function.
      //-----------------------------------------------------------------------

      virtual ~WitRevObj ();

      //-----------------------------------------------------------------------
      // Overriding public virtual member functions.
      //-----------------------------------------------------------------------

      virtual double coeffVal (WitOptVar * theVar);

   private:

      //-----------------------------------------------------------------------
      // Private member functions.
      //-----------------------------------------------------------------------

      noCopyCtorAssign (WitRevObj);
   };

//------------------------------------------------------------------------------
// class InvObj
//
// The inventory objective for objective #2 of the optimization model.
//
// Class hierarchy:
//
//    ProbAssoc
//       OptObj
//          InvObj
//
// Implemented in DetObjs.C.
//------------------------------------------------------------------------------

class WitInvObj: public WitOptObj
   {
   public:

      //-----------------------------------------------------------------------
      // Constructor functions.
      //-----------------------------------------------------------------------

      WitInvObj (WitDetImpOM * theDetImpOM);

      //-----------------------------------------------------------------------
      // Destructor function.
      //-----------------------------------------------------------------------

      virtual ~WitInvObj ();

      //-----------------------------------------------------------------------
      // Overriding public virtual member functions.
      //-----------------------------------------------------------------------

      virtual double coeffVal (WitOptVar * theVar);

   private:

      //-----------------------------------------------------------------------
      // Private member functions.
      //-----------------------------------------------------------------------

      noCopyCtorAssign (WitInvObj);
   };

//------------------------------------------------------------------------------
// class ServObj
//
// The serviceability objective for objective #2 of the optimization model.
//
// Class hierarchy:
//
//    ProbAssoc
//       OptObj
//          ServObj
//
// Implemented in DetObjs.C.
//------------------------------------------------------------------------------

class WitServObj: public WitOptObj
   {
   public:

      //-----------------------------------------------------------------------
      // Constructor functions.
      //-----------------------------------------------------------------------

      WitServObj (WitDetImpOM * theDetImpOM);

      //-----------------------------------------------------------------------
      // Destructor function.
      //-----------------------------------------------------------------------

      virtual ~WitServObj ();

      //-----------------------------------------------------------------------
      // Overriding public virtual member functions.
      //-----------------------------------------------------------------------

      virtual double coeffVal (WitOptVar * theVar);

   private:

      //-----------------------------------------------------------------------
      // Private member functions.
      //-----------------------------------------------------------------------

      noCopyCtorAssign (WitServObj);
   };

//------------------------------------------------------------------------------
// class SubObj
//
// The substitute objective for objective #2 of the optimization model.
//
// Class hierarchy:
//
//    ProbAssoc
//       OptObj
//          SubObj
//
// Implemented in DetObjs.C.
//------------------------------------------------------------------------------

class WitSubObj: public WitOptObj
   {
   public:

      //-----------------------------------------------------------------------
      // Constructor functions.
      //-----------------------------------------------------------------------

      WitSubObj (WitDetImpOM * theDetImpOM);

      //-----------------------------------------------------------------------
      // Destructor function.
      //-----------------------------------------------------------------------

      virtual ~WitSubObj ();

      //-----------------------------------------------------------------------
      // Overriding public virtual member functions.
      //-----------------------------------------------------------------------

      virtual double coeffVal (WitOptVar * theVar);

   private:

      //-----------------------------------------------------------------------
      // Private member functions.
      //-----------------------------------------------------------------------

      noCopyCtorAssign (WitSubObj);
   };

//------------------------------------------------------------------------------
// class Obj2Obj
//
// Objective #2 for the optimization model.
//
// Class hierarchy:
//
//    ProbAssoc
//       OptObj
//          Obj2Obj
//
// Implemented in DetObjs.C.
//------------------------------------------------------------------------------

class WitObj2Obj: public WitOptObj
   {
   public:

      //-----------------------------------------------------------------------
      // Constructor functions.
      //-----------------------------------------------------------------------

      WitObj2Obj (WitDetImpOM * theDetImpOM);

      //-----------------------------------------------------------------------
      // Destructor function.
      //-----------------------------------------------------------------------

      virtual ~WitObj2Obj ();

      //-----------------------------------------------------------------------
      // Overriding public virtual member functions.
      //-----------------------------------------------------------------------

      virtual double coeffVal (WitOptVar * theVar);

   private:

      //-----------------------------------------------------------------------
      // Private member functions.
      //-----------------------------------------------------------------------

      noCopyCtorAssign (WitObj2Obj);

      //-----------------------------------------------------------------------
      // Private member data.
      //-----------------------------------------------------------------------

      WitDetImpOM * const myDetImpOM_;
         //
         // The DetImpOM to which this Obj2Obj belongs.
   };

@


1.4
log
@Stochastic Implosion
@
text
@d33 1
a33 1
// The Bounds objective for the optimization problem.
d78 1
a78 1
// The primary objective for objective #1 of the optimization problem.
d123 1
a123 1
// Objective #1 for the optimization problem.
d176 1
a176 1
// The revenue objective for objective #2 of the optimization problem.
d221 1
a221 1
// The inventory objective for objective #2 of the optimization problem.
d266 1
a266 1
// The serviceability objective for objective #2 of the optimization problem.
d311 1
a311 1
// The substitute objective for objective #2 of the optimization problem.
d356 1
a356 1
// Objective #2 for the optimization problem.
@


1.3
log
@Stochastic Implosion
@
text
@d52 1
a52 1
      WitBoundsObj (WitDetImpOP * theDetImpOP);
d97 1
a97 1
      WitPrimaryObj (WitDetImpOP * theDetImpOP);
d142 1
a142 1
      WitObj1Obj (WitDetImpOP * theDetImpOP);
d168 1
a168 1
      WitDetImpOP * const myDetImpOP_;
d170 1
a170 1
         // The DetImpOP to which this Obj1Obj belongs.
d195 1
a195 1
      WitRevObj (WitDetImpOP * theDetImpOP);
d240 1
a240 1
      WitInvObj (WitDetImpOP * theDetImpOP);
d285 1
a285 1
      WitServObj (WitDetImpOP * theDetImpOP);
d330 1
a330 1
      WitSubObj (WitDetImpOP * theDetImpOP);
d375 1
a375 1
      WitObj2Obj (WitDetImpOP * theDetImpOP);
d401 1
a401 1
      WitDetImpOP * const myDetImpOP_;
d403 1
a403 1
         // The DetImpOP to which this Obj2Obj belongs.
@


1.2
log
@Stochastic Implosion
@
text
@d64 1
a64 1
      virtual double coeffVal (WitOptVar * theVar) const;
d109 1
a109 1
      virtual double coeffVal (WitOptVar * theVar) const;
d154 1
a154 1
      virtual double coeffVal (WitOptVar * theVar) const;
d207 1
a207 1
      virtual double coeffVal (WitOptVar * theVar) const;
d252 1
a252 1
      virtual double coeffVal (WitOptVar * theVar) const;
d297 1
a297 1
      virtual double coeffVal (WitOptVar * theVar) const;
d342 1
a342 1
      virtual double coeffVal (WitOptVar * theVar) const;
d387 1
a387 1
      virtual double coeffVal (WitOptVar * theVar) const;
@


1.1
log
@Stochastic Implosion
@
text
@d64 1
a64 1
      virtual double coeffVal (const WitOptVar * theVar) const;
d109 1
a109 1
      virtual double coeffVal (const WitOptVar * theVar) const;
d154 1
a154 1
      virtual double coeffVal (const WitOptVar * theVar) const;
d207 1
a207 1
      virtual double coeffVal (const WitOptVar * theVar) const;
d252 1
a252 1
      virtual double coeffVal (const WitOptVar * theVar) const;
d297 1
a297 1
      virtual double coeffVal (const WitOptVar * theVar) const;
d342 1
a342 1
      virtual double coeffVal (const WitOptVar * theVar) const;
d387 1
a387 1
      virtual double coeffVal (const WitOptVar * theVar) const;
@

