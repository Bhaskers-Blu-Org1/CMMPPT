head	1.5;
access;
symbols;
locks; strict;
comment	@ * @;


1.5
date	2003.03.03.21.56.11;	author rjw;	state dead;
branches;
next	1.4;

1.4
date	2003.03.03.21.54.32;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2003.03.03.21.07.30;	author rjw;	state dead;
branches;
next	1.2;

1.2
date	2003.02.28.20.47.36;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2003.02.27.19.20.20;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Re-removed file OpMgr1.h.
@
text
@//------------------------------------------------------------------------------
//
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
// 
//------------------------------------------------------------------------------

#ifndef OpMgr1H
#define OpMgr1H

//------------------------------------------------------------------------------
// Header file: "OpMgr1.h"
//------------------------------------------------------------------------------

#endif
@


1.4
log
@Re-added file OpMgr1.h, previously removed.
@
text
@@


1.3
log
@Continued implementation of proportionate routing.
@
text
@d10 2
a11 2
#ifndef OpMgrH
#define OpMgrH
d14 1
a14 7
// Header file: "OpMgr.h"
//
// Contains the declaration of the following classes:
//
//    OpMgr.
//    ProdOpMgr.
//    ConsOpMgr.
a15 254

#include <SelMgr.h>

//------------------------------------------------------------------------------
// Class OpMgr
//
// "Proportionate Routing Manager"
// Abstract interface to a section of the Proportional Routing subsystem.
//
// Class Hierarchy:
//
// ProbAssoc
//    SelMgr
//       OpMgr
//          ProdOpMgr
//          ConsOpMgr
//
// Implemented in OldPr1.C.
//------------------------------------------------------------------------------

class WitOpMgr: public WitSelMgr
   {
   public:

      //------------------------------------------------------------------------
      // Public member functions.
      //------------------------------------------------------------------------

      void print ();
         //
         // Prints the section of the proportionate routing subsystem owned by
         // this OpMgr.

      //------------------------------------------------------------------------
      // Selection Splitting functions.
      //------------------------------------------------------------------------

      virtual bool selSplitNeeded ();
         //
         // Override from class SelMgr.

   protected:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitOpMgr (WitOrMgr *, WitSelector *);

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      virtual ~WitOpMgr ();

      //------------------------------------------------------------------------
      // Other protected member functions.
      //------------------------------------------------------------------------

      WitSelPt * mySelPtForAltByOpPt (WitOpPt * theOpPt);
         //
         // Returns SelMgr::mySelPtForAlt for arguments correponding to theOpPt
         // for this OpMgr.

      //------------------------------------------------------------------------
      // Data access functions.
      //------------------------------------------------------------------------

      accessFunc (WitOpCoord *, myOpCoord)

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      noCopyCtorAssign (WitOpMgr);

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      WitOpCoord * myOpCoord_;
         //
         // The OpCoord owned by this OpMgr.
   };

//------------------------------------------------------------------------------
// Class ProdOpMgr
//
// "Production Proportionate Routing Manager"
// Interface to the production section of the Proportionate Routing subsystem.
//
// Class Hierarchy:
//
// ProbAssoc
//    SelMgr
//       OpMgr
//          ProdOpMgr
//
// Implemented in OldPr1.C.
//------------------------------------------------------------------------------

class WitProdOpMgr: public WitOpMgr
   {
   public:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitProdOpMgr (WitSelector *);

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      virtual ~WitProdOpMgr ();

      //------------------------------------------------------------------------
      // Other public member functions.
      //------------------------------------------------------------------------

      bool propRouting (WitPart * thePart, WitPeriod expPer);
         //
         // Returns true, iff proportionate routing is to be used at thePart in
         // expPer.

      bool active (WitBopEntry * theBopEnt, WitPeriod expPer);
         //
         // Returns true, iff theBopEnt is currently active for proportionate
         // explosions in expPer.

      double normExpShare (WitBopEntry * theBopEnt, WitPeriod expPer);
         //
         // Returns the normalized explosion share for theBopEnt in expPer.
         // Valid only if active (theBopEnt, expPer) is true.

      //------------------------------------------------------------------------
      // Overrides from class SelMgr.
      //------------------------------------------------------------------------

      virtual WitSelPt *   mySelPtForAlt      (WitBopEntry *,
                                               WitConsEntry *,
                                               WitPeriod,
                                               WitPeriod);
      virtual bool         validForNetting    ();
      virtual bool         validForExecBounds ();
      virtual const char * selCaseName        ();

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      WitOpPt * myOpPtFor (WitBopEntry * theBopEnt, WitPeriod expPer);
         //
         // Returns the OpPt for theBopEnt and expPer, if any; otherwise NULL.

      noCopyCtorAssign (WitProdOpMgr);

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      WitProdOrMgr * const myProdOrMgr_;
         //
         // The ProdOrMgr for this ProdOpMgr.
   };

//------------------------------------------------------------------------------
// Class ConsOpMgr
//
// "Consumption Proportionate Routing Manager"
// Interface to the consumption section of the Proportionate Routing subsystem.
//
// Class Hierarchy:
//
// ProbAssoc
//    SelMgr
//       OpMgr
//          ConsOpMgr
//
// Implemented in OldPr1.C.
//------------------------------------------------------------------------------

class WitConsOpMgr: public WitOpMgr
   {
   public:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitConsOpMgr (WitSelector *);

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      virtual ~WitConsOpMgr ();

      //------------------------------------------------------------------------
      // Other public member functions.
      //------------------------------------------------------------------------

      bool propRouting (WitBomEntry * theBomEnt, WitPeriod execPer);
         //
         // Returns true, iff proportionate routing is to be used at theBomEnt
         // in execPer.

      bool active (WitConsEntry * theConsEnt, WitPeriod execPer);
         //
         // Returns true, iff theConsEnt is currently active for proportionate
         // explosions in execPer.

      double normExpShare (WitConsEntry * theConsEnt, WitPeriod execPer);
         //
         // Returns the normalized explosion share for theConsEnt in execPer.
         // Valid only if active (theConsEnt, execPer) is true.

      //------------------------------------------------------------------------
      // Overrides from class SelMgr.
      //------------------------------------------------------------------------

      virtual WitSelPt *   mySelPtForAlt      (WitBopEntry *,
                                               WitConsEntry *,
                                               WitPeriod,
                                               WitPeriod);
      virtual bool         validForNetting    ();
      virtual bool         validForExecBounds ();
      virtual const char * selCaseName        ();

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      WitOpPt * myOpPtFor (WitConsEntry * theConsEnt, WitPeriod execPer);
         //
         // Returns the OpPt for theConsEnt and execPer, if any; otherwise NULL.

      noCopyCtorAssign (WitConsOpMgr);

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      WitConsOrMgr * const myConsOrMgr_;
         //
         // The ConsOrMgr for this ConsOpMgr.
   };
@


1.2
log
@Continued implementation of proportionate routing.
@
text
@@


1.1
log
@Continued implementation of proportionate routing.
@
text
@d10 2
a11 2
#ifndef PrMgrH
#define PrMgrH
d14 1
a14 1
// Header file: "PrMgr.h"
d16 1
a16 1
// Contains the declaration of the following classes
@

