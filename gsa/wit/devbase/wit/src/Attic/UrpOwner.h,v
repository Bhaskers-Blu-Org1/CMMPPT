head	1.6;
access;
symbols;
locks; strict;
comment	@ * @;


1.6
date	2006.03.03.22.22.05;	author rjw;	state dead;
branches;
next	1.5;

1.5
date	2006.03.03.20.46.57;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2006.03.02.23.29.02;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2006.01.12.22.09.24;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2006.01.12.21.43.58;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2006.01.12.20.23.30;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.6
log
@[shared-resource pegging]
@
text
@//------------------------------------------------------------------------------
//
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
// 
//------------------------------------------------------------------------------

#ifndef UrpOwnerH
#define UrpOwnerH

//------------------------------------------------------------------------------
// Header file: "UrpOwner.h"
//
// Contains the declaration of class UrpOwner.
//------------------------------------------------------------------------------

#include <PipOwner.h>

//------------------------------------------------------------------------------
// Class UrpOwner
//
// "Unshared-Resource Pegging Owner"
// Owns the pegging for the Unshared-Resource Pegging Subsystem.
//
// Class Hierarchy:
//
// ProbAssoc
//    PipOwner
//       UrpOwner
//
// Implemented in SRP.C.
//------------------------------------------------------------------------------

class WitUrpOwner: public WitPipOwner
   {
   public:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitUrpOwner (WitProblem *);

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      ~WitUrpOwner ();

      //------------------------------------------------------------------------
      // Overrides from class PipOwner.
      //------------------------------------------------------------------------

      virtual void getExecVolTrips (
            WitDemand *       theDemand,
            WitPeriod         shipPer,
            WitOpnTripStack & execVolTrips);

      virtual void getSubVolTrips (
            WitDemand *       theDemand,
            WitPeriod         shipPer,
            WitSubTripStack & subVolTrips);

      virtual void getPartPegTrips (
            WitDemand *        theDemand,
            WitPeriod          shipPer,
            WitPipPartAtt::Tag theAttTag,
            WitPartTripStack & thePegTrips);

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      noCopyCtorAssign (WitUrpOwner);
   };

#endif
@


1.5
log
@[shared-resource pegging]
@
text
@@


1.4
log
@[shared-resource pegging]
@
text
@a19 1
#include <PtrSched.h>
a71 9
      //------------------------------------------------------------------------
      // Data access functions.
      //------------------------------------------------------------------------

      WitUrpTarg * myTargFor (WitDemand * theDemand, WitPeriod shipPer);
         //
         // Returns the UrpTarg for theDemand and shipPer, asserting that it
         // exists.

a77 5
      void buildTargs ();
         //
         // Builds the UrpTargs corresponding to the DemPers in the shipment
         // sequence.

a78 9

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      WitPtrSched <WitDemand, WitUrpTarg> myTargs_;
         //
         // myTargs_.myPtrAt (theDemand, shipPer) is the UrpTarg owned
         // this UrpOwner for theDemand in shipPer, or NULL, if there is none.
@


1.3
log
@[shared-resource pegging]
@
text
@a87 4
      void checkRestrictions ();
         //
         // Verifies that the various data restrictions for PIP are met.

@


1.2
log
@Modification to the implementation of unshared-resource pegging.
@
text
@d45 1
a45 1
      WitUrpOwner (WitPipSeqMgr *);
@


1.1
log
@[shared-resource pegging]
@
text
@d106 1
a106 1
         // this UrpOwner for theDemand in shipPer.
@

