head	1.6;
access;
symbols;
locks; strict;
comment	@ * @;


1.6
date	2007.08.07.17.47.15;	author rjw;	state dead;
branches;
next	1.5;

1.5
date	2007.08.07.17.35.37;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2007.07.23.21.19.55;	author rjw;	state dead;
branches;
next	1.3;

1.3
date	2007.06.27.14.52.53;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2007.06.26.20.01.30;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2007.06.25.23.12.24;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Stochastic Implosion
@
text
@//------------------------------------------------------------------------------
//
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
// 
//------------------------------------------------------------------------------

#ifndef StochVarsH
#define StochVarsH

//------------------------------------------------------------------------------
// Header file: "StochVars.h"
//
// Contains the declaration the following classes:
//
//    StScrapVar
//    StExecVar
//------------------------------------------------------------------------------

#include <StochVar.h>

//------------------------------------------------------------------------------
// class StScrapVar
// An scrap variable in a stochastic implosion optimization problem.
//
// Class hierarchy:
//
//    OptProbEl
//       OptVar
//          StochVar
//             StScrapVar
//
// Implemented in StochVars.C.
//------------------------------------------------------------------------------

class WitStScrapVar: public WitStochVar
   {
   public:

      //-----------------------------------------------------------------------
      // Constructor functions.
      //-----------------------------------------------------------------------

      WitStScrapVar (WitPart *, WitScenPer *);

      //-----------------------------------------------------------------------
      // Destructor function.
      //-----------------------------------------------------------------------

      virtual ~WitStScrapVar ();

      //-----------------------------------------------------------------------
      // Overriding public virtual member functions.
      //-----------------------------------------------------------------------

      virtual double stochCoeffVal () const;

      //-----------------------------------------------------------------------
      // Access functions.
      //-----------------------------------------------------------------------

      inline WitPart * myDerComp ()
         {
         return myPart_;
         }

   private:

      //-----------------------------------------------------------------------
      // Private member functions.
      //-----------------------------------------------------------------------

      //-----------------------------------------------------------------------
      // Overriding private virtual member functions.
      //-----------------------------------------------------------------------

      virtual void         printItem () const;
      virtual const char * classText () const;

      //-----------------------------------------------------------------------
      // Other private member functions.
      //-----------------------------------------------------------------------

      noCopyCtorAssign (WitStScrapVar);

      //-----------------------------------------------------------------------
      // Private member data.
      //-----------------------------------------------------------------------

      WitPart * const myPart_;
         //
         // The Part for this StScrapVar.
   };

//------------------------------------------------------------------------------
// class StExecVar
// An execution variable in a stochastic implosion optimization problem.
//
// Class hierarchy:
//
//    OptProbEl
//       OptVar
//          StochVar
//             StExecVar
//
// Implemented in StochVars.C.
//------------------------------------------------------------------------------

class WitStExecVar: public WitStochVar
   {
   public:

      //-----------------------------------------------------------------------
      // Constructor functions.
      //-----------------------------------------------------------------------

      WitStExecVar (WitOperation *, WitScenPer *);

      //-----------------------------------------------------------------------
      // Destructor function.
      //-----------------------------------------------------------------------

      virtual ~WitStExecVar ();

      //-----------------------------------------------------------------------
      // Overriding public virtual member functions.
      //-----------------------------------------------------------------------

      virtual double stochCoeffVal () const;

      //-----------------------------------------------------------------------
      // Access functions.
      //-----------------------------------------------------------------------

      inline WitOperation * myDerComp ()
         {
         return myOpn_;
         }

   private:

      //-----------------------------------------------------------------------
      // Private member functions.
      //-----------------------------------------------------------------------

      //-----------------------------------------------------------------------
      // Overriding private virtual member functions.
      //-----------------------------------------------------------------------

      virtual void         printItem () const;
      virtual const char * classText () const;

      //-----------------------------------------------------------------------
      // Other private member functions.
      //-----------------------------------------------------------------------

      noCopyCtorAssign (WitStExecVar);

      //-----------------------------------------------------------------------
      // Private member data.
      //-----------------------------------------------------------------------

      WitOperation * const myOpn_;
         //
         // The Operation for this StExecVar.
   };

#endif
@


1.5
log
@Stochastic Implosion
@
text
@@


1.4
log
@Stochastic Implosion
@
text
@d18 1
a18 1
//    StochVar
d22 1
a22 1
#include <OptVar.h>
d25 2
a26 3
// class StochVar
//
// An OptVar in a stochastic implosion optimization problem.
d33 3
a35 1
//             StExecVar
d38 1
a38 1
class WitStochVar: public WitOptVar
d46 1
a46 1
      WitStochVar (WitScenario *, WitPeriod);
d52 1
a52 1
      virtual ~WitStochVar ();
d58 1
a58 1
      virtual WitOptProb * myOptProb () const;
d61 1
a61 5
      // Other public member functions.
      //-----------------------------------------------------------------------

      //-----------------------------------------------------------------------
      // Data access functions.
d64 4
a67 1
      accessFunc (WitPeriod, myPer)
d75 3
a77 1
      noCopyCtorAssign (WitStochVar);
d79 2
a80 3
      static WitStochImpOP * theStochImpOPFor (WitScenario * theScenario);
         //
         // Returns the StochImpOP for theScenario.
d83 1
a83 1
      // Overriding private virtual member functions.
d86 1
a86 1
      virtual void printSource () const;
d92 1
a92 5
      WitScenario * const myScenario_;
         //
         // The Scenario for this StochVar.

      const WitPeriod myPer_;
d94 1
a94 1
         // The Period for this StochVar.
d107 2
d119 1
a119 1
      WitStExecVar (WitOperation *, WitScenario *, WitPeriod);
d128 6
d137 4
a140 1
      accessFunc (WitOperation *, myOpn)
d148 11
@


1.3
log
@Stochastic Implosion
@
text
@@


1.2
log
@Stochastic Implosion
@
text
@d77 4
@


1.1
log
@Stochastic Implosion
@
text
@d54 1
a54 1
      // Data access functions.
d57 1
a57 1
      accessFunc (WitPeriod, myPer)
d63 6
@

