head	1.2;
access;
symbols;
locks; strict;
comment	@ * @;


1.2
date	2007.02.01.16.37.23;	author rjw;	state dead;
branches;
next	1.1;

1.1
date	2007.01.31.21.58.02;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.2
log
@[disallowed backlog]
@
text
@//------------------------------------------------------------------------------
//
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
// 
//------------------------------------------------------------------------------

#ifndef UpdatedH
#define UpdatedH

//------------------------------------------------------------------------------
// Header file: "Updated.h"
//
// Contains the declaration of the following class templates:
//
//            Updated <Object>
//    PostprocUpdated <Object>
//------------------------------------------------------------------------------

#include <Util.h>

//------------------------------------------------------------------------------
// Class template Updated <Object>
//
// An instance of class PostprocUpdated <Object> is essentially an instance
// of type Object that can only be updated from a specified set of classes.
//
// All implementation is inline.
//------------------------------------------------------------------------------

template <typename Object>
      class WitUpdated
   {
   public:

      //------------------------------------------------------------------------
      // Data access function.
      //------------------------------------------------------------------------

      inline const Object & operator () () const
         {
         return myObject_;
         }

   protected:

      //------------------------------------------------------------------------
      // Constructor functions
      //------------------------------------------------------------------------

      inline WitUpdated ():
            myObject_ ()
         {
         }

      inline WitUpdated (WitProblem * theProblem):
            myObject_ (theProblem)
         {
         }

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      inline ~WitUpdated ()
         {
         }

      //------------------------------------------------------------------------
      // Other protected member functions.
      //------------------------------------------------------------------------

      inline Object & forUpdate ()
         {
         return myObject_;
         }

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      noCopyCtorAssign (WitUpdated);

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      Object myObject_;
         //
         // The underlying object.
   };

//------------------------------------------------------------------------------
// Class template PostprocUpdated <Object>
//
// An instance of class PostprocUpdated <Object> is essentially an instance
// of type Object that can only be updated from class Postprocessor.
//
// All implementation is inline.
//------------------------------------------------------------------------------

template <typename Object>
      class WitPostprocUpdated: public WitUpdated <Object>
   {
      friend class WitPostprocessor;

   public:

      //------------------------------------------------------------------------
      // Constructor functions
      //------------------------------------------------------------------------

      inline WitPostprocUpdated ():
            WitUpdated <Object> ()
         {
         }

      inline WitPostprocUpdated (WitProblem * theProblem):
            WitUpdated <Object> (theProblem)
         {
         }

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      inline ~WitPostprocUpdated ()
         {
         }

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      noCopyCtorAssign (WitPostprocUpdated);
   };

#endif
@


1.1
log
@[backlog avoidance]
@
text
@@

