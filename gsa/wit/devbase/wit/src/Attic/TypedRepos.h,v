head	1.12;
access;
symbols
	latest_sce_4_20_20060523:1.11.0.2
	sce_4_20_20060523:1.11
	latest_sce4_20_OSL:1.10.0.2
	sce_4_20_OSL:1.10
	sce_410_withVa:1.9
	sce_4_05_20040511:1.9
	sce_4_00_20040201:1.9
	nextGenBranch:1.8.0.2
	nextGenRoot:1.8
	sce_3_30_20030627:1.8
	EndRw-branch:1.3.0.4
	Root-of-EndRw:1.3
	rwToStl:1.3.0.2;
locks; strict;
comment	@ * @;


1.12
date	2007.11.12.16.30.13;	author rjw;	state dead;
branches;
next	1.11;

1.11
date	2006.05.02.17.34.15;	author rjw;	state Exp;
branches;
next	1.10;

1.10
date	2005.11.15.20.09.01;	author rjw;	state Exp;
branches;
next	1.9;

1.9
date	2003.12.24.17.11.17;	author rjw;	state Exp;
branches;
next	1.8;

1.8
date	2003.01.15.21.01.26;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2003.01.13.22.22.15;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2003.01.02.22.18.54;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2002.12.16.16.41.23;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2002.12.14.00.55.50;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2002.05.16.23.32.11;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2002.05.13.21.31.43;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2002.05.10.18.02.14;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.12
log
@Stochastic Implosion
@
text
@//------------------------------------------------------------------------------
//
//     (c) Copyright IBM Corp. 2006.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
// 
//------------------------------------------------------------------------------

#ifndef TypedReposH
#define TypedReposH

//------------------------------------------------------------------------------
// Header file: "TypedRepos.h"
//
// Contains the declaration of class template TypedRepos <Variable>.
//------------------------------------------------------------------------------

#include <PairStack.h>

//------------------------------------------------------------------------------
// Class Template TypedRepos <Variable>
//
// Saves the current values of variables of type Variable and restores them to
// the saved values upon request. 
//
// Implemented in Repos.C.
//------------------------------------------------------------------------------

template <typename Variable>
      class WitTypedRepos: public WitProbAssoc
   {
   public:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitTypedRepos (WitProblem *);

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      ~WitTypedRepos ();

      //------------------------------------------------------------------------
      // Other public member functions.
      //------------------------------------------------------------------------

      void saveVal (Variable & theVar);
         //
         // Saves the current value of theVar.

      void restore ();
         //
         // Restores each variable saved in this TypeRepos to the value it had
         // the first time it was saved since the most recent call to restore or
         // clear. Empties the set of saved variables.

      void restoreAndSave (WitTypedRepos * theTypedRepos);
         //
         // Same as restore, but clears theTypedRepos and then saves in it the
         // current values of all the variables that are being restored.

      void clear ();
         //
         // Empties the set of saved variables.

      inline bool isEmpty ()
         {
         return savedPairs_.isEmpty ();
         }

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      noCopyCtorAssign (WitTypedRepos);

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      WitPairStack <Variable, Variable> savedPairs_;
         //
         // The set of variables and saved values currently stored by this 
         // TypedRepos.
   };

#endif
@


1.11
log
@Updated the copyright date on all source files.
@
text
@@


1.10
log
@[shared-resource pegging]
@
text
@d3 1
a3 1
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
@


1.9
log
@Continued implementation of PIP.
@
text
@d16 1
a16 1
// Contains the declaration of class template TypedRepos <VarType>.
d22 1
a22 1
// Class Template TypedRepos <VarType>
d24 1
a24 1
// Saves the current values of variables of type VarType and restores them to
d30 1
a30 1
template <typename VarType>
d51 1
a51 1
      void saveVal (VarType & theVar);
d87 1
a87 1
      WitPairStack <VarType, VarType> savedPairs_;
@


1.8
log
@Various internal changes.
@
text
@d27 1
a27 1
// Implemented in Stack.C.
@


1.7
log
@Various internal changes.
@
text
@d81 1
a81 1
      noCopyCtorAssignTemp (WitTypedRepos, VarType);
@


1.6
log
@Internal changes.
@
text
@d30 1
a30 1
template <class VarType>
d61 1
a61 1
      void restoreAndSave (WitTypedRepos <VarType> * theTypedRepos);
@


1.5
log
@Continued implementation of single-source by the new algorithm.
@
text
@d70 1
a70 1
      inline WitBoolean isEmpty ()
@


1.4
log
@Continued implementation of single-source by the new algorithm.
@
text
@d63 2
a64 2
         // Same as restore, but clears theTypedRepos and saves the current
         // values of the variables in it.
@


1.3
log
@Continued implementation of single source.
@
text
@d61 5
@


1.2
log
@Continued implementation of single source.
@
text
@d65 5
@


1.1
log
@Continued implementation of single source.
@
text
@d57 7
a63 3
         // Restores all variables whose values were saved by this TypedRepos
         // to their saved values and clears this TypedRepos of all its saved
         // values. The restoration is done on a last-in-first-out basis.
@

