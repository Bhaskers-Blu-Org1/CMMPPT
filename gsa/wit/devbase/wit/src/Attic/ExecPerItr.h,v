head	1.2;
access;
symbols;
locks; strict;
comment	@ * @;


1.2
date	2007.07.31.20.39.45;	author rjw;	state dead;
branches;
next	1.1;

1.1
date	2007.05.30.21.02.10;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Stochastic Implosion
@
text
@//------------------------------------------------------------------------------
//
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
// 
//------------------------------------------------------------------------------

#ifndef ExecPerItrH
#define ExecPerItrH

//------------------------------------------------------------------------------
// Header file: "ExecPerItr.h"
//
// Contains the declaration class ExecPerItr.
//------------------------------------------------------------------------------

#include <ExecPerMgr.h>

//------------------------------------------------------------------------------
// Class ExecPerItr
//
// Responsible for interating thru the set of all execution periods 
// corresponding to a given impact period for a BillEntry.
//
// Implemented in OptImpProb.C.
//------------------------------------------------------------------------------

class WitExecPerItr
   {
   public:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitExecPerItr (WitExecPerMgr *);

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      ~WitExecPerItr ();

      //------------------------------------------------------------------------
      // Data access functions.
      //------------------------------------------------------------------------

      inline WitPeriod operator () ()
         {
         witAssert (execPeriod_ >= 0);

         return execPeriod_;
         }

      //------------------------------------------------------------------------
      // Other public member functions.
      //------------------------------------------------------------------------

      void operator () (WitBillEntry * theBillEnt, WitPeriod impactPer);
         //
         // Associates this ExecPerItr with theBillEnt in impactPer.

      bool operator ++ ();
         //
         // Moves this ExecPerItr to the next execution period.
         // This ExecPerItr must be associated with a BillEntry and period.
         // Returns true, iff another execution period was found.

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      noCopyCtorAssign (WitExecPerItr);

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      WitExecPerMgr * const myExecPerMgr_;
         //
         // The ExecPerMgr for this ExecPerItr.

      WitBillEntry * myBillEntry_;
         //
         // The BillEntry currently associated with this ExecPerItr, if any.

      WitPeriod impactPeriod_;
         //
         // The impact period currently associated with this ExecPerItr, if any.

      int myIndex_;
         //
         // The index into myBillEntry_->execPeriod_;

      WitPeriod execPeriod_;
         //
         // The execuction period currently associated with this ExecPerItr,
         // or -1, if there is none.
   };

#endif
@


1.1
log
@Stochastic Implosion
@
text
@@

