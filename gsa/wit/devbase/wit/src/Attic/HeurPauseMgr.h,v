head	1.4;
access;
symbols;
locks; strict;
comment	@ * @;


1.4
date	2010.09.07.16.38.58;	author rjw;	state dead;
branches;
next	1.3;

1.3
date	2010.09.02.23.09.22;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2010.09.02.20.16.24;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2010.09.02.18.58.25;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Heuristic Adjustment
@
text
@//------------------------------------------------------------------------------
//
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
// 
//------------------------------------------------------------------------------

#ifndef HeurPauseMgrH
#define HeurPauseMgrH

//------------------------------------------------------------------------------
// Header file: "HeurPauseMgr.h"
//
// Contains the declaration of class HeurPauseMgr.
//------------------------------------------------------------------------------

#include <Assoc.h>

//------------------------------------------------------------------------------
// Class HeurPauseMgr
//
// Responsible for implementing the heuristic pause/resume capability.
//
// Implemented in HeurAll.C.
//------------------------------------------------------------------------------

class WitHeurPauseMgr: public WitProbAssoc
   {
   public:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitHeurPauseMgr (WitProblem *);

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      ~WitHeurPauseMgr ();

      //------------------------------------------------------------------------
      // Other public member functions.
      //------------------------------------------------------------------------

      void setPauseResumeAllowed (bool);
         //
         // Setter

      void pause ();
         //
         // Puts heuristic allocation into a paused state.

      //------------------------------------------------------------------------
      // Data access functions.
      //------------------------------------------------------------------------

      accessFunc (bool, pauseResumeAllowed)
      accessFunc (bool, paused)

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      void validatePause ();
         //
         // Verifies that all of the required preconditions for a pause are
         // satsified.

      void verify (bool theAttVal, const char * theAttName, bool theReqVal);
         //
         // Verifies that theAttVal == theReqVal for a pause.
         // theAttName is the name of the attribute being checked.

      noCopyCtorAssign (WitHeurPauseMgr);

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      bool pauseResumeAllowed_;
         //
         // Pause/resume is allowed iff pauseResumeAllowed_ is true.

      bool paused_;
         //
         // True, iff heuristic allocation is currently paused.
   };

#endif
@


1.3
log
@Pause/Resume
@
text
@@


1.2
log
@Pause/Resume
@
text
@d75 5
@


1.1
log
@Pause/Resume
@
text
@d53 4
d70 5
@

