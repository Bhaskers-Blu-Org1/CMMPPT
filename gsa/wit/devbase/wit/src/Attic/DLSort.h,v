head	1.7;
access;
symbols;
locks; strict;
comment	@ * @;


1.7
date	2006.03.02.21.55.49;	author rjw;	state dead;
branches;
next	1.6;

1.6
date	2005.11.15.21.27.22;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2005.09.27.21.50.18;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2005.09.27.20.31.00;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2005.09.27.17.56.33;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2005.09.26.21.44.32;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2005.09.26.18.47.56;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.7
log
@[shared-resource pegging]
@
text
@//------------------------------------------------------------------------------
//
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
// 
//------------------------------------------------------------------------------

#ifndef DLSortH
#define DLSortH

//------------------------------------------------------------------------------
// Header file: "DLSort.h"
//
// Contains the declaration of the following classes:
//
//    AbsDLSorter
//    DLSorter <Elem>
//    DLSortEl
//------------------------------------------------------------------------------

#include <typedefs.h>

//------------------------------------------------------------------------------
// Class AbsDLSorter
//
// "Abstract Dense List Sorter"
// Responsible for sorting an AbsDenseList.
//
// Class Hierarchy:
//
//    AbsDLSorter
//       DLSorter <Elem>
//
// Implemented in Vecs.C.
//------------------------------------------------------------------------------

class WitAbsDLSorter
   {
   protected:

      //------------------------------------------------------------------------
      // Protected member functions.
      //------------------------------------------------------------------------

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitAbsDLSorter ();

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      virtual ~WitAbsDLSorter ();

      //------------------------------------------------------------------------
      // Other protected member functions.
      //------------------------------------------------------------------------

      void sortAbs (WitAbsDenseList & theAbsDenseList);
         //
         // Sorts theAbsDenseList.

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      static int compareForQsort (const void *, const void *);
         //
         // The compare function that sort will pass to qsort.

      virtual int compare (
            const WitDLSortEl * theDLSortEl1,
            const WitDLSortEl * theDLSortEl2) = 0;
         //
         // Compares theDLSortEl1 and theDLSortEl2 for sorting.

      noCopyCtorAssign (WitAbsDLSorter);
   };

//------------------------------------------------------------------------------
// Class Template DLSorter <Elem>
//
// "Dense List Sorter"
// Responsible for sorting a DenseList <Elem>.
//
// Class Hierarchy:
//
//    AbsDLSorter
//       DLSorter <Elem>
//
// Implemented in Vecs.C.
//------------------------------------------------------------------------------

template <typename Elem>
      class WitDLSorter: private WitAbsDLSorter
   {
      typedef int (* WitCompFunc) (Elem *, Elem *, void *);
         //
         // A pointer to a sorting comparison function.

   public:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitDLSorter (WitCompFunc, void *);

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      virtual ~WitDLSorter ();

      //------------------------------------------------------------------------
      // Other public member functions.
      //------------------------------------------------------------------------

      void sort (WitDenseList <Elem> & theDenseList);
         //
         // Sorts the elements in theDenseList.

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      virtual int compare (
            const WitDLSortEl * theDLSortEl1,
            const WitDLSortEl * theDLSortEl2);
         //
         // Compares theDLSortEl1 and theDLSortEl2 for sorting.
         // Override from class AbsDLSorter.

      noCopyCtorAssign (WitDLSorter);

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      WitCompFunc myCompFunc_;
         //
         // The comparison function to be used for sorting the DenseList.

      void * myContext_;
         //
         // The Context ptr to be passed to myCompFunc_.
   };

//------------------------------------------------------------------------------
// Class DLSortEl
//
// "Sorting Element"
// Used by AbsDenseList::sortAbs ().
// Each DLSortEl is associated with an element of the AbsDenseList and with an
// AbsDLSorter.
// A vector of DLSortEls is passed to qsort to implement the sort.
//
// Implemented in Vecs.C.
//------------------------------------------------------------------------------

class WitDLSortEl
   {
   public:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitDLSortEl ();

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      ~WitDLSortEl ();

      //------------------------------------------------------------------------
      // Other public member functions.
      //------------------------------------------------------------------------

      void setData (void *, WitAbsDLSorter *);

      //------------------------------------------------------------------------
      // Data access functions.
      //------------------------------------------------------------------------

      accessFunc (void *,           myElem)
      accessFunc (WitAbsDLSorter *, myAbsDLSorter)

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      noCopyCtorAssign (WitDLSortEl);

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      void * myElem_;
         //
         // The element of the AbsDenseList corresponding to this DLSortEl.

      WitAbsDLSorter * myAbsDLSorter_;
         //
         // The AbsDLSorter to be used.
   };

#endif
@


1.6
log
@[shared-resource pegging]
@
text
@@


1.5
log
@[multi-thread]
@
text
@d189 1
a189 1
      void setData (WitTlObj *, WitAbsDLSorter *);
d195 1
a195 1
      accessFunc (WitTlObj *,       myTlObj)
d210 1
a210 1
      WitTlObj * myTlObj_;
d212 1
a212 1
         // The element of the AbsDenseList correwsponding to this DLSortEl.
@


1.4
log
@[multi-thread]
@
text
@d19 1
a19 1
//    DLSorter <Elem, Context>
d34 1
a34 1
//       DLSorter <Elem, Context>
d87 1
a87 1
// Class Template DLSorter <Elem, Context>
a90 2
// Uses a comparison function takes a Context Ptr as an argument.
// Context maybe void.
d95 1
a95 1
//       DLSorter <Elem, Context>
d100 1
a100 1
template <typename Elem, typename Context>
d103 1
a103 1
      typedef int (* WitCompFunc) (Elem *, Elem *, Context *);
d110 1
a110 1
      // Static public member functions.
d113 1
a113 9
      static void sort (
            WitDenseList <Elem> & theDenseList,
            WitCompFunc           theCompFunc,
            Context *             theContext);
         //
         // Sorts the elements in theDenseList according to theCompFunc, which
         // is to be called with theContext (which may be NULL).

   private:
d116 1
a116 1
      // Private member functions.
d119 2
d122 1
a122 1
      // Constructor functions.
d125 3
a127 1
      WitDLSorter (WitCompFunc, Context *);
d129 1
a129 5
      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      virtual ~WitDLSorter ();
d132 1
a132 1
      // Other private member functions.
d152 1
a152 1
      Context * myContext_;
@


1.3
log
@[multi-thread]
@
text
@d91 2
a92 1
// Uses a comparison function that's a member function of the Context class.
d121 1
a121 1
         // is to be called with theContext.
d164 1
a164 2
         // The instance of the Context class for which myCompFunc_ is to be
         // called.
@


1.2
log
@[multi-thread]
@
text
@d104 1
a104 1
      typedef int (Context::* WitCompFunc) (Elem *, Elem *);
@


1.1
log
@[multi-thread]
@
text
@d18 2
a19 3
//    AbsDLSortCrit
//    GenDLSortCrit <Elem>
//    DLSortCrit    <Elem, Context>
d26 1
a26 1
// Class AbsDLSortCrit
d28 2
a29 2
// "Abstract Dense List Criterion"
// Provides the criterion for sorting an AbsDenseList.
d33 2
a34 3
//    AbsDLSortCrit
//       GenDLSortCrit <Elem>
//          DLSortCrit <Elem, Context>
d39 1
a39 1
class WitAbsDLSortCrit
a40 12
   public:

      //------------------------------------------------------------------------
      // Public member functions.
      //------------------------------------------------------------------------

      virtual int compare (
            const WitDLSortEl * theDLSortEl1,
            const WitDLSortEl * theDLSortEl2) = 0;
         //
         // Compares theDLSortEl1 and theDLSortEl2 for sorting.

d51 1
a51 1
      WitAbsDLSortCrit ();
d57 9
a65 1
      virtual ~WitAbsDLSortCrit ();
d73 11
a83 1
      noCopyCtorAssign (WitAbsDLSortCrit);
d87 1
a87 1
// Class Template GenDLSortCrit <Elem>
d89 3
a91 3
// "General Dense List Criterion"
//
// Provides the criterion for sorting a DenseList <Elem>.
d95 2
a96 3
//    AbsDLSortCrit
//       GenDLSortCrit <Elem>
//          DLSortCrit <Elem, Context>
d101 2
a102 2
template <typename Elem>
      class WitGenDLSortCrit: public WitAbsDLSortCrit
d104 3
a106 1
   protected:
d108 1
a108 5
      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitGenDLSortCrit ();
d111 1
a111 1
      // Destructor function.
d114 7
a120 1
      virtual ~WitGenDLSortCrit ();
a127 29
      noCopyCtorAssign (WitGenDLSortCrit);
   };

//------------------------------------------------------------------------------
// Class Template DLSortCrit <Elem, Context>
//
// "Dense List Criterion"
//
// Provides the criterion for sorting a DenseList <Elem>.
// Uses a comparison function that's a member function of the Context class.
//
// Class Hierarchy:
//
//    AbsDLSortCrit
//       GenDLSortCrit <Elem>
//          DLSortCrit <Elem, Context>
//
// Implemented in Vecs.C.
//------------------------------------------------------------------------------

template <typename Elem, typename Context>
      class WitDLSortCrit: public WitGenDLSortCrit <Elem>
   {
      typedef int (Context::* WitCompFunc) (Elem *, Elem *);
         //
         // A pointer to a sorting comparison function.

   public:

d132 1
a132 1
      WitDLSortCrit (WitCompFunc, Context *);
d138 1
a138 3
      virtual ~WitDLSortCrit ();

   private:
d141 1
a141 1
      // Private member functions.
d149 1
a149 7
         // Override from class AbsDLSortCrit.

      void instantiateSort ();
         //
         // This function is never called.
         // Its implementation causes NonClass::sort to be instantiated with
         // the same template arguments as the instance of DLSortCrit.
d151 1
a151 1
      noCopyCtorAssign (WitDLSortCrit);
d173 1
a173 1
// AbsDLSortCrit.
d199 1
a199 1
      void setData (WitTlObj *, WitAbsDLSortCrit *);
d205 2
a206 2
      accessFunc (WitTlObj *,         myTlObj)
      accessFunc (WitAbsDLSortCrit *, myAbsDLSortCrit)
d224 1
a224 1
      WitAbsDLSortCrit * myAbsDLSortCrit_;
d226 1
a226 1
         // The AbsDLSortCrit to be used as the sorting criterion.
@

