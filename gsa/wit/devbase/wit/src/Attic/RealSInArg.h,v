head	1.3;
access;
symbols;
locks; strict;
comment	@ * @;


1.3
date	2004.02.24.19.37.22;	author rjw;	state dead;
branches;
next	1.2;

1.2
date	2004.02.19.21.21.27;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2004.02.19.19.08.51;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Continued double precision.
@
text
@//------------------------------------------------------------------------------
//
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
// 
//------------------------------------------------------------------------------

#ifndef RealSInArgH
#define RealSInArgH

//------------------------------------------------------------------------------
// Header file: "RealSInArg.h"
//
// Contains the declaration of class Wit::RealSInArg.
//------------------------------------------------------------------------------

#include <RealArg.h>

//------------------------------------------------------------------------------
// Class RealSInArg
//
// "Real Scalar Input Argument"
//
// Provides a uniform interface to certain kind of argument to an API function.
// The underlying argument is a scalar real-valued variable passed in by value
// from the application program. Specifically, the underlying argument is of one
// of the following types:
//
//    const float
//    const double
//
// Thus:
//    Some of the inner API functions (in WitRun.h) will have arguments of type
//       RealSInArg.
//    The corresponding outer API functions (in wit.h) will have arguments of
//       type const float and const double. These are the "underlying 
//       arguments".
//
// A copy of the underlying argument for an instance of this class is stored by
// the instance as a double.
//
// Implemented in RealArgs.C.
//------------------------------------------------------------------------------

namespace Wit
{

class RealSInArg: public RealArg
   {
   public:

      //------------------------------------------------------------------------
      // Public member functions.
      //------------------------------------------------------------------------

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      RealSInArg (float);
         //
         // Conversion from a float underlying argument.

      RealSInArg (double);
         //
         // Conversion from a double underlying argument.

      RealSInArg (const RealSInArg &);
         //
         // Copy ctor.

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      ~RealSInArg ();

      //------------------------------------------------------------------------
      // Other public member functions.
      //------------------------------------------------------------------------

      inline operator double () const
         {
         return myUnderArg_;
         }

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      void operator = (const RealSInArg &);
         //
         // Not implemented; assignment is not allowed.

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      const double myUnderArg_;
         //
         // The value of the underlying argument, converted (if necessary) to a
         // double.
   };

// Leaving namespace Wit.
}   

#endif
@


1.2
log
@Continued double precision.
@
text
@@


1.1
log
@Continued double precision.
@
text
@a98 4
      operator float () const;
         //
         // Not implemented; prevents implicit conversion to type float.

@

