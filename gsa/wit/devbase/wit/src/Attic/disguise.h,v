head	1.39;
access;
symbols
	sce_5_01_20080919:1.28
	latest_sce_4_20_20060523:1.23.0.2
	sce_4_20_20060523:1.23
	latest_sce4_20_OSL:1.19.0.2
	sce_4_20_OSL:1.19
	sce_410_withVa:1.15
	sce_4_05_20040511:1.11
	sce_4_00_20040201:1.10
	nextGenBranch:1.7.0.2
	nextGenRoot:1.7
	sce_3_30_20030627:1.6
	EndRw-branch:1.5.0.4
	Root-of-EndRw:1.5
	rwToStl:1.5.0.2
	latest_sce_3_10_20010924:1.4.0.4
	sce_3_10_20010924:1.4
	latest_sce_3_00_20010601:1.4.0.2
	sce_3_00_20010601:1.4
	latest_sce_2_31_20010308:1.3.0.2
	sce_2_31_20010308:1.3
	latest_sce_2_31_20001003:1.2.0.2
	sce_2_31_20001003:1.2
	start:1.1.1.1
	IBM:1.1.1;
locks; strict;
comment	@ * @;


1.39
date	2010.07.27.20.57.56;	author rjw;	state dead;
branches;
next	1.38;

1.38
date	2010.05.28.22.06.49;	author rjw;	state Exp;
branches;
next	1.37;

1.37
date	2010.03.24.21.31.04;	author rjw;	state Exp;
branches;
next	1.36;

1.36
date	2010.03.18.23.28.02;	author rjw;	state Exp;
branches;
next	1.35;

1.35
date	2010.03.18.22.46.29;	author rjw;	state Exp;
branches;
next	1.34;

1.34
date	2010.03.18.22.35.02;	author rjw;	state Exp;
branches;
next	1.33;

1.33
date	2009.12.31.21.47.39;	author rjw;	state Exp;
branches;
next	1.32;

1.32
date	2009.11.19.21.05.10;	author rjw;	state Exp;
branches;
next	1.31;

1.31
date	2009.11.17.23.45.48;	author rjw;	state Exp;
branches;
next	1.30;

1.30
date	2009.11.17.19.31.39;	author rjw;	state Exp;
branches;
next	1.29;

1.29
date	2009.11.13.19.01.27;	author rjw;	state Exp;
branches;
next	1.28;

1.28
date	2007.08.01.22.41.59;	author rjw;	state Exp;
branches;
next	1.27;

1.27
date	2007.08.01.20.38.23;	author rjw;	state Exp;
branches;
next	1.26;

1.26
date	2006.10.03.15.09.00;	author rjw;	state Exp;
branches;
next	1.25;

1.25
date	2006.08.18.18.43.40;	author rjw;	state Exp;
branches;
next	1.24;

1.24
date	2006.08.17.21.21.32;	author rjw;	state Exp;
branches;
next	1.23;

1.23
date	2006.05.02.17.34.17;	author rjw;	state Exp;
branches;
next	1.22;

1.22
date	2006.04.21.20.06.32;	author rjw;	state Exp;
branches;
next	1.21;

1.21
date	2006.04.20.15.42.09;	author rjw;	state Exp;
branches;
next	1.20;

1.20
date	2006.04.18.19.06.56;	author rjw;	state Exp;
branches;
next	1.19;

1.19
date	2005.09.20.21.15.11;	author rjw;	state Exp;
branches;
next	1.18;

1.18
date	2005.09.12.22.17.33;	author rjw;	state Exp;
branches;
next	1.17;

1.17
date	2005.09.09.17.56.52;	author rjw;	state Exp;
branches;
next	1.16;

1.16
date	2005.09.08.19.29.45;	author rjw;	state Exp;
branches;
next	1.15;

1.15
date	2005.08.19.21.38.04;	author rjw;	state Exp;
branches;
next	1.14;

1.14
date	2005.08.12.19.35.30;	author rjw;	state Exp;
branches;
next	1.13;

1.13
date	2005.07.08.20.48.20;	author rjw;	state Exp;
branches;
next	1.12;

1.12
date	2004.10.14.15.58.46;	author rjw;	state Exp;
branches;
next	1.11;

1.11
date	2004.04.20.18.25.21;	author rjw;	state Exp;
branches;
next	1.10;

1.10
date	2004.01.27.16.13.20;	author fasano;	state Exp;
branches;
next	1.9;

1.9
date	2003.09.18.18.30.17;	author rjw;	state Exp;
branches;
next	1.8;

1.8
date	2003.08.06.23.31.50;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2003.07.17.17.40.07;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.05.19.48.22;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2002.04.22.14.32.16;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2001.05.17.15.11.19;	author bobw;	state Exp;
branches;
next	1.3;

1.3
date	2000.10.06.18.45.09;	author bobw;	state Exp;
branches;
next	1.2;

1.2
date	2000.03.07.16.57.19;	author fasano;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.24.13.53.33;	author wit;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.24.13.53.33;	author wit;	state Exp;
branches;
next	;


desc
@@


1.39
log
@Selection Recovery
@
text
@//---------------------------------------
//
//     (c) Copyright IBM Corp. 2006.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential
//
// -------------------------------------
 
#ifndef disguise_h
#define disguise_h

//------------------------------------------------------------------------------
// Header file: "disguise.h"
//------------------------------------------------------------------------------

#endif
@


1.38
log
@Removing the DISGUISE logic from WIT.
@
text
@@


1.37
log
@Removed OptObj classes.
@
text
@a14 3
//
// Disguises symbols by replacing with symbols defined in disguise.h
// Only to included if DISGUISE == 1.
a16 811
#include <defines.h>

// -------------------------------------
//  ./FSS.C
// -------------------------------------
#define apiDepth wit000000
#define apiFuncName wit000001
#define apiRc wit000002
#define b wit000003
#define beginSection wit000004
#define c wit000005
#define CDVFHorizonI wit000006
#define compMrpSupplyDemand wit000007
#define compShortageSchedMsg wit000008
#define cumDemandVolIT wit000009
#define cumDemandVolITm1 wit000010
#define d wit000011
#define demands wit000013
#define DemandSched wit000014
#define demandVolIT wit000015
#define demI wit000016
#define demI_listel wit000017
#define desiredCSVIT wit000018
#define endSection wit000019
#define fHorizon wit000020
#define fHorizonRangeError wit000021
#define FSS wit000024
#define fssButNoImplosionError wit000025
#define genericProgramError wit000026
#define i wit000027
#define imploded wit000028
#define internalFragmentNumber wit000029
#define internalMessageNumber wit000030
#define l wit000031
#define l_period wit000032
#define mem wit000033
#define messageType wit000034
#define message_twice wit000035
#define myTimer wit000036
#define myWitRun wit000037
#define n wit000038
#define noSSError wit000039
#define numberMessages wit000040
#define n_periods wit000041
#define DetOptImpMgr wit000042
#define partJ wit000043
#define partJ_listel wit000044
#define parts wit000045
#define PartSched wit000046
#define PostProcessor wit000047
#define proc_done wit000048
#define rc wit000049
#define readFlVecRC wit000050
#define readFlVecRCRead2 wit000051
#define restoreScheds wit000052
#define s wit000053
#define s1 wit000054
#define s2 wit000055
#define savedDemandSched wit000056
#define savedReqSched wit000057
#define savedSupplySched wit000058
#define saveScheds wit000059
#define setFHorizon wit000060
#define shortageSched wit000061
#define ssExists wit000062
#define t wit000063
#define theWitRun wit000064
#define Timer wit000065
#define TimeSection wit000066
#define volume wit000067
#define volumeMatrix wit000068
#define witApi wit000069
#define WitApiMgr wit000070
#define x wit000071
#define y wit000072
 
// -------------------------------------
//  ./ApiMgr.C
// -------------------------------------
#define allowBeforeInit wit000073
#define apiCallOrder wit000074
#define call wit000076
#define calli wit000077
#define calli_listel wit000078
#define callOutOfOrder1Msg wit000079
#define callOutOfOrderMsg wit000080
#define creates1stPart wit000081
// #define error wit000082
#define findInWitCallList wit000083
#define inCallChain wit000084
#define j wit000085
#define name wit000086
#define new_empty wit000087
#define onlyAfterImplode wit000088
#define onlyAfterOptImplode wit000089
#define onlyBefore1stPart wit000090
#define quiet wit000092
#define witFuncCalled wit000093
#define wit_calls wit000094
 
// -------------------------------------
//  ./Timer.C
// -------------------------------------
#define activeStack wit000095
#define cpuTime wit000097
#define cpuTimesMsg wit000098
#define createSection wit000099
#define createSections wit000100
#define currentSection wit000101
#define cur_time wit000102
#define display wit000103
#define free_list wit000104
#define incTime wit000105
#define incTimeSpent wit000106
#define mySections wit000107
#define namedSection wit000108
#define nameIs wit000109
#define nameX wit000110
//#define pop wit000111
#define prevTime wit000112
#define queue wit000113
#define sectionName wit000114
#define sectionTimeMsg wit000115
#define sectionTitle wit000116
#define secX wit000117
#define secX_listel wit000118
#define sec_time wit000119
#define myApiMgr wit000120
#define timeSincePrev wit000121
#define timeSpent wit000122
#define timeSpentData wit000123
#define timingSectionMsg wit000124
#define title wit000125
#define titleString wit000126
#define wasTimed wit000127
 
// -------------------------------------
//  ./LpModel.C
// -------------------------------------
#define bounds wit000128
#define cidx wit000129
#define conPreScreenBounds wit000131
#define curLpConData wit000132
#define delta wit000133
#define displayDerived wit000134
#define DoubleInterval wit000135
#define dualValue wit000137
#define fastLpDtor wit000138
#define fFormat wit000139
#define generateCoeffs wit000140
#define generateConstraints wit000141
#define generateVariables wit000145
#define ImpLp wit000147
#define indepInitValue wit000148
#define initDepVars wit000151
#define lower wit000152
#define LpCon wit000153
#define lpDimMsg wit000154
#define LpObj wit000156
#define LpVar wit000157
#define myCoeffs wit000166
#define myCoeffsData wit000167
#define myImpLp wit000168
#define myLpCons wit000169
#define myLpConsData wit000170
#define myLpObjs wit000171
#define myLpVars wit000172
#define myLpVarsData wit000173
#define nCoeffs wit000176
#define nCoeffsData wit000177
#define nCoeffsInCurLF wit000178
#define nDualElimMsg wit000179
#define needDual wit000180
#define needDualArg wit000181
#define nLpCons wit000182
#define nLpConsData wit000183
#define nLpObjs wit000184
#define nLpVars wit000185
#define nLpVarsData wit000186
#define nVarsFixed wit000187
#define open_file wit000188
#define outFile wit000196
#define PeByarcPeriod wit000197
#define PeBydemandPeriod wit000198
#define PeByItem wit000199
#define PeByItemMgr wit000200
#define PeByItemPeriod wit000201
#define PeByItemPeriodMgr wit000202
#define PeByItself wit000203
#define PeByItselfMgr wit000204
#define PeBypartPeriod wit000205
#define PeBysubPeriod wit000206
#define PeByUserBound wit000207
#define primalValue wit000209
#define print wit000210
#define printCons wit000211
#define printDerived wit000212
#define printHeading wit000213
#define printID wit000214
#define printObjs wit000215
#define printVars wit000217
#define reducedReward wit000222
#define saveBounds wit000223
#define screenable wit000224
#define screenedCoeffs wit000225
#define sFormat wit000227
#define solveLp wit000228
#define solveScreened wit000229
#define storeCoeffsInCons wit000230
#define theCoeff wit000231
#define theCoeff_listel wit000232
#define theCon wit000233
#define theCon_listel wit000234
#define theIndex wit000235
#define theObj wit000239
#define theObj_listel wit000240
#define theVar wit000242
#define theVar_listel wit000243
#define upper wit000244
#define UserBound wit000245
#define val wit000246
#define varPreScreenBounds wit000247
#define write_heading wit000249
 
// -------------------------------------
//  ./Coeff.C
// -------------------------------------
#define countCoeff wit000251
#define CumShipVar wit000252
#define curLpCon wit000253
#define lowerInit wit000255
#define MaterialCon wit000256
#define ProdVar wit000260
#define ScrapVar wit000262
#define ShipCon wit000264
#define ShipVar wit000265
#define SlbCon wit000266
#define SlbvVar wit000267
#define StockVar wit000268
#define storeCoeff wit000269
#define SubCon wit000270
#define SubVar wit000272
#define upperInit wit000273
 
// -------------------------------------
//  ./arc.C
// -------------------------------------
#define arci wit000305
#define arci_listel wit000306
#define arcP wit000307
#define argp wit000308
#define attr wit000309
#define bomEntryIndex wit000310
#define bomEntryIndexMsg wit000311
#define bomEntryIndexRangeSmsg wit000312
// #define bool wit000313
#define categoryErrMsgAdd wit000314
#define consumedPartNameParm wit000315
#define find_part wit000316
#define getApiRc wit000319
#define getMsgFrag wit000320
#define getPartP wit000321
#define inputAttrib wit000322
#define inputBomEntryIndex wit000323
#define inputConsumedPartName wit000324
#define inputPartName wit000325
#define intLowEqUpEqSmsg wit000326
#define leavingApiFunction wit000328
#define newArc wit000331
#define nSubsBomEntries wit000332
#define partName wit000334
#define partNameMsg wit000335
#define partNameParm wit000336
#define partP wit000337
#define part_cat_name wit000338
#define PRODUCT wit000339
#define prodWoBom wit000340
#define prologSaveWitRun wit000341
#define setBomEntryInit wit000342
#define setBooleanAttrMsg wit000343
#define setIntAttrMsg wit000345
#define tempBoolean wit000346
#define tempInt wit000347
#define undefinedPartMsg wit000349
#define unpreproc wit000350
#define witSetBomEntryPearliestPeriod wit000351
#define witSetBomEntryPfallout wit000352
#define witSetBomEntryPlatestPeriod wit000353
#define witSetBomEntryPmandEC wit000354
#define witSetBomEntryPusageRate wit000355
#define witSetBomEntryPusageTime wit000356
 
// -------------------------------------
//  ./PostProc.C
// -------------------------------------
#define applyBounds wit000357
#define arcK wit000358
#define arcK_listel wit000359
#define can_stock wit000360
#define compConsSched wit000361
#define compExcess wit000362
#define compStockScrapVols wit000363
#define consSched wit000364
#define cumShipVolIT wit000365
#define hasSubsInEffect wit000366
#define invT wit000367
#define makeFVectorNonNeg wit000368
#define makeSolnNonNeg wit000369
#define nonNegEpsilon wit000370
#define products wit000371
#define rbScrapVol wit000372
#define rbStockVol wit000373
#define rollBackScrap wit000374
#define rollBackVol wit000375
#define scrapFinalStock wit000376
#define subH wit000377
#define subH_listel wit000378
#define tCons wit000379
#define tLast wit000380
 
// -------------------------------------
//  ./Sched.C
// -------------------------------------
#define n_demands wit000402
#define n_parts wit000403
 
// -------------------------------------
//  ./ImpLp.C
// -------------------------------------
#define asdK wit000836
#define bounds_obj_value wit000837
#define comparePotential wit000838
#define criticalEpsilon wit000839
#define critical_list wit000840
#define findCriticals wit000843
#define fixScrapVars wit000844
#define fName wit000845
#define main_obj_value wit000846
#define makeUserBound wit000847
#define myCumShipVarIndex wit000849
#define myMaterialConIndex wit000851
#define myProdVarIndex wit000855
#define myScrapVarIndex wit000857
#define myShipConIndex wit000859
#define myShipVarIndex wit000860
#define mySlbConIndex wit000861
#define mySlbvVarIndex wit000862
#define myStockVarIndex wit000863
#define mySubConIndex wit000864
#define mySubVarIndex wit000866
#define myUserBounds wit000867
#define myVar wit000868
#define newMeClassIndex wit000869
#define nFixed wit000870
#define nRelaxed wit000871
#define nSlbvVars wit000872
#define nUserBounds wit000873
#define n_arcs wit000874
#define n_boundsets wit000875
#define n_subs wit000876
#define obj1_primary_value wit000877
#define obj_choice wit000886
#define oppK wit000887
#define optCriticalList wit000888
#define positiveSoftLB wit000889
#define printSoln wit000890
#define relaxCumShipNonNeg wit000891
#define scrapVarNeeded wit000892
#define screenCon wit000893
#define screenMaterialShipCons wit000894
#define slbvVarsExist wit000895
#define softLB wit000896
#define solnEpsilon wit000897
#define solnFile wit000898
#define solnValue wit000899
#define sort_list wit000900
#define theCumShipVar wit000901
#define theProdVar wit000902
#define theScrapVar wit000903
#define theSlbvVar wit000904
#define theStockVar wit000905
#define theUserBound_listel wit000906
#define valJ wit000907
#define wbounds wit000908
#define writeDemandSoln wit000909
#define writeMeSoln wit000910
#define writePartSoln wit000911
#define writeSubSoln wit000912
#define writeUserBoundSoln wit000913
 
// -------------------------------------
//  ./WitRun.C
// -------------------------------------
#define free_memory wit000914
#define htable wit000915
#define initMessages wit000916
#define initNew wit000918
#define isOne wit000919
#define myFSS wit000920
#define myDetOptImpMgr wit000921
#define myPostProcessor wit000922
#define print_info_messages wit000925
#define proc_opt_done wit000926

// -------------------------------------
//  ./wit.C
// -------------------------------------
#define action wit000928
#define argc wit000929
#define argv wit000930
#define critical_ofname wit000931
#define data_ifname wit000932
#define displayTimings wit000933
#define echo_ofname wit000934
#define HEUR_IMPLOSION wit000935
#define mainWitRun wit000936
#define mrpsup_ofname wit000937
#define MRP_EXPLOSION wit000938
#define n_critical wit000939
#define OPT_IMPLOSION wit000940
#define period_offset wit000941
#define PREPROC wit000942
#define pre_ofname wit000943
#define print_echo wit000944
#define print_pre wit000945
#define print_prod wit000946
#define print_ship wit000947
#define print_soln wit000948
#define prod_ifname wit000949
#define prod_ofname wit000950
#define read_params wit000951
#define read_scheds wit000952
#define runStandAlone wit000953
#define setFHorizonAll wit000955
#define setFHorizonTest wit000956
#define ship_ifname wit000958
#define ship_ofname wit000959
#define soln_ofname wit000960
#define testHot wit000962
#define writeCompreSoln wit000963
 
// -------------------------------------
//  ./part.C
// -------------------------------------
#define bs wit000964
#define demandList wit000967
#define excessVol wit000968
#define exist wit000969
#define hardlbP wit000971
#define hardubP wit000972
#define hash_table_size wit000973
#define inputAnsiCFunction wit000974
#define inputBoundVec wit000975
#define inputDemandName wit000976
#define inputFileLineNumber wit000977
#define inputFileName wit000978
#define inputPeriod wit000979
#define inputSubsBomEntryIndex wit000980
#define INPUT_START wit000981
#define insert_part wit000982
#define interpretFileName wit000983
#define interpretLine wit000984
#define interpretToken wit000985
#define intP wit000986
#define lenDemandList wit000987
#define lenPartList wit000988
#define messageDs wit000989
#define nBomEntries wit000990
#define newPart wit000991
#define optStart wit000992
#define partCategoryParm wit000994
#define partList wit000995
#define prodVol wit000996
#define RAWMAT wit000997
#define reqVol wit000998
#define scrapVol wit000999
#define seqErr wit001000
#define setBoundSet wit001001
#define setPartInit wit001002
#define softlbP wit001003
#define stockVol wit001004
#define stop wit001005
#define supplyVol wit001006
#define witSetPartPcycleTime wit001008
#define witSetPartPobj1ProdCost wit001009
#define witSetPartPobj1ScrapCost wit001010
#define witSetPartPobj1StockCost wit001011
#define witSetPartPprodBounds wit001012
#define witSetPartPprodVol wit001013
#define witSetPartPstockBounds wit001014
#define witSetPartPsupplyVol wit001015
#define witSetPartPyield wit001017
 
// -------------------------------------
//  ./mrp.C
// -------------------------------------
#define a wit001095
#define alloc_init_part_sup_matrix wit001096
#define a_listel wit001097
#define cons_period wit001098
#define do_explosions wit001099
#define explodeMrp wit001100
#define free_fmatrix wit001101
#define mrp_netpart wit001102
#define net_supply_matrix wit001103
#define p wit001104
#define qty wit001105
#define req_qty wit001106
#define reversed_copy wit001107
#define reversed_parts wit001108
 
// -------------------------------------
//  ./sub.C
// -------------------------------------
#define newSubs wit001109
#define origArc wit001110
#define setSubsBomEntryInit wit001111
#define subi wit001112
#define subi_listel wit001113
#define subP wit001114
#define subsBomEntryIndex wit001115
#define witSetSubsBomEntryPearliestPeriod wit001116
#define witSetSubsBomEntryPfallout wit001117
#define witSetSubsBomEntryPlatestPeriod wit001118
#define witSetSubsBomEntryPobj1SubCost wit001119
#define witSetSubsBomEntryPprodVol wit001121
#define witSetSubsBomEntryPusageRate wit001122
 
// -------------------------------------
//  ./demand.C
// -------------------------------------
#define demandNameParm wit001123
#define demandP wit001124
#define demandVol wit001125
#define demP wit001126
#define newDemand wit001128
#define priority wit001129
#define shipVol wit001130
#define witSetDemandPcumShipBounds wit001131
#define witSetDemandPdemandVol wit001132
#define witSetDemandPobj1CumShipReward wit001134
#define witSetDemandPobj1ShipReward wit001135
#define witSetDemandPpriority wit001136
#define witSetDemandPshipVol wit001137
 
// -------------------------------------
//  ./api.C
// -------------------------------------
#define accessMode wit001200
#define autoPriority wit001201
#define boundsValue wit001202
#define buildWhenEmpty wit001203
#define computCriticalList wit001205
#define consumedPartName wit001206
#define critPartList wit001207
#define critPeriod wit001208
#define cycleTime wit001209
#define earliestPeriod wit001210
#define equitablity wit001211
#define fallout wit001212
#define fileFormat wit001213
#define hardLower wit001214
#define hardUpper wit001215
#define hashTableSize wit001216
#define iDemandVol wit001217
#define invValue wit001219
#define latestPeriod wit001220
#define lenCritList wit001221
#define lenList wit001222
#define mandEC wit001223
#define maxListLen wit001224
#define mesgFile wit001225
#define messageNumber wit001226
#define nPeriods wit001227
#define obj1CumShipReward wit001228
#define obj1ProdCost wit001229
#define obj1ScrapCost wit001230
#define obj1ShipReward wit001231
#define obj1StockCost wit001232
#define obj1SubCost wit001233
#define objValue wit001240
#define partCategory wit001242
#define period wit001243
#define periodOffset wit001244
#define printNumber wit001246
#define revValue wit001247
#define servValue wit001248
#define shortageVol wit001249
#define shortageVolList wit001250
#define softLower wit001251
#define solved wit001252
#define stopRunning wit001253
#define subsValue wit001254
#define timesPrint wit001255
#define usageRate wit001256
#define yield wit001257
 
//  ./read_params.C
// -------------------------------------
#define dumpMps wit001332
#define equitability wit001333
#define high wit001334
#define log_ofname wit001335
#define low wit001336
#define lpsoln_ofname wit001337
#define need_critical wit001338
#define optStartString wit001341
#define param_file wit001342
#define param_ifname wit001343
#define pname wit001344
#define printInitSoln wit001345
#define printLpSoln wit001346

// -------------------------------------
//  ./set_get.C
// -------------------------------------
#define attribBit wit001356
#define boolInMsg wit001357
#define boundsObjValue wit001358
#define changeGroupMsgAttribBit wit001359
#define changeGroupMsgTimesPrint wit001360
#define changeMsgAttribBit wit001361
#define choice wit001362
#define e wit001363
#define equit wit001364
#define extMsgNum wit001365
#define fileP wit001366
#define groupName wit001367
#define mesgType wit001368
#define msgIndex wit001369
#define msgIntNumFromExtNum wit001370
#define negate wit001371
#define newFile wit001372
#define newFileName wit001373
#define newMode wit001375
#define newTitle wit001376
#define nper wit001377
#define numPrint wit001378
#define optSolved wit001379
#define perList wit001380
#define ppk wit001381
#define ppk_listel wit001382
#define setBit wit001383
#define subValue wit001384
 
// -------------------------------------
//  ./soln_io.C
// -------------------------------------
#define charP wit001385
#define charPP wit001386
#define erealloc wit001387
#define fgetsRc wit001388
#define getInt wit001390
#define getName wit001391
#define inBuf wit001393
#define inBufInc wit001394
#define inBufLen wit001395
#define inFile wit001396
#define inFileName wit001397
#define inputString wit001398
#define inputStringLen wit001399
#define intMsgNo wit001400
#define maxListLength wit001401
#define per wit001402
#define periodInFile wit001403
#define prodQuan wit001404
#define prodSchedRec wit001405
#define quotedConsumedPartName wit001406
#define quotedDemandName wit001407
#define quotedPartName wit001408
#define quotedReplacedPartName wit001409
#define quotedString wit001410
#define quoteString wit001411
#define retCharP wit001412
#define retInt wit001414
#define retName wit001415
#define retSubP wit001416
#define saveMsgLen wit001417
#define shipQuan wit001418
#define shipSchedRec wit001419
#define subBomP wit001420
#define subsProdSchedRec wit001421
#define writeSolnValue wit001422
 
// -------------------------------------
//  ./start_end.C
// -------------------------------------
#define ex_status wit001439
#define init_params wit001440
#define mode wit001441
#define opened_file wit001442
#define out_file wit001443
 
// -------------------------------------
//  ./heuristic.C
// -------------------------------------
#define adjust wit001444
#define binary_search_for_commit wit001445
#define buildable_qty wit001446
#define cleanUpHeur wit001447
#define commitShipment wit001448
#define com_earliest wit001449
#define com_net_supp wit001450
#define culprit wit001451
#define culprit_found wit001452
#define curr_demand_period wit001455
#define dem wit001456
#define demand_comp wit001457
#define demand_index wit001458
#define demand_list wit001459
#define demand_period wit001460
#define demand_period_1 wit001461
#define demand_period_2 wit001462
#define dem_j wit001463
#define dem_listel wit001464
#define desired_part wit001465
#define desired_qty wit001466
#define e1 wit001467
#define e2 wit001468
#define earliest wit001469
#define exp_earliest wit001470
#define formCompreSoln wit001471
#define heurExplode wit001472
#define heuristic wit001473
#define h_equitability wit001474
#define h_need_critical wit001475
#define i1 wit001476
#define i2 wit001477
#define initHeur wit001478
#define intdmd wit001479
#define local_equitability wit001480
#define local_need_critical wit001481
#define mainloop wit001482
#define make_period wit001483
#define max_dem wit001484
#define mid wit001485
#define my_demand_list wit001486
#define netpart wit001487
#define net_supp wit001488
#define net_supply_matrix_ptr wit001489
#define nh_demands wit001490
#define p1 wit001491
#define p2 wit001492
#define partnum wit001493
#define phd wit001494
#define priorities_are_different wit001495
#define ship_period wit001496
#define store_plan wit001497
#define supply wit001498
#define t1 wit001499
#define temp wit001500
#define temp_earliest wit001501
#define temp_net_supp wit001502
#define t_culprit wit001503
#define unassigned wit001504
#define zero_prod_plan wit001505
 
// -------------------------------------
//  ./OptMisc.C
// -------------------------------------
#define classIndex wit001518
#define classText wit001519
#define coeffVal wit001520
#define findNew wit001521
#define hardLB wit001522
#define hardUB wit001523
#define kindText wit001524
#define lastCoeff wit001525
#define myBoundSet wit001526
#define myUserBound wit001527
#define preScreenBounds wit001528
#define printBounds wit001529
#define rr wit001530
#define theBounds wit001535
#define varCoeffVal wit001536
#define varVal wit001537
 
// -------------------------------------
//  ./fssApi.C
// -------------------------------------
#define focusHorizon wit001538
#define parti wit001539
#define parti_listel wit001540
#define witSetDemandPFocusHorizon wit001541
 
// -------------------------------------
//  ./UsrBound.C
// -------------------------------------
#define boundPenalty wit001542
#define bsHardUB wit001543
#define compHardUB wit001544
#define originalUB wit001545
#define penalty wit001546
#define slbvVal wit001547
#define storeUserBound wit001548
 
// -------------------------------------
//  ./LpCons.C
// -------------------------------------
#define incCoeff wit001550
 
// -------------------------------------
//  ./LpVars.C
// -------------------------------------
#define costMarkUp wit001551
#define effCost wit001552
#define matCost wit001553
#define nBuildable wit001554
#define netRev wit001555
#define revMarkUp wit001556
 
@


1.36
log
@Removed some unneeded functions.
@
text
@a160 1
#define compMainObjCoeffVal wit000130
a170 2
#define generateMainObjCoeffs wit000142
#define generateObjectives wit000143
a173 1
//#define index wit000149
a179 3
#define mainObj wit000158
#define mainObjCoeffVal wit000159
#define mainObjCoeffValData wit000160
@


1.35
log
@Removed class PrimaryObj.
@
text
@a837 6
// -------------------------------------
//  ./LpObjs.C
// -------------------------------------
#define boundsCoeffVal wit001606
#define primaryCoeffVal wit001608

@


1.34
log
@Removed class BoundsObj.
@
text
@a258 1
#define PrimaryObj wit000259
a367 1
#define myPrimaryObjIndex wit000854
@


1.33
log
@Multi-objective mode
@
text
@a253 1
#define BoundsObj wit000250
a366 1
#define myBoundsObjIndex wit000848
@


1.32
log
@Obj1Obj ==> DetObj
@
text
@a845 1
#define invCoeffVal wit001607
a846 3
#define revCoeffVal wit001609
#define servCoeffVal wit001610
#define subCoeffVal wit001611
@


1.31
log
@Removing objective #2.
@
text
@a259 1
#define Obj1Obj wit000257
a370 1
#define myObj1ObjIndex wit000852
@


1.30
log
@Removing objective #2.
@
text
@a612 1
#define objChoice wit001239
@


1.29
log
@Removing objective #2.
@
text
@a617 1
#define periodsPerYear wit001245
@


1.28
log
@Stochastic Implosion
@
text
@a257 1
#define InvObj wit000254
a260 1
#define Obj2Obj wit000258
a262 1
#define RevObj wit000261
a263 1
#define ServObj wit000263
a270 1
#define SubObj wit000271
a370 1
#define myInvObjIndex wit000850
a372 1
#define myObj2ObjIndex wit000853
a374 1
#define myRevObjIndex wit000856
a375 1
#define myServObjIndex wit000858
a381 1
#define mySubObjIndex wit000865
a393 8
#define obj2_finv wit000878
#define obj2_frev wit000879
#define obj2_fserv wit000880
#define obj2_fsub wit000881
#define obj2_inv_value wit000882
#define obj2_rev_value wit000883
#define obj2_serv_value wit000884
#define obj2_sub_value wit000885
a515 1
#define unitCost wit001007
a523 1
#define witSetPartPunitCost wit001016
a557 1
#define witSetSubsBomEntryPobj2SubPenalty wit001120
a567 1
#define grossRev wit001127
a572 1
#define witSetDemandPgrossRev wit001133
a584 1
#define capCost wit001204
a597 1
#define invCost wit001218
a612 5
#define obj2PenaltyCost wit001234
#define obj2Winv wit001235
#define obj2Wrev wit001236
#define obj2Wserv wit001237
#define obj2Wsub wit001238
@


1.27
log
@Stochastic Implosion
@
text
@d64 1
a64 1
#define OptImploder wit000042
d450 1
a450 1
#define myOptImploder wit000921
a822 14
//  ./OptImp.C
// -------------------------------------
#define calcInitSoln wit001506
#define compObjectives wit001507
#define formCriticalList wit001508
#define heuristicTempPri wit001510
#define implode wit001511
#define originalPriority wit001512
#define solve wit001513
#define writeObjectives wit001514
#define writeSoln wit001515
#define ZERO_START wit001516
 
// -------------------------------------
@


1.26
log
@App controlled opt implosion.
@
text
@d837 1
a837 1
//  ./OptProbEl.C
a838 1
#define bsI wit001517
a851 3
#define storeLpCon wit001531
#define storeLpObj wit001532
#define storeLpVar wit001533
@


1.25
log
@App controlled opt implosion.
@
text
@a174 1
#define genLpModelMsg wit000146
a181 1
#define LpModel wit000155
a186 2
#define modelElTable wit000163
#define modelFile wit000164
a227 1
#define printLpModel wit000218
a231 1
#define screenModel wit000226
a248 1
#define writeLpModelMsg wit000248
a827 1
#define generateModel wit001509
@


1.24
log
@Integrality constraints.
@
text
@a178 1
#define indexedModelEl wit000150
a188 1
#define ModelEl wit000162
a198 1
#define myProbEl wit000175
a232 2
#define ProbEl wit000220
#define ProbElMgr wit000221
a246 3
#define theModelEl wit000236
#define theModelEls wit000237
#define theModelEl_listel wit000238
a248 1
#define theProbEl wit000241
d845 1
a845 1
//  ./ModelEl.C
a863 1
#define storeModelEl wit001534
a889 1
#define derivedProbEl wit001549
@


1.23
log
@Updated the copyright date on all source files.
@
text
@a692 1
#define stopOpt wit001354
@


1.22
log
@Removed some more OSL items.
@
text
@d3 1
a3 1
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
@


1.21
log
@Removed some OSL items.
@
text
@a692 1
#define printMask wit001347
@


1.20
log
@Removed class OslSolver.
@
text
@a173 1
#define generateOslVectors wit000144
a214 6
#define oslDels wit000189
#define oslLBs wit000190
#define oslMcol wit000191
#define oslMrow wit000193
#define oslObj wit000194
#define oslUBs wit000195
a235 1
#define printOslVectors wit000219
a467 1
#define osl_ofname wit000924
a660 1
#define oslMesgFileName wit001241
@


1.19
log
@[multi-thread]
@
text
@a925 52
//  ./OslSolver.C
// -------------------------------------
#define bcdoUnit wit001557
#define checkProbStat wit001558
#define checkRtCode wit001559
#define CRASH_START wit001560
#define dSpace wit001561
#define dSpaceArray wit001562
#define dSpaceFactor wit001563
#define dSpaceSize wit001564
#define dummyArray wit001565
#define dummyArraySize wit001566
#define dumpMpsDeck wit001567
#define ekk_i1 wit001568
#define ekk_i2 wit001569
#define ekk_i3 wit001570
#define ekk_i4 wit001571
#define ekk_i5 wit001572
#define ekk_i6 wit001573
#define ekk_i7 wit001574
#define getVal wit001575
#define indexVar wit001576
#define ioStat wit001577
#define logUnit wit001578
#define lpToSolve wit001579
#define myLpModel wit001580
#define openLogFile wit001581
#define openPrslFile wit001582
#define osli wit001583
#define osln wit001584
#define oslSolve wit001585
#define passBounds wit001586
#define passMainModel wit001587
#define passModel wit001588
#define passObj wit001589
#define passPrimal wit001590
#define probStat wit001591
#define prslTempFileName wit001592
#define prslUnit wit001593
#define recordDual wit001594
#define recordPrimal wit001595
#define routine wit001596
#define rtCode wit001597
#define setUpDSpace wit001598
#define setVal wit001599
#define sName wit001600
#define statMsg wit001601
#define subName wit001602
#define unInitNew wit001604
#define var wit001605
 
// -------------------------------------
@


1.18
log
@Removed code supporting the variable-argument-list API functions.
@
text
@a123 1
#define apiMode wit000096
a508 1
#define setApiMode wit000954
@


1.17
log
@Restored a lost #endif.
@
text
@a342 1
#define undefinedAttrErrorMsg wit000348
@


1.16
log
@[multi-thread]
@
text
@d989 2
@


1.15
log
@[multi-thread]:
   Moved PROLOG/EPILOG responsibility from the inner layer of the API
   to the outer layer.
@
text
@a988 6
 
// -------------------------------------
//  ./AloneRun.C
// -------------------------------------
#define AloneRun wit001612
#endif
@


1.14
log
@[multi-threads]
@
text
@a329 1
#define parmsAbiMsg wit000333
@


1.13
log
@[exceptions]
@
text
@a100 1
#define applicationCalled wit000075
@


1.12
log
@Minor change.
@
text
@a784 1
#define directlyReturnToCaller wit001438
@


1.11
log
@Double Precision.
@
text
@a168 1
#define dual wit000136
@


1.10
log
@Commented one of the disguised symbols because it was causing a problem when building on .Net compiler for Donna.
@
text
@a45 1
#define FloatMatrix wit000022
a320 1
#define flt wit000317
a342 1
#define setFltAttrMsg wit000344
a529 1
#define floatP wit000970
a732 1
#define newFlt wit001374
a750 1
#define getFloat wit001389
a772 1
#define retFloat wit001413
@


1.9
log
@Continued implementation of opt with COIN.
@
text
@d109 1
a109 1
#define error wit000082
@


1.8
log
@Eliminated the "tempnam" linker warning on Linux.
@
text
@a205 1
#define myOslMgr wit000174
a222 1
#define OslMgr wit000192
d940 1
a940 1
//  ./OslMgr.C
@


1.7
log
@Removed from the disguise an identifier that was being used by the standard
library.
@
text
@a989 1
#define tempFileName wit001603
@


1.6
log
@Continued implementation of opt with COIN.
@
text
@a387 1
#define vector wit000381
@


1.5
log
@Continued implementation of object iteration.
@
text
@a239 1
#define primal wit000208
@


1.4
log
@Used rusage for timing on AIX.
Made generic class StackSpSched use only 1 argument.
Added baSelSplit attribute.
Removed selSplit development parameter.
Added selSplitAll development parameter.
@
text
@a762 1
#define getSub wit001392
@


1.3
log
@

Revised stand-alone FSS capabilties in development mode.
Modified some stock soft-lower bound controls.
Fixed bug: BOP entry productRate attribute could not be read.
@
text
@a523 1
#define setupMsgSA wit000957
@


1.2
log
@Updating wit/src in /u/wit/devbase to be in synch with /u/implode/devbase
@
text
@a527 1
#define testFss wit000961
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
//     (c) Copyright IBM Corp. 1993,1994,1996.
@


1.1.1.1
log
@Import wit
@
text
@@
