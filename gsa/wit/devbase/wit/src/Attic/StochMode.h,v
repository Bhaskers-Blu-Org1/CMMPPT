head	1.5;
access;
symbols;
locks; strict;
comment	@ * @;


1.5
date	2007.04.19.20.22.30;	author rjw;	state dead;
branches;
next	1.4;

1.4
date	2007.04.19.14.52.49;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2007.04.18.21.18.20;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2007.04.17.22.08.32;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2007.04.16.21.32.58;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Stochastic Implosion
@
text
@//------------------------------------------------------------------------------
//
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
// 
//------------------------------------------------------------------------------

#ifndef StochModeH
#define StochModeH

//------------------------------------------------------------------------------
// Header file: "StochMode.h"
//
// Contains the declaration of class StochModeMgr.
//------------------------------------------------------------------------------

#include <Assoc.h>
#include <PtrVec.h>

//------------------------------------------------------------------------------
// Class StochModeMgr
//
// "Stochastic Implosion Mode Manager"
// Responsible for performing stochastic implosion. An instance of this class
// exists in a WitRun, iff the WitRun is currently in stochastic implosion mode.
//
// Class Hierarchy:
//
// ProbAssoc
//    StochModeMgr
//------------------------------------------------------------------------------

class WitStochModeMgr: public WitProbAssoc
   {
   public:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitStochModeMgr (WitProblem *);

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      ~WitStochModeMgr ();

      //------------------------------------------------------------------------
      // Other public member functions.
      //------------------------------------------------------------------------

      void copyAttrsFrom (WitStochModeMgr * theStochModeMgr);
         //
         // Copies the input attributes of theStochModeMgr into this
         // StochModeMgr.

      void writeData ();
         //
         // Writes the section of the input data file for this StochModeMgr.

      void startWriteCompData (WitComponent * theComp);
         //
         // Begins writeData for theComp.

      void writingVector ();
         //
         // Tells this StochModeMgr that a vector is currently being written.

      void finishWriteCompData ();
         //
         // Concludes writeData for a Component.

      void display ();
         //
         // Displays the input and preprocessing data for this StochModeMgr.

      //------------------------------------------------------------------------
      // "Set" functions.
      //------------------------------------------------------------------------

      void setCurScenario (WitScenario *);

      //------------------------------------------------------------------------
      // Data access functions.
      //------------------------------------------------------------------------

      accessFunc (WitScenario *, curScenario)

      inline WitScenario * myScenario (int theIdx)
         {
         return myScenarios_[theIdx];
         }

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      noCopyCtorAssign (WitStochModeMgr);

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      const int nScenarios_;
         //
         // The number of Scenarios owned by this StochModeMgr.

      WitPtrVec <WitScenario> myScenarios_;
         //
         // myScenarios_[theIdx] is the Scenario owned by this StochModeMgr
         // whose index is theIdx.

      WitScenario * curScenario_;
         //
         // The current Scenario.

      WitComponent * curWriteComp_;
         //
         // The current Component for writeData, if any; othwewise NULL.

      bool vectorWritten_;
         //
         // True, iff there is a curent Component for writeData and a vector has
         // been written for it.
   };

#endif
@


1.4
log
@Stochastic Implosion
@
text
@@


1.3
log
@Stochastic Implosion
@
text
@d16 1
a16 3
// Contains the declaration of the following class:
//
//    StochModeMgr
d26 2
a27 1
// Responsible for maintaining the data for a stochastic implosion problem.
@


1.2
log
@Stochastic Implosion
@
text
@d65 12
d122 9
@


1.1
log
@Stochastic Implosion
@
text
@d61 1
a61 1
      void writeDataAttrs ();
d63 1
a63 1
         // Writes the attributes of this StochModeMgr to an input data file.
@

