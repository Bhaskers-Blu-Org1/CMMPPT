head	1.10;
access;
symbols;
locks; strict;
comment	@ * @;


1.10
date	2007.11.12.20.27.36;	author rjw;	state dead;
branches;
next	1.9;

1.9
date	2007.11.12.16.30.11;	author rjw;	state Exp;
branches;
next	1.8;

1.8
date	2007.11.09.00.40.46;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2007.11.08.19.16.39;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2007.11.07.21.50.12;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2007.06.05.21.06.00;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2007.05.10.20.08.49;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2007.04.18.22.27.02;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2007.02.28.20.04.57;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2007.02.27.21.03.04;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Stochastic Implosion
@
text
@//------------------------------------------------------------------------------
//
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
// 
//------------------------------------------------------------------------------

#ifndef HeurAccessH
#define HeurAccessH

//------------------------------------------------------------------------------
// Header file: "HeurAccess.h"
//
// Contains the declaration of class HeurAccess.
//------------------------------------------------------------------------------

#include <Global.h>
#include <Demand.h>
#include <Opn.h>
#include <SubEntry.h>

//------------------------------------------------------------------------------
// Class HeurAccess
//
// "Heuristic Implosion/Allocation Access"
//------------------------------------------------------------------------------

class WitHeurAccess
   {
      friend class WitHeurAtor;
      friend class WitPegger;
      friend class WitHeurCritList;
      friend class WitPclBldr;

   private:

      //------------------------------------------------------------------------
      // Update access functions.
      //------------------------------------------------------------------------

      updateAccess (
         WitPtrTVec <WitObjStack <WitPegEl> >, myPegElsFor, WitDemand)

      //------------------------------------------------------------------------
      // Unimplemented functions
      //------------------------------------------------------------------------

       WitHeurAccess ();
      ~WitHeurAccess ();

      noCopyCtorAssign (WitHeurAccess);
   };

#endif
@


1.9
log
@Stochastic Implosion
@
text
@@


1.8
log
@Stochastic Implosion
@
text
@a42 2
      updateAccess (WitDblFlexVec, subVol, WitSubEntry)

@


1.7
log
@Stochastic Implosion
@
text
@d43 1
a43 2
      updateAccess (WitDblFlexVec, execVol, WitOperation)
      updateAccess (WitDblFlexVec, subVol,  WitSubEntry)
@


1.6
log
@Stochastic Implosion
@
text
@d43 2
a44 5
      updateAccess (WitPartPerStack,    revCritList, WitGlobalComp)
      updateAccess (WitList <WitPclEl>, pgdCritList, WitGlobalComp)
      updateAccess (WitDblFlexVec,      shipVol,     WitDemand)
      updateAccess (WitDblFlexVec,      execVol,     WitOperation)
      updateAccess (WitDblFlexVec,      subVol,      WitSubEntry)
d46 2
a47 2
      updateAccess (WitPtrTVec <WitObjStack <WitPegEl> >,
                                        myPegElsFor, WitDemand)
@


1.5
log
@Stochastic Implosion
@
text
@a27 3
//
// Same as PostAccess, but for heuristic implosion and allocation.
// See PostAccess.h.
@


1.4
log
@Stochastic Implosion
@
text
@d29 2
a30 2
// Same as PreAccess, but for heuristic implosion and allocation.
// See PreAccess.h.
@


1.3
log
@Stochastic Implosion
@
text
@d46 5
a50 5
      updateAccess (WitList <WitPartPer>, criticalList, WitGlobalComp)
      updateAccess (WitList <WitPclEl>,   pgdCritList,  WitGlobalComp)
      updateAccess (WitDblFlexVec,        shipVol,      WitDemand)
      updateAccess (WitDblFlexVec,        execVol,      WitOperation)
      updateAccess (WitDblFlexVec,        subVol,       WitSubEntry)
d53 1
a53 1
                                          myPegElsFor,  WitDemand)
@


1.2
log
@[disallowed backlog]
@
text
@d15 2
@


1.1
log
@[disallowed backlog]
@
text
@d18 3
d33 2
d36 1
d45 7
@

