head	1.4;
access;
symbols;
locks; strict;
comment	@ * @;


1.4
date	2007.11.29.15.35.01;	author rjw;	state dead;
branches;
next	1.3;

1.3
date	2007.11.28.23.23.48;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2007.11.27.22.24.42;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2007.11.27.21.05.02;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Stochastic Implosion
@
text
@//------------------------------------------------------------------------------
//
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
// 
//------------------------------------------------------------------------------

#ifndef StBSH
#define StBSH

//------------------------------------------------------------------------------
// Header file: "StBS.h"
//
// Contains the declaration of the following classes and templates:
//
//    AbsStBS
//    StBS <DerComp>
//------------------------------------------------------------------------------

#include <Assoc.h>

//------------------------------------------------------------------------------
// Class AbsStBS
//
// "Abstract Stochastic BoundSet"
// Abstract interface for class template StBS <DerComp>.
//------------------------------------------------------------------------------

class WitAbsStBS: public WitProbAssoc
   {
   public:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitAbsStBS (WitProblem *);

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      virtual ~WitAbsStBS ();

      //------------------------------------------------------------------------
      // Other public member functions.
      //------------------------------------------------------------------------

      virtual void writeCompSetClause () = 0;
         //
         // Writes a "set" clause for the Component for the represented BoundSet
         // to an input data file.

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      noCopyCtorAssign (WitAbsStBS);
   };

//------------------------------------------------------------------------------
// Class Template StBS <DerComp>
//
// "Stochastic BoundSet"
// Responsible for the aspects of a BoundSet that are specific to stochastic
// mode and to the derived Component (DerComp) with which the BoundSet is
// associated.
//------------------------------------------------------------------------------

template <typename DerComp>
      class WitStBS: public WitAbsStBS
   {
   public:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitStBS (DerComp *);

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      virtual ~WitStBS ();

      //-----------------------------------------------------------------------
      // Overriding private virtual member functions.
      //-----------------------------------------------------------------------

      virtual void writeCompSetClause ();

      //------------------------------------------------------------------------
      // Other private member functions.
      //------------------------------------------------------------------------

      noCopyCtorAssign (WitStBS);

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      DerComp * const myDerComp_;
         //
         // The DerComp associated with the BoundSet that this StBS is
         // responsible for.
   };

#endif
@


1.3
log
@Stochastic Implosion
@
text
@@


1.2
log
@Stochastic Implosion
@
text
@a50 4
      virtual int stageIndex () = 0;
         //
         // Returns the stage index of the represented BoundSet.

a100 1
      virtual int  stageIndex         ();
@


1.1
log
@Stochastic Implosion
@
text
@d53 1
a53 1
         // Returns the stage index for the represented BoundSet.
@

