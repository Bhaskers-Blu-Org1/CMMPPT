head	1.8;
access;
symbols;
locks; strict;
comment	@ * @;


1.8
date	2007.08.22.22.16.16;	author rjw;	state dead;
branches;
next	1.7;

1.7
date	2007.08.20.22.47.59;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2007.08.07.19.17.43;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2007.07.31.23.04.46;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2007.07.30.22.38.03;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2007.07.27.23.15.16;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2007.07.27.21.08.52;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2007.07.26.21.39.49;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Stochastic Implosion
@
text
@//------------------------------------------------------------------------------
//
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
// 
//------------------------------------------------------------------------------

#ifndef StOptElMgrH
#define StOptElMgrH

//------------------------------------------------------------------------------
// Header file: "StOptElMgr.h"
//
// Contains the declaration of class template StOptElMgr <DerComp, StOptEl>.
//------------------------------------------------------------------------------

#include <Assoc.h>
#include <PtrSched.h>

//------------------------------------------------------------------------------
// Class template StOptElMgr <DerComp, StOptEl>
//
// "Stochastic Optimization Element Manager"
// Creates objects of class StOptEl for a StochImpOP and provides a mapping from
// triples of type (DerComp, Period, Scenario) to these objects.
// DerComp is to be a class derived from Component.
// StOptEl is to be a class derived from either StochVar or StochCon.
//
// Implemented in StochOpt.C.
//------------------------------------------------------------------------------

template <typename DerComp, typename StOptEl>
      class WitStOptElMgr: public WitProbAssoc
   {
   public:

      //------------------------------------------------------------------------
      // Public member functions.
      //------------------------------------------------------------------------

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitStOptElMgr (WitStochImpOP *);

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      ~WitStOptElMgr ();

      //------------------------------------------------------------------------
      // Other public member functions.
      //------------------------------------------------------------------------

      void createMyElFor (DerComp *, WitPeriod, WitScenario *);
         //
         // Creates and stores a new StOptEl for the arguments.

      StOptEl * myElFor  (DerComp *, WitPeriod, WitScenario *);
         //
         // Returns the StOptEl for the arguments or NULL, if there is none.

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      noCopyCtorAssign (WitStOptElMgr);

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      WitStochImpOP * const myStochImpOP_;
         //
         // The StochImpOP that owns this StOptElMgr.

      WitPtrSched <DerComp, WitPtrMap <WitScenario, StOptEl> > mySched_;
         //
         // mySched_.myElemAt (theDerComp, thePer) (theScenario) is the StOptEl
         // for theDerComp in theScenario in thePer.
   };

#endif
@


1.7
log
@Stochastic Implosion
@
text
@@


1.6
log
@Stochastic Implosion
@
text
@d27 1
a27 1
// triples of type (Scenario, DerComp, Period) to these objects.
@


1.5
log
@Stochastic Implosion
@
text
@d31 1
a31 1
// Implemented in StOptMisc.C.
@


1.4
log
@Stochastic Implosion
@
text
@d63 1
a63 1
      StOptEl * myElFor  (DerComp *, WitPeriod, WitScenario *) const;
@


1.3
log
@Stochastic Implosion
@
text
@d20 1
a20 1
#include <RefMap.h>
d59 1
a59 1
      void createMyElFor (WitScenario *, DerComp *, WitPeriod);
d63 1
a63 1
      StOptEl * myElFor (WitScenario *, DerComp *, WitPeriod) const;
d83 1
a83 1
      WitRefMap <WitScenario, WitPtrSched <DerComp, StOptEl> > mySched_;
d85 1
a85 1
         // mySched_ (theScenario).myPtrAt (theDerComp, thePer) is the StOptEl
@


1.2
log
@Stochastic Implosion
@
text
@d63 1
a63 1
      StOptEl * myElFor (WitScenario *, DerComp *, WitPeriod);
@


1.1
log
@Stochastic Implosion
@
text
@d31 1
a31 1
// Implemented in StOptHelp.C.
@

