head	1.7;
access;
symbols;
locks; strict;
comment	@ * @;


1.7
date	2006.11.02.23.07.13;	author rjw;	state dead;
branches;
next	1.6;

1.6
date	2006.10.12.19.43.44;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2006.10.10.19.10.46;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2006.10.09.23.25.23;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2006.09.18.23.02.52;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2006.09.18.22.27.40;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2006.08.29.17.37.54;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.7
log
@External opt implosion.
@
text
@//------------------------------------------------------------------------------
//
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
// 
//------------------------------------------------------------------------------

#ifndef ApiFuncRepH
#define ApiFuncRepH

//------------------------------------------------------------------------------
// Header file: "ApiFuncRep.h"
//
// Contains the declaration of enum     ReqsInit::Tag.
// Contains the declaration of enum  ExtOptState::Tag;
// Contains the declaration of class ApiFuncRep.
//------------------------------------------------------------------------------

#include <Str.h>

//------------------------------------------------------------------------------
// Enum ReqsInit::Tag
//
// "Requires Initialization Tag"
// A tag to indicate whether or not a particular API function is only allowed to
// be called after witInitialize or witCopyData has been called for the same
// WitRun.
//------------------------------------------------------------------------------

namespace WitReqsInit
   {
   enum Tag
      {
      yes,    // Initialization     required.
      no,     // Initialization not required.
      invalid // Invalid value.
      };
   };

//------------------------------------------------------------------------------
// Enum ExtOptState::Tag
//
// "External Optimizing Implosion State Tag"
// A tag to indicate the required state of external optimizing implosion when a
// particular API function is called.
//------------------------------------------------------------------------------

namespace WitExtOptState
   {
   enum Tag
      {
      active,   // External Opt implosion must be   active.
      inactive, // External Opt implosion must be inactive.
      either,   // External Opt implosion may be active or inactive.
      invalid   // Invalid value.
      };
   };

//------------------------------------------------------------------------------
// Class ApiFuncRep
//
// "API Function Representative"
// An ApiFuncRep is a representative of one particular API function for
// certain purposes.
// Each WitRun contains exactly one ApiFuncRep for each outer API function
// that has a WitRun argument (i.e., all except witFree and witMalloc).
//------------------------------------------------------------------------------

class WitApiFuncRep
   {
   public:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitApiFuncRep (
            WitRun *            theWitRun,
            const WitString &   theFuncName,
            WitReqsInit::Tag    theReqsInitTag,
            WitExtOptState::Tag theExtOptStateTag);

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      ~WitApiFuncRep ();

      //------------------------------------------------------------------------
      // Other public member functions.
      //------------------------------------------------------------------------

      void startMyFunc ();
         //
         // Takes action appropriate for the beginning of a call to this 
         // ApiFuncRep's API function.

      //------------------------------------------------------------------------
      // Data access functions.
      //------------------------------------------------------------------------

      accessFunc (const WitString &, myFuncName)

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      void validateAttValues ();
         //
         // Checks the validity of the attributes of this ApiFuncRep.

      inline WitMsgFacility & myMsgFac ();

      noCopyCtorAssign (WitApiFuncRep);

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      WitRun * const myWitRun_;
         //
         // The WitRun for this ApiFuncRep.

      const WitString myFuncName_;
         //
         // The name of the API function.

      const WitReqsInit::Tag myReqsInitTag_;
         //
         // Indicates whether or not the API function represented by this
         // ApiFuncRep is only allowed to be called after witInitialize or 
         // witCopyData has been called for the same WitRun.

      const WitExtOptState::Tag myExtOptStateTag_;
         //
         // Indicates the required state of external optimizing implosion when
         // the API function represented by this ApiFuncRep is called.
   };

#endif
@


1.6
log
@External opt implosion.
@
text
@@


1.5
log
@Assisted opt implosion.
@
text
@d16 2
a17 2
// Contains the declaration of enum      ReqsInit::Tag.
// Contains the declaration of enum  AsstOptState::Tag;
d43 1
a43 1
// Enum AsstOptState::Tag
d45 2
a46 2
// "Assisted Optimizing Implosion State Tag"
// A tag to indicate the required state of assisted optimizing implosion when a
d50 1
a50 1
namespace WitAsstOptState
d54 3
a56 3
      active,   // Assisted Opt implosion must be   active.
      inactive, // Assisted Opt implosion must be inactive.
      either,   // Assisted Opt implosion may be active or inactive.
d80 4
a83 4
            WitRun *             theWitRun,
            const WitString &    theFuncName,
            WitReqsInit::Tag     theReqsInitTag,
            WitAsstOptState::Tag theAsstOptStateTag);
d138 1
a138 1
      const WitAsstOptState::Tag myAsstOptStateTag_;
d140 1
a140 1
         // Indicates the required state of assisted optimizing implosion when
@


1.4
log
@Custom opt implosion.
@
text
@d17 1
a17 1
// Contains the declaration of enum  CustOptState::Tag;
d43 1
a43 1
// Enum CustOptState::Tag
d45 2
a46 2
// "Optimizing Implosion State Tag"
// A tag to indicate the required state of custom optimizing implosion when a
d50 1
a50 1
namespace WitCustOptState
d54 3
a56 3
      active,   // Custom Opt implosion must be   active.
      inactive, // Custom Opt implosion must be inactive.
      either,   // Custom Opt implosion may be active or inactive.
d83 1
a83 1
            WitCustOptState::Tag theCustOptStateTag);
d138 1
a138 1
      const WitCustOptState::Tag myCustOptStateTag_;
d140 2
a141 2
         // Indicates the required state of custom optimizing implosion when the
         // API function represented by this ApiFuncRep is called.
@


1.3
log
@App controlled opt implosion.
@
text
@d16 2
a17 2
// Contains the declaration of enum  ReqsInit::Tag.
// Contains the declaration of enum  OptState::Tag;
d43 1
a43 1
// Enum OptState::Tag
d46 1
a46 1
// A tag to indicate the required state of optimizing implosion when a
d50 1
a50 1
namespace WitOptState
d54 3
a56 3
      active,   // Opt implosion must be   active.
      inactive, // Opt implosion must be inactive.
      either,   // Opt implosion may be active or inactive.
d80 4
a83 4
            WitRun *          theWitRun,
            const WitString & theFuncName,
            WitReqsInit ::Tag theReqsInitTag,
            WitOptState ::Tag theOptStateTag);
d138 1
a138 1
      const WitOptState::Tag myOptStateTag_;
d140 2
a141 2
         // Indicates the required state of optimizing implosion when the API
         // function represented by this ApiFuncRep is called.
@


1.2
log
@App controlled opt implosion.
@
text
@d16 2
a17 3
// Contains the declaration of enum  ReqsInit ::Tag.
// Contains the declaration of enum  ProcState::Tag;
// Contains the declaration of enum  OptState ::Tag;
a42 19
// Enum ProcState::Tag
//
// "Processing State Tag"
// A tag to indicate the processing state into which the WitRun will
// automatically be placed whenever a particular API function is called.
//------------------------------------------------------------------------------

namespace WitProcState
   {
   enum Tag
      {
      unpreproc,  // The WitRun will be put into an unpreprocessed  state.
      unpostproc, // The WitRun will be put into an unpostprocessed state.
      none,       // The processing state of the WitRun will not be changed.
      invalid     // Invalid value.
      };
   };

//------------------------------------------------------------------------------
a82 1
            WitProcState::Tag theProcStateTag,
a137 6
      const WitProcState::Tag myProcStateTag_;
         //
         // Indicates the processing state into which the WitRun will
         // automatically be placed whenever the API function represented by
         // this ApiFuncRep is called.

@


1.1
log
@App controlled opt implosion.
@
text
@d16 3
a18 2
// Contains the declaration of enum  ReqsInit::Tag.
// Contains the declaration of enum  ReqOptState::Tag;
d28 2
a29 2
// A tag to indicate whether or not an API function is only allowed to be
// called after witInitialize or witCopyData has been called for the same
d44 1
a44 1
// Enum ReqOptState:Tag
d46 3
a48 3
// "Required Optimizing Implosion State Tag"
// A tag to indicate the required state of optimizing implosion when an API
// function is called.
d51 20
a70 1
namespace WitReqOptState
d100 5
a104 4
            WitRun *            theWitRun,
            const WitString &   theFuncName,
            WitReqsInit::Tag    theReqsInitTag,
            WitReqOptState::Tag theReqOptStateTag);
d159 7
a165 1
      const WitReqOptState::Tag myReqOptStateTag_;
@

