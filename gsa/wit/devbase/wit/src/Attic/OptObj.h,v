head	1.25;
access;
symbols
	sce_5_01_20080919:1.18
	latest_sce_4_20_20060523:1.4.0.2
	sce_4_20_20060523:1.4
	latest_sce4_20_OSL:1.3.0.2
	sce_4_20_OSL:1.3
	sce_410_withVa:1.3
	sce_4_05_20040511:1.3
	sce_4_00_20040201:1.2
	nextGenBranch:1.1.0.6
	nextGenRoot:1.1
	sce_3_30_20030627:1.1
	EndRw-branch:1.1.0.4
	Root-of-EndRw:1.1
	rwToStl:1.1.0.2;
locks; strict;
comment	@ * @;


1.25
date	2010.03.24.21.31.03;	author rjw;	state dead;
branches;
next	1.24;

1.24
date	2010.03.23.22.45.21;	author rjw;	state Exp;
branches;
next	1.23;

1.23
date	2010.03.18.22.46.29;	author rjw;	state Exp;
branches;
next	1.22;

1.22
date	2010.03.18.22.35.02;	author rjw;	state Exp;
branches;
next	1.21;

1.21
date	2010.01.06.23.20.48;	author rjw;	state Exp;
branches;
next	1.20;

1.20
date	2009.11.19.21.05.10;	author rjw;	state Exp;
branches;
next	1.19;

1.19
date	2009.11.13.19.01.26;	author rjw;	state Exp;
branches;
next	1.18;

1.18
date	2008.03.03.22.35.43;	author rjw;	state Exp;
branches;
next	1.17;

1.17
date	2008.02.29.23.24.29;	author rjw;	state Exp;
branches;
next	1.16;

1.16
date	2008.02.27.23.19.11;	author rjw;	state Exp;
branches;
next	1.15;

1.15
date	2007.09.07.20.25.12;	author rjw;	state Exp;
branches;
next	1.14;

1.14
date	2007.09.07.20.10.22;	author rjw;	state Exp;
branches;
next	1.13;

1.13
date	2007.09.07.15.19.29;	author rjw;	state Exp;
branches;
next	1.12;

1.12
date	2007.08.09.20.17.42;	author rjw;	state Exp;
branches;
next	1.11;

1.11
date	2007.08.09.19.30.36;	author rjw;	state Exp;
branches;
next	1.10;

1.10
date	2007.08.01.20.38.22;	author rjw;	state Exp;
branches;
next	1.9;

1.9
date	2007.08.01.20.12.25;	author rjw;	state Exp;
branches;
next	1.8;

1.8
date	2007.06.22.18.03.49;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2006.10.03.15.08.59;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2006.08.18.19.32.52;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2006.08.18.18.43.38;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2006.05.02.17.34.06;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2004.02.06.23.27.10;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2003.12.01.21.05.04;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2002.08.29.23.06.27;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.25
log
@Removed OptObj classes.
@
text
@//------------------------------------------------------------------------------
//
//     (c) Copyright IBM Corp. 2006.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
// 
//------------------------------------------------------------------------------

#ifndef OptObjH
#define OptObjH

//------------------------------------------------------------------------------
// Header file: "OptObj.h"
//
// Contains the declaration of class OptObj.
//------------------------------------------------------------------------------

#include <Assoc.h>

//------------------------------------------------------------------------------
// Class OptObj
// An objective for an optimization model.
//
// Class hierarchy:
//
//    ProbAssoc
//       OptObj
//          DetObj
//          ZeroObj
//          StochObj
//
// Implemented in OptMisc.C.
//------------------------------------------------------------------------------

class WitOptObj: public WitProbAssoc
   {
   public:

      //-----------------------------------------------------------------------
      // Destructor function.
      //-----------------------------------------------------------------------

      virtual ~WitOptObj ();

      //-----------------------------------------------------------------------
      // Public pure virtual member functions.
      //-----------------------------------------------------------------------

      virtual double coeffVal (WitOptVar * theVar) = 0;
         //
         // Computes and returns the value of the Coeff of theVar in this
         // OptObj.

      //-----------------------------------------------------------------------
      // Data access functions.
      //-----------------------------------------------------------------------

      accessFunc (const char *, myText)

      //-----------------------------------------------------------------------
      // Other public member functions.
      //-----------------------------------------------------------------------

      void print ();
         //
         // Prints this OptObj to the modelFile.

      double myValue ();
         //
         // Computes and returns the value of this OptObj given the current
         // primal solution.

   protected:

      //-----------------------------------------------------------------------
      // Constructor functions.
      //-----------------------------------------------------------------------

      WitOptObj (const char * theText, WitOptModel * theOptModel);

   private:

      //-----------------------------------------------------------------------
      // Private member functions.
      //-----------------------------------------------------------------------

      noCopyCtorAssign (WitOptObj);

      //-----------------------------------------------------------------------
      // Private member data.
      //-----------------------------------------------------------------------

      const char * const myText_;
         //
         // A String identifying this OptObj.

      WitOptModel * const myOptModel_;
         //
         // The OptModel to which this OptObj belongs.
   };

#endif
@


1.24
log
@Removed class StBoundsObj.
@
text
@@


1.23
log
@Removed class PrimaryObj.
@
text
@a31 1
//          StBoundsObj
@


1.22
log
@Removed class BoundsObj.
@
text
@a28 1
//          PrimaryObj
@


1.21
log
@Multi-objective mode
@
text
@a28 1
//          BoundsObj
@


1.20
log
@Obj1Obj ==> DetObj
@
text
@d32 1
@


1.19
log
@Removing objective #2.
@
text
@d31 1
a31 1
//          Obj1Obj
@


1.18
log
@Stochastic Implosion
@
text
@a31 5
//          RevObj
//          InvObj
//          ServObj
//          SubObj
//          Obj2Obj
@


1.17
log
@Stochastic Implosion
@
text
@d23 1
a23 1
// An objective for an optimization problem.
@


1.16
log
@Stochastic Implosion
@
text
@d74 1
a74 1
         // Prints this OptObj to the optProbFile.
@


1.15
log
@Stochastic Implosion
@
text
@d87 1
a87 1
      WitOptObj (const char * theText, WitOptProb * theOptProb);
d105 1
a105 1
      WitOptProb * const myOptProb_;
d107 1
a107 1
         // The OptProb to which this OptObj belongs.
@


1.14
log
@Stochastic Implosion
@
text
@d37 1
a38 1
//          StochObj
@


1.13
log
@Stochastic Implosion
@
text
@a36 1
//          StPrimaryObj
@


1.12
log
@Stochastic Implosion
@
text
@d37 2
@


1.11
log
@Stochastic Implosion
@
text
@d56 1
a56 1
      virtual double coeffVal (WitOptVar * theVar) const = 0;
d71 1
a71 1
      void print () const;
d75 1
a75 1
      double myValue () const;
@


1.10
log
@Stochastic Implosion
@
text
@d56 1
a56 1
      virtual double coeffVal (const WitOptVar * theVar) const = 0;
@


1.9
log
@Stochastic Implosion
@
text
@d39 1
a39 1
// Implemented in OptProbEl.C.
@


1.8
log
@Stochastic Implosion
@
text
@d19 1
a19 1
#include <Util.h>
d22 2
a23 2
// class OptObj
// An objective for the optimization problem.
d25 1
a25 1
// OptObj is at the top of the following class hierarchy:
d27 11
a37 9
//    OptObj
//       BoundsObj
//       PrimaryObj
//       Obj1Obj
//       RevObj
//       InvObj
//       ServObj
//       SubObj
//       Obj2Obj
d42 1
a42 1
class WitOptObj
a46 6
      // Constructor functions.
      //-----------------------------------------------------------------------

      WitOptObj (const char * theText, WitOptProb * theOptProb);

      //-----------------------------------------------------------------------
d83 1
a83 1
      // Protected access functions.
d86 1
a86 1
      WitOptImploder * myOptImploder () const;
@


1.7
log
@App controlled opt implosion.
@
text
@d37 1
a37 1
// Implemented in OptObjs.C.
@


1.6
log
@App controlled opt implode.
@
text
@d23 1
a23 1
// An objective for the optimization model.
d77 1
a77 1
         // Prints this OptObj to the modelFile.
@


1.5
log
@App controlled opt implosion.
@
text
@d36 2
@


1.4
log
@Updated the copyright date on all source files.
@
text
@d46 1
a46 1
      WitOptObj (const char * theText, WitOptModel * theOptModel);
d106 1
a106 1
      WitOptModel * const myOptModel_;
d108 1
a108 1
         // The OptModel to which this OptObj belongs.
@


1.3
log
@Continued double precision.
@
text
@d3 1
a3 1
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
@


1.2
log
@Continued implementation of PIP.
@
text
@d58 1
a58 1
      virtual float coeffVal (const WitOptVar * theVar) const = 0;
@


1.1
log
@Continued implementation of opt implosion with lot sizes.
@
text
@d38 1
a38 1
class WitOptObj: public WitUtil
@

