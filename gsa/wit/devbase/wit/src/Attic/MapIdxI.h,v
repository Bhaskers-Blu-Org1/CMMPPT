head	1.5;
access;
symbols
	sce_4_05_20040511:1.3
	sce_4_00_20040201:1.3;
locks; strict;
comment	@ * @;


1.5
date	2005.03.28.20.14.36;	author rjw;	state dead;
branches;
next	1.4;

1.4
date	2005.03.24.18.42.04;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2003.12.12.20.47.43;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2003.12.09.22.44.05;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2003.09.26.15.38.57;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Revised mappingIndex code.
@
text
@//------------------------------------------------------------------------------
//
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
// 
//------------------------------------------------------------------------------

#ifndef MapIdxIH
#define MapIdxIH

//------------------------------------------------------------------------------
// Header file: "MapIdxI.h"
//------------------------------------------------------------------------------

#include <MapIdx.h>

//------------------------------------------------------------------------------
// Implementation of global function template mappingIndex.
//------------------------------------------------------------------------------

#if 0

template <typename DomEl>
      inline int mappingIndex (const DomEl * theDomEl)
   {
   return theDomEl->mappingIndex ();
   }

#endif

#endif
@


1.4
log
@Revised mappingIndex code.
@
text
@@


1.3
log
@An attempt to fix a syntax error in Windows.
@
text
@d23 2
d32 2
@


1.2
log
@Continued implementation of PIP.
@
text
@d20 1
a20 1
// Implementation of NonClass function template mappingIndex.
d24 1
a24 1
      inline int WitNonClass::mappingIndex (const DomEl * theDomEl)
@


1.1
log
@Continued implementation of post-implosion pegging.
@
text
@d20 1
a20 1
// Implementation of global function template mappingIndex.
d24 1
a24 1
      inline int mappingIndex (const DomEl * theDomEl)
@

