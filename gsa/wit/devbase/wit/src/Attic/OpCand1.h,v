head	1.3;
access;
symbols;
locks; strict;
comment	@ * @;


1.3
date	2003.03.03.21.07.29;	author rjw;	state dead;
branches;
next	1.2;

1.2
date	2003.02.28.20.47.36;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2003.02.27.19.20.20;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Continued implementation of proportionate routing.
@
text
@//------------------------------------------------------------------------------
//
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
// 
//------------------------------------------------------------------------------

#ifndef OpCandH
#define OpCandH

//------------------------------------------------------------------------------
// Header file: "OpCand.h"
//
// Contains the declaration of class OpCand.
//------------------------------------------------------------------------------

#include <SelCand.h>

//------------------------------------------------------------------------------
// Class OpCand
//
// "Proportionate Routing Candidate"
// Represents a candidate for selection by proportionate routing.
// In this case, the selection candidate specifies whether the OrCand for the
// OpPt that selects it is currently active for proportionate explosions from
// the corresponding OrSite in the corresponding period.
//
// Class Hierarchy:
//
// SelCand
//    OpCand
//
// Implemented in OldPr1.C.
//------------------------------------------------------------------------------

class WitOpCand: public WitSelCand
   {
   public:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitOpCand (bool activeVal, WitProblem *);
         //
         // active_ <-- activeVal

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      ~WitOpCand ();

      //------------------------------------------------------------------------
      // Overrides from class SelCand.
      //------------------------------------------------------------------------

      virtual void        prtID    ();
      virtual WitOpCand * myOpCand ();

      //------------------------------------------------------------------------
      // Data access functions.
      //------------------------------------------------------------------------

      accessFunc (bool, active)

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      noCopyCtorAssign (WitOpCand);

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      const bool active_;
         //
         // For any OpPt that selects this OpCand, the OpPt's OrCand is
         // currently active for proportionate explosions in the PtPt's period,
         // iff active_ is true.
   };

#endif
@


1.2
log
@Continued implementation of proportionate routing.
@
text
@@


1.1
log
@Continued implementation of proportionate routing.
@
text
@d10 2
a11 2
#ifndef PrCandH
#define PrCandH
d14 1
a14 1
// Header file: "PrCand.h"
@

