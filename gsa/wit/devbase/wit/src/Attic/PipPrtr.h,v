head	1.8;
access;
symbols
	sce_410_withVa:1.2;
locks; strict;
comment	@ * @;


1.8
date	2006.03.09.17.23.13;	author rjw;	state dead;
branches;
next	1.7;

1.7
date	2006.03.08.23.57.11;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2005.11.18.21.44.12;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2005.11.17.22.04.42;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2005.11.14.22.29.02;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2005.11.11.23.29.13;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2005.06.15.23.07.41;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2005.01.28.19.34.27;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.8
log
@[shared-resource pegging]
@
text
@//------------------------------------------------------------------------------
//
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
// 
//------------------------------------------------------------------------------

#ifndef PipPrtrH
#define PipPrtrH

//------------------------------------------------------------------------------
// Header file: "PipPrtr.h"
//
// Contains the declaration of the following class:
//
//    PipPrtr
//------------------------------------------------------------------------------

#include <Assoc.h>

//------------------------------------------------------------------------------
// Class PipPrtr
//
// Class Hierarchy:
//
// ProbAssoc
//    PipPrtr
//
// Implemented in PIP.C.
//------------------------------------------------------------------------------

class WitPipPrtr: public WitProbAssoc
   {
   public:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitPipPrtr (WitPipPgg *);

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      ~WitPipPrtr ();

      //------------------------------------------------------------------------
      // Other public member functions.
      //------------------------------------------------------------------------

      void printPegging ();
         //
         // Prints the pegging.

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      void prtExecVolPgg ();
      void prtSubVolPgg ();
         //
         // Prints the execVol pegging.
         // Prints the subVol  pegging.

      void prtPartPgg (
            WitPipAttPgg <WitPart> * thePartAttPgg,
            const char *             theAttName);
         //
         // Prints thePartAttPgg.

      noCopyCtorAssign (WitPipPrtr);

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      WitPipPgg * const myPgg_;
         //
         // This PipPgg that owns this PipPrtr.
   };

#endif
@


1.7
log
@[shared-resource pegging]
@
text
@@


1.6
log
@[shared-resource pegging]
@
text
@a38 10
      // Other public member functions.
      //------------------------------------------------------------------------

      static void printPegging (WitPipMgr * thePipMgr);
         //
         // Prints the pegging for thePipMgr.

   private:

      //------------------------------------------------------------------------
d42 1
a42 1
      WitPipPrtr (WitPipMgr *);
d51 1
a51 1
      // Other private member functions.
d54 1
a54 1
      void print ();
d58 6
d70 3
a72 1
      void prtPartPgg (WitPipPartAtt::Tag theAttTag, const char * theAttName);
d74 1
a74 1
         // Prints the pegging for theAttTag.
d82 1
a82 1
      WitPipMgr * const myPipMgr_;
d84 1
a84 1
         // The PipMgr that owns this PipPrtr.
@


1.5
log
@[shared-resource pegging]
@
text
@d39 10
d61 1
a61 1
      // Other public member functions.
a67 6
   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

@


1.4
log
@[shared-resource pegging]
@
text
@d16 3
a18 1
// Contains the declaration of class UrpPrtr.
a21 2
#include <ObjStack.h>
#include <PipPartAtt.h>
d24 1
a24 3
// Class UrpPrtr
//
// Responsible for printing the Unshared-Resource Pegging.
d29 1
a29 1
//    UrpPrtr
d31 1
a31 1
// Implemented in URP.C.
d34 1
a34 1
class WitUrpPrtr: public WitProbAssoc
d42 1
a42 1
      WitUrpPrtr (WitUrpCoord *);
d48 1
a48 1
      ~WitUrpPrtr ();
d64 2
a65 6
      void findTargSeq ();
         //
         // Computes myTargSeq_.

      void prtExecVolPip ();
      void prtSubVolPip  ();
d68 1
a68 1
         // Prints the subvol  pegging.
d70 1
a70 1
      void prtPartPip (WitPipPartAtt::Tag theAttTag, const char * theAttName);
d74 1
a74 7
      void printTargAndVol (WitUrpTarg * theTarg, double pegVol);
         //
         // Prints theTarg and pegVol;

      accessWrapper (FILE *, solnFile, myProblem ())

      noCopyCtorAssign (WitUrpPrtr);
d80 1
a80 5
      WitUrpCoord * const myUrpCoord_;
         //
         // The UrpCoord that owns this UrpPrtr.

      WitObjStack <WitUrpTarg> myTargSeq_;
d82 1
a82 2
         // The set of all UrpTargs corresponding to (Demand, shipPer) pairs in
         // the shipment sequence, listed in order of first appearance.
@


1.3
log
@[shared-resource pegging]
@
text
@d16 1
a16 1
// Contains the declaration of class PipPrtr.
d24 1
a24 1
// Class PipPrtr
d26 1
a26 1
// Responsible for printing the Post-Implosion Pegging.
d31 1
a31 1
//    PipPrtr
d33 1
a33 1
// Implemented in PIP.C.
d36 1
a36 1
class WitPipPrtr: public WitProbAssoc
d44 1
a44 1
      WitPipPrtr (WitUrpCoord *);
d50 1
a50 1
      ~WitPipPrtr ();
d80 1
a80 1
      void printTargAndVol (WitPipTarg * theTarg, double pegVol);
d86 1
a86 1
      noCopyCtorAssign (WitPipPrtr);
d94 1
a94 1
         // The UrpCoord that owns this PipPrtr.
d96 1
a96 1
      WitObjStack <WitPipTarg> myTargSeq_;
d98 1
a98 1
         // The set of all PipTargs corresponding to (Demand, shipPer) pairs in
@


1.2
log
@New pipShare.
@
text
@d44 1
a44 1
      WitPipPrtr (WitPipPegMgr *);
d92 1
a92 1
      WitPipPegMgr * const myPegMgr_;
d94 1
a94 1
         // The PipPegMgr that owns this PipPrtr.
@


1.1
log
@Tie Breaking Prop-Rt.
@
text
@d80 1
a80 1
      void printTargID (WitPipTarg * & theTarg);
d82 1
a82 2
         // Prints the ID of theTarg and sets theTarg to NULL.
         // No-op, if theTarg is NULL.
@

