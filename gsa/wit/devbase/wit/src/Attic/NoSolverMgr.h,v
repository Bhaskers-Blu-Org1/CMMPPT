head	1.9;
access;
symbols;
locks; strict;
comment	@ * @;


1.9
date	2011.02.03.22.30.52;	author rjw;	state dead;
branches;
next	1.8;

1.8
date	2010.11.17.20.20.52;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2010.11.04.19.59.01;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2010.05.24.18.20.51;	author rjw;	state dead;
branches;
next	1.5;

1.5
date	2010.05.18.22.54.24;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2010.05.14.21.20.56;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2010.05.12.18.38.06;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2010.05.07.23.18.59;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2010.01.13.19.52.08;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.9
log
@CPLEX
@
text
@//------------------------------------------------------------------------------
//
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
// 
//------------------------------------------------------------------------------

#ifndef NoSolverMgrH
#define NoSolverMgrH

//------------------------------------------------------------------------------
// Header file: "NoSolverMgr.h"
//
// Contains the declaration of class NoSolverMgr.
//------------------------------------------------------------------------------

#include <SolverMgr.h>

//------------------------------------------------------------------------------
// class NoSolverMgr
//
// An instance of this class is to be used as the SolverMgr when no solver is
// selected. Invoking its solveOptProb function just issues a fatal error.
//
// Class hierarchy:
//
// ProbAssoc
//    SolverMgr
//       NoSolverMgr
//------------------------------------------------------------------------------

class WitNoSolverMgr: public WitSolverMgr
   {
   public:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitNoSolverMgr (WitOptProblem *);

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      virtual ~WitNoSolverMgr ();

      //------------------------------------------------------------------------
      // Other public member functions.
      //------------------------------------------------------------------------

      virtual void solveOptProb ();
         //
         // Override from class SolverMgr.
         // Just issues a fatal error.

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      noCopyCtorAssign (WitNoSolverMgr);
   };

#endif
@


1.8
log
@CPLEX
@
text
@@


1.7
log
@Fixed a bug:
   External optimizing implosion issued a fatal error when invoked without
   a selected solver.
@
text
@d25 1
a25 1
// selected. Invoking its solve function just issues a fatal error.
d54 1
a54 1
      virtual void solve ();
@


1.6
log
@*** empty log message ***
@
text
@d24 2
a25 3
// This is the derived class of class SolverMgr to be used when no solver has
// been embedded into WIT.
// The solve function just issues a fatal error.
a31 2
//
// Implemented in OptMisc.C.
d42 1
a42 1
      WitNoSolverMgr (WitOptModel *);
d57 1
@


1.5
log
@Preparing for embedded CPLEX.
@
text
@@


1.4
log
@Revising the build procedure.
@
text
@a20 2
#if ! SOLVER_EMBEDDED

a69 2
#endif // not SOLVER_EMBEDDED

@


1.3
log
@Revising the build procedure.
@
text
@d21 1
a21 1
#if ! COIN_EMBEDDED
d26 2
a27 2
// This is the subclass of class SolverMgr to be used in non-OPT_OMPLODE mode.
// In this case, there is no solver.
d72 1
a72 1
#endif // not COIN_EMBEDDED
@


1.2
log
@Revising the build procedure.
@
text
@d21 1
a21 1
#if ! WIT_EMBEDS_COIN
d72 1
a72 1
#endif // not WIT_EMBEDS_COIN
@


1.1
log
@Multi-objective mode
@
text
@d21 1
a21 1
#ifndef OPT_IMPLODE
d72 1
a72 1
#endif // non-OPT_IMPLODE
@

