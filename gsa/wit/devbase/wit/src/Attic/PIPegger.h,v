head	1.3;
access;
symbols;
locks; strict;
comment	@ * @;


1.3
date	2003.09.30.15.40.54;	author rjw;	state dead;
branches;
next	1.2;

1.2
date	2003.09.26.20.55.13;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2003.09.25.18.51.09;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Continued implementation of post-implosion pegging.
@
text
@//------------------------------------------------------------------------------
//
//     (c) Copyright IBM Corp. 1993,1994,1996,2000.
//     (Unpublished)
//     OCO Source Modules
//     IBM Confidential 
// 
//------------------------------------------------------------------------------

#ifndef PIPeggerH
#define PIPeggerH

//------------------------------------------------------------------------------
// Header file: "PIPegger.h"
//
// Contains the declaration of class PIPegger.
//------------------------------------------------------------------------------

#include <Assoc.h>

//------------------------------------------------------------------------------
// Class PIPegger
//
// "Post-Implosion Pegger"
// Responsible for forming the post-implosion pegging.
//
// Class Hierarchy:
//
// ProbAssoc
//    PIPegger
//------------------------------------------------------------------------------

class WitPIPegger: public WitProbAssoc
   {
   public:

      //------------------------------------------------------------------------
      // Constructor functions.
      //------------------------------------------------------------------------

      WitPIPegger (WitPIPegMgr *);

      //------------------------------------------------------------------------
      // Destructor function.
      //------------------------------------------------------------------------

      ~WitPIPegger ();

      //------------------------------------------------------------------------
      // Other public member functions.
      //------------------------------------------------------------------------

      void formPegging ();
         //
         // Forms the pegging.

   private:

      //------------------------------------------------------------------------
      // Private member functions.
      //------------------------------------------------------------------------

      noCopyCtorAssign (WitPIPegger);

      //------------------------------------------------------------------------
      // Private member data.
      //------------------------------------------------------------------------

      WitPIPegMgr * const myPIPegMgr_;
         //
         // The PIPegMgr that owns this Pegger.
         // This Pegger is responsible for building the pegging for myPIPegMgr_.
   };

#endif
@


1.2
log
@Continued implementation of post-implosion pegging.
@
text
@@


1.1
log
@Continued implementation of post-implosion pegging.
@
text
@d25 1
a25 1
// Responsible for building the post-implosion pegging.
d53 1
a53 1
      void peg ();
d55 1
a55 1
         // Builds the pegging.
@

