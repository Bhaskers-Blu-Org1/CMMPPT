head	1.3;
access;
symbols;
locks; strict;
comment	@# @;


1.3
date	2011.03.11.19.56.02;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2010.12.23.22.13.49;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2008.07.24.08.16.16;	author fasano;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Removed the compiler warning for inlining failures.
@
text
@# Makefile for the program for this architecture

# $Header: /gsa/yktgsa/projects/w/wit/devbase/wit/zlinux64/Makefile,v 1.2 2010/12/23 22:13:49 rjw Exp $

platform              = zlinux64

sep                   = /

config_dir            = ..$(sep)..$(sep)config$(sep)


include $(config_dir)p_$(platform).mk


coin_platform         = Linux-O

default_wit_coin_home = ../../COIN


# exe_type should be debug, profile, slow, fast, beta or released.  
# To override it without
# changing this makefile, use "exe_type=released" (for example) as an 
# argument to make on the command line.

exe_type = debug


# Override of ds_comp_std_flags value as set in p_linux.mk:

ds_comp_std_flags =       \
   -Werror                \
   -Wno-ctor-dtor-privacy \
   -Wnon-virtual-dtor     \
   -Wimplicit             \
   -Wunused-value         \
   -Wreorder              \


all:	wit libwit.a

include ..$(sep)src$(sep)appl.mk

# DO NOT DELETE THIS LINE -- make depend depends on it.

@


1.2
log
@Brought the WIT Makefile on zLinux up to date for the non-CPLEX case.
@
text
@d3 1
a3 1
# $Header: /gsa/yktgsa/projects/w/wit/devbase/wit/zlinux64/Makefile,v 1.1 2008/07/24 08:16:16 fasano Exp $
a36 1
   -Winline               \
@


1.1
log
@add zlinux
@
text
@d3 1
a3 1
# $Header: /u/wit/devbase/wit/linux/Makefile,v 1.651 2008/04/10 22:09:51 rjw Exp $
d5 1
a5 1
platform = zlinux64
d7 1
a7 2
sep = /
config_dir	= ..$(sep)..$(sep)config$(sep)
d9 1
a9 1
#extra_regular_lib_objects   = witLexer.o witParse.o
a10 3
extra_prelinked_lib_objects = \
   MclClient                  \
   CoinSolver                 \
d14 6
d22 3
a24 4
# changing this makefile, use "exe_type=debug" (for example) as an 
# argument to make on the command line.  This default was chosen so that
# we don't accidentally ship product code with symbol tables and other
# info for reverse-engineering enclosed.
a43 36
# create the parser
../src/witParse.C ../src/ytab.h: \
   ../src/witParse.y
	bison -d ../src/witParse.y
	mv -f witParse.tab.c ../src/witParse.C
	mv -f witParse.tab.h ../src/ytab.h


# create the parser
#./src/witParse.C ../src/ytab.h: \
#  ../src/witParse.y
#	yacc -d ../src/witParse.y
#	mv -f y.tab.c ../src/witParse.C
#	mv -f y.tab.h ../src/ytab.h


# create the lexer
../src/witLexer.C: \
   ../src/witLexer.l \
   ../src/ytab.h
	$(LEX) ../src/witLexer.l
	sed -e /daffy/d -e /#include\ \<unistd\.h\>/d  <lex.yy.c >witLexer.C
	mv -f witLexer.C ../src/witLexer.C
	rm lex.yy.c


# create the lexer
#./src/witLexer.C: \
#  ../src/witLexer.l \
#  ../src/ytab.h
#	$(LEX) ../src/witLexer.l
#	sed -e 4d -e /unistd.h/d <lex.yy.c >witLexer.C
#	mv -f witLexer.C ../src/witLexer.C
#	rm lex.yy.c


@

