head	1.2;
access;
symbols
	sce_5_01_20080919:1.2
	latest_sce_4_20_20060523:1.2.0.6
	sce_4_20_20060523:1.2
	latest_sce4_20_OSL:1.2.0.4
	sce_4_20_OSL:1.2
	sce_4_05_20040511:1.2
	sce_4_00_20040201:1.2
	nextGenBranch:1.2.0.2
	nextGenRoot:1.2
	sce_3_30_20030627:1.2
	EndRw-branch:1.1.1.1.0.14
	Root-of-EndRw:1.1.1.1
	EndWitRw-branch:1.1.1.1.0.12
	Root-of-EndWitRw:1.1.1.1
	RwToStl-branch:1.1.1.1.0.10
	Root-of-RwToStl:1.1.1.1
	latest_sce_3_10_20010924:1.1.1.1.0.8
	sce_3_10_20010924:1.1.1.1
	latest_sce_3_00_20010601:1.1.1.1.0.6
	sce_3_00_20010601:1.1.1.1
	latest_sce_2_31_20010308:1.1.1.1.0.4
	sce_2_31_20010308:1.1.1.1
	latest_sce_2_31_20001003:1.1.1.1.0.2
	sce_2_31_20001003:1.1.1.1
	start:1.1.1.1
	IBM:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2003.01.15.19.36.48;	author rwToStl;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.24.15.29.55;	author wit;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.24.15.29.55;	author wit;	state Exp;
branches
	1.1.1.1.14.1;
next	;

1.1.1.1.14.1
date	2003.01.08.17.42.38;	author rwToStl;	state Exp;
branches;
next	;


desc
@@


1.2
log
@commiting to main branch witutil, scenario, and sce code which removes RW
@
text
@// RW2STL -- inserted:
#include <scenario/src/RWToSTLHelpers.h>
#include <string>
// End of RW2STL -- inserted includes.
// Test templates and zero-length arrays

#include <assert.h>



// RW2STL - declare (RWGVector, int)

// RW2STL - declare (RWGOrderedVector, int)

// RW2STL - implement (RWGVector, int)

// RW2STL - implement (RWGOrderedVector, int)


// RW2STL - declare (RWGVector, std::string)

// RW2STL - declare (RWGOrderedVector, std::string)

// RW2STL - implement (RWGVector, std::string)

// RW2STL - implement (RWGOrderedVector, std::string)


// RW2STL - declare (RWGVector, std::string)

// RW2STL - declare (RWGOrderedVector, std::string)

// RW2STL - implement (RWGVector, std::string)

// RW2STL - implement (RWGOrderedVector, std::string)


int
main ()
{
  // Use block to test destruction
  {
    RWTValVector<float> zerotv(0);
    RWTValVector<float> ftv(0);
    RWTValVector<int> itv(5);
    RWTValVector<RWDate> datetv(5);
    RWTValVector<long> ltv(5);
    RWDate begin;
    assert (ftv.length()==0);
    ftv.reshape(5);
    int i = 0; // Pulled out of the for below by RW2STL
    for (i=0; i<5; ++i) {
      datetv[i]=begin+i;
      ftv[i]=i;
      itv[i]=i;
      ltv[i]=i;
      assert (itv[i] == ltv[i]);
      }
    int j = 0; // Pulled out of the for below by RW2STL
    for (j=0; j<5; ++j) {
      assert (itv[j] == ltv[j]);
      cout << ftv[j] << ": " << datetv[j] << endl;
    }
  }
  // Test zero-length RWGOrderedVector, in block to test destruction
  {
    RWGOrderedVector(int) intVec(0);	// This works
  }
  // Test zero-length RWGOrderedVector of a class, in block to test destruction
  {
    RWGOrderedVector(std::string) RWCStringVec(0);
  }
  // Test zero-length RWGOrderedVector of a collectable, in block to test destruction
  // This bombs out on SunOS with Sun's C++ compiler
  {
    RWGOrderedVector(std::string) RWCollectableStringVec(0);
  }
  return 0;
}
@


1.1
log
@Initial revision
@
text
@d1 4
d9 28
a36 21
#include <rw/rstream.h>
#include <rw/tvvector.h>
#include <rw/rwdate.h>

#include <rw/gordvec.h>
#include <rw/collstr.h>

declare (RWGVector, int)
declare (RWGOrderedVector, int)
implement (RWGVector, int)
implement (RWGOrderedVector, int)

declare (RWGVector, RWCString)
declare (RWGOrderedVector, RWCString)
implement (RWGVector, RWCString)
implement (RWGOrderedVector, RWCString)

declare (RWGVector, RWCollectableString)
declare (RWGOrderedVector, RWCollectableString)
implement (RWGVector, RWCollectableString)
implement (RWGOrderedVector, RWCollectableString)
d51 2
a52 1
    for (int i=0; i<5; ++i) {
d59 2
a60 1
    for (int j=0; j<5; ++j) {
d71 1
a71 1
    RWGOrderedVector(RWCString) RWCStringVec(0);
d76 1
a76 1
    RWGOrderedVector(RWCollectableString) RWCollectableStringVec(0);
@


1.1.1.1
log
@Import scenario
@
text
@@


1.1.1.1.14.1
log
@Roguewave is gone
@
text
@a0 4
// RW2STL -- inserted:
#include <scenario/src/RWToSTLHelpers.h>
#include <string>
// End of RW2STL -- inserted includes.
d5 21
a25 28


// RW2STL - declare (RWGVector, int)

// RW2STL - declare (RWGOrderedVector, int)

// RW2STL - implement (RWGVector, int)

// RW2STL - implement (RWGOrderedVector, int)


// RW2STL - declare (RWGVector, std::string)

// RW2STL - declare (RWGOrderedVector, std::string)

// RW2STL - implement (RWGVector, std::string)

// RW2STL - implement (RWGOrderedVector, std::string)


// RW2STL - declare (RWGVector, std::string)

// RW2STL - declare (RWGOrderedVector, std::string)

// RW2STL - implement (RWGVector, std::string)

// RW2STL - implement (RWGOrderedVector, std::string)

d40 1
a40 2
    int i = 0; // Pulled out of the for below by RW2STL
    for (i=0; i<5; ++i) {
d47 1
a47 2
    int j = 0; // Pulled out of the for below by RW2STL
    for (j=0; j<5; ++j) {
d58 1
a58 1
    RWGOrderedVector(std::string) RWCStringVec(0);
d63 1
a63 1
    RWGOrderedVector(std::string) RWCollectableStringVec(0);
@

