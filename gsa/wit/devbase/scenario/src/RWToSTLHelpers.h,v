head	1.5;
access;
symbols
	sce_5_01_20080919:1.5
	latest_sce_4_20_20060523:1.5.0.4
	sce_4_20_20060523:1.5
	latest_sce4_20_OSL:1.5.0.2
	sce_4_20_OSL:1.5
	sce_4_05_20040511:1.4
	sce_4_00_20040201:1.4
	nextGenBranch:1.3.0.2
	nextGenRoot:1.3
	sce_3_30_20030627:1.3
	EndRw-branch:1.1.0.2;
locks; strict;
comment	@ * @;


1.5
date	2004.10.07.18.19.47;	author ervolina;	state Exp;
branches;
next	1.4;

1.4
date	2003.08.05.12.31.07;	author dpc;	state Exp;
branches;
next	1.3;

1.3
date	2003.01.15.23.05.46;	author fasano;	state Exp;
branches;
next	1.2;

1.2
date	2003.01.15.19.36.43;	author rwToStl;	state Exp;
branches;
next	1.1;

1.1
date	2003.01.08.19.33.13;	author rwToStl;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2003.01.08.19.33.13;	author rwToStl;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2003.01.09.13.54.41;	author rwToStl;	state Exp;
branches;
next	1.1.2.3;

1.1.2.3
date	2003.01.09.19.36.28;	author rwToStl;	state Exp;
branches;
next	1.1.2.4;

1.1.2.4
date	2003.01.10.13.58.59;	author rwToStl;	state Exp;
branches;
next	;


desc
@@


1.5
log
@badIndex shouldn't be negative as it gets cast into a size_t by sce
@
text
@#ifndef RWToSTLHelpers_h
#define RWToSTLHelpers_h

#if defined(_MSC_VER)
#pragma warning(disable:4786)
#endif

// RW2STL -- inserted:
#include <fstream>
#include <scenario/src/RWToSTLHelpers.h>
#include <string>
#include <vector>
// End of RW2STL -- inserted includes.

#include <sstream>

class ostream;
class ostream_withassign;

//std::ofstream& operator<<( std::ofstream& stream, const std::string& s );
//std::strstreambuf& operator<<( std::strstreambuf& stream, const std::string& s );
//ostream& operator<<( ostream& stream, std::string& );
//ostream& operator<<( ostream& stream, const std::string& );
//inline ostream_withassign& operator<<( ostream_withassign& stream, std::string& );

namespace sce 
{

const size_t badIndex = 29999;

size_t      hashString( const std::string& str );
int        compareStringsCaseIns( const std::string& l, const std::string& r );
size_t      find( const std::string& s, const std::string& sub );
size_t      findCaseIns( const std::string& s, const std::string& sub );
std::string extractQuotedPart( const std::string& s );
void		toLower( std::string &str );
void		toUpper( std::string &str );
std::string strip( std::string &str, const std::string& toRemove = " " );

std::string stringFrom( int i );
std::string stringFrom( long i );
std::string stringFrom( unsigned long i );
std::string stringFrom( float i, size_t precision = 6, bool showPoint = false );
std::string stringFrom( double i, size_t precision = 6, bool showPoint = false );

bool        fromString( const std::string& s, long& l );
bool        fromString( const std::string& s, unsigned long& l );
bool        fromString( const std::string& s, int& l );
bool        fromString( const std::string& s, unsigned int& l );
bool        fromString( const std::string& s, float& l );
bool        fromString( const std::string& s, double& l );

bool		matchRegexp( const std::string& s, const std::string& regExp );
bool		checkRegexp( const std::string& regExp );

template<class T>
int      findInVector( const T&, const std::vector<T>& v );

} // namespace sce

class SCETokenizer
{
public:
  SCETokenizer( const std::string& s );     

  std::string       operator()( const std::string& tokens = " \n\t\000" );
  //std::string       allRemaining( const std::string& tokens = " \n\t\000" );   
private:
  const std::string   myString_;
  size_t              cursor_;
};




#endif
@


1.4
log
@Changed size_t to int because the variable was being assigned -1 for an error case
@
text
@d29 1
a29 1
const int badIndex = -1;
@


1.3
log
@Modified to build on windows laptop that was causing compiler to run out of stack space
@
text
@d15 1
a15 1
#include <strstream>
d29 1
a29 1
const size_t badIndex = -1;
d57 1
a57 1
size_t      findInVector( const T&, const std::vector<T>& v );
d76 1
a76 1
#endif@


1.2
log
@commiting to main branch witutil, scenario, and sce code which removes RW
@
text
@d3 5
@


1.1
log
@file RWToSTLHelpers.h was initially added on branch EndRw-branch.
@
text
@d1 71
@


1.1.2.1
log
@Helper functions for date and time
@
text
@a0 67
#ifndef RWToSTLHelpers_h
#define RWToSTLHelpers_h
// RW2STL -- inserted:
#include <fstream>
#include <scenario/src/RWToSTLHelpers.h>
#include <string>
#include <vector>
// End of RW2STL -- inserted includes.

class ostream;
class ostream_withassign;

std::ofstream& operator<<( std::ofstream& stream, const std::string& s );
//ostream& operator<<( ostream& stream, std::string& );
ostream& operator<<( ostream& stream, const std::string& );
//inline ostream_withassign& operator<<( ostream_withassign& stream, std::string& );

namespace sce 
{

const size_t badIndex = -1;

size_t      hashString( const std::string& str );
int        compareStringsCaseIns( const std::string& l, const std::string& r );
size_t      find( const std::string& s, const std::string& sub );
size_t      findCaseIns( const std::string& s, const std::string& sub );
std::string extractQuotedPart( const std::string& s );
void		toLower( std::string &str );
void		toUpper( std::string &str );
std::string strip( std::string &str, const std::string& toRemove = " " );

std::string stringFrom( int i );
std::string stringFrom( long i );
std::string stringFrom( unsigned long i );
std::string stringFrom( float i, size_t precision = 6, bool showPoint = false );
std::string stringFrom( double i, size_t precision = 6, bool showPoint = false );

bool        fromString( const std::string& s, long& l );
bool        fromString( const std::string& s, int& l );
bool        fromString( const std::string& s, size_t& l );
bool        fromString( const std::string& s, float& l );
bool        fromString( const std::string& s, double& l );

bool		matchRegexp( const std::string& s, const std::string& regExp );
bool		checkRegexp( const std::string& regExp );

template<class T>
size_t      findInVector( const T&, const std::vector<T>& v );

} // namespace sce

class SCETokenizer
{
public:
  SCETokenizer( const std::string& s );     

  std::string       operator()( const std::string& tokens = " \n\t\000" );
  //std::string       allRemaining( const std::string& tokens = " \n\t\000" );   
private:
  const std::string   myString_;
  size_t              cursor_;
};




#endif@


1.1.2.2
log
@Removed STD_CPP_LIB #ifdefs
and went to std for cout
@
text
@a9 2
#include <strstream>

a13 1
//std::strstreambuf& operator<<( std::strstreambuf& stream, const std::string& s );
d15 1
a15 1
//ostream& operator<<( ostream& stream, const std::string& );
@


1.1.2.3
log
@Replaced the size_t fromString overload by an unsigned int and an unsigned long overloads
@
text
@a41 1
bool        fromString( const std::string& s, unsigned long& l );
d43 1
a43 1
bool        fromString( const std::string& s, unsigned int& l );
@


1.1.2.4
log
@Removed global streaming operator for std::string
@
text
@d15 1
a15 1
//std::ofstream& operator<<( std::ofstream& stream, const std::string& s );
@


