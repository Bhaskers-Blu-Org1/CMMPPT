head	1.2;
access;
symbols
	sce_5_01_20080919:1.2
	latest_sce_4_20_20060523:1.2.0.6
	sce_4_20_20060523:1.2
	latest_sce4_20_OSL:1.2.0.4
	sce_4_20_OSL:1.2
	sce_4_05_20040511:1.2
	sce_4_00_20040201:1.2
	nextGenBranch:1.2.0.2
	nextGenRoot:1.2
	sce_3_30_20030627:1.2
	EndRw-branch:1.1.1.1.0.14
	Root-of-EndRw:1.1.1.1
	EndWitRw-branch:1.1.1.1.0.12
	Root-of-EndWitRw:1.1.1.1
	RwToStl-branch:1.1.1.1.0.10
	Root-of-RwToStl:1.1.1.1
	latest_sce_3_10_20010924:1.1.1.1.0.8
	sce_3_10_20010924:1.1.1.1
	latest_sce_3_00_20010601:1.1.1.1.0.6
	sce_3_00_20010601:1.1.1.1
	latest_sce_2_31_20010308:1.1.1.1.0.4
	sce_2_31_20010308:1.1.1.1
	latest_sce_2_31_20001003:1.1.1.1.0.2
	sce_2_31_20001003:1.1.1.1
	start:1.1.1.1
	IBM:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2003.01.15.19.36.43;	author rwToStl;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.24.15.29.48;	author wit;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.24.15.29.48;	author wit;	state Exp;
branches
	1.1.1.1.14.1;
next	;

1.1.1.1.14.1
date	2003.01.08.17.42.33;	author rwToStl;	state Exp;
branches;
next	1.1.1.1.14.2;

1.1.1.1.14.2
date	2003.01.09.13.54.41;	author rwToStl;	state Exp;
branches;
next	1.1.1.1.14.3;

1.1.1.1.14.3
date	2003.01.14.19.05.41;	author rwToStl;	state Exp;
branches;
next	;


desc
@@


1.2
log
@commiting to main branch witutil, scenario, and sce code which removes RW
@
text
@// RW2STL -- inserted:
#include <scenario/src/RWToSTLHelpers.h>
// End of RW2STL -- inserted includes.
#include <scenario/src/calendar.h>
#include <scenario/src/dif.h>
#include <scenario/src/difCmrpF.h>
#include <scenario/src/difTest.h>
#include <scenario/src/scBdCMRP.h>
#include <scenario/src/fctyCMRP.h>
#include <scenario/src/scenCMRP.h>
#include <scenario/src/schdDeSt.h>

LgFrScenarioBuilderForCMRP::LgFrScenarioBuilderForCMRP()
: LgFrScenarioBuilder(new LgFrCMRPFactory())
{
}

LgFrScenarioBuilderForCMRP::~LgFrScenarioBuilderForCMRP()
{
}


void
LgFrScenarioBuilderForCMRP::buildScenario(const LgFrDataInterfaceAbstract& dif,
					  const LgFrCalendar& calendar)
{
  std::cout << "Creating Scenario For CMRP" << std::endl;
  scenarioPtr_ = LgFrScenarioForCMRPSmartPointer(new LgFrScenarioForCMRP(dif, calendar));
  this->finishBuildingScenario (scenarioPtr_);

  // Instantiate volatile schedules.
  // This is to avoid a problem where the sequence: Read data, implode,
  // explode, financial impact caused the implosion output attributes
  // to be missing from the financial impact multiSchedule.

  LgFrSortingPartScheduleFloatSmartPointer volatileSchedule =
     this->getScenario()->
           scheduleFactory()->newPartSchedule( LGFRProcurementVol );

}

LgFrScenarioForCMRPSmartPointer
LgFrScenarioBuilderForCMRP::getScenario()
{
    if (scenarioPtr_.null())  {
      std::cerr << "No scenario pointer here" << std::endl;
      assert(0);
    }
    return scenarioPtr_;
}

void
LgFrScenarioBuilderForCMRP::factoryType() const
{
  factoryPtr_->factoryType();
}

LgFrInitialProblemAndParameters*
LgFrScenarioBuilderForCMRP::createIPP(LgFrScenarioSmartPointer scenario) const
{
  return factoryPtr_->createIPP(scenario);
}

LgFrScheduleFactory*
LgFrScenarioBuilderForCMRP::createScheduleFactory(
    LgFrScenarioSmartPointer scenario) const
{
  return factoryPtr_->createScheduleFactory(scenario);
}


//****************************************************************************

LgFrScenarioBuilderForCMRPwithPrioritiesFromDif::
  LgFrScenarioBuilderForCMRPwithPrioritiesFromDif()
: LgFrScenarioBuilder(new LgFrCMRPwithPrioritiesFromDifFactory)
{
}

LgFrScenarioBuilderForCMRPwithPrioritiesFromDif::
  ~LgFrScenarioBuilderForCMRPwithPrioritiesFromDif()
{
}


void
LgFrScenarioBuilderForCMRPwithPrioritiesFromDif::
  buildScenario(
      const LgFrDataInterfaceAbstract& dif,
      const LgFrCalendar& calendar)
{
  std::cout << "Creating Scenario For CMRPwithPrioritiesFromDif" << std::endl;
  scenarioPtr_ = LgFrScenarioForCMRPSmartPointer(new LgFrScenarioForCMRP(dif, calendar));
  this->finishBuildingScenario (scenarioPtr_);
}

LgFrScenarioForCMRPSmartPointer
LgFrScenarioBuilderForCMRPwithPrioritiesFromDif::getScenario()
{
    if (scenarioPtr_.null())  {
      std::cerr << "No scenario pointer here" << std::endl;
      assert(0);
    }
  return scenarioPtr_;
}

void
LgFrScenarioBuilderForCMRPwithPrioritiesFromDif::factoryType() const
{
  factoryPtr_->factoryType();
}

LgFrInitialProblemAndParameters*
LgFrScenarioBuilderForCMRPwithPrioritiesFromDif::
  createIPP(LgFrScenarioSmartPointer scenario) const
{
  return factoryPtr_->createIPP(scenario);
}

LgFrScheduleFactory*
LgFrScenarioBuilderForCMRPwithPrioritiesFromDif::
  createScheduleFactory(LgFrScenarioSmartPointer scenario) const
{
  return factoryPtr_->createScheduleFactory(scenario);
}

//****************************************************************************
#ifdef NDEBUG
#undef NDEBUG
#endif

void
LgFrScenarioBuilderForCMRP::test()
{
  LgFrCalendar calendar;
  LgFrDataInterfaceImplementation* difTestImpPtr
      = createDifTestImp();
  difTestImpPtr->title("Test problem for LgFrDataInterfaceImplementation");
  registerDifTestImpFunctions(difTestImpPtr);

  LgFrDataInterface dif(difTestImpPtr);
  delete difTestImpPtr;
  difTestImpPtr = 0;

  LgFrScenarioBuilderForCMRP factory;
  factory.factoryType();
  factory.buildScenario(dif, calendar);
  LgFrScenarioForCMRPSmartPointer b = factory.getScenario();
  std::cout << std::endl;
}


void
LgFrScenarioBuilderForCMRPwithPrioritiesFromDif::test()
{
  LgFrCalendar calendar(3,LgFrDatetime("7/15/94"));
//    LgFrDataInterfaceImplementation * difImpPtr
//	= new LgFrDataInterfaceImplementationFromCmrpFiles(
//                      "../../cmrpData/difTest");
  LgFrDataInterfaceImplementationFromCmrpFiles difImp(
                      CMRP_DATA_PATH "difTest"); 
  registerCmrpFilesDifImpFunctions(&difImp);
  LgFrDataInterface dif(&difImp);
  LgFrScenarioBuilderForCMRPwithPrioritiesFromDif factory;
  factory.factoryType();
  factory.buildScenario(dif, calendar);

  LgFrScenarioForCMRPSmartPointer foo = factory.getScenario();
  std::cout << std::endl;
}

@


1.1
log
@Initial revision
@
text
@d1 3
d27 1
a27 1
  cout << "Creating Scenario For CMRP" << endl;
d46 1
a46 1
      cerr << "No scenario pointer here" << endl;
d92 1
a92 1
  cout << "Creating Scenario For CMRPwithPrioritiesFromDif" << endl;
d101 1
a101 1
      cerr << "No scenario pointer here" << endl;
d143 1
a143 1
  difTestImpPtr = NULL;
d149 1
a149 1
  cout << endl;
d156 1
a156 1
  LgFrCalendar calendar(3,RWTime(RWDate("7/15/94")));
d169 1
a169 1
  cout << endl;
@


1.1.1.1
log
@Import scenario
@
text
@@


1.1.1.1.14.1
log
@Roguewave is gone
@
text
@a0 3
// RW2STL -- inserted:
#include <scenario/src/RWToSTLHelpers.h>
// End of RW2STL -- inserted includes.
d140 1
a140 1
  difTestImpPtr = 0;
d153 1
a153 1
  LgFrCalendar calendar(3,SCETime(SCEDate("7/15/94")));
@


1.1.1.1.14.2
log
@Removed STD_CPP_LIB #ifdefs
and went to std for cout
@
text
@d27 1
a27 1
  std::cout << "Creating Scenario For CMRP" << std::endl;
d46 1
a46 1
      std::cerr << "No scenario pointer here" << std::endl;
d92 1
a92 1
  std::cout << "Creating Scenario For CMRPwithPrioritiesFromDif" << std::endl;
d101 1
a101 1
      std::cerr << "No scenario pointer here" << std::endl;
d149 1
a149 1
  std::cout << std::endl;
d169 1
a169 1
  std::cout << std::endl;
@


1.1.1.1.14.3
log
@New LgFrDatetime class
@
text
@d156 1
a156 1
  LgFrCalendar calendar(3,LgFrDatetime("7/15/94"));
@


