head	1.2;
access;
symbols
	sce_5_01_20080919:1.2
	latest_sce_4_20_20060523:1.2.0.6
	sce_4_20_20060523:1.2
	latest_sce4_20_OSL:1.2.0.4
	sce_4_20_OSL:1.2
	sce_4_05_20040511:1.2
	sce_4_00_20040201:1.2
	nextGenBranch:1.2.0.2
	nextGenRoot:1.2
	sce_3_30_20030627:1.2
	EndRw-branch:1.1.1.1.0.14
	Root-of-EndRw:1.1.1.1
	EndWitRw-branch:1.1.1.1.0.12
	Root-of-EndWitRw:1.1.1.1
	RwToStl-branch:1.1.1.1.0.10
	Root-of-RwToStl:1.1.1.1
	latest_sce_3_10_20010924:1.1.1.1.0.8
	sce_3_10_20010924:1.1.1.1
	latest_sce_3_00_20010601:1.1.1.1.0.6
	sce_3_00_20010601:1.1.1.1
	latest_sce_2_31_20010308:1.1.1.1.0.4
	sce_2_31_20010308:1.1.1.1
	latest_sce_2_31_20001003:1.1.1.1.0.2
	sce_2_31_20001003:1.1.1.1
	start:1.1.1.1
	IBM:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2003.01.15.19.36.47;	author rwToStl;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.24.15.29.54;	author wit;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.24.15.29.54;	author wit;	state Exp;
branches
	1.1.1.1.14.1;
next	;

1.1.1.1.14.1
date	2003.01.08.17.42.37;	author rwToStl;	state Exp;
branches;
next	;


desc
@@


1.2
log
@commiting to main branch witutil, scenario, and sce code which removes RW
@
text
@#ifndef LGFR_USAGE_SCHEDULE_STRATEGY_H
#define LGFR_USAGE_SCHEDULE_STRATEGY_H
// RW2STL -- inserted:
// End of RW2STL -- inserted includes.

#include <scenario/src/schdSnSS.h>


// LgFrUsageScheduleStrategy:
//   This Schedule Strategy is sensitive to FOUR other schedules:
//        1) Supply
//        2) Production
//        3) Stock
//        4) Scrap
//   You MUST insert the four schedules before you try to populate
//   with it.  The schedules must be inserted in the order above.
//
//   For any part:
//     usage[t] = supply[t] + prod[t] + stock[t-1] - stock[t] - scrap[t]
//
//   NOTE: For capacity parts, prod and stock should be zero and similarly,
//         For raw parts, prod should be 0


// Forward References
class LgFrSortingScheduleFloat;
class LgFrSortingPartScheduleFloat;
class LgFrSortingPartScheduleFloatSmartPointer;


//-----------------------------------------------------------------------
//
//  Definition of LgFrUsageScheduleStrategy
//
//-----------------------------------------------------------------------

class LgFrUsageScheduleStrategy : 
   public LgFrPartScheduleSensitiveScheduleStrategy {

public:

  // Populate Schedule with itemTimeVecs
  virtual
     void
        kernalOfPopulate(
           LgFrSortingScheduleFloat& )
              const;
  
  // Make clone copy of this object
  virtual
     LgFrAttributeScheduleStrategy *
        clone() 
           const;

  // Make clone copy of this object with new Scenario
  virtual
     LgFrAttributeScheduleStrategy *
        clone(LgFrScenario &) 
           const;

  // Assignment operator
  LgFrUsageScheduleStrategy &
    operator=(
	      const LgFrUsageScheduleStrategy& rhs);

  // Copy constructor
  LgFrUsageScheduleStrategy (
     const LgFrUsageScheduleStrategy &);

  // Copy constructor with new Scenario
  LgFrUsageScheduleStrategy (
     const LgFrUsageScheduleStrategy &,
     LgFrScenario &);

  // Constructor
  LgFrUsageScheduleStrategy (
     LgFrScenario &);

  // Destructor
  virtual
     ~LgFrUsageScheduleStrategy ();

  // test this class
  static void test();

  // test LgFrUsageScheduleStrategy methods.
  // Expects data from both testScenario to come from
  // /u/implode/wit/data/examples/diner12/wit.data
  static
  void
  contextTest (LgFrScenario                & testScenario,
               LgFrSortingPartScheduleFloatSmartPointer supply,
               LgFrSortingPartScheduleFloatSmartPointer prod,
               LgFrSortingPartScheduleFloatSmartPointer stock,
               LgFrSortingPartScheduleFloatSmartPointer scrap);

  // test quantities in a schedule that uses a LgFrUsageScheduleStrategy.
  // Expects the scenario containing constUsageSched to contain data from
  // /u/implode/wit/data/examples/diner12/wit.data.  Expects an implosion
  // to have been done in the scenario already.
  static
  void
  quantityTest(const LgFrSortingPartScheduleFloat & constUsageSched);

private:

  const int id_;

  // Default Constructor
  LgFrUsageScheduleStrategy ();
};


#endif
@


1.1
log
@Initial revision
@
text
@d3 2
a58 6
           const;

  // Return Comparison Strategy Identifier
  virtual
     isAReturnType
        isA()
@


1.1.1.1
log
@Import scenario
@
text
@@


1.1.1.1.14.1
log
@Roguewave is gone
@
text
@a2 2
// RW2STL -- inserted:
// End of RW2STL -- inserted includes.
d57 6
@

