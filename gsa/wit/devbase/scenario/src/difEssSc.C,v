head	1.3;
access;
symbols
	sce_5_01_20080919:1.3
	latest_sce_4_20_20060523:1.3.0.6
	sce_4_20_20060523:1.3
	latest_sce4_20_OSL:1.3.0.4
	sce_4_20_OSL:1.3
	sce_4_05_20040511:1.3
	sce_4_00_20040201:1.3
	nextGenBranch:1.3.0.2
	nextGenRoot:1.3
	sce_3_30_20030627:1.3
	EndRw-branch:1.1.1.1.0.14
	Root-of-EndRw:1.1.1.1
	EndWitRw-branch:1.1.1.1.0.12
	Root-of-EndWitRw:1.1.1.1
	RwToStl-branch:1.1.1.1.0.10
	Root-of-RwToStl:1.1.1.1
	latest_sce_3_10_20010924:1.1.1.1.0.8
	sce_3_10_20010924:1.1.1.1
	latest_sce_3_00_20010601:1.1.1.1.0.6
	sce_3_00_20010601:1.1.1.1
	latest_sce_2_31_20010308:1.1.1.1.0.4
	sce_2_31_20010308:1.1.1.1
	latest_sce_2_31_20001003:1.1.1.1.0.2
	sce_2_31_20001003:1.1.1.1
	start:1.1.1.1
	IBM:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2003.01.15.23.05.47;	author fasano;	state Exp;
branches;
next	1.2;

1.2
date	2003.01.15.19.36.32;	author rwToStl;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.24.15.29.39;	author wit;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.24.15.29.39;	author wit;	state Exp;
branches
	1.1.1.1.14.1;
next	;

1.1.1.1.14.1
date	2003.01.08.17.42.28;	author rwToStl;	state Exp;
branches;
next	1.1.1.1.14.2;

1.1.1.1.14.2
date	2003.01.09.13.54.42;	author rwToStl;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Modified to build on windows laptop that was causing compiler to run out of stack space
@
text
@#if defined(_MSC_VER)
#pragma warning(disable:4786)
#endif

// RW2STL -- inserted:
#include <scenario/src/RWToSTLHelpers.h>
#include <string>
// End of RW2STL -- inserted includes.
#include <scenario/src/difEssSc.h>
#include <scenario/src/scenario.h>

LgFrPart
LgFrDataInterfaceEssentialsFromScenario::createAndInsertPart(
    const std::string& partName)
const
{
    LgFrSetOfParts& sop 
	= ((LgFrScenario*)scenarioPtr_)->setOfParts(LGFR_UNIVERSAL_SET);
    return sop.newPart(partName);
}

LgFrDemand
LgFrDataInterfaceEssentialsFromScenario::createAndInsertDemand(
    const std::string& demandName,
    const std::string& partName)
const
{
    LgFrSetOfDemands& sod 
	= ((LgFrScenario*)scenarioPtr_)->setOfDemands(LGFR_UNIVERSAL_SET);
    LgFrSetOfParts& sop 
	= ((LgFrScenario*)scenarioPtr_)->setOfParts(LGFR_UNIVERSAL_SET);
    const LgFrPart* part = sop.findValue(partName);   
    if (part == 0) {
      std::cerr << "Error in " << __FILE__ << " at line " << __LINE__ << '\n';
      std::cerr << "Trying to create a demand for a part that was not in the\n";
      std::cerr << "Universal Set of Parts.\n";
      std::cerr << "The name of the part that could not be found is " 
	   << partName << '\n';
      std::cerr << "The name of the demand being created was " << demandName
	<< std::endl;
      abort();
    }
    return sod.newDemand(demandName, part);
}

const LgFrCalendar&
LgFrDataInterfaceEssentialsFromScenario::calendar()
const
{
    return scenarioPtr_->calendar();
}

// Return a mutable pointer to LastSolvedProblem's WitRun.
WitRun*
LgFrDataInterfaceEssentialsFromScenario::mutableWitRun()
{	
    return ((LgFrScenario*)scenarioPtr_)->lastProblemSolved().witRun();
}

// Make a clone copy in same scenario
LgFrDataInterfaceEssentials*
LgFrDataInterfaceEssentialsFromScenario::clone()
const
{
  return new LgFrDataInterfaceEssentialsFromScenario(*this);
}

// Make a clone copy in new scenario
LgFrDataInterfaceEssentials*
LgFrDataInterfaceEssentialsFromScenario::clone(const LgFrScenario* newScenPtr)
const
{
  return new LgFrDataInterfaceEssentialsFromScenario(*this, newScenPtr);
}

// Copy constructor with same scenario
LgFrDataInterfaceEssentialsFromScenario::LgFrDataInterfaceEssentialsFromScenario(
    const LgFrDataInterfaceEssentialsFromScenario& copy)
    : LgFrDataInterfaceEssentials(copy)
{
  scenarioPtr_ = copy.scenarioPtr_;
}

// Copy constructor with new scenario
LgFrDataInterfaceEssentialsFromScenario::LgFrDataInterfaceEssentialsFromScenario(
    const LgFrDataInterfaceEssentialsFromScenario& copy,
    const LgFrScenario* newScenPtr)
    : LgFrDataInterfaceEssentials(copy)
{
  scenarioPtr_ = newScenPtr;
}


// Default constructor
LgFrDataInterfaceEssentialsFromScenario::LgFrDataInterfaceEssentialsFromScenario()
    : LgFrDataInterfaceEssentials(),
      scenarioPtr_(0)
{
// Nothing to do here

}

// Constructor
LgFrDataInterfaceEssentialsFromScenario::LgFrDataInterfaceEssentialsFromScenario(
    const LgFrScenario* scenPtr)
    : LgFrDataInterfaceEssentials(),
      scenarioPtr_(scenPtr)
{
// Nothing to do here
}

// Destructor
LgFrDataInterfaceEssentialsFromScenario::~LgFrDataInterfaceEssentialsFromScenario()
{
// Nothing to do here
}
@


1.2
log
@commiting to main branch witutil, scenario, and sce code which removes RW
@
text
@d1 4
@


1.1
log
@Initial revision
@
text
@d1 4
d10 1
a10 1
    const RWCString& partName)
d20 2
a21 2
    const RWCString& demandName,
    const RWCString& partName)
d29 5
a33 5
    if (part == NULL) {
      cerr << "Error in " << __FILE__ << " at line " << __LINE__ << '\n';
      cerr << "Trying to create a demand for a part that was not in the\n";
      cerr << "Universal Set of Parts.\n";
      cerr << "The name of the part that could not be found is " 
d35 2
a36 2
      cerr << "The name of the demand being created was " << demandName
	<< endl;
a55 8
// Return type identifier
isAReturnType
LgFrDataInterfaceEssentialsFromScenario::isA()
const
{
  return __LGFRDATAINTERFACEESSENTIALSFROMSCENARIO;
}

d93 1
a93 1
      scenarioPtr_(NULL)
@


1.1.1.1
log
@Import scenario
@
text
@@


1.1.1.1.14.1
log
@Roguewave is gone
@
text
@a0 4
// RW2STL -- inserted:
#include <scenario/src/RWToSTLHelpers.h>
#include <string>
// End of RW2STL -- inserted includes.
d6 1
a6 1
    const std::string& partName)
d16 2
a17 2
    const std::string& demandName,
    const std::string& partName)
d25 1
a25 1
    if (part == 0) {
d52 8
d97 1
a97 1
      scenarioPtr_(0)
@


1.1.1.1.14.2
log
@Removed STD_CPP_LIB #ifdefs
and went to std for cout
@
text
@d30 4
a33 4
      std::cerr << "Error in " << __FILE__ << " at line " << __LINE__ << '\n';
      std::cerr << "Trying to create a demand for a part that was not in the\n";
      std::cerr << "Universal Set of Parts.\n";
      std::cerr << "The name of the part that could not be found is " 
d35 2
a36 2
      std::cerr << "The name of the demand being created was " << demandName
	<< std::endl;
@


