head	1.4;
access;
symbols
	sce_5_01_20080919:1.4
	latest_sce_4_20_20060523:1.4.0.4
	sce_4_20_20060523:1.4
	latest_sce4_20_OSL:1.4.0.2
	sce_4_20_OSL:1.4
	sce_4_05_20040511:1.4
	sce_4_00_20040201:1.4
	nextGenBranch:1.3.0.2
	nextGenRoot:1.3
	sce_3_30_20030627:1.3
	EndRw-branch:1.2.0.8
	Root-of-EndRw:1.2
	EndWitRw-branch:1.2.0.6
	Root-of-EndWitRw:1.2
	UsedBySCE:1.2
	RwToStl-branch:1.2.0.4
	Root-of-RwToStl:1.2
	latest_sce_3_10_20010924:1.2.0.2
	sce_3_10_20010924:1.2
	latest_sce_3_00_20010601:1.1.1.1.0.6
	sce_3_00_20010601:1.1.1.1
	latest_sce_2_31_20010308:1.1.1.1.0.4
	sce_2_31_20010308:1.1.1.1
	latest_sce_2_31_20001003:1.1.1.1.0.2
	sce_2_31_20001003:1.1.1.1
	start:1.1.1.1
	IBM:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2003.08.05.12.50.21;	author dpc;	state Exp;
branches;
next	1.3;

1.3
date	2003.01.15.19.36.39;	author rwToStl;	state Exp;
branches;
next	1.2;

1.2
date	2001.08.10.23.02.05;	author fasano;	state Exp;
branches
	1.2.8.1;
next	1.1;

1.1
date	2000.02.24.15.29.45;	author wit;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.24.15.29.45;	author wit;	state Exp;
branches;
next	;

1.2.8.1
date	2003.01.08.17.42.32;	author rwToStl;	state Exp;
branches;
next	1.2.8.2;

1.2.8.2
date	2003.01.09.20.24.14;	author rwToStl;	state Exp;
branches;
next	1.2.8.3;

1.2.8.3
date	2003.01.09.22.34.51;	author fasano;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Changed absolute path names to relative path names.
@
text
@// RW2STL -- inserted:
#include <scenario/src/RWToSTLHelpers.h>
#include <string>
// End of RW2STL -- inserted includes.
#include <iostream>
#include <stdio.h>

#if defined (__OS2__) || defined (WIN32) || defined (__WINDOWS__)
#include <io.h>
#else
#include <unistd.h>
#include <strings.h> // for strcasecmp()
#endif

#include <assert.h>

#include <scenario/src/machdep.h>


// Machine dependant code is contained in this file.


// Determine if file exists.
// Return true if file exits, othewise false.
bool
LgFrDoesFileExist(
   const std::string& fileName )
{
  // See if file exists
#if defined (__OS2__) || defined (WIN32) || defined (__WINDOWS__)
  if ( _access( fileName.c_str(), 00 ) == -1 ) return false;
#else
  if ( access( fileName.c_str(), F_OK ) == -1 ) return false;
#endif
  return true;
}

int LgFrStrcmpcaseins( const char* s1, const char* s2 )
{
#if defined (__OS2__) || defined (WIN32) || defined (__WINDOWS__)
    return stricmp( s1, s2 );
#else
    return strcasecmp( s1, s2 );
#endif    
}



// Get a name for a temporary file.
LGFR_DECLSPEC std::string  LGFR_STDCALL
LgFrTempFileName()
{
#if TEMPNAM_AVAILABLE == 1
   char * cName = tempnam( 0, "LgFr" );
   if (cName == 0) {
      perror ("WITUSE: machdep.C, LgFrTempFileName, tempnam error: ");
      exit (1);
   }
   std::string retVal( cName );
   portableFree( cName );
   return retVal;
#else
   char * cName = tmpnam( 0 );
   if (cName == 0) {
      perror ("WITUSE: machdep.C, LgFrTempFileName, tmpnam error: ");
      exit (1);
   }
   std::string retVal( cName );
   return retVal;
#endif
}


#ifdef NDEBUG
#undef NDEBUG
#endif
// Test machine dependant functions
void LgFrMachdepTest()
{
   // assert ( 1 == 0 );         // Test workaround for NDEBUG.  It worked, 8/29/94
   // Test doesFileExist function
   assert( 
         LgFrDoesFileExist("../../../../wit/wit-data/examples/diner/wit.data" ) 
         );
   assert( 
         !LgFrDoesFileExist("../../../../wit/wit-data/examples/diner/XXX.yyyy" ) 
         );

   // Test tempFileName()
   // cout <<LgFrTempFileName() <<endl;
}

@


1.3
log
@commiting to main branch witutil, scenario, and sce code which removes RW
@
text
@d83 1
a83 1
         LgFrDoesFileExist( "/u/wit/wit-data/examples/diner/wit.data" ) 
d86 1
a86 1
         !LgFrDoesFileExist( "/u/wit/wit-data/examples/diner/XXX.yyyy" ) 
@


1.2
log
@Updated so unitTest reads files from
  /u/wit/wit-data
instead of
  /u/implode/data
With these changes unitTest is running correctly on Windows
@
text
@d1 5
a5 1
#include <iostream.h>
d12 1
d24 2
a25 2
// Return TRUE if file exits, othewise FALSE.
RWBoolean
d27 1
a27 1
   const RWCString fileName )
d31 1
a31 1
  if ( _access( fileName, 00 ) == -1 ) return FALSE;
d33 1
a33 1
  if ( access( fileName, F_OK ) == -1 ) return FALSE;
d35 1
a35 1
  return TRUE;
d38 11
d50 1
a50 1
LGFR_DECLSPEC RWCString  LGFR_STDCALL
d54 2
a55 2
   char * cName = tempnam( NULL, "LgFr" );
   if (cName == NULL) {
d59 1
a59 1
   RWCString retVal( cName );
d63 2
a64 2
   char * cName = tmpnam( NULL );
   if (cName == NULL) {
d68 1
a68 1
   RWCString retVal( cName );
@


1.2.8.1
log
@Roguewave is gone
@
text
@d1 1
a1 5
// RW2STL -- inserted:
#include <scenario/src/RWToSTLHelpers.h>
#include <string>
// End of RW2STL -- inserted includes.
#include <iostream>
d19 2
a20 2
// Return true if file exits, othewise false.
bool
d22 1
a22 1
   const std::string& fileName )
d26 1
a26 1
  if ( _access( fileName.c_str(), 00 ) == -1 ) return false;
d28 1
a28 1
  if ( access( fileName.c_str(), F_OK ) == -1 ) return false;
d30 1
a30 1
  return true;
d34 1
a34 1
LGFR_DECLSPEC std::string  LGFR_STDCALL
d38 2
a39 2
   char * cName = tempnam( 0, "LgFr" );
   if (cName == 0) {
d43 1
a43 1
   std::string retVal( cName );
d47 2
a48 2
   char * cName = tmpnam( 0 );
   if (cName == 0) {
d52 1
a52 1
   std::string retVal( cName );
@


1.2.8.2
log
@Added LgFrStrcmpcaseins
@
text
@a36 11
int LgFrStrcmpcaseins( const char* s1, const char* s2 )
{
#if defined (__OS2__) || defined (WIN32) || defined (__WINDOWS__)
    return stricmp( s1, s2 );
#else
    return strcasecmp( s1, s2 );
#endif    
}



@


1.2.8.3
log
@modified to build on aix
@
text
@a11 1
#include <strings.h> // for strcasecmp()
@


1.1
log
@Initial revision
@
text
@d67 1
a67 1
         LgFrDoesFileExist( "/u/implode/wit/data/examples/diner/wit.data" ) 
d70 1
a70 1
         !LgFrDoesFileExist( "/u/implode/wit/data/examples/diner/XXX.yyyy" ) 
@


1.1.1.1
log
@Import scenario
@
text
@@
