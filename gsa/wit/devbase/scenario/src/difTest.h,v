head	1.2;
access;
symbols
	sce_5_01_20080919:1.2
	latest_sce_4_20_20060523:1.2.0.6
	sce_4_20_20060523:1.2
	latest_sce4_20_OSL:1.2.0.4
	sce_4_20_OSL:1.2
	sce_4_05_20040511:1.2
	sce_4_00_20040201:1.2
	nextGenBranch:1.2.0.2
	nextGenRoot:1.2
	sce_3_30_20030627:1.2
	EndRw-branch:1.1.1.1.0.14
	Root-of-EndRw:1.1.1.1
	EndWitRw-branch:1.1.1.1.0.12
	Root-of-EndWitRw:1.1.1.1
	RwToStl-branch:1.1.1.1.0.10
	Root-of-RwToStl:1.1.1.1
	latest_sce_3_10_20010924:1.1.1.1.0.8
	sce_3_10_20010924:1.1.1.1
	latest_sce_3_00_20010601:1.1.1.1.0.6
	sce_3_00_20010601:1.1.1.1
	latest_sce_2_31_20010308:1.1.1.1.0.4
	sce_2_31_20010308:1.1.1.1
	latest_sce_2_31_20001003:1.1.1.1.0.2
	sce_2_31_20001003:1.1.1.1
	start:1.1.1.1
	IBM:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2003.01.15.19.36.34;	author rwToStl;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.24.15.29.40;	author wit;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.24.15.29.40;	author wit;	state Exp;
branches
	1.1.1.1.14.1;
next	;

1.1.1.1.14.1
date	2003.01.08.17.42.29;	author rwToStl;	state Exp;
branches;
next	;


desc
@@


1.2
log
@commiting to main branch witutil, scenario, and sce code which removes RW
@
text
@#ifndef LgFrDataInterfaceImplementationForTest_h
#define LgFrDataInterfaceImplementationForTest_h
// RW2STL -- inserted:
// End of RW2STL -- inserted includes.

// This file contains the global functions for:
// LgFrDataInterfaceImplementationForTest

// There is no need to have a special class for this case,
// We just need to instantiate a LgFrDataInterfaceImplementation 
// object and then register all LgFrDataInterfaceImplementationForTest
// global functions into that object when we want to use it for the test.


#include <wit/src/wit.h>

#include <scenario/src/idnumber.h>
#include <scenario/src/error.h>
#include <scenario/src/generVc.h>


//---------------------------------------------------------------------------------------
//
// Forward references
//
//---------------------------------------------------------------------------------------
class LgFrDataInterfaceImplementation;
class LgFrDataInterfaceEssentials;           

//---------------------------------------------------------------------------------------
//
// All gobal functions declarations
//
//---------------------------------------------------------------------------------------

//---------------------------------------------------------------------------------------
// To register all global functions for this class
//---------------------------------------------------------------------------------------
void
registerDifTestImpFunctions(LgFrDataInterfaceImplementation *dImpTst);

//---------------------------------------------------------------------------------------
// To create a LgFrDataInterfaceImplementation object for difTest
//---------------------------------------------------------------------------------------
LgFrDataInterfaceImplementation * 
createDifTestImp();

//---------------------------------------------------------------------------------------
//
// Global functions to get "parts"
//

//---------------------------------------------------------------------------------------
// difTestGetRawPart global function (registering in the attribute table).
// Get raw parts and insert them into set_of_part
// Return: a LgFrPartVector object (vector of raw parts).
//---------------------------------------------------------------------------------------
void *
difTestGetRawParts(
    const LgFrDataInterfaceImplementation * dImp,
    const LgFrItemPtrVector* /* itemPtrOrdVecPtr, not used */,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);

//---------------------------------------------------------------------------------------
// difTestGetProductPart global function (registering in the attribute table).
// Get product parts and insert it into set_of_part
// Return: a LgFrPartVector object (vector of producible parts)
//---------------------------------------------------------------------------------------
void*
difTestGetProductParts(
    const LgFrDataInterfaceImplementation * dImp,
    const LgFrItemPtrVector* /* itemPtrOrdVecPtr, not used */,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);

//---------------------------------------------------------------------------------------
// difTestGetCapacityParts global function (registering in the attribute table).
// Get capacity parts and insert it into set_of_part
// Return: a LgFrPartVector object (vector of capacities).
//---------------------------------------------------------------------------------------
void*
difTestGetCapacityParts(
    const LgFrDataInterfaceImplementation * dImp,
    const LgFrItemPtrVector* /* itemPtrOrdVecPtr, not used */,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0); 

//---------------------------------------------------------------------------------------
//
// Global functions to get part attributes.
//
//---------------------------------------------------------------------------------------
// difTestGetRawUnitCost global function (registered in the attribute table)
// it returns a LgFrFloatVector object.
//---------------------------------------------------------------------------------------
void *
difTestGetRawUnitCost(
  const LgFrDataInterfaceImplementation * dImp,
  const LgFrItemPtrVector* itemPtrOrdVecPtr,
  LgFrError & status,
  const LgFrDataInterfaceEssentials * difEssenPtr = 0);

//---------------------------------------------------------------------------------------
// difTestGetRawProcCost global function (registered in the attribute table).
// It returns a LgFrFloatVector object.
//---------------------------------------------------------------------------------------
void *
difTestGetRawProcCost(
    const LgFrDataInterfaceImplementation * difImp,
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);

//---------------------------------------------------------------------------------------
// difTestGetRawConstrained global function (registered in the attribute table).
// It returns a LgFrIntVector object.
//---------------------------------------------------------------------------------------
void *
difTestGetRawConstrained(
    const LgFrDataInterfaceImplementation * difImp, 
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);               

//---------------------------------------------------------------------------------------
// difTestGetPartProcLeadTime global function (registered in the attribute table).
// It returns a LgFrTimeVecFloatVector object.
//---------------------------------------------------------------------------------------
void *
difTestGetRawProcLeadTime(
    const LgFrDataInterfaceImplementation * difImp, 
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);

//---------------------------------------------------------------------------------------
// difTestGetPartObj1ScrapCost global function (registered in the attribute table).
// Return: a LgFrTimeVecFloatVector object.
//---------------------------------------------------------------------------------------
void *
difTestGetRawObj1ScrapCost(
    const LgFrDataInterfaceImplementation * difImp, 
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);


//---------------------------------------------------------------------------------------
// difTestGetPartObj1StockCost global function (registered in the attribute table).
// Return: a LgFrTimeVecFloatVector object.
//---------------------------------------------------------------------------------------
void *
difTestGetRawObj1StockCost(
    const LgFrDataInterfaceImplementation * difImp, 
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);

//---------------------------------------------------------------------------------------
// difTestGetPartSupplyVol global function (registered in the attribute table).
// Return: a LgFrTimeVecFloatVector object.
//---------------------------------------------------------------------------------------
void *
difTestGetRawSupplyVol(
    const LgFrDataInterfaceImplementation * difImp, 
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);

//--------------------------------------------------------------------
//  
//   Global functions to obtain producible part attributes
//
//-------------------------------------------------------------------


//---------------------------------------------------------------------------------------
// difTestGetProductProcCost global function (registered in the attribute table).
// It returns a LgFrFloatVector object.
//---------------------------------------------------------------------------------------
void *
difTestGetProductProcCost(
    const LgFrDataInterfaceImplementation * /* difImp, not used */,
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);


//---------------------------------------------------------------------------------------
// difTestGetProductUnitCost global function (registered in the attribute table)
// it returns a LgFrFloatVector object.
//---------------------------------------------------------------------------------------
void *
difTestGetProductUnitCost(
    const LgFrDataInterfaceImplementation * /* dImp, not used */,
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);


//---------------------------------------------------------------------------------------
// difTestGetProductConstrained global function (registered in the attribute table).
// It returns a LgFrIntVector object
//---------------------------------------------------------------------------------------
void *
difTestGetProductConstrained(
    const LgFrDataInterfaceImplementation * /* difImp, not used */,
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);


//---------------------------------------------------------------------------------------
// difTestGetProductYield global function (registered in the attribute table).
// Return: a LgFrFloatVector object
//---------------------------------------------------------------------------------------
void *
difTestGetProductYield(
    const LgFrDataInterfaceImplementation * /* dImp, not used */,
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);


//---------------------------------------------------------------------------------------
// difTestGetPartCycleTime global function (registered in the attribute table).
// Return: a LgFrTimeVecFloatVector object.
//---------------------------------------------------------------------------------------
void *
difTestGetPartCycleTime(
    const LgFrDataInterfaceImplementation * difImp, 
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);


//---------------------------------------------------------------------------------------
// difTestGetProductProcLeadTime global function (registered in the attribute table).
// It returns a LgFrTimeVecFloatVector object
//---------------------------------------------------------------------------------------
void *
difTestGetProductProcLeadTime(
    const LgFrDataInterfaceImplementation * /* difImp, not used */,
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);


//---------------------------------------------------------------------------------------
// difTestGetPartObj1ProdCost global function (registered in the attribute table).
// Return: a LgFrTimeVecFloatVector object.
//---------------------------------------------------------------------------------------
void *
difTestGetPartObj1ProdCost(
    const LgFrDataInterfaceImplementation * difImp, 
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);


//---------------------------------------------------------------------------------------
// difTestGetProductObj1ScrapCost global function (registered in the attribute table).
// Return: a LgFrTimeVecFloatVector object.
//---------------------------------------------------------------------------------------
void *
difTestGetProductObj1ScrapCost(
    const LgFrDataInterfaceImplementation * /* difImp, not used */, 
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);


//---------------------------------------------------------------------------------------
// difTestGetProductObj1StockCost global function (registered in the attribute table).
// Return: a LgFrTimeVecFloatVector object.
//---------------------------------------------------------------------------------------
void *
difTestGetProductObj1StockCost(
    const LgFrDataInterfaceImplementation * /* difImp, not used */, 
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);


//---------------------------------------------------------------------------------------
// difTestGetProductSupplyVol global function (registered in the attribute table).
// Return: a LgFrTimeVecFloatVector object.
//---------------------------------------------------------------------------------------
void *
difTestGetProductSupplyVol(
    const LgFrDataInterfaceImplementation * /* difImp, not used */,
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);


//---------------------------------------------------------------------------------------
// difTestGetProductMinLotSize global function (registered in the attribute table).
// Return: a LgFrTimeVecFloatVector object.
//---------------------------------------------------------------------------------------
void*
difTestGetProductMinLotSize(
    const LgFrDataInterfaceImplementation * /* difImp, not used */,
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);


//--------------------------------------------------------------------
//  
//   Methods to obtain capacity attributes
//
//-------------------------------------------------------------------

//---------------------------------------------------------------------------------------
// difTestGetCapacityUnitCost global function (registered in the attribute table)
// it returns a LgFrFloatVector object.
//---------------------------------------------------------------------------------------
void *
difTestGetCapacityUnitCost(
    const LgFrDataInterfaceImplementation * /* dImp, not used */,
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);


//---------------------------------------------------------------------------------------
//difTestGetCapacityConstrained global function (registered in the attribute table).
// It returns a LgFrIntVector objec
//---------------------------------------------------------------------------------------
void *
difTestGetCapacityConstrained(
    const LgFrDataInterfaceImplementation * /* difImp, not used */,
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);


//---------------------------------------------------------------------------------------
//difTestGetCapacityObj1ScrapCost global function (registered in the attribute table).
// Return: a LgFrTimeVecFloatVector object.
//---------------------------------------------------------------------------------------
void *
difTestGetCapacityObj1ScrapCost(
    const LgFrDataInterfaceImplementation * /* difImp, not used */, 
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);


//---------------------------------------------------------------------------------------
//difTestGetCapacitySupplyVol global function (registered in the attribute table).
// Return: a LgFrTimeVecFloatVector object.
//---------------------------------------------------------------------------------------
void *
difTestGetCapacitySupplyVol(
    const LgFrDataInterfaceImplementation * /* difImp, not used */,
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);


//--------------------------------------------------------------------
//  
//   Global functions to obtain demands
//
//-------------------------------------------------------------------

//---------------------------------------------------------------------------------------
// difTestGetCommittedDemands global function (registering in the attribute table).
// Get committed demands and insert them into set_of_demand
// Return: a LgFrDemandVector object (vector of committed demands).
//---------------------------------------------------------------------------------------
void *
difTestGetCommittedDemands(
  const LgFrDataInterfaceImplementation * /* dImp,not used */,
  const LgFrItemPtrVector* /* itemPtrOrdVecPtr, not used */,
  LgFrError & status,
  const LgFrDataInterfaceEssentials * difEssenPtr = 0);


//---------------------------------------------------------------------------------------
// difTestGetNewOpportunityDemands global function (registering in the attribute table).
// Get new opportunity demands and insert them into set_of_demand
// Return: a LgFrDemandVector object (vector of new opportunity demands).
//---------------------------------------------------------------------------------------
void *
difTestGetNewOpportunityDemands(
    const LgFrDataInterfaceImplementation * /* dImp, not used */,
    const LgFrItemPtrVector* /* itemPtrOrdVecPtr, not used */,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);


//---------------------------------------------------------------------------------------
// difTestGetFirmForecastDemands global function (registering in the attribute table).
// Get firm forcast demands and insert them into set_of_demand
// Return: a LgFrDemandVector object (vector of firm forcast demands).
//---------------------------------------------------------------------------------------
void *
difTestGetFirmForecastDemands(
    const LgFrDataInterfaceImplementation * /* dImp,not used */,
    const LgFrItemPtrVector* /* itemPtrOrdVecPtr, not used */,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);


//---------------------------------------------------------------------------------------
// difTestGetRiskForecastDemands global function (registering in the attribute table).
// Get risk forcast demands and insert them into set_of_demand
// Return: a LgFrDemandVector object (vector of risk forcast demands).
//---------------------------------------------------------------------------------------
void *
difTestGetRiskForecastDemands(
    const LgFrDataInterfaceImplementation * /* dImp,not used */,
    const LgFrItemPtrVector* /* itemPtrOrdVecPtr, not used */,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);


//--------------------------------------------------------------------
//  
//   Global functions to obtain demand attributes
//
//-------------------------------------------------------------------

//---------------------------------------------------------------------------------------
// difTestGetDemandGrossRev global function (registering in the attribute table).
// Compute total demand gross revenue
// Return: a LgFrFloatVector object (vector of demand gross revenues).
//---------------------------------------------------------------------------------------
void *
difTestGetDemandGrossRev(
    const LgFrDataInterfaceImplementation * /* difImp,  not used */,
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);


//---------------------------------------------------------------------------------------
// difTestGetDemandVol global function (registered in the attribute table).
// Return: a LgFrTimeVecFloatVector object.
//---------------------------------------------------------------------------------------
void *
difTestGetDemandVol(
    const LgFrDataInterfaceImplementation * /* difImp,  not used */,
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);


//---------------------------------------------------------------------------------------
// difTestGetDemanObj1CumShipReward global function (registered in the attribute table).
// Return: a LgFrTimeVecFloatVector object.
//---------------------------------------------------------------------------------------
void *
difTestGetDemandObj1CumShipReward(
    const LgFrDataInterfaceImplementation * /* difImp,  not used */,
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);


//---------------------------------------------------------------------------------------
// difTestGetDemanObj1ShipReward global function (registered in the attribute table).
// Return: a LgFrTimeVecFloatVector object.
//---------------------------------------------------------------------------------------
void *
difTestGetDemandObj1ShipReward(
    const LgFrDataInterfaceImplementation * /* difImp,  not used */,
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);


//--------------------------------------------------------------------
//  
//   Global function to define BOM
//
//-------------------------------------------------------------------

void*
difTestDefineBom(
    const LgFrDataInterfaceImplementation * difImp, 
    const LgFrItemPtrVector*, // itemPtrOrdVecPtr,
    LgFrError &, // status, 
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);


//---------------------------------------------------------------------------------------
// Tests this case.  Only returns if all tests passed
// Expects data testScenario1 to have come from
// /u/implode/wit/data/examples/diner12/wit.data, and expects
// testScenario2 to have been made by copying testScenario1
//---------------------------------------------------------------------------------------

void
difTestContextTest(
   LgFrScenario        		& testScenario1,
   LgFrLastProblemSolved       	& /* lps */,      // testScenario1's
   LgFrDataInterface	       	& ts1dif,	// testScenario1's
   LgFrScenario 	       	& testScenario1dup,
   LgFrDataInterface	       	& ts1dupDif);	// testScenario1dup's


#endif
@


1.1
log
@Initial revision
@
text
@d3 2
d56 1
a56 1
// Return: a LgFrOrderedVectorPart object (vector of raw parts).
d61 1
a61 1
    const LgFrOrderedVectorItemPtr* /* itemPtrOrdVecPtr, not used */,
d63 1
a63 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d68 1
a68 1
// Return: a LgFrOrderedVectorPart object (vector of producible parts)
d73 1
a73 1
    const LgFrOrderedVectorItemPtr* /* itemPtrOrdVecPtr, not used */,
d75 1
a75 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d80 1
a80 1
// Return: a LgFrOrderedVectorPart object (vector of capacities).
d85 1
a85 1
    const LgFrOrderedVectorItemPtr* /* itemPtrOrdVecPtr, not used */,
d87 1
a87 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL); 
d95 1
a95 1
// it returns a LgFrVectorFloat object.
d100 1
a100 1
  const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d102 1
a102 1
  const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d106 1
a106 1
// It returns a LgFrVectorFloat object.
d111 1
a111 1
    const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d113 1
a113 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d117 1
a117 1
// It returns a LgFrVectorInt object.
d122 1
a122 1
    const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d124 1
a124 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL);               
d128 1
a128 1
// It returns a LgFrVectorTimeVecFloat object.
d133 1
a133 1
    const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d135 1
a135 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d139 1
a139 1
// Return: a LgFrVectorTimeVecFloat object.
d144 1
a144 1
    const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d146 1
a146 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d151 1
a151 1
// Return: a LgFrVectorTimeVecFloat object.
d156 1
a156 1
    const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d158 1
a158 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d162 1
a162 1
// Return: a LgFrVectorTimeVecFloat object.
d167 1
a167 1
    const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d169 1
a169 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d180 1
a180 1
// It returns a LgFrVectorFloat object.
d185 1
a185 1
    const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d187 1
a187 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d192 1
a192 1
// it returns a LgFrVectorFloat object.
d197 1
a197 1
    const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d199 1
a199 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d204 1
a204 1
// It returns a LgFrVectorInt object
d209 1
a209 1
    const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d211 1
a211 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d216 1
a216 1
// Return: a LgFrVectorFloat object
d221 1
a221 1
    const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d223 1
a223 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d228 1
a228 1
// Return: a LgFrVectorTimeVecFloat object.
d233 1
a233 1
    const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d235 1
a235 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d240 1
a240 1
// It returns a LgFrVectorTimeVecFloat object
d245 1
a245 1
    const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d247 1
a247 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d252 1
a252 1
// Return: a LgFrVectorTimeVecFloat object.
d257 1
a257 1
    const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d259 1
a259 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d264 1
a264 1
// Return: a LgFrVectorTimeVecFloat object.
d269 1
a269 1
    const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d271 1
a271 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d276 1
a276 1
// Return: a LgFrVectorTimeVecFloat object.
d281 1
a281 1
    const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d283 1
a283 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d288 1
a288 1
// Return: a LgFrVectorTimeVecFloat object.
d293 1
a293 1
    const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d295 1
a295 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d300 1
a300 1
// Return: a LgFrVectorTimeVecFloat object.
d305 1
a305 1
    const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d307 1
a307 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d318 1
a318 1
// it returns a LgFrVectorFloat object.
d323 1
a323 1
    const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d325 1
a325 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d330 1
a330 1
// It returns a LgFrVectorInt objec
d335 1
a335 1
    const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d337 1
a337 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d342 1
a342 1
// Return: a LgFrVectorTimeVecFloat object.
d347 1
a347 1
    const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d349 1
a349 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d354 1
a354 1
// Return: a LgFrVectorTimeVecFloat object.
d359 1
a359 1
    const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d361 1
a361 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d373 1
a373 1
// Return: a LgFrOrderedVectorDemand object (vector of committed demands).
d378 1
a378 1
  const LgFrOrderedVectorItemPtr* /* itemPtrOrdVecPtr, not used */,
d380 1
a380 1
  const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d386 1
a386 1
// Return: a LgFrOrderedVectorDemand object (vector of new opportunity demands).
d391 1
a391 1
    const LgFrOrderedVectorItemPtr* /* itemPtrOrdVecPtr, not used */,
d393 1
a393 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d399 1
a399 1
// Return: a LgFrOrderedVectorDemand object (vector of firm forcast demands).
d404 1
a404 1
    const LgFrOrderedVectorItemPtr* /* itemPtrOrdVecPtr, not used */,
d406 1
a406 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d412 1
a412 1
// Return: a LgFrOrderedVectorDemand object (vector of risk forcast demands).
d417 1
a417 1
    const LgFrOrderedVectorItemPtr* /* itemPtrOrdVecPtr, not used */,
d419 1
a419 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d431 1
a431 1
// Return: a LgFrVectorFloat object (vector of demand gross revenues).
d436 1
a436 1
    const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d438 1
a438 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d443 1
a443 1
// Return: a LgFrVectorTimeVecFloat object.
d448 1
a448 1
    const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d450 1
a450 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d455 1
a455 1
// Return: a LgFrVectorTimeVecFloat object.
d460 1
a460 1
    const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d462 1
a462 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d467 1
a467 1
// Return: a LgFrVectorTimeVecFloat object.
d472 1
a472 1
    const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d474 1
a474 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d486 1
a486 1
    const LgFrOrderedVectorItemPtr*, // itemPtrOrdVecPtr,
d488 1
a488 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
@


1.1.1.1
log
@Import scenario
@
text
@@


1.1.1.1.14.1
log
@Roguewave is gone
@
text
@a2 2
// RW2STL -- inserted:
// End of RW2STL -- inserted includes.
d54 1
a54 1
// Return: a LgFrPartVector object (vector of raw parts).
d59 1
a59 1
    const LgFrItemPtrVector* /* itemPtrOrdVecPtr, not used */,
d61 1
a61 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d66 1
a66 1
// Return: a LgFrPartVector object (vector of producible parts)
d71 1
a71 1
    const LgFrItemPtrVector* /* itemPtrOrdVecPtr, not used */,
d73 1
a73 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d78 1
a78 1
// Return: a LgFrPartVector object (vector of capacities).
d83 1
a83 1
    const LgFrItemPtrVector* /* itemPtrOrdVecPtr, not used */,
d85 1
a85 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0); 
d93 1
a93 1
// it returns a LgFrFloatVector object.
d98 1
a98 1
  const LgFrItemPtrVector* itemPtrOrdVecPtr,
d100 1
a100 1
  const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d104 1
a104 1
// It returns a LgFrFloatVector object.
d109 1
a109 1
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
d111 1
a111 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d115 1
a115 1
// It returns a LgFrIntVector object.
d120 1
a120 1
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
d122 1
a122 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);               
d126 1
a126 1
// It returns a LgFrTimeVecFloatVector object.
d131 1
a131 1
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
d133 1
a133 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d137 1
a137 1
// Return: a LgFrTimeVecFloatVector object.
d142 1
a142 1
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
d144 1
a144 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d149 1
a149 1
// Return: a LgFrTimeVecFloatVector object.
d154 1
a154 1
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
d156 1
a156 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d160 1
a160 1
// Return: a LgFrTimeVecFloatVector object.
d165 1
a165 1
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
d167 1
a167 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d178 1
a178 1
// It returns a LgFrFloatVector object.
d183 1
a183 1
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
d185 1
a185 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d190 1
a190 1
// it returns a LgFrFloatVector object.
d195 1
a195 1
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
d197 1
a197 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d202 1
a202 1
// It returns a LgFrIntVector object
d207 1
a207 1
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
d209 1
a209 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d214 1
a214 1
// Return: a LgFrFloatVector object
d219 1
a219 1
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
d221 1
a221 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d226 1
a226 1
// Return: a LgFrTimeVecFloatVector object.
d231 1
a231 1
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
d233 1
a233 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d238 1
a238 1
// It returns a LgFrTimeVecFloatVector object
d243 1
a243 1
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
d245 1
a245 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d250 1
a250 1
// Return: a LgFrTimeVecFloatVector object.
d255 1
a255 1
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
d257 1
a257 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d262 1
a262 1
// Return: a LgFrTimeVecFloatVector object.
d267 1
a267 1
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
d269 1
a269 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d274 1
a274 1
// Return: a LgFrTimeVecFloatVector object.
d279 1
a279 1
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
d281 1
a281 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d286 1
a286 1
// Return: a LgFrTimeVecFloatVector object.
d291 1
a291 1
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
d293 1
a293 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d298 1
a298 1
// Return: a LgFrTimeVecFloatVector object.
d303 1
a303 1
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
d305 1
a305 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d316 1
a316 1
// it returns a LgFrFloatVector object.
d321 1
a321 1
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
d323 1
a323 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d328 1
a328 1
// It returns a LgFrIntVector objec
d333 1
a333 1
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
d335 1
a335 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d340 1
a340 1
// Return: a LgFrTimeVecFloatVector object.
d345 1
a345 1
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
d347 1
a347 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d352 1
a352 1
// Return: a LgFrTimeVecFloatVector object.
d357 1
a357 1
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
d359 1
a359 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d371 1
a371 1
// Return: a LgFrDemandVector object (vector of committed demands).
d376 1
a376 1
  const LgFrItemPtrVector* /* itemPtrOrdVecPtr, not used */,
d378 1
a378 1
  const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d384 1
a384 1
// Return: a LgFrDemandVector object (vector of new opportunity demands).
d389 1
a389 1
    const LgFrItemPtrVector* /* itemPtrOrdVecPtr, not used */,
d391 1
a391 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d397 1
a397 1
// Return: a LgFrDemandVector object (vector of firm forcast demands).
d402 1
a402 1
    const LgFrItemPtrVector* /* itemPtrOrdVecPtr, not used */,
d404 1
a404 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d410 1
a410 1
// Return: a LgFrDemandVector object (vector of risk forcast demands).
d415 1
a415 1
    const LgFrItemPtrVector* /* itemPtrOrdVecPtr, not used */,
d417 1
a417 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d429 1
a429 1
// Return: a LgFrFloatVector object (vector of demand gross revenues).
d434 1
a434 1
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
d436 1
a436 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d441 1
a441 1
// Return: a LgFrTimeVecFloatVector object.
d446 1
a446 1
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
d448 1
a448 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d453 1
a453 1
// Return: a LgFrTimeVecFloatVector object.
d458 1
a458 1
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
d460 1
a460 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d465 1
a465 1
// Return: a LgFrTimeVecFloatVector object.
d470 1
a470 1
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
d472 1
a472 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d484 1
a484 1
    const LgFrItemPtrVector*, // itemPtrOrdVecPtr,
d486 1
a486 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);
@

