head	1.2;
access;
symbols
	sce_5_01_20080919:1.2
	latest_sce_4_20_20060523:1.2.0.6
	sce_4_20_20060523:1.2
	latest_sce4_20_OSL:1.2.0.4
	sce_4_20_OSL:1.2
	sce_4_05_20040511:1.2
	sce_4_00_20040201:1.2
	nextGenBranch:1.2.0.2
	nextGenRoot:1.2
	sce_3_30_20030627:1.2
	EndRw-branch:1.1.1.1.0.14
	Root-of-EndRw:1.1.1.1
	EndWitRw-branch:1.1.1.1.0.12
	Root-of-EndWitRw:1.1.1.1
	RwToStl-branch:1.1.1.1.0.10
	Root-of-RwToStl:1.1.1.1
	latest_sce_3_10_20010924:1.1.1.1.0.8
	sce_3_10_20010924:1.1.1.1
	latest_sce_3_00_20010601:1.1.1.1.0.6
	sce_3_00_20010601:1.1.1.1
	latest_sce_2_31_20010308:1.1.1.1.0.4
	sce_2_31_20010308:1.1.1.1
	latest_sce_2_31_20001003:1.1.1.1.0.2
	sce_2_31_20001003:1.1.1.1
	start:1.1.1.1
	IBM:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2003.01.15.19.36.32;	author rwToStl;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.24.15.29.40;	author wit;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.24.15.29.40;	author wit;	state Exp;
branches
	1.1.1.1.14.1;
next	;

1.1.1.1.14.1
date	2003.01.08.17.42.28;	author rwToStl;	state Exp;
branches;
next	;


desc
@@


1.2
log
@commiting to main branch witutil, scenario, and sce code which removes RW
@
text
@#ifndef LGFRDATAINTERFACEESSENTIALS_H
#define LGFRDATAINTERFACEESSENTIALS_H
// RW2STL -- inserted:
#include <string>
// End of RW2STL -- inserted includes.

#include <scenario/src/calendar.h>
#include <scenario/src/part.h>
#include <scenario/src/demand.h>

// This is the virtual base class to be used as a bridge between 
// the initialProblem(InitProb) class and dataInterface(DIF) class 
// because some of the functions in the DIF class
// need informations (from other classes) 
// which are not stored (and can not be accessed) in the DIF class.
// These extra data need to be passed into DIF functions (whenever needed)
// when an InitProb object calls a DIF object to get data.
// This base class only defines the interface.
// All detail implementations will be defined in concrete subclasses
// and will be hidden from the user.
// An object of a concrete subclass derived from this base class
// will be instantiated on the flight (trantient object) 
// and will be passed to those functions in a DIF object when needed.
 
class LgFrDataInterfaceEssentials
{
public:

  // Create and insert a part
  virtual
    LgFrPart
      createAndInsertPart(const std::string& partName) const = 0;

  // Create and insert a demand
  virtual
    LgFrDemand
      createAndInsertDemand(const std::string& demandName, 
			    const std::string& partName) const = 0;

  // Get a calander
  virtual
    const LgFrCalendar& calendar() const = 0;

  //--------------------------------------------------------------------
  //  
  //   Standard class methods
  //
  //-------------------------------------------------------------------

  // Destructor
  virtual
    ~LgFrDataInterfaceEssentials();

};
#endif

@


1.1
log
@Initial revision
@
text
@d3 3
a6 1
#include <rw/cstring.h>
d32 1
a32 1
      createAndInsertPart(const RWCString& partName) const = 0;
d37 2
a38 2
      createAndInsertDemand(const RWCString& demandName, 
			    const RWCString& partName) const = 0;
a43 10
  //--------------------------------------------------------------------
  //  
  //   Dynamic type query methods
  //
  //-------------------------------------------------------------------
  virtual
    isAReturnType
      isA()
        const;
  
@


1.1.1.1
log
@Import scenario
@
text
@@


1.1.1.1.14.1
log
@Roguewave is gone
@
text
@a2 3
// RW2STL -- inserted:
#include <string>
// End of RW2STL -- inserted includes.
d4 1
d30 1
a30 1
      createAndInsertPart(const std::string& partName) const = 0;
d35 2
a36 2
      createAndInsertDemand(const std::string& demandName, 
			    const std::string& partName) const = 0;
d42 10
@

