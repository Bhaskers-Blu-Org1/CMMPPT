head	1.4;
access;
symbols
	sce_5_01_20080919:1.4
	latest_sce_4_20_20060523:1.4.0.4
	sce_4_20_20060523:1.4
	latest_sce4_20_OSL:1.4.0.2
	sce_4_20_OSL:1.4
	sce_4_05_20040511:1.3
	sce_4_00_20040201:1.3
	nextGenBranch:1.3.0.2
	nextGenRoot:1.3
	sce_3_30_20030627:1.3
	EndRw-branch:1.2.0.8
	Root-of-EndRw:1.2
	EndWitRw-branch:1.2.0.6
	Root-of-EndWitRw:1.2
	UsedBySCE:1.2
	RwToStl-branch:1.2.0.4
	Root-of-RwToStl:1.2
	latest_sce_3_10_20010924:1.2.0.2
	sce_3_10_20010924:1.2
	latest_sce_3_00_20010601:1.1.1.1.0.6
	sce_3_00_20010601:1.1.1.1
	latest_sce_2_31_20010308:1.1.1.1.0.4
	sce_2_31_20010308:1.1.1.1
	latest_sce_2_31_20001003:1.1.1.1.0.2
	sce_2_31_20001003:1.1.1.1
	start:1.1.1.1
	IBM:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2004.12.19.17.50.00;	author fasano;	state Exp;
branches;
next	1.3;

1.3
date	2003.01.15.19.36.39;	author rwToStl;	state Exp;
branches;
next	1.2;

1.2
date	2001.08.10.23.02.05;	author fasano;	state Exp;
branches
	1.2.8.1;
next	1.1;

1.1
date	2000.02.24.15.29.45;	author wit;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.24.15.29.45;	author wit;	state Exp;
branches;
next	;

1.2.8.1
date	2003.01.08.17.42.32;	author rwToStl;	state Exp;
branches;
next	1.2.8.2;

1.2.8.2
date	2003.01.09.20.24.14;	author rwToStl;	state Exp;
branches;
next	;


desc
@@


1.4
log
@fixed path for windows build
@
text
@#ifndef ScenarioMachdep_H
#define ScenarioMachdep_H
// RW2STL -- inserted:
#include <string>
// End of RW2STL -- inserted includes.

#include <stdlib.h>

#include <scenario/src/dll.h>


#if defined(_MSC_VER)
//# define CMRP_DATA_PATH "..\\..\\..\\cmrpData\\"
# define CMRP_DATA_PATH "..\\..\\cmrpData\\"
#else
# define CMRP_DATA_PATH "../../cmrpData/"
#endif

#ifdef RS6K

// tempnam function supported
#define TEMPNAM_AVAILABLE 1

#endif

#ifdef SUN4
/* Sun or GNU gcc seems to not have $ NLS support in stdio print routines,
 * so NLS_DOLLAR_FORMAT_SUPPORT is left undefined */
 
/* Platform lacks ansi function strerror */
#define NO_ANSI_STRERROR
#define SPRINTF_NON_INT_RET

#ifdef __cplusplus
#define TRY_THROW_CATCH_NOT_SUPPORTED
#define OLD_STYLE_MALLOC_FREE
/* Sun C++ V2 required -DNULL=0 */
#define 0 0
#endif

// tempnam function supported
#define TEMPNAM_AVAILABLE 1

// used in difCmrpF.C
#define EXIT_FAILURE 1

#endif

//-----------------------------------------------------------------------------
// portableFree
//
// Function that hides incompatibilities between various versions of
// free()
//-----------------------------------------------------------------------------
inline
void
portableFree (void * mem) 
{
  if ( mem != 0 )
  free (
#ifdef OLD_STYLE_MALLOC_FREE
	(char *)
#endif
	         mem);
}

// Sun CC was generating the following error messages when this was inline
// "../src/timeVecs.C", line 46: warning:
//     size_tsize_tMax(const size_t&, const size_t&) not inlined,
//     called twice in an expression
// "../src/timeVecs.C", line 335: warning:
//     out-of-line copy of size_tMax() created
// "../../scenario/src/machdep.h", line 43: identifier redeclared:
//     size_tMax__FRCUiT1
// "../src/timeVecs.C", line 337: warning:
//     static function called but not defined: size_tMax__FRCUiT1()

#ifdef SUN4
static
#else
inline
#endif
size_t
size_tMax (const size_t& i, const size_t& j)
{
  return (i > j  ?  i : j);
}

#ifdef SUN4
static
#else
inline
#endif
float
LgFrFloatMax (const float i, const float j)
{
  return (i > j  ?  i : j);
}

#ifdef SUN4
static
#else
inline
#endif
size_t
size_tMin (const size_t& i, const size_t& j)
{
  return (i < j  ?  i : j);
}

#ifdef SUN4
static
#else
inline
#endif
float
LgFrFloatMin (const float i, const float j)
{
  return (i < j  ?  i : j);
}


// Get name which can be used for a temporary file
LGFR_DECLSPEC std::string LGFR_STDCALL LgFrTempFileName();

// Return true if file exists
bool LgFrDoesFileExist( const std::string& fileName );

int LgFrStrcmpcaseins( const char* s1, const char* s2 );

void LgFrMachdepTest();

#endif
@


1.3
log
@commiting to main branch witutil, scenario, and sce code which removes RW
@
text
@d13 2
a14 1
# define CMRP_DATA_PATH "..\\..\\..\\cmrpData\\"
@


1.2
log
@Updated so unitTest reads files from
  /u/wit/wit-data
instead of
  /u/implode/data
With these changes unitTest is running correctly on Windows
@
text
@d3 3
a8 1
#include <rw/cstring.h>
d37 1
a37 1
#define NULL 0
d58 1
a58 1
  if ( mem != NULL )
d123 1
a123 1
LGFR_DECLSPEC RWCString LGFR_STDCALL LgFrTempFileName();
d126 3
a128 1
RWBoolean LgFrDoesFileExist( const RWCString fileName );
@


1.2.8.1
log
@Roguewave is gone
@
text
@a2 3
// RW2STL -- inserted:
#include <string>
// End of RW2STL -- inserted includes.
d6 1
d35 1
a35 1
#define 0 0
d56 1
a56 1
  if ( mem != 0 )
d121 1
a121 1
LGFR_DECLSPEC std::string LGFR_STDCALL LgFrTempFileName();
d124 1
a124 1
bool LgFrDoesFileExist( const std::string& fileName );
@


1.2.8.2
log
@Added LgFrStrcmpcaseins
@
text
@a127 2
int LgFrStrcmpcaseins( const char* s1, const char* s2 );

@


1.1
log
@Initial revision
@
text
@d9 3
a11 6
#if defined(MACHINE_WITPC3)
  // The machine being used is WITPC3 which is running Win95 w/ MSVC++V5.
  // This platform does not support relative path names like:
  //    ../../cmrpData
  // Because of this the complete path name is being coded.
# define CMRP_DATA_PATH "E:\\u\\implode\\fasano\\cmrpData\\"
@


1.1.1.1
log
@Import scenario
@
text
@@
