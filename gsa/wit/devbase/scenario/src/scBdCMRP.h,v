head	1.2;
access;
symbols
	sce_5_01_20080919:1.2
	latest_sce_4_20_20060523:1.2.0.6
	sce_4_20_20060523:1.2
	latest_sce4_20_OSL:1.2.0.4
	sce_4_20_OSL:1.2
	sce_4_05_20040511:1.2
	sce_4_00_20040201:1.2
	nextGenBranch:1.2.0.2
	nextGenRoot:1.2
	sce_3_30_20030627:1.2
	EndRw-branch:1.1.1.1.0.14
	Root-of-EndRw:1.1.1.1
	EndWitRw-branch:1.1.1.1.0.12
	Root-of-EndWitRw:1.1.1.1
	RwToStl-branch:1.1.1.1.0.10
	Root-of-RwToStl:1.1.1.1
	latest_sce_3_10_20010924:1.1.1.1.0.8
	sce_3_10_20010924:1.1.1.1
	latest_sce_3_00_20010601:1.1.1.1.0.6
	sce_3_00_20010601:1.1.1.1
	latest_sce_2_31_20010308:1.1.1.1.0.4
	sce_2_31_20010308:1.1.1.1
	latest_sce_2_31_20001003:1.1.1.1.0.2
	sce_2_31_20001003:1.1.1.1
	start:1.1.1.1
	IBM:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2003.01.15.19.36.43;	author rwToStl;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.24.15.29.48;	author wit;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.24.15.29.48;	author wit;	state Exp;
branches
	1.1.1.1.14.1;
next	;

1.1.1.1.14.1
date	2003.01.08.17.42.33;	author rwToStl;	state Exp;
branches;
next	;


desc
@@


1.2
log
@commiting to main branch witutil, scenario, and sce code which removes RW
@
text
@#ifndef ScenarioBuilderForCMRP_H
#define ScenarioBuilderForCMRP_H
// RW2STL -- inserted:
// End of RW2STL -- inserted includes.

// build a scenario for CMRP

#include <scenario/src/scenBld.h>
#include <scenario/src/abFctyAp.h>
#include <scenario/src/scCMRPP.h>

class LgFrApplicationAbstractFactory;
class LgFrScenarioForCMRP;
// class LgFrScenarioForCMRPwithDif;
class LgFrScheduleFactory;

class LgFrScenarioBuilderForCMRP : public LgFrScenarioBuilder
{
public:
  LgFrScenarioBuilderForCMRP();
  ~LgFrScenarioBuilderForCMRP();

  void buildScenario(
      const LgFrDataInterfaceAbstract& dif, 
      const LgFrCalendar& calendar);

  LgFrScenarioForCMRPSmartPointer getScenario();
  
  void factoryType() const;  

  static void test();

protected:
  virtual
  LgFrInitialProblemAndParameters* createIPP(LgFrScenarioSmartPointer scenario) const;
  virtual
  LgFrScheduleFactory* createScheduleFactory(LgFrScenarioSmartPointer scenario) const;

private:
  LgFrScenarioForCMRPSmartPointer scenarioPtr_;
  LgFrScenarioBuilderForCMRP(const LgFrScenarioBuilderForCMRP&);
  LgFrScenarioBuilderForCMRP& operator=(const LgFrScenarioBuilderForCMRP&);  
};



class LgFrScenarioBuilderForCMRPwithPrioritiesFromDif : 
   public LgFrScenarioBuilder
{
public:
  LgFrScenarioBuilderForCMRPwithPrioritiesFromDif();
  ~LgFrScenarioBuilderForCMRPwithPrioritiesFromDif();

  void buildScenario(
     const LgFrDataInterfaceAbstract& dif, 
     const LgFrCalendar& calendar);

  LgFrScenarioForCMRPSmartPointer getScenario();

  void factoryType() const;

  static void test();

protected:
  virtual
  LgFrInitialProblemAndParameters* createIPP(LgFrScenarioSmartPointer scenario) const;

  virtual
  LgFrScheduleFactory* createScheduleFactory(LgFrScenarioSmartPointer scenario) const;

private:
  LgFrScenarioForCMRPSmartPointer scenarioPtr_;
  LgFrScenarioBuilderForCMRPwithPrioritiesFromDif(
     const LgFrScenarioBuilderForCMRPwithPrioritiesFromDif&);
  LgFrScenarioBuilderForCMRPwithPrioritiesFromDif& operator=(
     const LgFrScenarioBuilderForCMRPwithPrioritiesFromDif&);

};

#endif
@


1.1
log
@Initial revision
@
text
@d3 2
a7 1
#include <rw/cstring.h>
@


1.1.1.1
log
@Import scenario
@
text
@@


1.1.1.1.14.1
log
@Roguewave is gone
@
text
@a2 2
// RW2STL -- inserted:
// End of RW2STL -- inserted includes.
d6 1
@

