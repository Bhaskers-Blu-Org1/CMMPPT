head	1.2;
access;
symbols
	sce_5_01_20080919:1.2
	latest_sce_4_20_20060523:1.2.0.6
	sce_4_20_20060523:1.2
	latest_sce4_20_OSL:1.2.0.4
	sce_4_20_OSL:1.2
	sce_4_05_20040511:1.2
	sce_4_00_20040201:1.2
	nextGenBranch:1.2.0.2
	nextGenRoot:1.2
	sce_3_30_20030627:1.2
	EndRw-branch:1.1.1.1.0.14
	Root-of-EndRw:1.1.1.1
	EndWitRw-branch:1.1.1.1.0.12
	Root-of-EndWitRw:1.1.1.1
	RwToStl-branch:1.1.1.1.0.10
	Root-of-RwToStl:1.1.1.1
	latest_sce_3_10_20010924:1.1.1.1.0.8
	sce_3_10_20010924:1.1.1.1
	latest_sce_3_00_20010601:1.1.1.1.0.6
	sce_3_00_20010601:1.1.1.1
	latest_sce_2_31_20010308:1.1.1.1.0.4
	sce_2_31_20010308:1.1.1.1
	latest_sce_2_31_20001003:1.1.1.1.0.2
	sce_2_31_20001003:1.1.1.1
	start:1.1.1.1
	IBM:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2003.01.15.19.36.32;	author rwToStl;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.24.15.29.39;	author wit;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.24.15.29.39;	author wit;	state Exp;
branches
	1.1.1.1.14.1;
next	;

1.1.1.1.14.1
date	2003.01.08.17.42.27;	author rwToStl;	state Exp;
branches;
next	;


desc
@@


1.2
log
@commiting to main branch witutil, scenario, and sce code which removes RW
@
text
@#ifndef LGFRDATAINTERFACEABSTARCT_H
#define LGFRDATAINTERFACEABSTARCT_H
// RW2STL -- inserted:
#include <string>
// End of RW2STL -- inserted includes.

#include <scenario/src/idnumber.h>

// This is the DIF abstract class.
// Two subclasses derived from this class:
// (1) LgFrDataInterface: This is a generl purpose DIF class which maps data from
//     one specific database to witrun and provides query functions.  The detail
//     implementation is done in an implementation class called
//     LgFrDataInterfaceImplementation, which is contained in LgFrDataInterface.
//     (related to Bridge pattern)
// (2) LgFrDataInterfaceSpecialPurpose: In general, this class provides all other
//     types of data interfaces for witrun which do not conform to the LgFrDataInterface
//     criteria as mentioned in above (1). It does not provide any query function
//     and it is used for special purposes only.
//     For example, LgFrFileDataInterface falls in this category because it reads in
//     wit data file directly without "knowing" what is read.

// Forward reference 
class LgFrDataInterfaceEssentials;


class LgFrDataInterfaceAbstract
{
public:

  virtual int GetDIType() const = 0;

  // Set problem title
  virtual
    void
      title(std::string t) = 0;

  // Return problem title
  virtual
    std::string title(const LgFrDataInterfaceEssentials * = 0 ) const = 0;



  // This method should be used when the dif will not be used for a while
  // and resources should be freed until the dif is needed again.  It
  // is expected that this method might be called at the
  // end of initialProblem::feedInto.  In this base class this method just
  // returns.
  virtual
    void
      deleteExtraResources()=0;


  //-------------------------------------------------------------------
  //  
  //   Standard class methods
  //
  //-------------------------------------------------------------------

  // Make a clone copy of this object
  virtual
    LgFrDataInterfaceAbstract *
        clone()
           const = 0;

  // Destructor
  virtual
    ~LgFrDataInterfaceAbstract();

};
#endif
@


1.1
log
@Initial revision
@
text
@d3 3
a6 1
#include <rw/cstring.h>
d31 2
d36 1
a36 1
      title(RWCString t) = 0;
d40 1
a40 1
    RWCString title(const LgFrDataInterfaceEssentials * = NULL ) const = 0;
a51 11


  //--------------------------------------------------------------------
  //  
  //   Dynamic type query methods
  //
  //-------------------------------------------------------------------
  virtual
    isAReturnType
      isA()
	const = 0;
@


1.1.1.1
log
@Import scenario
@
text
@@


1.1.1.1.14.1
log
@Roguewave is gone
@
text
@a2 3
// RW2STL -- inserted:
#include <string>
// End of RW2STL -- inserted includes.
d4 1
a28 2
  virtual int GetDIType() const = 0;

d32 1
a32 1
      title(std::string t) = 0;
d36 1
a36 1
    std::string title(const LgFrDataInterfaceEssentials * = 0 ) const = 0;
d48 11
@

