head	1.2;
access;
symbols
	sce_5_01_20080919:1.2
	latest_sce_4_20_20060523:1.2.0.6
	sce_4_20_20060523:1.2
	latest_sce4_20_OSL:1.2.0.4
	sce_4_20_OSL:1.2
	sce_4_05_20040511:1.2
	sce_4_00_20040201:1.2
	nextGenBranch:1.2.0.2
	nextGenRoot:1.2
	sce_3_30_20030627:1.2
	EndRw-branch:1.1.1.1.0.14
	Root-of-EndRw:1.1.1.1
	EndWitRw-branch:1.1.1.1.0.12
	Root-of-EndWitRw:1.1.1.1
	UsedBySCE:1.1.1.1
	RwToStl-branch:1.1.1.1.0.10
	Root-of-RwToStl:1.1.1.1
	latest_sce_3_10_20010924:1.1.1.1.0.8
	sce_3_10_20010924:1.1.1.1
	latest_sce_3_00_20010601:1.1.1.1.0.6
	sce_3_00_20010601:1.1.1.1
	latest_sce_2_31_20010308:1.1.1.1.0.4
	sce_2_31_20010308:1.1.1.1
	latest_sce_2_31_20001003:1.1.1.1.0.2
	sce_2_31_20001003:1.1.1.1
	start:1.1.1.1
	IBM:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2003.01.15.19.36.47;	author rwToStl;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.24.15.29.52;	author wit;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.24.15.29.52;	author wit;	state Exp;
branches
	1.1.1.1.14.1;
next	;

1.1.1.1.14.1
date	2003.01.08.17.42.37;	author rwToStl;	state Exp;
branches;
next	;


desc
@@


1.2
log
@commiting to main branch witutil, scenario, and sce code which removes RW
@
text
@#ifndef LgFrSortingScheduleFloatSMARTPTRH
#define LgFrSortingScheduleFloatSMARTPTRH
// RW2STL -- inserted:
#include <vector>
// End of RW2STL -- inserted includes.

#include <scenario/src/generVc.h>
#include <scenario/src/refCount.h>


// forward declaration
class LgFrSortingScheduleFloat;


class LgFrSortingScheduleFloatSmartPointerToConst
{

    friend class LgFrSortingDemandScheduleSmartPointerToConst;
    friend class LgFrSortingPartScheduleSmartPointerToConst;

public:
    LgFrSortingScheduleFloatSmartPointerToConst();
    LgFrSortingScheduleFloatSmartPointerToConst(LgFrSortingScheduleFloat*);
    LgFrSortingScheduleFloatSmartPointerToConst(LgFrSortingScheduleFloat*, LgFrReferenceCount&);
    virtual ~LgFrSortingScheduleFloatSmartPointerToConst();
    LgFrSortingScheduleFloatSmartPointerToConst(const LgFrSortingScheduleFloatSmartPointerToConst&);
    LgFrSortingScheduleFloatSmartPointerToConst deepCopy() const;
    LgFrSortingScheduleFloatSmartPointerToConst& operator=(const LgFrSortingScheduleFloatSmartPointerToConst&);
    bool operator==(const LgFrSortingScheduleFloatSmartPointerToConst&) const;
    bool operator!=(const LgFrSortingScheduleFloatSmartPointerToConst&) const;
    const LgFrSortingScheduleFloat& operator*() const;
    const LgFrSortingScheduleFloat * const operator->() const;


    bool unique() const;
    bool null() const;
    static void test();

protected:
    LgFrSortingScheduleFloat* pointer_; // should make this const but I want to use
                            //  it for the LgFrSortingScheduleFloatSmartPointer class
			    //  (the non-const class) to inherit this member.
			    //  The way it's been set up only const stuff
                            //  is being returned so we're OK.
    LgFrReferenceCount count_;

};


class LgFrSortingScheduleFloatSmartPointer : public LgFrSortingScheduleFloatSmartPointerToConst
{

    friend class LgFrSortingDemandScheduleSmartPointer;
    friend class LgFrSortingPartScheduleSmartPointer;

public:
    LgFrSortingScheduleFloatSmartPointer();
    LgFrSortingScheduleFloatSmartPointer(LgFrSortingScheduleFloat*);
    LgFrSortingScheduleFloatSmartPointer(LgFrSortingScheduleFloat*, LgFrReferenceCount&);
    ~LgFrSortingScheduleFloatSmartPointer();
    LgFrSortingScheduleFloatSmartPointer(const LgFrSortingScheduleFloatSmartPointer&);
    LgFrSortingScheduleFloatSmartPointer(LgFrSortingScheduleFloatSmartPointerToConst);
    LgFrSortingScheduleFloatSmartPointer deepCopy() const;
    LgFrSortingScheduleFloatSmartPointer& operator=(const LgFrSortingScheduleFloatSmartPointer&);

    bool operator==(const LgFrSortingScheduleFloatSmartPointer&) const;
    bool operator!=(const LgFrSortingScheduleFloatSmartPointer&) const;


    // these are really dangerous as they circumvent the notion
    //  of using smart pointers anyways.  you had better be using
    //  these just to call another method
    LgFrSortingScheduleFloat& operator*();
    const LgFrSortingScheduleFloat& operator*() const;
    LgFrSortingScheduleFloat* const operator->();
    const LgFrSortingScheduleFloat* const operator->() const;

    bool unique() const;
    bool null() const;
    static void test();
};

// RW2STL - declare(RWGVector, LgFrSortingScheduleFloatSmartPointer)

// RW2STL - declare(RWGOrderedVector, LgFrSortingScheduleFloatSmartPointer)


typedef std::vector<LgFrSortingScheduleFloatSmartPointer> // RW2STL - typedef RWGOrderedVector(LgFrSortingScheduleFloatSmartPointer)

                 LgFrOrderedVectorSortingScheduleFloatSmartPointer;

#endif

@


1.1
log
@Initial revision
@
text
@d3 3
a6 1
#include <rw/defs.h>
d29 2
a30 2
    RWBoolean operator==(const LgFrSortingScheduleFloatSmartPointerToConst&) const;
    RWBoolean operator!=(const LgFrSortingScheduleFloatSmartPointerToConst&) const;
d35 2
a36 2
    RWBoolean unique() const;
    RWBoolean null() const;
d66 2
a67 2
    RWBoolean operator==(const LgFrSortingScheduleFloatSmartPointer&) const;
    RWBoolean operator!=(const LgFrSortingScheduleFloatSmartPointer&) const;
d78 2
a79 2
    RWBoolean unique() const;
    RWBoolean null() const;
d83 6
a88 2
declare(RWGVector, LgFrSortingScheduleFloatSmartPointer)
declare(RWGOrderedVector, LgFrSortingScheduleFloatSmartPointer)
a89 1
typedef RWGOrderedVector(LgFrSortingScheduleFloatSmartPointer)
@


1.1.1.1
log
@Import scenario
@
text
@@


1.1.1.1.14.1
log
@Roguewave is gone
@
text
@a2 3
// RW2STL -- inserted:
#include <vector>
// End of RW2STL -- inserted includes.
d4 1
d27 2
a28 2
    bool operator==(const LgFrSortingScheduleFloatSmartPointerToConst&) const;
    bool operator!=(const LgFrSortingScheduleFloatSmartPointerToConst&) const;
d33 2
a34 2
    bool unique() const;
    bool null() const;
d64 2
a65 2
    bool operator==(const LgFrSortingScheduleFloatSmartPointer&) const;
    bool operator!=(const LgFrSortingScheduleFloatSmartPointer&) const;
d76 2
a77 2
    bool unique() const;
    bool null() const;
d81 2
a82 6
// RW2STL - declare(RWGVector, LgFrSortingScheduleFloatSmartPointer)

// RW2STL - declare(RWGOrderedVector, LgFrSortingScheduleFloatSmartPointer)


typedef std::vector<LgFrSortingScheduleFloatSmartPointer> // RW2STL - typedef RWGOrderedVector(LgFrSortingScheduleFloatSmartPointer)
d84 1
@

