head	1.2;
access;
symbols
	sce_5_01_20080919:1.2
	latest_sce_4_20_20060523:1.2.0.6
	sce_4_20_20060523:1.2
	latest_sce4_20_OSL:1.2.0.4
	sce_4_20_OSL:1.2
	sce_4_05_20040511:1.2
	sce_4_00_20040201:1.2
	nextGenBranch:1.2.0.2
	nextGenRoot:1.2
	sce_3_30_20030627:1.2
	EndRw-branch:1.1.1.1.0.14
	Root-of-EndRw:1.1.1.1
	EndWitRw-branch:1.1.1.1.0.12
	Root-of-EndWitRw:1.1.1.1
	RwToStl-branch:1.1.1.1.0.10
	Root-of-RwToStl:1.1.1.1
	latest_sce_3_10_20010924:1.1.1.1.0.8
	sce_3_10_20010924:1.1.1.1
	latest_sce_3_00_20010601:1.1.1.1.0.6
	sce_3_00_20010601:1.1.1.1
	latest_sce_2_31_20010308:1.1.1.1.0.4
	sce_2_31_20010308:1.1.1.1
	latest_sce_2_31_20001003:1.1.1.1.0.2
	sce_2_31_20001003:1.1.1.1
	start:1.1.1.1
	IBM:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2003.01.15.19.36.33;	author rwToStl;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.24.15.29.40;	author wit;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.24.15.29.40;	author wit;	state Exp;
branches
	1.1.1.1.14.1;
next	;

1.1.1.1.14.1
date	2003.01.08.17.42.28;	author rwToStl;	state Exp;
branches;
next	;


desc
@@


1.2
log
@commiting to main branch witutil, scenario, and sce code which removes RW
@
text
@#ifndef LgFrDataInterfaceImplementationPerfectWorldCMRP_h
#define LgFrDataInterfaceImplementationPerfectWorldCMRP_h
// RW2STL -- inserted:
// End of RW2STL -- inserted includes.

// This file contains the global functions for:
//    LgFrDataInterfaceImplementationPerfectWorldCMRP

// There is no need to have a special class for this case,
// We just need to instantiate a LgFrDataInterfaceImplementation 
// object and then register all LgFrDataInterfaceImplementationPerfectWorldCMRP
// global functions into that object when we want to use it for the test.

#include <wit/src/wit.h>

#include <scenario/src/idnumber.h>
#include <scenario/src/error.h>
#include <scenario/src/generVc.h>
#include <scenario/src/dif.h>

//---------------------------------------------------------------------------
//
// Forward references
//
//---------------------------------------------------------------------------
class LgFrDataInterfaceImplementation;
class LgFrDataInterfaceEssentials;           
class LgFrScenario;

//---------------------------------------------------------------------------
//
// All gobal functions declarations
//
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------
// To register all global functions 
//---------------------------------------------------------------------------
void
registerPWcmrpDifImpFunctions(LgFrDataInterfaceImplementation *dImpPW);

//---------------------------------------------------------------------------
// To create a LgFrDataInterfaceImplementation object for Perfect_World CMRP
//---------------------------------------------------------------------------
LgFrDataInterfaceImplementation * 
createPWcmrpDifImp();

//---------------------------------------------------------------------------
//
// Global functions to get "parts"
//
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------
// difPWcmrpGetRawPart global function (registering in the attribute table).
// Get raw parts for the Perfect_World CMRP and insert them into set_of_part
// Return: a LgFrPartVector object (vector of raw parts).
//---------------------------------------------------------------------------
void *
difPWcmrpGetRawParts(
    const LgFrDataInterfaceImplementation * dImp,
    const LgFrItemPtrVector* /* itemPtrOrdVecPtr, not used */,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);

//---------------------------------------------------------------------------
// difPWcmrpGetRawPart global function (registering in the attribute table).
// Get product parts for the Perfect_World CMRP and insert it into set_of_part
// Return: a LgFrPartVector object (vector of producible parts)
//---------------------------------------------------------------------------
void*
difPWcmrpGetProductParts(
    const LgFrDataInterfaceImplementation * dImp,
    const LgFrItemPtrVector* /* itemPtrOrdVecPtr, not used */,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);

//---------------------------------------------------------------------------
// difPWcmrpGetRawPart global function (registering in the attribute table).
// Get capacity parts for the Perfect_World CMRP and insert it into set_of_part
// Return: a LgFrPartVector object (vector of capacities).
//---------------------------------------------------------------------------
void*
difPWcmrpGetCapacityParts(
    const LgFrDataInterfaceImplementation * dImp,
    const LgFrItemPtrVector* /* itemPtrOrdVecPtr, not used */,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0); 

//---------------------------------------------------------------------------
//
// Global functions to get raw material attributes.
//
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------
// difPWcmrpGetRawUnitCost global function (registered in the attribute table)
// it returns a LgFrFloatVector object.
//---------------------------------------------------------------------------
void *
difPWcmrpGetRawUnitCost(
  const LgFrDataInterfaceImplementation * dImp,
  const LgFrItemPtrVector* itemPtrOrdVecPtr,
  LgFrError & status,
  const LgFrDataInterfaceEssentials * difEssenPtr = 0);

//---------------------------------------------------------------------------
// difPWcmrpGetRawProcCost global function (registered in the attribute table).
// It returns a LgFrFloatVector object.
//---------------------------------------------------------------------------
void *
difPWcmrpGetRawProcCost(
    const LgFrDataInterfaceImplementation * difImp,
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);

//---------------------------------------------------------------------------
// difPWcmrpGetRawConstrained global function (registered in the attribute table).
// It returns a LgFrIntVector objec
//---------------------------------------------------------------------------
void *
difPWcmrpGetRawConstrained(
    const LgFrDataInterfaceImplementation * difImp, 
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);               

//---------------------------------------------------------------------------
// difPWcmrpGetRawProcLeadTime global function (registered in the attribute table).
// It returns a LgFrTimeVecFloatVector object.
//---------------------------------------------------------------------------
void *
difPWcmrpGetRawProcLeadTime(
    const LgFrDataInterfaceImplementation * difImp, 
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);

//---------------------------------------------------------------------------
// difPWcmrpGetRawObj1ScrapCost global function (registered in the attribute table).
// Return: a LgFrTimeVecFloatVector object.
//---------------------------------------------------------------------------
void *
difPWcmrpGetRawObj1ScrapCost(
    const LgFrDataInterfaceImplementation * difImp, 
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);

//---------------------------------------------------------------------------
// difPWcmrpGetRawObj1StockCost global function (registered in the attribute table).
// Return: a LgFrTimeVecFloatVector object.
//---------------------------------------------------------------------------
void *
difPWcmrpGetRawObj1StockCost(
    const LgFrDataInterfaceImplementation * difImp, 
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);

//---------------------------------------------------------------------------
// difPWcmrpGetRawSupplyVol global function (registered in the attribute table).
// Return: a LgFrTimeVecFloatVector object.
//---------------------------------------------------------------------------
void *
difPWcmrpGetRawSupplyVol(
    const LgFrDataInterfaceImplementation * difImp, 
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);

//---------------------------------------------------------------------------
//
// Global functions to get product attributes.
//
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------
// difPWcmrpGetProductUnitCost global function (registered in the attribute table)
// it returns a LgFrFloatVector object.
//---------------------------------------------------------------------------
void *
difPWcmrpGetProductUnitCost(
  const LgFrDataInterfaceImplementation * dImp,
  const LgFrItemPtrVector* itemPtrOrdVecPtr,
  LgFrError & status,
  const LgFrDataInterfaceEssentials * difEssenPtr = 0);

//---------------------------------------------------------------------------
// difPWcmrpGetProductProcCost global function (registered in the attribute table).
// It returns a LgFrFloatVector object.
//---------------------------------------------------------------------------
void *
difPWcmrpGetProductProcCost(
    const LgFrDataInterfaceImplementation * difImp,
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);

//---------------------------------------------------------------------------
// difPWcmrpGetProductConstrained global function (registered in the attribute table).
// It returns a LgFrIntVector objec
//---------------------------------------------------------------------------
void *
difPWcmrpGetProductConstrained(
    const LgFrDataInterfaceImplementation * difImp, 
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);               

//---------------------------------------------------------------------------
// difPWcmrpGetProductProcLeadTime global function (registered in the attribute table).
// It returns a LgFrTimeVecFloatVector object.
//---------------------------------------------------------------------------
void *
difPWcmrpGetProductProcLeadTime(
    const LgFrDataInterfaceImplementation * difImp, 
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);

//---------------------------------------------------------------------------
// difPWcmrpGetProductYield global function (registered in the attribute table).
// Return: a LgFrFloatVector object
//---------------------------------------------------------------------------
void *
difPWcmrpGetProductYield(
    const LgFrDataInterfaceImplementation * /* dImp, not used */,
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0
    );

//---------------------------------------------------------------------------
// difPWcmrpGetProductCycleTime global function (registered in the attribute table).
// Return: a LgFrTimeVecFloatVector object.
//---------------------------------------------------------------------------
void *
difPWcmrpGetProductCycleTime(
    const LgFrDataInterfaceImplementation * /* difImp, not used */,
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0
    );

//---------------------------------------------------------------------------
// difPWcmrpGetObj1ProdCost global function (registered in the attribute table).
// Return: a LgFrTimeVecFloatVector object.
//---------------------------------------------------------------------------
void *
difPWcmrpGetObj1ProdCost(
    const LgFrDataInterfaceImplementation * /* difImp, not used */, 
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0
    );

//---------------------------------------------------------------------------
// difPWcmrpGetProductObj1ScrapCost global function (registered in the attribute table).
// Return: a LgFrTimeVecFloatVector object.
//---------------------------------------------------------------------------
void *
difPWcmrpGetProductObj1ScrapCost(
    const LgFrDataInterfaceImplementation * /* difImp, not used */, 
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0
    );

//---------------------------------------------------------------------------
// difPWcmrpGetProductObj1StockCost global function (registered in the attribute table).
// Return: a LgFrTimeVecFloatVector object.
//---------------------------------------------------------------------------
void *
difPWcmrpGetProductObj1StockCost(
    const LgFrDataInterfaceImplementation * /* difImp, not used */, 
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0
    );

//---------------------------------------------------------------------------
// difPWcmrpGetProductSupplyVol global function (registered in the attribute table).
// Return: a LgFrTimeVecFloatVector object.
//---------------------------------------------------------------------------
void *
difPWcmrpGetProductSupplyVol(
    const LgFrDataInterfaceImplementation * /* difImp,  not used */,
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);

//---------------------------------------------------------------------------
// difPWcmrpGetProductMinLotSize global function (registered in the attribute table).
// Return: a LgFrTimeVecFloatVector object.
//---------------------------------------------------------------------------
void*
difPWcmrpGetProductMinLotSize(
    const LgFrDataInterfaceImplementation * /* difImp, not used */,
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0
    );

//---------------------------------------------------------------------------
//  
//   Global functions to obtain capacity attributes
//
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------
// difPWcmrpGetCapacityUnitCost global function (registered in the attribute table)
// it returns a LgFrFloatVector object.
//---------------------------------------------------------------------------
void *
difPWcmrpGetCapacityUnitCost(
    const LgFrDataInterfaceImplementation * /* dImp, not used */,
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0
    );

//---------------------------------------------------------------------------
// difPWcmrpGetCapacityConstrained global function (registered in the attribute table).
// It returns a LgFrIntVector object
//---------------------------------------------------------------------------
void *
difPWcmrpGetCapacityConstrained(
    const LgFrDataInterfaceImplementation * /* difImp, not used */,
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0
    );

//---------------------------------------------------------------------------
// difPWcmrpGetCapacityObj1ScrapCost global function (registered in the attribute table).
// Return: a LgFrTimeVecFloatVector object.
//---------------------------------------------------------------------------
void *
difPWcmrpGetCapacityObj1ScrapCost(
    const LgFrDataInterfaceImplementation * /* difImp, not used */, 
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0
    );

//---------------------------------------------------------------------------
// difPWcmrpGetCapacitySupplyVol global function (registered in the attribute table).
// Return: a LgFrTimeVecFloatVector object.
//---------------------------------------------------------------------------
void *
difPWcmrpGetCapacitySupplyVol(
    const LgFrDataInterfaceImplementation * /* difImp, not used */,
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0
    );

//---------------------------------------------------------------------------
//  
//   Global functions to obtain demands
//
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------
// difPWcmrpGetCommittedDemands global function (registering in the attribute table).
// Get committed demands for the Perfect_World CMRP and insert them into set_of_demand
// Return: a LgFrDemandVector object (vector of committed demands).
//---------------------------------------------------------------------------
void *
difPWcmrpGetCommittedDemands(
  const LgFrDataInterfaceImplementation * dImp,
  const LgFrItemPtrVector* itemPtrOrdVecPtr,
  LgFrError & status,
  const LgFrDataInterfaceEssentials * difEssenPtr = 0); 

//---------------------------------------------------------------------------
// difPWcmrpGetNewOpportunityDemands global function (registering in the attribute table).
// Get new opportunity demands for the Perfect_World CMRP and insert them into set_of_demand
// Return: a LgFrDemandVector object (vector of new opportunity demands).
//---------------------------------------------------------------------------
void *
difPWcmrpGetNewOpportunityDemands(
    const LgFrDataInterfaceImplementation * dImp,
    const LgFrItemPtrVector* /* itemPtrOrdVecPtr, not used */,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0); 

//---------------------------------------------------------------------------
// difPWcmrpGetFirmForecastDemands global function (registering in the attribute table).
// Get firm forcast demands for the Perfect_World CMRP and insert them into set_of_demand
// Return: a LgFrDemandVector object (vector of firm forcast demands).
//---------------------------------------------------------------------------
void *
difPWcmrpGetFirmForecastDemands(
    const LgFrDataInterfaceImplementation * dImp,
    const LgFrItemPtrVector* /* itemPtrOrdVecPtr, not used */,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);

//---------------------------------------------------------------------------
// difPWcmrpGetRiskForecastDemands global function (registering in the attribute table).
// Get risk forcast demands for the Perfect_World CMRP and insert them into set_of_demand
// Return: a LgFrDemandVector object (vector of risk forcast demands).
//---------------------------------------------------------------------------
void *
difPWcmrpGetRiskForecastDemands(
    const LgFrDataInterfaceImplementation * dImp,
    const LgFrItemPtrVector* /* itemPtrOrdVecPtr, not used */,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);

//-------------------------------------------------------------
//
// Global functions to obtain demands attributes
//
//-------------------------------------------------------------

//---------------------------------------------------------------------------
// difPWcmrpGetDemandGrossRev global function (registering in the attribute table).
// Compute total demand gross revenue
// Return: a LgFrFloatVector object (vector of demand gross revenues).
//---------------------------------------------------------------------------
void *
difPWcmrpGetDemandGrossRev(
    const LgFrDataInterfaceImplementation * difImp, 
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);

//---------------------------------------------------------------------------
// difPWcmrpGetDemandVol global function (registered in the attribute table).
// Return: a LgFrTimeVecFloatVector object.
//---------------------------------------------------------------------------
void *
difPWcmrpGetDemandVol(
    const LgFrDataInterfaceImplementation * difImp, 
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);

//---------------------------------------------------------------------------
// difPWcmrpGetDemanObj1CumShipReward global function (registered in the attribute table).
// Return: a LgFrTimeVecFloatVector object.
//---------------------------------------------------------------------------
void *
difPWcmrpGetDemandObj1CumShipReward(
    const LgFrDataInterfaceImplementation * difImp, 
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);

//---------------------------------------------------------------------------
// difPWcmrpGetDemanObj1ShipReward global function (registered in the attribute table).
// Return: a LgFrTimeVecFloatVector object.
//---------------------------------------------------------------------------
void *
difPWcmrpGetDemandObj1ShipReward(
    const LgFrDataInterfaceImplementation * difImp, 
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);

//---------------------------------------------------------
// Define BOM
//---------------------------------------------------------
void*
difPWcmrpDefineBom(
    const LgFrDataInterfaceImplementation * difImp, 
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);

//---------------------------------------------------------
// Context test
//---------------------------------------------------------
void
difPWcmrpContextTest(
    LgFrDataInterface    	& ts1dif,	// testScenario1's
    LgFrDataInterface    	& ts1dupDif,	// testScenario1dup's
    const LgFrScenario          * scenPtr       // testScenario1's
    ); 


#endif

@


1.1
log
@Initial revision
@
text
@d3 2
d57 1
a57 1
// Return: a LgFrOrderedVectorPart object (vector of raw parts).
d62 1
a62 1
    const LgFrOrderedVectorItemPtr* /* itemPtrOrdVecPtr, not used */,
d64 1
a64 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d69 1
a69 1
// Return: a LgFrOrderedVectorPart object (vector of producible parts)
d74 1
a74 1
    const LgFrOrderedVectorItemPtr* /* itemPtrOrdVecPtr, not used */,
d76 1
a76 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d81 1
a81 1
// Return: a LgFrOrderedVectorPart object (vector of capacities).
d86 1
a86 1
    const LgFrOrderedVectorItemPtr* /* itemPtrOrdVecPtr, not used */,
d88 1
a88 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL); 
d98 1
a98 1
// it returns a LgFrVectorFloat object.
d103 1
a103 1
  const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d105 1
a105 1
  const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d109 1
a109 1
// It returns a LgFrVectorFloat object.
d114 1
a114 1
    const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d116 1
a116 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d120 1
a120 1
// It returns a LgFrVectorInt objec
d125 1
a125 1
    const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d127 1
a127 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL);               
d131 1
a131 1
// It returns a LgFrVectorTimeVecFloat object.
d136 1
a136 1
    const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d138 1
a138 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d142 1
a142 1
// Return: a LgFrVectorTimeVecFloat object.
d147 1
a147 1
    const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d149 1
a149 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d153 1
a153 1
// Return: a LgFrVectorTimeVecFloat object.
d158 1
a158 1
    const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d160 1
a160 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d164 1
a164 1
// Return: a LgFrVectorTimeVecFloat object.
d169 1
a169 1
    const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d171 1
a171 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d181 1
a181 1
// it returns a LgFrVectorFloat object.
d186 1
a186 1
  const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d188 1
a188 1
  const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d192 1
a192 1
// It returns a LgFrVectorFloat object.
d197 1
a197 1
    const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d199 1
a199 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d203 1
a203 1
// It returns a LgFrVectorInt objec
d208 1
a208 1
    const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d210 1
a210 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL);               
d214 1
a214 1
// It returns a LgFrVectorTimeVecFloat object.
d219 1
a219 1
    const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d221 1
a221 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d225 1
a225 1
// Return: a LgFrVectorFloat object
d230 1
a230 1
    const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d232 1
a232 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL
d237 1
a237 1
// Return: a LgFrVectorTimeVecFloat object.
d242 1
a242 1
    const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d244 1
a244 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL
d249 1
a249 1
// Return: a LgFrVectorTimeVecFloat object.
d254 1
a254 1
    const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d256 1
a256 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL
d261 1
a261 1
// Return: a LgFrVectorTimeVecFloat object.
d266 1
a266 1
    const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d268 1
a268 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL
d273 1
a273 1
// Return: a LgFrVectorTimeVecFloat object.
d278 1
a278 1
    const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d280 1
a280 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL
d285 1
a285 1
// Return: a LgFrVectorTimeVecFloat object.
d290 1
a290 1
    const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d292 1
a292 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d296 1
a296 1
// Return: a LgFrVectorTimeVecFloat object.
d301 1
a301 1
    const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d303 1
a303 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL
d314 1
a314 1
// it returns a LgFrVectorFloat object.
d319 1
a319 1
    const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d321 1
a321 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL
d326 1
a326 1
// It returns a LgFrVectorInt object
d331 1
a331 1
    const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d333 1
a333 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL
d338 1
a338 1
// Return: a LgFrVectorTimeVecFloat object.
d343 1
a343 1
    const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d345 1
a345 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL
d350 1
a350 1
// Return: a LgFrVectorTimeVecFloat object.
d355 1
a355 1
    const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d357 1
a357 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL
d369 1
a369 1
// Return: a LgFrOrderedVectorDemand object (vector of committed demands).
d374 1
a374 1
  const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d376 1
a376 1
  const LgFrDataInterfaceEssentials * difEssenPtr = NULL); 
d381 1
a381 1
// Return: a LgFrOrderedVectorDemand object (vector of new opportunity demands).
d386 1
a386 1
    const LgFrOrderedVectorItemPtr* /* itemPtrOrdVecPtr, not used */,
d388 1
a388 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL); 
d393 1
a393 1
// Return: a LgFrOrderedVectorDemand object (vector of firm forcast demands).
d398 1
a398 1
    const LgFrOrderedVectorItemPtr* /* itemPtrOrdVecPtr, not used */,
d400 1
a400 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d405 1
a405 1
// Return: a LgFrOrderedVectorDemand object (vector of risk forcast demands).
d410 1
a410 1
    const LgFrOrderedVectorItemPtr* /* itemPtrOrdVecPtr, not used */,
d412 1
a412 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d423 1
a423 1
// Return: a LgFrVectorFloat object (vector of demand gross revenues).
d428 1
a428 1
    const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d430 1
a430 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d434 1
a434 1
// Return: a LgFrVectorTimeVecFloat object.
d439 1
a439 1
    const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d441 1
a441 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d445 1
a445 1
// Return: a LgFrVectorTimeVecFloat object.
d450 1
a450 1
    const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d452 1
a452 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d456 1
a456 1
// Return: a LgFrVectorTimeVecFloat object.
d461 1
a461 1
    const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d463 1
a463 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d471 1
a471 1
    const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d473 1
a473 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
@


1.1.1.1
log
@Import scenario
@
text
@@


1.1.1.1.14.1
log
@Roguewave is gone
@
text
@a2 2
// RW2STL -- inserted:
// End of RW2STL -- inserted includes.
d55 1
a55 1
// Return: a LgFrPartVector object (vector of raw parts).
d60 1
a60 1
    const LgFrItemPtrVector* /* itemPtrOrdVecPtr, not used */,
d62 1
a62 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d67 1
a67 1
// Return: a LgFrPartVector object (vector of producible parts)
d72 1
a72 1
    const LgFrItemPtrVector* /* itemPtrOrdVecPtr, not used */,
d74 1
a74 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d79 1
a79 1
// Return: a LgFrPartVector object (vector of capacities).
d84 1
a84 1
    const LgFrItemPtrVector* /* itemPtrOrdVecPtr, not used */,
d86 1
a86 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0); 
d96 1
a96 1
// it returns a LgFrFloatVector object.
d101 1
a101 1
  const LgFrItemPtrVector* itemPtrOrdVecPtr,
d103 1
a103 1
  const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d107 1
a107 1
// It returns a LgFrFloatVector object.
d112 1
a112 1
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
d114 1
a114 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d118 1
a118 1
// It returns a LgFrIntVector objec
d123 1
a123 1
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
d125 1
a125 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);               
d129 1
a129 1
// It returns a LgFrTimeVecFloatVector object.
d134 1
a134 1
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
d136 1
a136 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d140 1
a140 1
// Return: a LgFrTimeVecFloatVector object.
d145 1
a145 1
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
d147 1
a147 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d151 1
a151 1
// Return: a LgFrTimeVecFloatVector object.
d156 1
a156 1
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
d158 1
a158 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d162 1
a162 1
// Return: a LgFrTimeVecFloatVector object.
d167 1
a167 1
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
d169 1
a169 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d179 1
a179 1
// it returns a LgFrFloatVector object.
d184 1
a184 1
  const LgFrItemPtrVector* itemPtrOrdVecPtr,
d186 1
a186 1
  const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d190 1
a190 1
// It returns a LgFrFloatVector object.
d195 1
a195 1
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
d197 1
a197 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d201 1
a201 1
// It returns a LgFrIntVector objec
d206 1
a206 1
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
d208 1
a208 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);               
d212 1
a212 1
// It returns a LgFrTimeVecFloatVector object.
d217 1
a217 1
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
d219 1
a219 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d223 1
a223 1
// Return: a LgFrFloatVector object
d228 1
a228 1
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
d230 1
a230 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0
d235 1
a235 1
// Return: a LgFrTimeVecFloatVector object.
d240 1
a240 1
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
d242 1
a242 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0
d247 1
a247 1
// Return: a LgFrTimeVecFloatVector object.
d252 1
a252 1
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
d254 1
a254 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0
d259 1
a259 1
// Return: a LgFrTimeVecFloatVector object.
d264 1
a264 1
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
d266 1
a266 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0
d271 1
a271 1
// Return: a LgFrTimeVecFloatVector object.
d276 1
a276 1
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
d278 1
a278 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0
d283 1
a283 1
// Return: a LgFrTimeVecFloatVector object.
d288 1
a288 1
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
d290 1
a290 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d294 1
a294 1
// Return: a LgFrTimeVecFloatVector object.
d299 1
a299 1
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
d301 1
a301 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0
d312 1
a312 1
// it returns a LgFrFloatVector object.
d317 1
a317 1
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
d319 1
a319 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0
d324 1
a324 1
// It returns a LgFrIntVector object
d329 1
a329 1
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
d331 1
a331 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0
d336 1
a336 1
// Return: a LgFrTimeVecFloatVector object.
d341 1
a341 1
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
d343 1
a343 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0
d348 1
a348 1
// Return: a LgFrTimeVecFloatVector object.
d353 1
a353 1
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
d355 1
a355 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0
d367 1
a367 1
// Return: a LgFrDemandVector object (vector of committed demands).
d372 1
a372 1
  const LgFrItemPtrVector* itemPtrOrdVecPtr,
d374 1
a374 1
  const LgFrDataInterfaceEssentials * difEssenPtr = 0); 
d379 1
a379 1
// Return: a LgFrDemandVector object (vector of new opportunity demands).
d384 1
a384 1
    const LgFrItemPtrVector* /* itemPtrOrdVecPtr, not used */,
d386 1
a386 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0); 
d391 1
a391 1
// Return: a LgFrDemandVector object (vector of firm forcast demands).
d396 1
a396 1
    const LgFrItemPtrVector* /* itemPtrOrdVecPtr, not used */,
d398 1
a398 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d403 1
a403 1
// Return: a LgFrDemandVector object (vector of risk forcast demands).
d408 1
a408 1
    const LgFrItemPtrVector* /* itemPtrOrdVecPtr, not used */,
d410 1
a410 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d421 1
a421 1
// Return: a LgFrFloatVector object (vector of demand gross revenues).
d426 1
a426 1
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
d428 1
a428 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d432 1
a432 1
// Return: a LgFrTimeVecFloatVector object.
d437 1
a437 1
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
d439 1
a439 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d443 1
a443 1
// Return: a LgFrTimeVecFloatVector object.
d448 1
a448 1
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
d450 1
a450 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d454 1
a454 1
// Return: a LgFrTimeVecFloatVector object.
d459 1
a459 1
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
d461 1
a461 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d469 1
a469 1
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
d471 1
a471 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);
@

