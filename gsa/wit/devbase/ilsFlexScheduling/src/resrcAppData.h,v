head	1.2;
access;
symbols;
locks; strict;
comment	@ * @;


1.2
date	2002.09.17.13.25.38;	author fasano;	state Exp;
branches;
next	1.1;

1.1
date	2002.09.09.18.46.15;	author fasano;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Added so solve does optImplode multiple times.
The demandVols are set based on probability of project occuring.
@
text
@#ifndef ILSresrcAppData_h
#define ILSprojAData_h

#include "appData.h"

class ILSresrcAppData : public ILSappData {
public:
  
  void setCost(float cost);
  float getCost() const;

  void pushConsVol(std::vector<float> cv );
  std::vector< std::vector<float> > getConsVol() const;
    
  // default constructor
  ILSresrcAppData();
  
  // destructor
  virtual ~ILSresrcAppData();
  
  // copy constructor
  ILSresrcAppData( const ILSresrcAppData& source );
  
  // assignment operator
  ILSresrcAppData&
    operator=(const ILSresrcAppData& rhs);

  virtual ILSappData * clone() const;

  // Self-test
  static void test();

private:
  
  float cost_; 
  //typedef std::vector<float> fltvec;
  std::vector< std::vector<float> > consVols_;
  
};



#endif
@


1.1
log
@Adding resrcAppData
@
text
@d11 3
d35 3
a37 1
  float cost_;
@

