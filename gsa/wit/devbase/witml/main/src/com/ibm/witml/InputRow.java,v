head	1.6;
access;
symbols
	dummy-release:1.1.1.1 dummy-vendor:1.1.1;
locks; strict;
comment	@# @;


1.6
date	2011.05.12.17.58.05;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2011.05.10.23.44.10;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2011.05.09.20.14.38;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2011.05.06.23.47.34;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2011.05.06.17.55.07;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2011.05.05.19.59.24;	author rjw;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.05.05.19.59.24;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.6
log
@theElement.getElementCategory ()
@
text
@
//==============================================================================
// WIT-ML Source File InputRow.java.
//==============================================================================

package       com.ibm.witml;

import static com.ibm.witml.Utility.*;

import java.util.ArrayList;

/*******************************************************************************
 * An InputRow represents a row in an InputTable.
 * Immutable class
 * @@see InputTable
 *******************************************************************************
 */
public final class InputRow
{
//==============================================================================
// Public
//==============================================================================

/*******************************************************************************
 * Returns a table cell stored by this InputRow indicated by a column heading.
 * 
 * @@param theHeading The column heading for the cell to be returned
 * @@return           The table cell
 * 
 * @@throws IllegalArgumentException If theHeading is not a heading in the
 *                                  InputTable for this InputRow
 ******************************************************************************
 */
   public String getCell (String theHeading)
      {
      int colIdx;

      colIdx = myInputTable.getColumnIndex (theHeading);

      if (colIdx == 0)
         reportBadHeading (theHeading);

      return myCells.get (colIdx - 1);
      }

/*******************************************************************************
 * Accessor.
 * 
 * @@return The row index for the row represented by this InputRow
 *******************************************************************************
 */ 
   public int getIndex ()
      {
      return myIndex;
      }

//==============================================================================
// Package-Internal
//==============================================================================

/*******************************************************************************
 * Constructor.
 *******************************************************************************
 */
   InputRow (
         InputTable         theInputTable,
         int                theIdx,
         ArrayList <String> theCells)
      {
      myInputTable = theInputTable;
      myIndex      = theIdx;

      myCells      = new ArrayList <String> (theCells);
      }

//==============================================================================
// Private
//==============================================================================

/*******************************************************************************
 * Throws an exception indicating that the getCell method was invoked with a
 * heading that is not in myInputTable.
 *******************************************************************************
 */
   private void reportBadHeading (String theHeading)
      {
      throw
         new IllegalArgumentException (
            "\n\n"
          + "   The getCell method of class InputRow was invoked with a\n"
          + "   heading that is not in the InputTable.\n"
          + "\n"
          + "      Heading Argument: \"" + theHeading + "\"\n");
      }

/*******************************************************************************
 * The InputTable to which this InputRow belongs
 *******************************************************************************
 */
   private final InputTable myInputTable;

/*******************************************************************************
 * The row index of the table row represented by this InputRow.
 * {@@code myIndex == 1} for the first row.
 *******************************************************************************
 */
   private final int myIndex;

/*******************************************************************************
 * {@@code myCells.get (colIdx-1)} is the table cell for the row represented by
 * this InputRow and column #{@@code colIdx}.
 *******************************************************************************
 */
   private final ArrayList <String> myCells;

//==============================================================================
}
@


1.5
log
@Moved a factory method.
@
text
@d47 1
a47 1
 * Getter.
@


1.4
log
@Class Scheme
@
text
@d21 1
a21 1
// Public Methods
d58 1
a58 1
// Package-Internal Constructors
d77 1
a77 1
// Private Methods
a95 4
//==============================================================================
// Private Fields
//==============================================================================

@


1.3
log
@Changed Exceptions thrown
@
text
@d89 1
a89 2
            "\n"
          + "\n"
@


1.2
log
@Added class ItemCategory.
@
text
@d27 5
a31 4
 * @@param theHeading        The column heading for the cell to be returned
 * @@return                  The table cell
 * @@throws RuntimeException If theHeading is not a heading in the InputTable for
 *                          this InputRow
d88 1
a88 1
         new RuntimeException (
@


1.1
log
@Initial revision
@
text
@d57 1
a57 1
// Package-Internal Methods & Constructors
@


1.1.1.1
log
@Creating a repository for WIT-ML.

@
text
@@
