head	1.6;
access;
symbols
	dummy-release:1.1.1.1 dummy-vendor:1.1.1;
locks; strict;
comment	@# @;


1.6
date	2011.05.10.23.44.14;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2011.05.10.22.40.59;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2011.05.09.20.14.39;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2011.05.06.23.47.36;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2011.05.06.17.55.09;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2011.05.05.19.59.24;	author rjw;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.05.05.19.59.24;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Moved a factory method.
@
text
@
//==============================================================================
// WIT-ML Source File Utility.java.
//==============================================================================

package com.ibm.witml;

/*******************************************************************************
 * Contains various static utility methods.
 * Noninstantiatable class.
 *******************************************************************************
 */
final class Utility
{
//==============================================================================
// Package-Internal
//==============================================================================

/*******************************************************************************
 * Verifies that an argument to a method is non-null.
 * 
 * @@param  theArg               The argument being checked.
 * @@param  argName              The name of the argument being checked.
 * @@throws NullPointerException If theArg == null
 *******************************************************************************
 */
   static void prohibitNull (Object theArg, String argName)
      {
      if (theArg == null)
         throw
            new NullPointerException (
               "\n\n"
             + "   The following argument was a prohibited null pointer:\n"
             + "\n"
             + "      " + argName  + "\n");
      }

//==============================================================================
// Private
//==============================================================================

/*******************************************************************************
 * Private Constructor (Not to be called).
 *******************************************************************************
 */
   private Utility ()
      {
      throw new AssertionError ();
      }

//==============================================================================
}
@


1.5
log
@theModeler.newPrimitive (...)
@
text
@d16 1
a16 1
// Package-Internal Methods
d39 1
a39 1
// Private Constructors
@


1.4
log
@Class Scheme
@
text
@d27 1
a27 1
   static void mustBeNonNull (Object theArg, String argName)
@


1.3
log
@Changed Exceptions thrown
@
text
@d32 1
a32 1
               "\n"
@


1.2
log
@Added class ItemCategory.
@
text
@d22 3
a24 3
 * @@param theArg   The argument being checked.
 * @@param argName  The name of the argument being checked.
 * @@param methName The name of the method.
d27 1
a27 1
   static void mustBeNonNull (Object theArg, String argName, String methName)
d31 3
a33 3
            new RuntimeException (
               "   A method was called with a null argument "
             +    "where this is not allowed.\n"
d35 1
a35 2
             + "      Method:   " + methName + "\n"
             + "      Argument: " + argName  + "\n");
@


1.1
log
@Initial revision
@
text
@d40 1
a40 1
// Private Methods
@


1.1.1.1
log
@Creating a repository for WIT-ML.

@
text
@@
