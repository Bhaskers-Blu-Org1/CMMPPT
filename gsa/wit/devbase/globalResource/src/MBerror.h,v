head	1.1;
access;
symbols
	beforeTiersAdded:1.1;
locks; strict;
comment	@ * @;


1.1
date	2002.03.28.15.42.28;	author fasano;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Changes to add osl mip solver structure to code
@
text
@// Copyright (C) 2000, International Business Machines
// Corporation and others.  All Rights Reserved.
#ifndef MBerror_H
#define MBerror_H

#include <string>

//-------------------------------------------------------------------
//
// Error class used to throw exceptions
//
// Errors contain:
//
//-------------------------------------------------------------------

/** Error Class thrown by an exception

This class is used when exceptions are thrown.
It contains:
  <ul>
  <li>message text
  <li>name of method throwing exception
  <li>name of class throwing exception
  </ul>
*/
class MBerror  {

public:
    
  //-------------------------------------------------------------------
  // Get methods
  //-------------------------------------------------------------------   
  /**@@name Get error attributes */
  //@@{
    /// get message text
    const std::string & message() const;
    /// get name of method instantiating error
    const std::string & methodName() const;
    /// get name of class instantiating error
    const std::string & className() const;
  //@@}
  
    
  /**@@name Constructors and destructors */
  //@@{
    /// Default Constructor 
    MBerror ();  
  
    /// Alternate Constructor 
    MBerror ( 
      std::string message, 
      std::string methodName, 
      std::string className);  
  
    /// Other alternate Constructor 
    MBerror ( 
      const char * message, 
      const char * methodName, 
      const char * className);  
  
    /// Copy constructor 
    MBerror (const MBerror &);

    /// Assignment operator 
    MBerror & operator=(const MBerror& rhs);

    /// Destructor 
    virtual ~MBerror ();
  //@@}
    
private:
    
  /**@@name Private member data */
  //@@{
    /// message test
    std::string message_;
    /// method name
    std::string method_;
    /// class name
    std::string class_;
  //@@}
};

#endif
@
