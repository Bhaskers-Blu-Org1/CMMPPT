head	1.1;
branch	1.1.1;
access;
symbols
	beforeTiersAdded:1.1.1.1
	start:1.1.1.1
	IBM:1.1.1;
locks; strict;
comment	@// @;


1.1
date	2002.03.04.13.48.12;	author fasano;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.03.04.13.48.12;	author fasano;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@#if defined(_MSC_VER)
  #pragma warning(disable:4786)
  #pragma warning(disable:4503)
#endif

#include <assert.h>
#include <stdlib.h>


#include "OsiFloatEqual.h"
#include "resourcesFile.h"


// Use macro to define body of get methods
getFieldFileWithIterator(DCresourcesFile, resourceName);
getFieldFileWithIterator(DCresourcesFile, loc);
getFieldFileWithIterator(DCresourcesFile, band);
getFloatFieldFileWithIterator(DCresourcesFile, supply);
getFloatFieldFileWithIterator(DCresourcesFile, rate);



//------------------------------------------------------------------------------
std::string
  DCresourcesFile::key( unsigned int recNum )
const
{
  std::string retVal = resourceName(recNum)+loc(recNum)+band(recNum);
  return retVal;
}



//------------------------------------------------------------------------------
// preferred constructor
//------------------------------------------------------------------------------
DCresourcesFile::DCresourcesFile (
  std::string filename
    ) 
    : SCOcsvFormatFile(filename)
{  
  insertField("resourceName");  
  insertField("loc"); 
  insertField("band"); 
  insertField("supply");
  insertField("rate");
  strip(true);
  fieldSeperator(','); 
}
 
  
//------------------------------------------------------------------------------
// destructor
//------------------------------------------------------------------------------
DCresourcesFile::~DCresourcesFile()
{
 // Nothing to do here
}

//------------------------------------------------------------------------------
// Iterator Methods
//------------------------------------------------------------------------------

DCresourcesFileIterator::DCresourcesFileIterator (
  const DCresourcesFile  & file )
  :
  SCOfileIterator(file)
{  
  // Nothing to do here
}
  
DCresourcesFileIterator::~DCresourcesFileIterator()
{
  // nothing to do here
}

#ifdef NDEBUG
#undef NDEBUG
#endif

//------------------------------------------------------------------------------
// Test function
//------------------------------------------------------------------------------
void
DCresourcesFile::test()
{

  
  OsiRelFltEq eq(1.e-06);

  // test constructor and numRecords methods
  DCresourcesFile file("../data/01Mar23/loosep");
#if 0
  int nr = file.numRecords();
  assert( nr == 223 );

  assert( file.partName(2)== "002K3418" );
  float e=file.quantity1AsFloat("002K3418");
  assert( eq(e,1.));
  assert( eq(file.quantity1AsFloat(2),1.) );
  assert( eq(file.quantity1AsFloat("004H8347"),596.) );
  assert( eq(file.quantity4AsFloat("004H8347"),119.) );
  assert( eq(file.quantityAfsAsFloat("004H8347"),238.) );
#endif

} 
@


1.1.1.1
log
@globalResource import
@
text
@@
