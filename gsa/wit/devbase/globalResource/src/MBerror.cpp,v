head	1.1;
access;
symbols
	beforeTiersAdded:1.1;
locks; strict;
comment	@// @;


1.1
date	2002.03.28.15.42.06;	author fasano;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Changes to add osl mip solver structure to code
@
text
@// Copyright (C) 2000, International Business Machines
// Corporation and others.  All Rights Reserved.

#include "MBerror.h"

//-------------------------------------------------------------------
// Get methods
//------------------------------------------------------------------- 
const std::string & MBerror::message()    const { return message_; }
const std::string & MBerror::methodName() const { return method_;  }
const std::string & MBerror::className()  const { return class_;   }


//-------------------------------------------------------------------
// Default Constructor 
//-------------------------------------------------------------------
MBerror::MBerror ()
:
message_(),
method_(),
class_()
{
  // nothing to do here
}

//-------------------------------------------------------------------
// Alternate Constructor 
//-------------------------------------------------------------------
MBerror::MBerror(std::string message,
		   std::string methodName,
		   std::string className)
:
message_(message),
method_(methodName),
class_(className)
{
  // nothing to do here
}

//-------------------------------------------------------------------
// Another alternate Constructor 
//-------------------------------------------------------------------
MBerror::MBerror (const char * message, 
		   const char * methodName, 
		   const char * className)
:
message_(message),
method_(methodName),
class_(className)
{
  // nothing to do here
}

//-------------------------------------------------------------------
// Copy constructor 
//-------------------------------------------------------------------
MBerror::MBerror (
                  const MBerror & source)
:
message_(source.message_),
method_(source.method_),
class_(source.class_)
{  
  // nothing to do here
}


//-------------------------------------------------------------------
// Destructor 
//-------------------------------------------------------------------
MBerror::~MBerror ()
{
  // nothing to do here
}

//----------------------------------------------------------------
// Assignment operator 
//-------------------------------------------------------------------
MBerror &
MBerror::operator=(const MBerror& rhs)
{
  if (this != &rhs) {
    message_=rhs.message_;
    method_=rhs.method_;
    class_=rhs.class_;
  }
  return *this;
}
@
