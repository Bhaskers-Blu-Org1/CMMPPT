head	1.2;
access;
symbols
	beforeTiersAdded:1.2;
locks; strict;
comment	@ * @;


1.2
date	2002.04.05.01.02.12;	author fasano;	state Exp;
branches;
next	1.1;

1.1
date	2002.03.28.15.42.28;	author fasano;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Added methods to support resourceConsumption columns
@
text
@#ifndef GRCOLUMN_INDEX_MANAGER
#define GRCOLUMN_INDEX_MANAGER
//------------------------------------------------------------------
//
// Manage the Column Index Number.
// For each column variable return its column number
//
//------------------------------------------------------------------

#include <map>
#include <string>
#include <vector>
#include <list>

//#include "MBerror.h"
#include "MBhashTable.h"

class GRcolumnIndexManager {
public:

  // Get number of defined columns
  int getNumCols() const;
  int getNumPortfolioLocationCols() const;

  // Get vector of column names
  const std::vector<std::string> & getColNames() const;
  
  // return col number given col name
  int getColNumber( const std::string & colName ) const throw(MBerror);

  //-------------------------------------------------------
  // PortfolioLocation Column methods
  //-------------------------------------------------------
  // Return column number for specified portfolio location
  int portfolioLocationColNum( const std::string & port, const std::string & loc ) const throw(MBerror);
  // define portfolio location column
  int definePortfolioLocationCol( const std::string & port, const std::string & loc );

  //-------------------------------------------------------
  // PortfolioLocation Resource methods
  //-------------------------------------------------------
  int resourceColNum( 
    const std::string & skill, 
    const std::string & loc, 
    const std::string & band, 
    const std::string & role,
    int period) const throw(MBerror);
  int defineResourceCol( 
    const std::string & skill, 
    const std::string & loc, 
    const std::string & band, 
    const std::string & role,
    int period);

  // Default Constructor 
  GRcolumnIndexManager ();
  
  // Copy constructor 
  GRcolumnIndexManager ( const GRcolumnIndexManager &);
   
  // Assignment operator 
  GRcolumnIndexManager & operator=( const GRcolumnIndexManager& rhs);

  // Destructor 
  virtual ~GRcolumnIndexManager ();

  static int unitTest();
  
private:

#if 0
  int facilityPartCol( 
    const char * colNamePrefix,
    int facility, 
    const std::string & part ) const throw(MBerror);
  
  int defineFacilityPartCol(    
    std::list<std::string> & colNameListAll,
    MBhashTableStringToInt &colNameToIntHashTableAll,
    const char * colNamePrefix,
    int facility, 
    const std::string & part );
  
  std::string lambdaColHashValue( 
    int member, 
    int facility, 
    const std::string & part, 
     const std::string & serviceGroup ) const;

  std::string facilityPartColHashValue(
    const char * colNamePrefix,
    int facility, 
    const std::string & part ) const;
#endif
  
  static std::string resourceHashValue( 
    const std::string & skill, 
    const std::string & loc, 
    const std::string & band,
    const std::string & role,
    int period);
  
  std::vector<std::string> colNames_;

  // Hash tables need address of column names to be constant.
  // Create data structure that does not move column names.
  std::list<std::string> immobileColNames_;
  MBhashTableStringToInt colNameToColNum_;

  MBhashTableStringToInt portLocHashTab_;

};

#endif
@


1.1
log
@Changes to add osl mip solver structure to code
@
text
@d39 16
d95 7
@

