head	1.1;
branch	1.1.1;
access;
symbols
	beforeTiersAdded:1.1.1.1
	start:1.1.1.1
	IBM:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2002.03.04.13.48.12;	author fasano;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.03.04.13.48.12;	author fasano;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@#ifndef GR_GLOBALATTRFILE_h
#define GR_GLOBALATTRFILE_h

#include "scoFile.h"


class GRglobalAttrFile : public SCOcsvFormatFile {
public:

  // fields
  //std::string locName( unsigned int recNum ) const;
  //std::string locName( std::string key ) const;
  
  // preferred constructor
  GRglobalAttrFile(std::string filename);
  
  // destructor
  ~GRglobalAttrFile();
  
  // Self-test
  static void test();
  
protected:
  
  // compute key for storing record in dictionary
  virtual
    std::string
      key( unsigned int ) const;

private:
  
  
  // default constructor -- don't use!
  GRglobalAttrFile();
  
  // copy constructor  -- don't use!
  GRglobalAttrFile( const GRglobalAttrFile& source );
  
  // assignment operator -- don't use!
  GRglobalAttrFile&
  operator=(const GRglobalAttrFile& rhs);

  
};



class GRglobalAttrFileIterator : public SCOfileIterator {
public:
  
  // fields
  //std::string locName() const;

  // preferred constructor
  GRglobalAttrFileIterator(const GRglobalAttrFile &);
  
  // destructor
  ~GRglobalAttrFileIterator();
  
  // Self-test
  static void test();

private:
  
  
  // default constructor -- don't use!
  GRglobalAttrFileIterator();
  
  // copy constructor  -- don't use!
  GRglobalAttrFileIterator( const GRglobalAttrFileIterator& source );
  
  // assignment operator -- don't use!
  GRglobalAttrFileIterator&
  operator=(const GRglobalAttrFileIterator& rhs);

  
};
#endif@


1.1.1.1
log
@globalResource import
@
text
@@
