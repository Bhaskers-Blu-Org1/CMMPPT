head	1.2;
access;
symbols
	beforeTiersAdded:1.1;
locks; strict;
comment	@ * @;


1.2
date	2002.09.05.13.19.22;	author fasano;	state Exp;
branches;
next	1.1;

1.1
date	2002.03.28.15.42.28;	author fasano;	state Exp;
branches;
next	;


desc
@@


1.2
log
@changes to accomodate tiers
@
text
@#ifndef GRmipProblem_h
#define GRmipProblem_h
#if 0
//#include <string>
//#include <map>
//#include "appData.h"


class GRproblem;
class OsiSolverInterface;
struct EKKModel;

class GRmipProblem  {
public:

  // set pointer to GRproblem which will be solved as a mip
  void grProblemPtr(GRproblem * prob);
  
  // Solve allocation 
  void solve();
  
 

  // default constructor
  GRmipProblem();
  
  // copy constructor
  GRmipProblem( const GRmipProblem& source );
  
  // assignment operator
  GRmipProblem&
  operator=(const GRmipProblem& rhs);
  
  // destructor
  ~GRmipProblem();
  

  // Self-test
  static void test();

 

private:


  const GRproblem * constGRproblemPtr() const;
  GRproblem * grProblemPtr();

#if 0
  const OsiSolverInterface * constOsiPtr() const;
  OsiSolverInterface * osiPtr();

  EKKModel * ekkModelPtr();
#endif

  void gutsOfCopy( const GRmipProblem& source );
  void gutsOfDestructor();

  GRproblem * grProblemPtr_;
#if 0
  mutable OsiSolverInterface * osiPtr_;
#endif
  
  
};


#endif
#endif@


1.1
log
@Changes to add osl mip solver structure to code
@
text
@d3 1
a3 1

d69 1
@

