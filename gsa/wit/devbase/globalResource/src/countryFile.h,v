head	1.1;
branch	1.1.1;
access;
symbols
	beforeTiersAdded:1.1.1.1
	start:1.1.1.1
	IBM:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2002.03.04.13.48.12;	author fasano;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.03.04.13.48.12;	author fasano;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@#ifndef GR_COUNTRYFILE_h
#define GR_COUNTRYFILE_h

#include "scoFile.h"


class GRcountryFile : public SCOcsvFormatFile {
public:

  // Fields
  getFieldH(country);

  // fields
  //std::string locName( unsigned int recNum ) const;
  //std::string locName( std::string key ) const;
  
  // preferred constructor
  GRcountryFile(std::string filename)
    : SCOcsvFormatFile(filename)
  {  
    fieldSeperator(',');
    strip(true);
#if 1   
    insertField("country");
#else
    hasHeaderRecord(1);
#endif
  };
  
  // destructor
  ~GRcountryFile(){/*nothing to do here*/};
  
  // Self-test
  static void test();
  
protected:
  
  // compute key for storing record in dictionary
  virtual std::string key( unsigned int recNum ) const
  {
    std::string retVal = country(recNum);
    return retVal;
  };

private:
  
  // default constructor -- don't use!
  GRcountryFile();
  
  // copy constructor  -- don't use!
  GRcountryFile( const GRcountryFile& source );
  
  // assignment operator -- don't use!
  GRcountryFile&
  operator=(const GRcountryFile& rhs);

  
};



class GRcountryFileIterator : public SCOfileIterator {
public:
  
  // fields
  getFieldFileWithIteratorH(country);
  //std::string locName() const;
  
  // preferred constructor
  GRcountryFileIterator(const GRcountryFile & file)
    :SCOfileIterator(file)
  { /* Nothing to do here */};
  
  // destructor
  ~GRcountryFileIterator(){/* nothing to do here */};
  
  // Self-test
  static void test();

private:
  
  
  // default constructor -- don't use!
  GRcountryFileIterator();
  
  // copy constructor  -- don't use!
  GRcountryFileIterator( const GRcountryFileIterator& source );
  
  // assignment operator -- don't use!
  GRcountryFileIterator&
  operator=(const GRcountryFileIterator& rhs);

  
};
#endif@


1.1.1.1
log
@globalResource import
@
text
@@
