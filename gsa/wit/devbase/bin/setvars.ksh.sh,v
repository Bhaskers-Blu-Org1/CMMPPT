head	1.4;
access;
symbols
	latest_sce4_20_OSL:1.4.0.4
	sce_4_20_OSL:1.4
	sce_4_05_20040511:1.4
	sce_4_00_20040201:1.4
	nextGenBranch:1.4.0.2
	nextGenRoot:1.4
	sce_3_30_20030627:1.4
	latest_sce_3_10_20010924:1.2.0.8
	sce_3_10_20010924:1.2
	latest_sce_3_00_20010601:1.2.0.6
	sce_3_00_20010601:1.2
	latest_sce_2_31_20010308:1.2.0.4
	sce_2_31_20010308:1.2
	latest_sce_2_31_20001003:1.2.0.2
	sce_2_31_20001003:1.2
	start:1.1.1.1
	IBM:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2002.08.02.16.35.26;	author austel;	state Exp;
branches;
next	1.3;

1.3
date	2001.12.05.19.56.15;	author fasano;	state Exp;
branches;
next	1.2;

1.2
date	2000.02.23.18.44.02;	author fasano;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.23.17.02.57;	author wit;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.23.17.02.57;	author wit;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Changed these two lines:

	export WIT_ROOT_DIR=$DS_DIR/$USER/wit
	export SCENARIO_ROOT_DIR=$DS_DIR/$USER/scenario

so that they use $DS_DIR rather than /u/wit.
This is an attempt to make it easier to use the machine on crab.
Also set DS_DIR to /home/wit5L if the machine happens to be "crab".
Note that on agora machines hostname returns a string like "XXX.watson.ibm.com".
@
text
@#!/bin/ksh
# This needs to be "source"d in ksh (and probably sh) after you have done setup.sh
# DS is short for Decision Support
#
# $Id: setvars.ksh.sh,v 1.3 2001/12/05 19:56:15 fasano Exp $


if [[ -n $HOST ]]
then
    # HOST environment variable is set, make sure the value is what
    # the makefiles expect
    if [[ $HOST != $(hostname) ]]
    then
        print 'Warning:  $HOST has an unexpected value, make may not work'
        print '          See config/powerGen.mk'
    fi
else
    # Set the HOST environment variable
    export HOST=$(hostname)
fi


# Set name of prefered xlC compile server if not already defined
if [[ -z $XLC_SERVER ]]
then
   export XLC_SERVER=woodenshoe
fi

#This is for agora
if [[ $(hostname) = "crab" ]]
then
    #This is for crab (Fukunaga's machine in Japan)
    export     DS_DIR=/home/wit5L/
else
    export     DS_DIR=/u/wit/
fi
#export   DS_A_DIR=/afs/watson.ibm.com/u/I/implode/
export   DS_A_DIR=$DS_DIR
export    DSD_DIR=${DS_DIR}devbase/
export DSCONF_DIR=${DSD_DIR}config/
export  DSWIT_DIR=${DSD_DIR}wit/
export DSPMRP_DIR=${DSD_DIR}pmrp/

# The following sample line can be put into your own profile to control
# distCompile (used by parComp in our makefiles)
# export DS_SERVER_POOL='woodenshoe habanero'

# There should be power, sun4, etc. directories under RW_ROOT_DIR and there
# should be lib and include/rw directories under them for the librw*.a and
# *.h files respectively
if [[ $(hostname) = "mfglog2.watson.ibm.com" ]]
then
   export     RW_ROOT_DIR=${DS_DIR}
   export     OSL_ROOT_DIR=${DS_DIR}
else
  if [[ $(hostname) = "wit" ]]
  then
   export     RW_ROOT_DIR=/u/witdemo1/
   export     OSL_ROOT_DIR=/u/witdemo1/
  else
   export     RW_ROOT_DIR=${DS_A_DIR}
   export     OSL_ROOT_DIR=${DS_A_DIR}
  fi
fi

# Where the PRM makefiles will look for libraries people usually make
# for themselves:
# The libraries will be looked for in subdirectories of these directory.
# You can change these after you source this file if you want the makefiles
# to look somewhere else.
export WIT_ROOT_DIR=$DS_DIR/$USER/wit
export SCENARIO_ROOT_DIR=$DS_DIR/$USER/scenario

# Where we get "makedepend".
# Note: This expression evaluates to true if the
# host-name ends in ".watson.ibm.com".
if [[ $(hostname) = *.watson.ibm.com ]]
then
#       The links Agora has set up handle different machine architectures
        export X11R5_BIN_DIR=/usr/lpp/X11/bin/
else
  if [[ $(hostname) = "wit" ]]
  then
        export X11R5_BIN_DIR=/usr/local/X11R5/bin/
  else
#       Go with something hard-coded
        export X11R5_BIN_DIR=/afs/watson.ibm.com/agora/share/power/X11R5/bin/
  fi
fi


# Used by Concurrent Version System
export CVSROOT=${DS_DIR}devbase
export RCSBIN=/usr/agora/bin

# Used by SCCS
#export PROJECTDIR=${DS_DIR}wit

#Used by Purify on Suns
#Allow user to have extra purify options, such as "mail-to-user=wally"
#or "inuse-at-exit=yes"

# csh method
#if ($?PURIFYOPTIONS == 0) then  purify option variable undefined?
#    setenv PURIFYOPTIONS ""     define it
#endif
#setenv PURIFYOPTIONS \
# "$PURIFYOPTIONS -auto-mount-prefix=/a -free-queue-length=1000 -chain-length=20"
export PURIFYOPTIONS="$PURIFYOPTIONS -auto-mount-prefix=/a -free-queue-length=1000 -chain-length=20"

# Used by Sentinel on RS/6Ks
#export SE_ENABLED="yes"

umask 0007
#export PATH=".:${DS_DIR}wit/scripts:${DS_DIR}bin:$PATH"
export PATH=".:${DS_DIR}bin:$PATH"
@


1.3
log
@Modifed to have makedepend accessed from new location
@
text
@d5 1
a5 1
# $Id: setvars.ksh.sh,v 1.2 2000/02/23 18:44:02 fasano Exp $
d29 8
a36 1
export     DS_DIR=/u/wit/
d71 2
a72 2
export WIT_ROOT_DIR=/u/wit/$USER/wit
export SCENARIO_ROOT_DIR=/u/wit/$USER/scenario
@


1.2
log
@modified scripts to use /u/wit rather than /u/implode
@
text
@d5 1
a5 1
# $Id: setvars.ksh.sh,v 1.1.1.1 2000/02/23 17:02:57 wit Exp $
a28 6
# Set DB2 environment variables
if [[ -z $DB2INSTANCE ]]
then
   export DB2INSTANCE=kon2
fi

d73 1
a73 1
        export X11R5_BIN_DIR=/usr/local/X11R5/bin/
a88 6
# Used by Objectory
export     ORYHOME=${DS_A_DIR}orySE
export ORYPROJDIR="${DS_DIR}joint/ooad"
export    MANPATH="${ORYHOME}/man:$MANPATH"
export LSHOST=mfglog2.watson.ibm.com

d90 1
a90 1
export PROJECTDIR=${DS_DIR}wit
d105 1
a105 1
export SE_ENABLED="yes"
d108 2
a109 1
export PATH=".:${DS_DIR}orySE/bin:${DS_DIR}wit/scripts:${DS_DIR}bin:$PATH"
@


1.1
log
@Initial revision
@
text
@d5 1
a5 1
# $Id: setvars.ksh.sh,v 1.27 1996/01/10 22:49:33 wally Exp $
a21 13
# Set Open Interface environment
if [[ -s /usr/openint/misc/nd.sh ]]
then
#  Open Interface installed on current machine, so use local copy
   saveDir=$PWD
   cd /usr/openint/misc
   . nd.sh
   cd $saveDir
else
#  Open Interface is not installed on current machine, so use afs copy
   export ND_HOME=/afs/watson.ibm.com/u/I/implode/openint
   export ND_PATH=$ND_HOME/lib
fi
d35 3
a37 6
# Set project management software, aplan2 environment variables
export PROJECT_PATH=/u/implode/ap2_projects
export PATH=$PATH:/u/tauben/ap/dtidir/bin

export     DS_DIR=/u/implode/
export   DS_A_DIR=/afs/watson.ibm.com/u/I/implode/
d45 1
a45 1
# export DS_SERVER_POOL='implode woodenshoe habanero'
d70 2
a71 2
export WIT_ROOT_DIR=/u/implode/$USER/wit
export SCENARIO_ROOT_DIR=/u/implode/$USER/scenario
@


1.1.1.1
log
@Import bin
@
text
@@
