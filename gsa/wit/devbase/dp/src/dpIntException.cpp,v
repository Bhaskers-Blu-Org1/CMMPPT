head     1.1;
branch   1.1.1;
access   ;
symbols  start:1.1.1.1 IBM:1.1.1;
locks    ; strict;
comment  @// @;


1.1
date     2006.02.22.15.41.58;  author fasano;  state Exp;
branches 1.1.1.1;
next     ;

1.1.1.1
date     2006.02.22.15.41.58;  author fasano;  state Exp;
branches ;
next     ;


desc
@@



1.1
log
@Initial revision
@
text
@#include "dpIntException.h"

const char * DPIntException::what() const
{
  return msg_.c_str();
}

// preferred constructor
DPIntException::DPIntException(std::string msg):
msg_(msg)
{}

// default constructor
DPIntException::DPIntException():
msg_()
{}

// copy constructor
DPIntException::DPIntException( const DPIntException& source ):
msg_(source.msg_)
{}

// assignment operator
DPIntException& DPIntException::operator=(const DPIntException& rhs)
{  
  if (this != &rhs) {   
    msg_ = rhs.msg_;
  }
  return *this;
}

// destructor
DPIntException::~DPIntException()
{}





@


1.1.1.1
log
@initial import
@
text
@@
