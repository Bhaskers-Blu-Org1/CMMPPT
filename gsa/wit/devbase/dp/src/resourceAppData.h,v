head	1.2;
access;
symbols;
locks; strict;
comment	@ * @;


1.2
date	2006.03.01.16.21.28;	author gresh;	state Exp;
branches;
next	1.1;

1.1
date	2006.02.23.18.56.10;	author gresh;	state Exp;
branches;
next	;


desc
@@


1.2
log
@changes related to accumulating requirements for each solution over
time (for Mark S)
@
text
@#ifndef DPresourceAppData_h
#define DPresourceAppData_h


#include "appData.h"
#include "demandPlanningProblem.h"



class DPresourceAppData : public DPappData {
public:
  
	void setReq(int period, float req );
	std::vector<float>  getReq()const;
  
  // default constructor
  DPresourceAppData();

  //preferred constructor
  DPresourceAppData(int nPeriods);
  
  // destructor
  virtual ~DPresourceAppData();
  
  // copy constructor
  DPresourceAppData( const DPresourceAppData& source );
  
  // assignment operator
  DPresourceAppData&
    operator=(const DPresourceAppData& rhs);

  virtual DPappData * clone() const;

  // Self-test
  static void test();

private:
  
  

  std::vector<float>  req_;
  
};



#endif
@


1.1
log
@updates
@
text
@a13 1
  
@

