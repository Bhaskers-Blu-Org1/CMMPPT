head	1.4;
access;
symbols;
locks; strict;
comment	@ * @;


1.4
date	2006.05.16.16.42.29;	author gresh;	state Exp;
branches;
next	1.3;

1.3
date	2006.04.18.13.27.05;	author gresh;	state Exp;
branches;
next	1.2;

1.2
date	2006.02.23.18.56.10;	author gresh;	state Exp;
branches;
next	1.1;

1.1
date	2006.02.23.14.54.39;	author gresh;	state Exp;
branches;
next	;


desc
@@


1.4
log
@misc
@
text
@#ifndef DPgnrlSolutionFile_h
#define DPgnrlSolutionFile_h

#include "scoFile.h"


class DPgnrlSolutionFile : public SCOcsvFormatFile {
public:

  getFieldH(solution);

  // preferred constructor
  DPgnrlSolutionFile(
    std::string filename)
    : SCOcsvFormatFile(filename)
  {  
    fieldSeperator(',');
    strip(true);
    hasHeaderRecord(1);
    commentRecords(true);
  };

  // compute key for storing record in dictionary

  std::string key( 
    const std::string & solutionName) const
  {
    std::string retVal;
    retVal = solutionName;
    return retVal;
  };
  
  // destructor
  ~DPgnrlSolutionFile(){/*nothing to do here*/};
  
  // Self-test
  static void test()
  {

  

  }
  
protected:
  
  // compute key for storing record in dictionary
  virtual std::string key( unsigned int recNum ) const
  {


    std::vector<std::string> vals;

    std::string fv = fieldNAsString(recNum,0);
  
    
    std::string retVal = key(fv);
    return retVal;
  };

private:
  
  // default constructor -- don't use!
  DPgnrlSolutionFile();
  
  // copy constructor  -- don't use!
  DPgnrlSolutionFile( const DPgnrlSolutionFile& source );
  
  // assignment operator -- don't use!
  DPgnrlSolutionFile&
  operator=(const DPgnrlSolutionFile& rhs);

};



class DPgnrlSolutionFileIterator : public SCOfileIterator {
public:
  
  getFieldFileWithIteratorH(solution);
 
  // preferred constructor
  DPgnrlSolutionFileIterator(const DPgnrlSolutionFile & file)
    :SCOfileIterator(file)
  { /* Nothing to do here */};
  
  // destructor
  ~DPgnrlSolutionFileIterator(){/* nothing to do here */};
  
  // Self-test
  static void test()
  {

  }

private:
  
  
  // default constructor -- don't use!
  DPgnrlSolutionFileIterator();
  
  // copy constructor  -- don't use!
  DPgnrlSolutionFileIterator( const DPgnrlSolutionFileIterator& source );
  
  // assignment operator -- don't use!
  DPgnrlSolutionFileIterator&
  operator=(const DPgnrlSolutionFileIterator& rhs);

  
};
#endif
@


1.3
log
@changed to "one period" solutions to better handle ongoing and wedge demands
@
text
@d11 1
a11 2
  //getIntFieldH(duration);
  
d80 1
a80 2
  //getIntFieldFileWithIteratorH(duration);

@


1.2
log
@updates
@
text
@d11 1
a11 1
  getIntFieldH(duration);
d20 1
a20 1
    hasHeaderRecord(2);
d81 1
a81 1
  getIntFieldFileWithIteratorH(duration);
@


1.1
log
@added files
@
text
@a29 1
    unsigned int i;
a52 1
    int f;
@

