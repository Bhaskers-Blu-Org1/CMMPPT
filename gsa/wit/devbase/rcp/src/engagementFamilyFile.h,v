head	1.1;
access;
symbols;
locks; strict;
comment	@ * @;


1.1
date	2006.05.15.14.07.56;	author gresh;	state Exp;
branches;
next	;


desc
@@


1.1
log
@added engagement families for the "portfolio" option.
@
text
@#ifndef RCPengagementFamilyFile_h
#define RCPengagementFamilyFile_h

#include "scoFile.h"
#include "rcpOptCal.h"

class RCPengagementFamilyFile : public SCOcsvFormatFile {
public:

  // Fields 
  getFieldH(engagementFamilyName);

  
  // preferred constructor
  RCPengagementFamilyFile(std::string filename)
    : SCOcsvFormatFile(filename)
  {  
    fieldSeperator(',');
    strip(true);
	
    hasHeaderRecord(1);
    commentRecords(true);
  };

  // compute key for storing record in dictionary
  static std::string key( 
    const std::string & engagementFamilyName) 
  {
    //char periodchar[100];
    //sprintf( periodchar, "%d", period );
    std::string retVal = engagementFamilyName ; 
    return retVal;
  };
  
  // destructor
  ~RCPengagementFamilyFile(){/*nothing to do here*/};
  
  // Self-test
  static void test()
  {

  }
  
protected:
  
  // compute key for storing record in dictionary
  virtual std::string key( unsigned int recNum ) const
  {
    std::string retVal = key(
      engagementFamilyName(recNum));
    return retVal;
  };

private:
  
  // default constructor -- don't use!
  RCPengagementFamilyFile();
  
  // copy constructor  -- don't use!
  RCPengagementFamilyFile( const RCPengagementFamilyFile& source );
  
  // assignment operator -- don't use!
  RCPengagementFamilyFile&
  operator=(const RCPengagementFamilyFile& rhs);

  
};



class RCPengagementFamilyFileIterator : public SCOfileIterator {
public:
  
  // fields 
  getFieldFileWithIteratorH(engagementFamilyName);
 

  // preferred constructor
  RCPengagementFamilyFileIterator(const RCPengagementFamilyFile & file)
    :SCOfileIterator(file)
  { /* Nothing to do here */};
  
  // destructor
  ~RCPengagementFamilyFileIterator(){/* nothing to do here */};
  
  // Self-test
  static void test()
  {

  }

private:
  
  
  // default constructor -- don't use!
  RCPengagementFamilyFileIterator();
  
  // copy constructor  -- don't use!
  RCPengagementFamilyFileIterator( const RCPengagementFamilyFileIterator& source );
  
  // assignment operator -- don't use!
  RCPengagementFamilyFileIterator&
  operator=(const RCPengagementFamilyFileIterator& rhs);

  
};
#endif
@
