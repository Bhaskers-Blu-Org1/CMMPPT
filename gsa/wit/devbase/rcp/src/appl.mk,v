head	1.29;
access;
symbols;
locks; strict;
comment	@# @;


1.29
date	2005.01.13.22.49.53;	author fasano;	state Exp;
branches;
next	1.28;

1.28
date	2004.08.12.12.19.48;	author dpc;	state Exp;
branches;
next	1.27;

1.27
date	2004.08.04.14.34.36;	author dpc;	state Exp;
branches;
next	1.26;

1.26
date	2004.07.28.13.39.33;	author dpc;	state Exp;
branches;
next	1.25;

1.25
date	2004.06.07.18.42.30;	author dpc;	state Exp;
branches;
next	1.24;

1.24
date	2004.05.17.19.06.19;	author dpc;	state Exp;
branches;
next	1.23;

1.23
date	2004.05.17.18.03.36;	author dpc;	state Exp;
branches;
next	1.22;

1.22
date	2004.05.12.14.04.25;	author dpc;	state Exp;
branches;
next	1.21;

1.21
date	2004.04.15.20.59.22;	author dpc;	state Exp;
branches;
next	1.20;

1.20
date	2004.04.15.19.31.43;	author fasano;	state Exp;
branches;
next	1.19;

1.19
date	2004.04.12.15.59.13;	author dpc;	state Exp;
branches;
next	1.18;

1.18
date	2004.04.02.20.27.21;	author dpc;	state Exp;
branches;
next	1.17;

1.17
date	2004.03.14.13.52.51;	author fasano;	state Exp;
branches;
next	1.16;

1.16
date	2004.03.12.20.32.29;	author dpc;	state Exp;
branches;
next	1.15;

1.15
date	2004.03.10.20.50.20;	author dpc;	state Exp;
branches;
next	1.14;

1.14
date	2004.03.09.14.04.11;	author dpc;	state Exp;
branches;
next	1.13;

1.13
date	2004.01.30.13.28.08;	author dpc;	state Exp;
branches;
next	1.12;

1.12
date	2004.01.22.22.30.08;	author dpc;	state Exp;
branches;
next	1.11;

1.11
date	2004.01.21.20.40.03;	author dpc;	state Exp;
branches;
next	1.10;

1.10
date	2004.01.21.14.43.07;	author dpc;	state Exp;
branches;
next	1.9;

1.9
date	2004.01.12.14.51.38;	author dpc;	state Exp;
branches;
next	1.8;

1.8
date	2004.01.11.17.40.44;	author fasano;	state Exp;
branches;
next	1.7;

1.7
date	2004.01.07.22.18.31;	author dpc;	state Exp;
branches;
next	1.6;

1.6
date	2003.12.01.21.04.46;	author dpc;	state Exp;
branches;
next	1.5;

1.5
date	2003.11.21.16.58.55;	author dpc;	state Exp;
branches;
next	1.4;

1.4
date	2003.11.21.04.22.25;	author fasano;	state Exp;
branches;
next	1.3;

1.3
date	2003.11.19.15.45.07;	author fasano;	state Exp;
branches;
next	1.2;

1.2
date	2003.11.18.21.40.25;	author fasano;	state Exp;
branches;
next	1.1;

1.1
date	2003.11.13.14.44.14;	author fasano;	state Exp;
branches;
next	;


desc
@@


1.29
log
@updated to build with cygwinGcc
@
text
@# Make file for compiling and linking WIT

# Notes:
# This makefile is included in makefiles in this directory and in 
# the ../$(platform) directories, so don't assume that the current
# directory is the one this makefile is in.

# $Header: /u/wit/devbase/rcp/src/appl.mk,v 1.28 2004/08/12 12:19:48 dpc Exp $

include $(config_dir)ds.mk

lib_objects = \
	baseSubs.$(obj_suffix) \
	bomAppData.$(obj_suffix) \
	checkWitRC.$(obj_suffix) \
	engagementAppData.$(obj_suffix) \
	populateRCP.$(obj_suffix) \
	problemBase.$(obj_suffix) \
	rcpProblem.$(obj_suffix) \
	resourceAppData.$(obj_suffix) \
	scoFile.$(obj_suffix) \
	skillSubs.$(obj_suffix) \
	rcpOpt.$(obj_suffix) \
	rcpOptCal.$(obj_suffix) \
	rcpOptException.$(obj_suffix) \
	rcpOptIntException.$(obj_suffix) \
	rcpOptTimer.$(obj_suffix)


objects = \
	RiskAnalysis.$(obj_suffix) \
	unitTest.$(obj_suffix) \
	rcpOptMain.$(obj_suffix) \
	$(lib_objects) 

# Get list of source files
cxx_suffix=cpp

vpath %.$(cxx_suffix) $(src_dir)
vpath %.h $(src_dir)

sources = $(objects:.$(obj_suffix)=.$(cxx_suffix))


headers =        \
	CoinFinite.h   \
	CoinFloatEqual.h   \
	appData.h   \
	baseSubs.h \
	bomAppData.h   \
	bomFile.h   \
	engagementAppData.h   \
	engagementFile.h   \
	globalAttrFile.h \
	jobRoleSubsFile.h \
	populateRCP.h \
	problemBase.h   \
	rcpProblem.h   \
	resourceActionFile.h \
	resourceAppData.h \
	resourceFile.h   \
	resourceFileSimpleSubs.h \
	scoException.h   \
	scoFile.h   \
	skillSubs.h \
	skillSubsFile.h \
	rcpOpt.h \
	DPCtest.h \
	rcpOptCal.h \
	rcpOptException.h \
	rcpOptIntException.h \
	rcpOptTimer.h


ld_path_flags = -L.

# CPPFLAGS - for C Pre-Processor
# CXXFLAGS - for C++ Compiler
# CXX=/usr/vacpp/bin/xlC   (dpc)
#CXX=g++
#CXX=xlC
# CC=/usr/vacpp/bin/xlC (dpc)
#CC=g++
#CC=xlC
CPPFLAGS	= -I$(src_dir). -I$(wituse_includes_dir) -I$(wit_api_includes_dir) -I../.. -I. 
CFLAGS		= $(ds_comp_flags)
CXXFLAGS	= $(ds_comp_flags)
LDFLAGS1 	= $(ds_link_flags) $(ld_path_flags) 
#reloc_ld=/usr/vacpp/bin/xlC (dpc)
#reloc_ld=g++
# E (dpc) ds_make_depend_flags        = -I/usr/vacpp/include

ifeq ($(platform),sun4)
LDFLAGS2 	= -L..$(sep)..$(sep)wit$(sep)$(platform) \
		  -L..$(sep)..$(sep)mcl$(sep)$(platform) 
else
LDFLAGS2 	= -L..$(sep)..$(sep)wit$(sep)$(platform) 
endif

# last line above added by wally 5/23/96 because libwit.a currently needs
# RW code that isn't in libwit.a (especially on Sun's)
LDFLAGS 	= $(LDFLAGS1) $(LDFLAGS2) 
# LOADLIBES	= $(wit_api_lib) $(ds_math_lib)  \
# 		  $(ds_fortran_lib) \
# 		  $(lex_yacc_lib) \
# 		  $(ds_osl_lib) \
# 		  $(rw_lib)

ifeq ($(platform),sun4)
	# Use -lrwtoolgs for now ... 
#	LOADLIBES	= -lwitnl \
	LOADLIBES	= -lwit \
			  -lmcl \
			  $(ds_osl_lib) \
			  $(ds_math_lib) $(rw_lib) $(ds_fortran_lib) \
			  $(lex_yacc_lib)
else
LOADLIBES	+= $(wit_api_lib) $(ds_math_lib)  \
		  $(ds_fortran_lib) \
		  $(lex_yacc_lib) 
endif

# last two above added by wally 5/23/96 because libwit.a currently needs
# RW code that isn't in libwit.a (especially on Sun's)

# $(ds_fortran_lib) $(rw_lib)
# PTRPATH is to be used with cfront-based compilers
PTRPATHOPTS	= -ptr./ptrepository -ptr../../wit/$(platform)/ptrepository

vpath %.$(cxx_suffix) $(src_dir)

timestamp:
	touch ../src/rcpOpt.cpp

libgp.a:	$(lib_objects) 
	$(AR) $(ds_ar_update_flags) $@@ $^
	$(RANLIB) $@@

librcpOpt.a:	$(lib_objects)
	$(AR) $(ds_ar_update_flags) $@@ $^
	$(RANLIB) $@@

-lrcpOpt:	librcpOpt.a

# Rule to build the rcpOptMain stand-alone executable:

rcpOptMain:	rcpOptMain.o librcpOpt.a
	$(CXX) $(ds_link_flags) $^ -o $@@ 

#rcp:		$(lib_objects) ../../wit/$(platform)/libwit.a 
rcpOptMain:	rcpOptMain.$(obj_suffix) librcpOpt.a ../../wit/$(platform)/libwit.a 
unitTest:	$(lib_objects) ../../wit/$(platform)/libwit.a 
RiskAnalysis:	$(lib_objects) ../../wit/$(platform)/libwit.a 
#rcpInvoke:	$(lib_objects) ../../wit/$(platform)/libwit.a 

@


1.28
log
@Wrappered more wit calls with checkWitRC
Touch rcpOpt.cpp before making all
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/rcp/src/appl.mk,v 1.27 2004/08/04 14:34:36 dpc Exp $
d118 1
a118 1
LOADLIBES	= $(wit_api_lib) $(ds_math_lib)  \
@


1.27
log
@Threw in a (float) to prevent integer overflow in the random calculation.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/rcp/src/appl.mk,v 1.26 2004/07/28 13:39:33 dpc Exp $
d131 3
@


1.26
log
@Fixed assert of gap/glut in er5_test7 now that WIT has been updated to generate a consistent sorting.

In appl.mk, added a vpath to get make depend to work on Linux.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/rcp/src/appl.mk,v 1.25 2004/06/07 18:42:30 dpc Exp $
d31 1
a146 2


d150 1
@


1.25
log
@Implemented the reasource action leadtime notification model and updated some unitTest cases to reflect this change.  In earlier versions, although we read in the leadtime parameter, the optimization model didn't implement the leadtime and set it to zero.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/rcp/src/appl.mk,v 1.24 2004/05/17 19:06:19 dpc Exp $
a11 1

d37 4
d84 1
a84 1
CPPFLAGS	= -I$(src_dir). -I$(wituse_includes_dir) -I$(wit_api_includes_dir) -I../.. 
@


1.24
log
@Removed compilation of a Java file.  Changed an for (int i=0,....) scoping because AIX didn't like it.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/rcp/src/appl.mk,v 1.23 2004/05/17 18:03:36 dpc Exp $
d140 2
a141 2
#rcpOptMain:	rcpOptMain.o librcpOpt.a
#	$(CXX) $(ds_link_flags) $^ -o $@@ 
@


1.23
log
@Added rcpOptTimer.[h,cpp] to the compilation list
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/rcp/src/appl.mk,v 1.22 2004/05/12 14:04:25 dpc Exp $
d28 1
a28 2
	rcpOptTimer.$(obj_suffix) \
	rcpOptJava.$(obj_suffix)
@


1.22
log
@Added a wrapper around all WIT calls:  checkWitRC(witReturnCode wrc)
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/rcp/src/appl.mk,v 1.21 2004/04/15 20:59:22 dpc Exp $
d27 3
a29 1
	rcpOptIntException.$(obj_suffix)
d68 2
a69 1
	rcpOptIntException.h
@


1.21
log
@Changed librcp.a librcpOpt.a
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/rcp/src/appl.mk,v 1.20 2004/04/15 19:31:43 fasano Exp $
d16 1
d26 2
a27 1
	rcpOptException.$(obj_suffix)
d65 2
a66 1
	rcpOptException.h 
@


1.20
log
@modified name of library created to be librcpOpt.a instead of librcp.a
modifed rcpOptMain's dependencies to be librcpOpt.a instead of lib_objects
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/rcp/src/appl.mk,v 1.19 2004/04/12 15:59:13 dpc Exp $
d131 1
a131 1
-lrcp:	librcp.a
@


1.19
log
@appl.mk :  added rcpOptCal and rcpOptException to the list of files that get compiles
rcpOptCal.cpp and .h : new files that implement rcpOptCalendar
populateRCP.cpp : added tests to see if period is negative
rcpProblem.cpp : In priorityGapGlut1(), I now check to see that there is just one engagement and it
has a startPeriod of 0
unitTest.cpp : Call added to test rcpOptCalendar
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/rcp/src/appl.mk,v 1.18 2004/04/02 20:27:21 dpc Exp $
d127 1
a127 1
librcp.a:	$(lib_objects)
d135 1
a135 1
#rcpOptMain:	rcpOptMain.o librcp.a
d141 1
a141 1
rcpOptMain:	$(lib_objects) ../../wit/$(platform)/libwit.a 
@


1.18
log
@Added priorityGapGlut1() which computes gap/gluts according to a priority scheme.  It's not called by anything but you can look for $$$$ in the code and change priorityGapGlut() to priorityGapGlut1() to call it.

Also I cleaned up some stuff in rcpOpt.cpp.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/rcp/src/appl.mk,v 1.17 2004/03/14 13:52:51 fasano Exp $
d23 3
a25 1
	rcpOpt.$(obj_suffix) 
d61 3
a63 1
	DPCtest.h
@


1.17
log
@modifications to build on linux
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/rcp/src/appl.mk,v 1.16 2004/03/12 20:32:29 dpc Exp $
a27 2
	rcp.$(obj_suffix) \
	rcpInvoke.$(obj_suffix) \
@


1.16
log
@Modified the list of .cpp files that get compiled (for JNI stuff).
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/rcp/src/appl.mk,v 1.15 2004/03/10 20:50:20 dpc Exp $
d56 1
@


1.15
log
@Updated appl.mk for building rcpOptMain.  Changed the argument of rcpOpt to char const *.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/rcp/src/appl.mk,v 1.14 2004/03/09 14:04:11 dpc Exp $
d59 2
a60 1
	rcpOpt.h
d123 13
@


1.14
log
@Added files for the API version of RCP.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/rcp/src/appl.mk,v 1.13 2004/01/30 13:28:08 dpc Exp $
d23 1
a23 1
	invokeRcp.$(obj_suffix) 
d30 1
d59 1
a59 1
	rcpAlone.h
d123 2
a124 1
rcp:		$(lib_objects) ../../wit/$(platform)/libwit.a 
d126 1
a126 1
rcpInvoke:	$(lib_objects) ../../wit/$(platform)/libwit.a 
@


1.13
log
@Added setResourceReasonableReleaseCost method that sets the release cost of the bench resource to 2*nPeriods*maximum_period_cost.  This method is invoked for the 04Jan formats, because we don't have data for the release cost.  The default wit scrapping cost is 0 and this isn't good for our rcp model.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/rcp/src/appl.mk,v 1.12 2004/01/22 22:30:08 dpc Exp $
d22 2
a23 1
	skillSubs.$(obj_suffix) 
d29 1
d57 2
a58 1
	skillSubsFile.h 
d124 1
@


1.12
log
@Added presolveForGapGlut() to rcpProblem.  This sets the soft lower bounds for the gap/glut calculations.  I moved the witSetOptWithLotSizes() from the constructor of rcpProblem to the optimalPlan() method.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/rcp/src/appl.mk,v 1.11 2004/01/21 20:40:03 dpc Exp $
d52 1
@


1.11
log
@Removed the MRP branch of the model and put the exogenous supply in the bench resource's appData.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/rcp/src/appl.mk,v 1.10 2004/01/21 14:43:07 dpc Exp $
a17 1
	populateRCPSimple.$(obj_suffix) \
a46 1
	populateRCPSimple.h \
@


1.10
log
@Changed the interpretation of the resource supply to be "Ron's supply" and updated the code for that.  Also, compute gap/glut and print the result in the mrpO.csv file.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/rcp/src/appl.mk,v 1.9 2004/01/12 14:51:38 dpc Exp $
d18 1
d21 1
d23 2
a24 2
	skillSubs.$(obj_suffix) \
	resourceAppData.$(obj_suffix)
d48 1
@


1.9
log
@Modified code to get to compile on Linux.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/rcp/src/appl.mk,v 1.8 2004/01/11 17:40:44 fasano Exp $
d21 2
a22 1
	skillSubs.$(obj_suffix)
d49 1
@


1.8
log
@ jobRoleSubs:
-Added file class for reading.
-Created new datafiles.
-in rcpProblem added add/set/get methods
-populateRCP added stanza to read file and invoke add & set methods.
Have not yet added code for adding substitute arcs to wit model.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/rcp/src/appl.mk,v 1.7 2004/01/07 22:18:31 dpc Exp $
d14 1
d17 1
d21 1
a21 2
	populateRCP.$(obj_suffix) \
	baseSubs.$(obj_suffix)
d34 2
d37 2
a39 3
	bomAppData.h   \
	CoinFinite.h   \
	CoinFloatEqual.h   \
d42 2
d47 1
d50 2
a51 4
	resourceActionFile.h \
	baseSubs.h \
	skillSubsFile.h \
	jobRoleSubsFile.h
@


1.7
log
@Added skillSet to rcp code;  added skillSubs* to appl.mk
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/rcp/src/appl.mk,v 1.6 2003/12/01 21:04:46 dpc Exp $
d20 1
a20 1
	skillSubs.$(obj_suffix)
d46 3
a48 2
	skillSubs.h \
	skillSubsFile.h
@


1.6
log
@Added populateRCP.cpp/h to the make process
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/rcp/src/appl.mk,v 1.5 2003/11/21 16:58:55 dpc Exp $
d19 2
a20 1
	populateRCP.$(obj_suffix) 
d45 5
a49 1
	resourceActionFile.h
@


1.5
log
@Created resourceActionFile.h and all the unitTest stuff for it.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/rcp/src/appl.mk,v 1.4 2003/11/21 04:22:25 fasano Exp $
d18 2
a19 1
	scoFile.$(obj_suffix) 
d39 1
@


1.4
log
@Modified so an RCP bom maps to many WIT bomEntries. One for each consumption period.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/rcp/src/appl.mk,v 1.3 2003/11/19 15:45:07 fasano Exp $
d41 2
a42 1
	scoFile.h   
d47 2
a48 1
CXX=/usr/vacpp/bin/xlC
d50 2
a51 1
CC=/usr/vacpp/bin/xlC
d57 3
a59 2
reloc_ld=/usr/vacpp/bin/xlC
ds_make_depend_flags        = -I/usr/vacpp/include
d105 1
a105 1
unitTest:	$(lib_objects) ../../wit/$(platform)/libwitnl.a 
@


1.3
log
@added bomFile.h
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/rcp/src/appl.mk,v 1.2 2003/11/18 21:40:25 fasano Exp $
d14 1
d32 2
a35 1
	bomFile.h   \
@


1.2
log
@Modified to use witPartAppData for setting/getting rcp engagement revenue, startPeriod, and duration
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/rcp/src/appl.mk,v 1.1 2003/11/13 14:44:14 fasano Exp $
d33 1
d38 1
@


1.1
log
@get building on powerVac
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/eso2/src/appl.mk,v 1.8 2003/11/09 14:19:24 fasano Exp $
d14 1
d30 1
d33 1
@

