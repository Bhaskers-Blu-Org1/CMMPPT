head	1.6;
access;
symbols;
locks; strict;
comment	@ * @;


1.6
date	2004.03.15.18.08.34;	author fasano;	state Exp;
branches;
next	1.5;

1.5
date	2004.03.15.17.01.38;	author fasano;	state Exp;
branches;
next	1.4;

1.4
date	2004.02.12.15.24.09;	author gresh;	state Exp;
branches;
next	1.3;

1.3
date	2004.01.12.17.39.32;	author gresh;	state Exp;
branches;
next	1.2;

1.2
date	2004.01.10.03.16.41;	author fasano;	state Exp;
branches;
next	1.1;

1.1
date	2003.11.21.04.22.25;	author fasano;	state Exp;
branches;
next	;


desc
@@


1.6
log
@changes tom bomAppData to use resourceIdName for sub
@
text
@#ifndef RCPbomAppData_h
#define RCPbomAppData_h

#include "appData.h"

class RCPbomAppData : public RCPappData {
public:
  
  void setPeriod(int period );
  int getPeriod()const;
  
  void setMatch(const std::string & resourceIdName, int match );
  int getMatch(const std::string & resourceIdName) const;

  void setSub(const std::string & resourceIdName, int sub );
  int getSub(const std::string & resourceIdName) const;


  // default constructor
  RCPbomAppData();
  
  // destructor
  virtual ~RCPbomAppData();
  
  // copy constructor
  RCPbomAppData( const RCPbomAppData& source );
  
  // assignment operator
  RCPbomAppData&
    operator=(const RCPbomAppData& rhs);

  virtual RCPappData * clone() const;

  // Self-test
  static void test();

private:

  int period_;

  // Map resourceId name to match status
  std::map<std::string,int> match_;
  
  // Map resourceId name to sub status
  std::map<std::string,int> sub_;
  
};



#endif
@


1.5
log
@changes tom bomAppData to use resourceIdName for matching
@
text
@d15 2
a16 79
#if 0
  void setJobRoleMatch(int jobRoleMatch );
  int getJobRoleMatch()const;

  void setSkillSetMatch(int skillSetMatch );
  int getSkillSetMatch()const;

  void setLocationMatch(int locationMatch );
  int getLocationMatch()const;

  void setRegionMatch(int regionMatch );
  int getRegionMatch()const;

  void setCountryMatch(int countryMatch );
  int getCountryMatch()const;

  void setCityMatch(int cityMatch );
  int getCityMatch()const;

  void setReportingUnitMatch(int ruMatch );
  int getReportingUnitMatch()const;

  void setBandMatch(int bandMatch );
  int getBandMatch()const;

  void setGlobalMatch(int globalMatch );
  int getGlobalMatch()const;

  void setCompetencyMatch(int competencyMatch );
  int getCompetencyMatch()const;

  void setIndustryMatch(int industryMatch );
  int getIndustryMatch()const;

  void setLobMatch(int lobMatch );
  int getLobMatch()const;

  void setSourceMatch(int sourceMatch );
  int getSourceMatch()const;
#endif

  void setJobRoleSub(int jobRoleSub );
  int getJobRoleSub()const;

  void setSkillSetSub(int skillSetSub );
  int getSkillSetSub()const;

  void setLocationSub(int locationSub );
  int getLocationSub()const;

  void setRegionSub(int regionSub );
  int getRegionSub()const;

  void setCountrySub(int countrySub );
  int getCountrySub()const;

  void setCitySub(int citySub );
  int getCitySub()const;

  void setReportingUnitSub(int ruSub );
  int getReportingUnitSub()const;

  void setBandSub(int bandSub );
  int getBandSub()const;

  void setGlobalSub(int globalSub );
  int getGlobalSub()const;

  void setCompetencySub(int competencySub );
  int getCompetencySub()const;

  void setIndustrySub(int industrySub );
  int getIndustrySub()const;

  void setLobSub(int lobSub );
  int getLobSub()const;

  void setSourceSub(int sourceSub );
  int getSourceSub()const;
a40 14
  //int jobRoleMatch_;
  //int skillSetMatch_;
  //int locationMatch_;
  //int regionMatch_;
  //int countryMatch_;
  //int cityMatch_;
  //int reportingUnitMatch_;
  //int bandMatch_;
  //int globalMatch_;
  //int competencyMatch_;
  //int industryMatch_;
  //int lobMatch_;
  //int sourceMatch_;

d43 3
a45 14

  int jobRoleSub_;
  int skillSetSub_;
  int locationSub_;
  int regionSub_;
  int countrySub_;
  int citySub_;
  int reportingUnitSub_;
  int bandSub_;
  int globalSub_;
  int competencySub_;
  int industrySub_;
  int lobSub_;
  int sourceSub_;
@


1.4
log
@new fields
@
text
@d11 3
d15 1
d54 1
d117 18
a134 13
  int jobRoleMatch_;
  int skillSetMatch_;
  int locationMatch_;
  int regionMatch_;
  int countryMatch_;
  int cityMatch_;
  int reportingUnitMatch_;
  int bandMatch_;
  int globalMatch_;
  int competencyMatch_;
  int industryMatch_;
  int lobMatch_;
  int sourceMatch_;
@


1.3
log
@added match flags
@
text
@d21 24
d60 24
d115 8
d128 8
@


1.2
log
@Added fields to bomAppData:
   jobRoleSub, skillSetSub, locationSub, lobSub, sourceSub
Added set/gets for these fields in rcpProblem.
Added reading of these fields in populateRCP.cpp and the calls to set their values in rcpProblem.
@
text
@d12 15
d42 1
d64 5
@


1.1
log
@Modified so an RCP bom maps to many WIT bomEntries. One for each consumption period.
@
text
@d12 15
d48 5
@

