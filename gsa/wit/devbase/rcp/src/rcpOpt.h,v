head	1.6;
access;
symbols;
locks; strict;
comment	@ * @;


1.6
date	2004.04.23.18.13.39;	author fasano;	state Exp;
branches;
next	1.5;

1.5
date	2004.04.09.23.43.43;	author fasano;	state Exp;
branches;
next	1.4;

1.4
date	2004.03.12.15.36.12;	author fasano;	state Exp;
branches;
next	1.3;

1.3
date	2004.03.10.20.52.12;	author gresh;	state Exp;
branches;
next	1.2;

1.2
date	2004.03.10.20.50.20;	author dpc;	state Exp;
branches;
next	1.1;

1.1
date	2004.03.10.19.13.31;	author fasano;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Updated api to only have method rcpOpt which throws an exception
@
text
@#ifndef RCPOPT_h
#define RCPOPT_h

#include "rcpOptDll.h"
//#include "rcpOptException.h"

  
#ifdef __cplusplus

// Run Resource Capacity Planning OPTimizer.
// directoryName is the directory that contains the input files.
// rcpOpt will write the result files to directoryName.
// Method may throw an RcpOptException.
int RCP_DECLSPEC rcpOpt(char const * directoryName );

#endif

#endif
@


1.5
log
@Added new api rcpOptExp.
This is the same as rcpOpt except this one throws an exception
@
text
@d5 1
a5 1
#include "rcpOptException.h"
d7 1
a8 2
  extern "C" {
#endif
d10 4
a14 10

#ifdef __cplusplus
  }
#endif

  
#ifdef __cplusplus

// Same function as rcpOpt, except an RcpOptException is thrown when an error occurs.
int RCP_DECLSPEC rcpOptExp(char const * directoryName );
@


1.4
log
@Added extern C, so function name will not be mangled
@
text
@d4 2
a5 11
#if defined(_MSC_VER)
#  if defined(RCPOPTDLL_EXPORTS)
#    define RCP_DECLSPEC __declspec(dllexport)
#  elif defined(RCP_STATIC)
#    define RCP_DECLSPEC  
#  else
#    define RCP_DECLSPEC  __declspec(dllimport)
#  endif
#else
#  define RCP_DECLSPEC
#endif
d15 8
@


1.3
log
@improve "reasonableEngagementRevenue" computation to include bench costs rather than assuming them equal to 1.
@
text
@d16 3
d21 4
@


1.2
log
@Updated appl.mk for building rcpOptMain.  Changed the argument of rcpOpt to char const *.
@
text
@d16 1
@


1.1
log
@- rcp.cpp renamed to rcpOptMain.cpp. This is the rcp standalone executable. (rcp.cpp remains for now in repository but is unused).
- removed main program rcpInvoke.cpp, because rcpOptMain will be used.(rcpInvoke.cpp remains for now in repository but is unused).
- invokeRcp.cpp was renamed rcpOpt.cpp (invokeRcp.cpp remains for now in the repository but is unused)
- rcpAlone.h was renamed rcpOpt.h (rcpAlone.h remains for now in repository but is unused).

- mds project rcp was replaced with project rcpOptMain.
- new mds project named rcpOptDll was created.  This project exposes the public members of RCPproblem and function rcpOpt(String directory);
@
text
@a3 1

d12 2
d16 1
a16 1
int RCP_DECLSPEC rcpOpt(const char const * directoryName );
@

