head	1.1;
access;
symbols;
locks; strict;
comment	@// @;


1.1
date	2004.04.09.23.43.43;	author fasano;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Added new api rcpOptExp.
This is the same as rcpOpt except this one throws an exception
@
text
@#include "rcpOptException.h"

// Return current record number
const char * RcpOptException::what() const
{
  return msg_.c_str();
}

// preferred constructor
RcpOptException::RcpOptException(std::string msg):
msg_(msg)
{}

// default constructor
RcpOptException::RcpOptException():
msg_()
{}

// copy constructor
RcpOptException::RcpOptException( const RcpOptException& source ):
msg_(source.msg_)
{}

// assignment operator
RcpOptException& RcpOptException::operator=(const RcpOptException& rhs)
{  
  if (this != &rhs) {   
    msg_ = rhs.msg_;
  }
  return *this;
}

// destructor
RcpOptException::~RcpOptException()
{}





@
