head	1.8;
access;
symbols
	sce_5_01_20080919:1.4
	latest_sce_4_20_20060523:1.4.0.6
	sce_4_20_20060523:1.4
	latest_sce4_20_OSL:1.4.0.4
	sce_4_20_OSL:1.4
	sce_4_05_20040511:1.4
	sce_4_00_20040201:1.4
	nextGenBranch:1.4.0.2
	nextGenRoot:1.4
	sce_3_30_20030627:1.4
	EndRw-branch:1.1.1.1.0.12
	Root-of-EndRw:1.1.1.1
	rwToStl:1.1.1.1.0.10
	latest_sce_3_10_20010924:1.1.1.1.0.8
	sce_3_10_20010924:1.1.1.1
	latest_sce_3_00_20010601:1.1.1.1.0.6
	sce_3_00_20010601:1.1.1.1
	latest_sce_2_31_20010308:1.1.1.1.0.4
	sce_2_31_20010308:1.1.1.1
	latest_sce_2_31_20001003:1.1.1.1.0.2
	sce_2_31_20001003:1.1.1.1
	start:1.1.1.1
	IBM:1.1.1;
locks; strict;
comment	@# @;


1.8
date	2010.05.25.18.52.17;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2010.05.25.16.14.49;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2010.05.24.20.52.31;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2010.05.19.17.29.32;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2003.04.28.18.04.27;	author fasano;	state Exp;
branches;
next	1.3;

1.3
date	2003.04.28.18.00.27;	author dpc;	state Exp;
branches;
next	1.2;

1.2
date	2002.12.20.14.26.00;	author fasano;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.23.21.35.07;	author wit;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.23.21.35.07;	author wit;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Corrected a comment.
@
text
@# Make file for compiling and linking MCL

# Notes:
# This makefile is included in makefiles in this directory and in 
# the ../$(platform) directories, so don't assume that the current
# directory is the one this makefile is in.

# $Header: /u/wit/devbase/mcl/src/appl.mk,v 1.7 2010/05/25 16:14:49 rjw Exp $

appl_name = mcl
include $(config_dir)ds.mk

exes	= \
	unitTest$(exe_ending) 

intermediate_files = 

# the list of files in lib_objects and headers comes from 
# the include below
include ../src/sources.mk

cxx_objects = \
	unitTest.$(obj_suffix) \
	$(lib_objects)

sources = $(sort $(cxx_objects:.$(obj_suffix)=.$(cxx_suffix))) 

objects = \
        $(cxx_objects) 


ld_path_flags = -L.

# CPPFLAGS - for C Pre-Processor
# CXXFLAGS - for C++ Compiler
CPPFLAGS	= -I$(src_dir).  \
		  -I$(wituse_includes_dir) 

CFLAGS		= $(ds_comp_flags)
CXXFLAGS	= $(ds_comp_flags)

ld_paths	= $(ld_path_flags) 
LDFLAGS		= $(ds_link_flags) $(ld_paths)

#ifeq ($(platform),sun4)
#	# Use -lrwtoolgs for now ... 
#	LOADLIBES	= $(rw_lib)
#else
#	# Explicitly use static rw lib
#        # I don't think above comment is correct.
#        # librwtoolgs.a is shared debug
#        # librwtoolns.a is static optimized
#	LOADLIBES	= $(rw_lib)
#endif

#LOADLIBES		= -lstdc++

vpath %.$(cxx_suffix) $(src_dir)
vpath %.h $(src_dir)

unitTest:	unitTest.o libmcl.a 

# Make library
libmcl.a:	$(lib_objects) 
	$(AR) $(ds_ar_update_flags) $@@ $^
	$(RANLIB) $@@

libmclnl.a:	$(lib_objects) 
	$(make_lib) $(ds_ar_update_flags) $(ld_paths) $(LOADLIBES) $@@ $^
	$(RANLIB) $@@
@


1.7
log
@Simplifying the Makefiles.
@
text
@d1 1
a1 1
# Make file for compiling and linking WIT
d8 1
a8 1
# $Header: /u/wit/devbase/mcl/src/appl.mk,v 1.6 2010/05/24 20:52:31 rjw Exp $
@


1.6
log
@Moving conditional make code to the platform makefile.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/mcl/src/appl.mk,v 1.5 2010/05/19 17:29:32 rjw Exp $
a27 7
#ifeq ($(platform),cygwinGcc)

#$(cxx_objects): %.$(obj_suffix): %.C
#	$(CXX) -c $(CPPFLAGS) $(CXXFLAGS) $< -o $@@

#endif

@


1.5
log
@Revised for Cygwin.
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/mcl/src/appl.mk,v 1.4 2003/04/28 18:04:27 fasano Exp $
d28 1
a28 1
ifeq ($(platform),cygwinGcc)
d30 2
a31 2
$(cxx_objects): %.$(obj_suffix): %.C
	$(CXX) -c $(CPPFLAGS) $(CXXFLAGS) $< -o $@@
d33 1
a33 1
endif
@


1.4
log
@modified so works on aix again removing linux specific change
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/mcl/src/appl.mk,v 1.3 2003/04/28 18:00:27 dpc Exp $
d28 7
@


1.3
log
@Changes to build on linux
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/mcl/src/appl.mk,v 1.2 2002/12/20 14:26:00 fasano Exp $
d56 1
a56 1
LOADLIBES		= -lstdc++
@


1.2
log
@modified to remove all references to rw library and include files
@
text
@d8 1
a8 1
# $Header: /u/wit/devbase/mcl/src/appl.mk,v 1.1.1.1 2000/02/23 21:35:07 wit Exp $
a35 2
#CPPFLAGS	= -I$(src_dir).  -I$(rw_include_dir) \
#		  -I$(wituse_includes_dir) 
d41 1
a41 2
#ld_paths	= $(ld_path_flags) \
#		  -L$(rw_library_dir) 
d55 2
@


1.1
log
@Initial revision
@
text
@d8 1
a8 1
# $Header: /u/implode/devbase/mcl/src/appl.mk,v 1.5 1999/08/12 19:27:26 fasano Exp $
d36 3
a38 1
CPPFLAGS	= -I$(src_dir).  -I$(rw_include_dir) \
d43 3
a45 2
ld_paths	= $(ld_path_flags) \
		  -L$(rw_library_dir) 
d48 10
a57 10
ifeq ($(platform),sun4)
	# Use -lrwtoolgs for now ... 
	LOADLIBES	= $(rw_lib)
else
	# Explicitly use static rw lib
        # I don't think above comment is correct.
        # librwtoolgs.a is shared debug
        # librwtoolns.a is static optimized
	LOADLIBES	= $(rw_lib)
endif
@


1.1.1.1
log
@MCL Import
@
text
@@
