head	1.4;
access;
symbols
	sce_5_01_20080919:1.3
	latest_sce_4_20_20060523:1.3.0.6
	sce_4_20_20060523:1.3
	latest_sce4_20_OSL:1.3.0.4
	sce_4_20_OSL:1.3
	sce_4_05_20040511:1.3
	sce_4_00_20040201:1.3
	nextGenBranch:1.3.0.2
	nextGenRoot:1.3
	sce_3_30_20030627:1.3
	EndRw-branch:1.1.1.1.0.12
	Root-of-EndRw:1.1.1.1
	rwToStl:1.1.1.1.0.10
	latest_sce_3_10_20010924:1.1.1.1.0.8
	sce_3_10_20010924:1.1.1.1
	latest_sce_3_00_20010601:1.1.1.1.0.6
	sce_3_00_20010601:1.1.1.1
	latest_sce_2_31_20010308:1.1.1.1.0.4
	sce_2_31_20010308:1.1.1.1
	latest_sce_2_31_20001003:1.1.1.1.0.2
	sce_2_31_20001003:1.1.1.1
	start:1.1.1.1
	IBM:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2011.09.29.18.27.14;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2003.04.28.18.00.27;	author dpc;	state Exp;
branches;
next	1.2;

1.2
date	2002.11.25.15.13.16;	author rwToStl;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.23.21.35.08;	author wit;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.23.21.35.08;	author wit;	state Exp;
branches
	1.1.1.1.10.1;
next	;

1.1.1.1.10.1
date	2002.11.05.22.47.19;	author rwToStl;	state Exp;
branches;
next	1.1.1.1.10.2;

1.1.1.1.10.2
date	2002.11.06.21.02.53;	author rwToStl;	state Exp;
branches;
next	1.1.1.1.10.3;

1.1.1.1.10.3
date	2002.11.06.23.25.30;	author rwToStl;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Added a proprietary statement to the source code and to the object code.
@
text
@//==============================================================================
// IBM Confidential
//
// OCO Source Materials
//
// Message Class Library
//
// (C) Copyright IBM Corp. 1997, 2005  All Rights Reserved
//
// The Source code for this program is not published or otherwise divested of
// its trade secrets, irrespective of what has been deposited with the U. S.
// Copyright office.
//==============================================================================

#ifndef mcl_output_h
#define mcl_output_h

//-----------------------------------------------------------------------------
// File output.h
//
// Contains the declaration of the following classes:
//
// OutputDisplayer
//    PrintfOutputDisplayer
//-----------------------------------------------------------------------------

//-----------------------------------------------------------------------------
// Notes on Implementation:
//
// * This is the class that serves as an interface between the Message Class
//   Library and the output buffer -- {file,screen}; It writes all output.
//
// * Though there are public methods that allow for manual issuing of
//   of messages, this is not necessary if used with the MclFacility. This
//   is all done internally within MclFacility class.
//
// * Note: the base class MclOutputDisplayer does not have a public
//         constructor. you must either use the MclPrintfOutputDisplayer class
//         or create another derived class of MclOutputDisplayer.
//
// * Also: the MclPrintfOutputDisplayer is missing a default constructor
//         like the MclFacility. if you haven't read the Notes on Imp. for
//         the MclFacility class (in file: facility.h), read them.
//
//-----------------------------------------------------------------------------

#include <mcl/src/defs.h>
#include <string>
#include <stdio.h>

class DECLSPEC MclOutputDisplayer
{
public:
  virtual ~MclOutputDisplayer();
  virtual void output(const char* finalText) = 0;
  virtual void outputError(const char * ) {}
protected:
  MclOutputDisplayer(){}
  
};
                                     

class DECLSPEC MclPrintfOutputDisplayer : public MclOutputDisplayer
{
public:
  MclPrintfOutputDisplayer(const MclPrintfOutputDisplayer& output);
  MclPrintfOutputDisplayer(const char* fn, const char * fileAccessMode);
  virtual ~MclPrintfOutputDisplayer();

  virtual void output(const char * finalText);
  virtual void outputError(const char * finalText);
  virtual void fileName(const char* fn);
  virtual void fileAccessMode(const char* mode);


// ......
  
protected:
  std::string fileName_;
  std::string fileAccessMode_;
  FILE*         filePtr_;

  void openFile();
  void closeFile();
  
  //...
};

#endif
@


1.3
log
@Changes to build on linux
@
text
@d1 14
@


1.2
log
@modications to change rogueWave tools.h++ to STL
@
text
@d35 1
@


1.1
log
@Initial revision
@
text
@d34 1
a34 4

class RWCString;
class RWFile;

d64 3
a66 3
  RWCString & fileName_;
  RWCString & fileAccessMode_;
  RWFile * filePtr_;
@


1.1.1.1
log
@MCL Import
@
text
@@


1.1.1.1.10.1
log
@Removed references to RWCString, RWRegExp, RWSubString
@
text
@a33 1
#include <string>
d35 1
d67 2
a68 2
  std::string & fileName_;
  std::string & fileAccessMode_;
@


1.1.1.1.10.2
log
@Removed references to misc RWVectors, dictionaries, hash, etc
@
text
@d36 3
d69 1
a69 1
  FILE*         filePtr_;
@


1.1.1.1.10.3
log
@Removed references to misc RWGOrdered and related classes and some compiler warnings
@
text
@d64 2
a65 2
  std::string fileName_;
  std::string fileAccessMode_;
@


