head	1.5;
access;
symbols
	sce_5_01_20080919:1.3
	latest_sce_4_20_20060523:1.3.0.6
	sce_4_20_20060523:1.3
	latest_sce4_20_OSL:1.3.0.4
	sce_4_20_OSL:1.3
	sce_4_05_20040511:1.3
	sce_4_00_20040201:1.3
	nextGenBranch:1.3.0.2
	nextGenRoot:1.3
	sce_3_30_20030627:1.3
	EndRw-branch:1.1.1.1.0.12
	Root-of-EndRw:1.1.1.1
	rwToStl:1.1.1.1.0.10
	latest_sce_3_10_20010924:1.1.1.1.0.8
	sce_3_10_20010924:1.1.1.1
	latest_sce_3_00_20010601:1.1.1.1.0.6
	sce_3_00_20010601:1.1.1.1
	latest_sce_2_31_20010308:1.1.1.1.0.4
	sce_2_31_20010308:1.1.1.1
	latest_sce_2_31_20001003:1.1.1.1.0.2
	sce_2_31_20001003:1.1.1.1
	start:1.1.1.1
	IBM:1.1.1;
locks; strict;
comment	@ * @;


1.5
date	2011.09.29.18.27.13;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2008.11.12.19.53.17;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2003.01.15.20.00.16;	author rwToStl;	state Exp;
branches;
next	1.2;

1.2
date	2002.11.25.15.13.16;	author rwToStl;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.23.21.35.08;	author wit;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.23.21.35.08;	author wit;	state Exp;
branches
	1.1.1.1.10.1;
next	;

1.1.1.1.10.1
date	2002.11.05.22.47.19;	author rwToStl;	state Exp;
branches;
next	1.1.1.1.10.2;

1.1.1.1.10.2
date	2002.11.06.21.02.53;	author rwToStl;	state Exp;
branches;
next	1.1.1.1.10.3;

1.1.1.1.10.3
date	2002.11.06.23.25.30;	author rwToStl;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Added a proprietary statement to the source code and to the object code.
@
text
@//==============================================================================
// IBM Confidential
//
// OCO Source Materials
//
// Message Class Library
//
// (C) Copyright IBM Corp. 1997, 2005  All Rights Reserved
//
// The Source code for this program is not published or otherwise divested of
// its trade secrets, irrespective of what has been deposited with the U. S.
// Copyright office.
//==============================================================================

//-----------------------------------------------------------------------------
// File output.C
//
// Contains the implementation of the following classes:
//
// OutputDisplayer
//    PrintfOutputDisplayer
//-----------------------------------------------------------------------------

#include <mcl/src/output.h>
#include <mcl/src/facility.h>

#include <iostream>

#include <stdlib.h>
#include <string.h>


MclOutputDisplayer::~MclOutputDisplayer()
{
}

MclPrintfOutputDisplayer::MclPrintfOutputDisplayer(
                const MclPrintfOutputDisplayer& output):
    fileName_       (output.fileName_),
    fileAccessMode_ (output.fileAccessMode_)
{
  openFile();
}

MclPrintfOutputDisplayer::MclPrintfOutputDisplayer(
               const char* fn, const char * fileAccessMode)
    :
    filePtr_        (0)
{
  MclFacility::forbidNullArg (
      fn,
     "fn",
     "MclPrintfOutputDisplayer::MclPrintfOutputDisplayer");

   MclFacility::forbidNullArg (
      fileAccessMode,
      "fileAccessMode",
     "MclPrintfOutputDisplayer::MclPrintfOutputDisplayer");

  fileName_       = fn;
  fileAccessMode_ = fileAccessMode;

  openFile();
}

MclPrintfOutputDisplayer::~MclPrintfOutputDisplayer()
{
   closeFile();
}

void MclPrintfOutputDisplayer::output(const char * finalText)
{
   
   if (filePtr_)
       {
         size_t len = strlen(finalText);
         fwrite( finalText, len, 1, filePtr_ );
       }
}

void MclPrintfOutputDisplayer::outputError(const char * finalText)
{
  if (filePtr_)
    printf("%s", finalText);
}

void MclPrintfOutputDisplayer::fileName(const char* fn)
{
  MclFacility::forbidNullArg (fn, "fn", "MclPrintfOutputDisplayer::fileName");
  fileName_ = fn;
  openFile();
}

void MclPrintfOutputDisplayer::fileAccessMode(const char* mode)
{
  MclFacility::forbidNullArg (
       mode,
      "mode",
      "MclPrintfOutputDisplayer::fileAccessMode");

  fileAccessMode_ = mode;
  openFile();
}

void MclPrintfOutputDisplayer::openFile()
{
  closeFile();
  filePtr_ = fopen( fileName_.c_str(), fileAccessMode_.c_str());
  if (!filePtr_ )
    {
      printf("can't open file %s\n", fileName_.c_str());
      exit(1);
    }
}

void MclPrintfOutputDisplayer::closeFile()
{
  if (filePtr_)
      fclose( filePtr_ );
  filePtr_ = 0;
}
@


1.4
log
@Alterations to allow compilation with the GCC 4.3.2 compiler.
@
text
@d1 14
@


1.3
log
@Removed the #ifdef STD_CPP_LIB construct
@
text
@d16 2
@


1.2
log
@modications to change rogueWave tools.h++ to STL
@
text
@d13 1
a13 5
#ifdef STD_CPP_LIB
#  include <iostream>
#else
#  include <iostream.h>
#endif
@


1.1
log
@Initial revision
@
text
@a12 4
#include <rw/cstring.h>
#include <rw/rwfile.h>


d27 2
a28 2
    fileName_       (* new RWCString (output.fileName_)),
    fileAccessMode_ (* new RWCString (output.fileAccessMode_))
a35 2
    fileName_       (* new RWCString),
    fileAccessMode_ (* new RWCString),
a56 3

   delete & fileName_;
   delete & fileAccessMode_;
a62 1
     if (filePtr_ -> Exists() && filePtr_ -> isValid())
d65 1
a65 1
         filePtr_ -> Write(finalText, len);
d96 2
a97 2
  filePtr_ = new RWFile(fileName_, fileAccessMode_);
  if (!filePtr_ -> Exists() || !filePtr_ -> isValid())
d99 1
a99 1
      printf("can't open file %s\n", fileName_.data());
d107 1
a107 1
      delete filePtr_;
@


1.1.1.1
log
@MCL Import
@
text
@@


1.1.1.1.10.1
log
@Removed references to RWCString, RWRegExp, RWSubString
@
text
@d13 1
d16 1
d31 2
a32 2
    fileName_       (* new std::string (output.fileName_)),
    fileAccessMode_ (* new std::string (output.fileAccessMode_))
d40 2
a41 2
    fileName_       (* new std::string),
    fileAccessMode_ (* new std::string),
d106 1
a106 1
  filePtr_ = new RWFile(fileName_.c_str(), fileAccessMode_.c_str());
@


1.1.1.1.10.2
log
@Removed references to misc RWVectors, dictionaries, hash, etc
@
text
@d13 2
d70 1
d73 1
a73 1
         fwrite( finalText, len, 1, filePtr_ );
d104 2
a105 2
  filePtr_ = fopen( fileName_.c_str(), fileAccessMode_.c_str());
  if (!filePtr_ )
d107 1
a107 1
      printf("can't open file %s\n", fileName_.c_str());
d115 1
a115 1
      fclose( filePtr_ );
@


1.1.1.1.10.3
log
@Removed references to misc RWGOrdered and related classes and some compiler warnings
@
text
@d27 2
a28 2
    fileName_       (output.fileName_),
    fileAccessMode_ (output.fileAccessMode_)
d36 2
d59 3
@


