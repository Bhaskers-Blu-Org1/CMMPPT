head	1.2;
access;
symbols
	beforeInforms:1.1.1.1
	Start:1.1.1.1
	IBM:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2005.04.12.18.55.36;	author fasano;	state Exp;
branches;
next	1.1;

1.1
date	2004.12.22.18.52.38;	author fasano;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.12.22.18.52.38;	author fasano;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Updated from Informs COIN repository Apr 12 2005
@
text
@###############################################################################
#                                                                             #
# Above the ### Locations ### line comment out everything that you dont want  #
# to build/use (or in case of a system lib, like zlib).                       #
#                                                                             #
# If any of the libraries/headers is at a non-standard location (i.e., not    #
# in COIN/{lib,include} or in /usr/{lib,include}) then specify below the      #
# ### Locations ### line where could it be found.                             #
#                                                                             #
###############################################################################

CoinDir ?= ${HOME}/COIN

CoinLibsDefined :=

CoinLibsDefined += COIN_libCoin
CoinLibsDefined += COIN_libOsi
CoinLibsDefined += COIN_libCgl

CoinLibsDefined += COIN_libVol
CoinLibsDefined += COIN_libOsiVol

CoinLibsDefined += COIN_libClp
CoinLibsDefined += COIN_libOsiClp

CoinLibsDefined += COIN_libSbb
CoinLibsDefined += COIN_libCbc
CoinLibsDefined += COIN_libOsiCbc

CoinLibsDefined += COIN_libSym
CoinLibsDefined += COIN_libOsiSym

# CoinLibsDefined += COIN_libCpx
# CoinLibsDefined += COIN_libOsiCpx

# CoinLibsDefined += COIN_libDylp
# CoinLibsDefined += COIN_libOsiDylp

# CoinLibsDefined += COIN_libFmp
# CoinLibsDefined += COIN_libOsiFmp

# CoinLibsDefined += COIN_libGlpk
# CoinLibsDefined += COIN_libOsiGlpk

# CoinLibsDefined += COIN_libMsk
# CoinLibsDefined += COIN_libOsiMsk

# CoinLibsDefined += COIN_libOsl
# CoinLibsDefined += COIN_libOsiOsl

# CoinLibsDefined += COIN_libOslSe
# CoinLibsDefined += COIN_libSmi

# CoinLibsDefined += COIN_libSpx
# CoinLibsDefined += COIN_libOsiSpx

# CoinLibsDefined += COIN_libXpr
# CoinLibsDefined += COIN_libOsiXpr

#   uncomment COIN_libz and/or COIN_libbz if you want to build the Coin MPS
#   reader to be able to read compressed files. If you do enable any of
#   these libraries then you must have them installed before building
#   COIN. If they are installed in a location your compiler does not
#   automatically search (as a rule of thumb you should assume only
#   /usr/{include,lib}) then you have to specify their location near the end
#   of this file.
#
#   For details on zlib look at http://www.gzip.org/zlib/
#   zlib is due to Jean-loup Gailly and Mark Adler
#   It is not under CPL but zlib.h has the following
#   Permission is granted to anyone to use this software for any purpose,
#   including commercial applications, and to alter it and redistribute it

# CoinLibsDefined += COIN_libz
# CoinLibsDefined += COIN_libbz

#   uncomment COIN_lapack if you want CoinFactorization to use dense
#   coding. lapack blas and g2c libraries must be installed.  If you
#   have other equivalent libraries (e.g. essl on AIX) then modify
#   library names at end of this file

# CoinLibsDefined += COIN_lapack

#   uncomment COIN_readline if you want front-ends on unix-style
#   platforms to be built with readline support. Note that the
#   readline library is under the GPL, which may or may not affect
#   distribution of your code.

# CoinLibsDefined += COIN_readline

#   uncomment COIN_ufl_ordering if you want ClpCholesky to be able
#   to use University of Florida ordering code.  You may need to modify 
#   location of AMD directory

# CoinLibsDefined += COIN_ufl_ordering


###############################################################################

ifneq ($(filter COIN_libCoin,$(CoinLibsDefined)),)
    export CoinIncDir  := ${CoinDir}/include
    export CoinLibDir  := ${CoinDir}/lib
    export CoinLibName := libCoin.so
    export CoinDefine  := 
endif

ifneq ($(filter COIN_libOsi,$(CoinLibsDefined)),)
    export OsiIncDir  := ${CoinIncDir}
    export OsiLibDir  := ${CoinLibDir}
    export OsiLibName := libOsi.so
    export OsiDefine  :=
endif
    
ifneq ($(filter COIN_libCgl,$(CoinLibsDefined)),)
    export CglIncDir  := ${CoinIncDir}
    export CglLibDir  := ${CoinLibDir}
    export CglLibName := libCgl.so
    export CglDefine  :=
endif

################################################

ifneq ($(filter COIN_libVol,$(CoinLibsDefined)),)
    export VolIncDir  := ${CoinIncDir}
    export VolLibDir  := ${CoinLibDir}
    export VolLibName := libVol.so
    export VolDefine  :=
endif
ifneq ($(filter COIN_libOsiVol,$(CoinLibsDefined)),)
    export OsiVolIncDir  := ${CoinIncDir}
    export OsiVolLibDir  := ${CoinLibDir}
    export OsiVolLibName := libOsiVol.so
    export OsiVolDefine  :=
endif

################################################

ifneq ($(filter COIN_libClp,$(CoinLibsDefined)),)
    export ClpIncDir  := ${CoinDir}/Clp/include
    export ClpLibDir  := ${CoinDir}/lib
    export ClpLibName := libClp.so
    export ClpDefine  :=
endif
ifneq ($(filter COIN_libOsiClp,$(CoinLibsDefined)),)
    export OsiClpIncDir  := ${CoinIncDir}
    export OsiClpLibDir  := ${CoinLibDir}
    export OsiClpLibName := libOsiClp.so
    export OsiClpDefine  :=
endif
    
################################################

ifneq ($(filter COIN_libSbb,$(CoinLibsDefined)),)
    export SbbIncDir  := ${CoinDir}/Sbb/include
    export SbbLibDir  := ${CoinDir}/lib
    export SbbLibName := libSbb.so
    export SbbDefine  :=
endif
################################################

ifneq ($(filter COIN_libCbc,$(CoinLibsDefined)),)
    export CbcIncDir  := ${CoinDir}/Cbc/include
    export CbcLibDir  := ${CoinDir}/lib
    export CbcLibName := libCbc.so
    export CbcDefine  :=
endif
ifneq ($(filter COIN_libOsiCbc,$(CoinLibsDefined)),)
    export OsiCbcIncDir  := ${CoinIncDir}
    export OsiCbcLibDir  := ${CoinLibDir}
    export OsiCbcLibName := libOsiCbc.so
    export OsiCbcDefine  :=
endif


################################################
ifneq ($(filter COIN_libCpx,$(CoinLibsDefined)),)
    export CpxIncDir  :=
    export CpxLibDir  :=
    export CpxLibName :=
    export CpxDefine  :=
endif
ifneq ($(filter COIN_libOsiCpx,$(CoinLibsDefined)),)
    export OsiCpxIncDir  := ${CoinIncDir}
    export OsiCpxLibDir  := ${CoinLibDir}
    export OsiCpxLibName := libOsiCpx.so
    export OsiCpxDefine  :=
endif

################################################

# The first set of variables are used when building OsiDylp. The second set
# are used when building the unit test.

DylpHome = $(HOME)/OsiDylpDist

ifneq ($(filter COIN_libDylp,$(CoinLibsDefined)),)
    export DylpIncDir  := $(DylpHome)/OsiDylp \
			  $(DylpHome)/DylpLib
    export DylpLibDir  := $(DylpHome)/OsiDylp \
			  $(DylpHome)/DylpLib
    export DylpLibName := libOsiDylpSolver$(OBJID_STRING)$(LIBEXT) \
			  libdylpstd$(OBJID_STRING)$(LIBEXT)
    ifeq ($(findstring SunOS,${UNAME}),SunOS)
	DylpLibName += libsunmath
    endif
    export DylpDefine  := COIN_USE_DYLP DYLP_STATISTICS \
			  ERRMSGDIR="\"$(DylpHome)/OsiDylp\""
endif
ifneq ($(filter COIN_libOsiDylp,$(CoinLibsDefined)),)
    export OsiDylpIncDir  := ${CoinIncDir}
    export OsiDylpLibDir  := ${CoinLibDir}
    export OsiDylpLibName := libOsiDylp.so
    export OsiDylpDefine  := COIN_USE_DYLP
endif
    
################################################

GlpkHome = ${HOME}/glpk-4.7

ifneq ($(filter COIN_libGlpk,$(CoinLibsDefined)),)
    export GlpkIncDir  := ${GlpkHome}/include
    export GlpkLibDir  := ${GlpkHome}/src
    export GlpkLibName := libglpk.a
    export GlpkDefine  :=
endif
ifneq ($(filter COIN_libOsiGlpk,$(CoinLibsDefined)),)
    export OsiGlpkIncDir  := ${CoinIncDir}
    export OsiGlpkLibDir  := ${CoinLibDir}
    export OsiGlpkLibName := libOsiGlpk.so
    export OsiGlpkDefine  :=
endif
    
################################################

ifneq ($(filter COIN_libMsk,$(CoinLibsDefined)),)
    export MskIncDir  := /usr/local/mosek/3/tools/platform/linux32x86/h
    export MskDefine  :=
    export MskLibDir  := /usr/local/mosek/3/tools/platform/linux32x86/lib
    export MskLibName := libmosekdl.a libpthread libc libdl libm
endif
ifneq ($(filter COIN_libOsiMsk,$(CoinLibsDefined)),)
    export OsiMskIncDir  := ${CoinIncDir}
    export OsiMskLibDir  := ${CoinLibDir}
    export OsiMskLibName := libOsiMsk.so
    export OsiMskDefine  :=
endif


################################################

ifneq ($(filter COIN_libOsl,$(CoinLibsDefined)),)
    export OslIncDir  := ${HOME}/osl/include
    export OslLibDir  := ${HOME}/osl/lib
    export OslLibName := libosl.so
    export OslDefine  :=
endif
ifneq ($(filter COIN_libOsiOsl,$(CoinLibsDefined)),)
    export OsiOslIncDir  := ${CoinIncDir}
    export OsiOslLibDir  := ${CoinLibDir}
    export OsiOslLibName := libOsiOsl.so
    export OsiOslDefine  :=
endif
    
################################################

ifneq ($(filter COIN_libOslSe,$(CoinLibsDefined)),)
    export OslSeIncDir  := ${HOME}/oslse/include
    export OslSeLibDir  := ${HOME}/oslse/lib
    export OslSeLibName := liboslse.so
    export OslSeDefine  :=
endif
ifneq ($(filter COIN_libSmi,$(CoinLibsDefined)),)
    export SmiIncDir  := ${CoinIncDir}
    export SmiLibDir  := ${CoinLibDir}
    export SmiLibName := libSmi.so
    export SmiDefine  :=
endif
    

################################################

ifneq ($(filter COIN_libSpx,$(CoinLibsDefined)),)
    export SpxIncDir  :=
    export SpxLibDir  :=
    export SpxLibName :=
    export SpxDefine  :=
endif
ifneq ($(filter COIN_libOsiSpx,$(CoinLibsDefined)),)
    export OsiSpxIncDir  := ${CoinIncDir}
    export OsiSpxLibDir  := ${CoinLibDir}
    export OsiSpxLibName := libOsiSpx.so
    export OsiSpxDefine  :=
endif

################################################

ifneq ($(filter COIN_libSym,$(CoinLibsDefined)),)
    export SymIncDir  := ${CoinDir}/SYMPHONY/include
    export SymLibDir  := ${CoinDir}/SYMPHONY/lib
    export SymLibName := libsym.so
    export SymDefine  :=
endif
ifneq ($(filter COIN_libOsiSym,$(CoinLibsDefined)),)
    export OsiSymIncDir  := ${CoinDir}/Osi/OsiSym/include
    export OsiSymLibDir  := ${CoinLibDir}
    export OsiSymLibName := libOsiSym.so
    export OsiSymDefine  :=
endif

################################################

ifneq ($(filter COIN_libXpr,$(CoinLibsDefined)),)
    export XprIncDir  :=
    export XprLibDir  :=
    export XprLibName :=
    export XprDefine  :=
endif
ifneq ($(filter COIN_libOsiXpr,$(CoinLibsDefined)),)
    export OsiXprIncDir  := ${CoinIncDir}
    export OsiXprLibDir  := ${CoinLibDir}
    export OsiXprLibName := libOsiXpr.so
    export OsiXprDefine  :=
endif
    
################################################

ifneq ($(filter COIN_libz,$(CoinLibsDefined)),)
    export zlibIncDir  :=
    export zlibLibDir  :=
    export zlibLibName := libz.so
    export zlibDefine  := COIN_USE_ZLIB
endif
    
ifneq ($(filter COIN_libbz,$(CoinLibsDefined)),)
    export bzlibIncDir  :=
    export bzlibLibDir  :=
    export bzlibLibName := libbz2.so
    export bzlibDefine  := COIN_USE_BZLIB
endif

ifneq ($(filter COIN_lapack,$(CoinLibsDefined)),)
    export lapackIncDir  :=
    export lapackLibDir  :=
    export lapackLibName := liblapack.so libblas.so libg2c.so
    export lapackDefine  := COIN_USE_DENSE
endif
    
ifneq ($(filter COIN_readline,$(CoinLibsDefined)),)
    export readlineIncDir  :=
    export readlineLibDir  :=
    export readlineLibName := libhistory.so libreadline.so libcurses.so
    export readlineDefine  := COIN_USE_READLINE
endif

ifneq ($(filter COIN_ufl_ordering,$(CoinLibsDefined)),)
    export CoinIncDir  += $(HOME)/ordering/AMD/Include
    export CoinLibDir  += $(HOME)/ordering/AMD/Lib
    export CoinLibName += libamd.a
    export CoinDefine  += UFL_BARRIER
endif
@


1.1
log
@Initial revision
@
text
@d20 2
a21 2
#CoinLibsDefined += COIN_libVol
#CoinLibsDefined += COIN_libOsiVol
d27 5
d45 5
a49 2
CoinLibsDefined += COIN_libOsl
CoinLibsDefined += COIN_libOsiOsl
d159 15
d218 2
d221 2
a222 2
    export GlpkIncDir  := ${HOME}/glpk-3.2.2/include
    export GlpkLibDir  := ${HOME}/glpk-3.2.2/lib
d235 16
d252 3
a254 5
#    export OslIncDir  := ${HOME}/osl/include
    export OslIncDir  := ../../../../../../u/wit/cygwinGcc/include/osl
#    export OslLibDir  := ${HOME}/osl/lib
    export OslLibDir  := ../../../../../../u/wit/cygwinGcc/lib
    export OslLibName := libosl.a
d297 15
@


1.1.1.1
log
@COIN code from IBM hosted repository (before move to informs)
@
text
@@
