head	1.16;
access;
symbols
	beforeInforms:1.3
	Start:1.1.1.1
	IBM:1.1.1;
locks; strict;
comment	@# @;


1.16
date	2009.07.14.21.08.13;	author rjw;	state dead;
branches;
next	1.15;

1.15
date	2008.11.11.01.27.16;	author fasano;	state Exp;
branches;
next	1.14;

1.14
date	2008.11.10.17.42.17;	author gresh;	state Exp;
branches;
next	1.13;

1.13
date	2008.11.05.00.31.07;	author fasano;	state Exp;
branches;
next	1.12;

1.12
date	2008.10.21.18.06.29;	author rjw;	state Exp;
branches;
next	1.11;

1.11
date	2008.10.21.16.34.06;	author rjw;	state Exp;
branches;
next	1.10;

1.10
date	2008.06.25.04.49.33;	author fasano;	state Exp;
branches;
next	1.9;

1.9
date	2006.06.07.15.34.33;	author rjw;	state Exp;
branches;
next	1.8;

1.8
date	2006.04.13.16.11.30;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2006.04.13.16.06.05;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2005.05.19.15.31.25;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2005.05.19.13.55.01;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2005.04.12.19.31.43;	author fasano;	state Exp;
branches;
next	1.3;

1.3
date	2005.02.25.15.10.59;	author grzes;	state Exp;
branches;
next	1.2;

1.2
date	2004.12.27.19.04.36;	author fasano;	state Exp;
branches;
next	1.1;

1.1
date	2004.12.22.18.52.08;	author fasano;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.12.22.18.52.08;	author fasano;	state Exp;
branches;
next	;


desc
@@


1.16
log
@Changed name of readmeWitBuildWithCoin.txt to How-To-Build-Coin-For-Wit.txt.
Corrected the AIX instructions.
@
text
@//-------------------------------------------------------------------------
// File "readmeWitBuildWithCoin.txt"
//
// This file documents to build COIN for WIT's use.
//
// Initial instructions by JP Fasano
// Instructions modified by Bob Wittrock 5/19/05
//                                       4/13/06
//                                       6/07/06
//
// In the following instructions, substitute your userid for rjw or fasano.
//-------------------------------------------------------------------------

//---------------------------------------
// Building coin with gcc on linux
//---------------------------------------

// CVS checkout WIT's frozen version of the relevant COIN source code:

cd /home/rjw/u/wit/rjw
cvs checkout COIN

// If building on z-linux
Change line 41 of COIN/Makefiles/Makefile.Linux from
       CXXFLAGS += -march=$(ARCH)
to be
       # CXXFLAGS += -march=$(ARCH)
This line is generating an error message that indicates march is 
not supported on S390.

// Build OsiClp and it dependancies:
  
cd /home/rjw/u/wit/rjw/COIN/Osi/OsiClp
make OptLevel=-O LibType=STATIC

// Build Cbc and it dependancies:
  
cd /home/rjw/u/wit/rjw/COIN/Cbc
make OptLevel=-O LibType=STATIC

// Link coin files to where WIT expects them:
  
cd /home/rjw/u/wit/linux/include
ln -s /home/rjw/u/wit/rjw/COIN/include coin

cd /home/rjw/u/wit/linux/lib
ln -s /home/rjw/u/wit/rjw/COIN/lib coin

//---------------------------------------
// Building coin with gcc on cygwin
//---------------------------------------

// Build OsiClp and it dependancies

cd /cygdrive/d/u/wit/fasano/COIN/Osi/OsiClp
make OptLevel=-O LibType=STATIC

// Build Cbc and it dependancies

cd /cygdrive/d/u/wit/fasano/COIN/Cbc
make OptLevel=-O LibType=STATIC

// Move coin files to where WIT expects them.

cd /cygdrive/d/u/wit/cygwinGcc/include
ln -s /cygdrive/d/u/wit/fasano/COIN/include coin

cd /cygdrive/d/u/wit/cygwinGcc/lib
ln -s /cygdrive/d/u/wit/fasano/COIN/lib coin

//---------------------------------------
// Building coin with gcc on mingw
//---------------------------------------
// The most significant change I had to make was that
// in each makefile (starting with, for example
// C:\u\wit\gresh\COIN\Osi\OsiClp\Makefile
// I had to edit the lines that define CoinDir and MakefileDir
// as follows:
// #export CoinDir := $(shell cd ..; pwd)
// export CoinDir := C:/u/wit/gresh/COIN
// export MakefileDir := $(CoinDir)/Makefiles
// That is, I could not use the shell/pwd combination to find the correct 
// location for coin
// I also edited Makefile.coin as follows so that it would use a different
// makefile than the cygwin one:
// #export UNAME := $(shell uname)
// export UNAME := Mingw

//it is important that all code (coin, mcl, wit) be compiled with the 
// -mno-cywin flag 

// Build OsiClp and it dependancies

cd /cygdrive/d/u/wit/fasano/COIN/Osi/OsiClp
make OptLevel=-O LibType=STATIC

// Build Cbc and it dependancies

cd /cygdrive/d/u/wit/fasano/COIN/Cbc
make OptLevel=-O LibType=STATIC

// Move coin files to where WIT expects them.
// I couldn't get the symbolic links to work, so
// I just copied all the .a files from
// /u/wit/gresh/coin/lib to /u/wit/mingw/lib/coin
// and all the hpp files from /u/wit/gresh/coin/include to
// /u/wit/mingw/coin

cd /cygdrive/d/u/wit/cygwinGcc/include
ln -s /cygdrive/d/u/wit/fasano/COIN/include coin

cd /cygdrive/d/u/wit/cygwinGcc/lib
ln -s /cygdrive/d/u/wit/fasano/COIN/lib coin

//-------------------------------------
//-------------------------------------
// Build coin on aix with visual age compiler
//-------------------------------------

1. Remove object, libs, headers files
   - cd /u/wit/fasano/Coin/Osi/OsiClp; rm -r AIX-O dep
   - cd /u/wit/fasano/Coin/Osi;        rm -r AIX-O dep
   - cd /u/wit/fasano/Coin/Clp;        rm -r AIX-O dep
   - cd /u/wit/fasano/Coin/Coin;       rm -r AIX-O dep
   - cd /u/wit/fasano/Coin/Cgl;        rm -r AIX-O dep
   - cd /u/wit/fasano/Coin/Cbc;        rm -r AIX-O dep
   - cd /u/wit/fasano/Coin;  rm -r lib include
2. Build with VAC compiler
   - cd/u/wit/fasano/Coin/Osi/OsiClp
   - /usr/gnu/bin/make OptLevel=-O LibType=STATIC
   - cd/u/wit/fasano/Coin/Cbc
   - /usr/gnu/bin/make OptLevel=-O LibType=STATIC
3. Copy header and libraries to where wit expects them.
   - logon as wit
   - cd /u/wit/power53/include
   - rm -r coin
   - cp -r /u/wit/fasano/COIN/include coin
   - cd /u/wit/power53/lib
   - rm -r coin
   - cp -r /u/wit/fasano/COIN/lib coin
4. Build in 64 bit mode.
   - export OBJECT_MODE=64
   - remove files as above
   - Build as above
   - Copy header & libraries as above, except
     power64v5 replaces power53
   - exit from terminal session to undo "export OBJECT_MODE=64"



//----------------------------------
// building wit with coin
//---------------------------------

// on linux

export CVSROOT=:pserver:rjw@@poblano.watson.ibm.com:50027/u/wit/devbase
cd /home/rjw/u/wit/rjw/wit/linux
make clean libwit.a wit

// on cygwin

export WIT_ROOT_DIR=/cygdrive/d/u/wit/fasano/wit
export MCL_ROOT_DIR=/cygdrive/d/u/wit/fasano/mcl
export SCENARIO_ROOT_DIR=/cygdrive/d/u/wit/fasano/scenario
export CVSROOT=:pserver:USER.watson.ibm.com:50027/u/wit/devbase
cd /cygdrive/d/u/wit/fasano/wit/cygwinGcc
make clean libwit.a wit


-------------------------------------------------------
From: Daniel P Connors/Watson/IBM@@IBMUS
Date: 11/04/2008 09:54 PM	
To: J P Fasano/China/IBM@@IBMCN@@IBMAU
Subject: COIN build for WIT

JP,
 
I can't remember if I gave you the resolution of the problem I had building the special COIN version for WIT on Ubuntu.  I explained the situation to Laci and Andreas and they agreed that the build procedure we have for the special version of COIN for WIT does use "arch" which is no longer part of Ubuntu.  An easy fix is to set up a simple script that executes "uname -m" when "arch" is called on the Ubuntu platform.  That is what I have done.  Furthermore, this issue is isolated to the special coin build procedure and "arch" is not used in the build procedure for the standard COIN build.

Daniel P. Connors

IBM Thomas J. Watson Research Center
P.O. Box 218 
Yorktown Heights, NY  10598

dconnors@@us.ibm.com
Voice: 914-945-3095, 8-862-3095
FAX: 914-945-3434, 8-862-3434


-------------------------


From: Daniel P Connors/Watson/IBM@@IBMUS 
Date: 11/11/2008 03:59 AM	
To: Bob Wittrock/Watson/IBM@@IBMUS, J P Fasano/China/IBM@@IBMCN
Subject: Problems building Wit and COIN(for wit) on "Intrepid" Unbuntu Linux

I was helping Donna with WitViz on Linux.  She needed a newer version of the windowing toolkit (SWT), so I decided to update my laptop Linux to the latest Unbuntu Linux (Intrepid) in order to get the latest SWT.  I update my linux operating system and then worked on compiling MCL, WIT and COIN (special WIT version).

The g++/gcc compiler for Intrepid is 4.3.2.  I had to make several changes in the WIT and COIN source files to get the code to compile. It seems that some 'c' functions (eg. exit, strdup, ...) and constants (INT_MAX) needed explicit #include's of limits.h, string.h, ..., in order to get the compiler to work.

Then once I got the compiler to work I get a link error with building wit:   /usr/bin/ld:  error in libwit.a(CoinSolver)(.eh_frame); no .eh_frame_hdr table will be created.

I googled that error message and it looks like there may be a bug in the compiler.  I can't figure it out.

So hold off on going to gcc/g++ 4.3.2

Daniel P. Connors
@


1.15
log
@Updated with Dan's comments on building with gcc/g++ 4.3.2
@
text
@@


1.14
log
@added some instructions for mingw
@
text
@d169 42
@


1.13
log
@Updated with Dan's findings on how to build on current ubuntu version
@
text
@d6 4
a9 3
// Authors:
//    JP Fasano
//    Bob Wittrock
a14 18
// Building coin with gcc on ubuntu linux
//---------------------------------------

// Verify that the "arch" command is present:

which arch

// If arch is not present, it must be added.
//
// Using sudo, create the following script: /bin/arch
// Make the script executable.
// Put the following line in the script:

uname -m

// Then follow the instructions for "gcc on linux" below.

//---------------------------------------
d71 45
a168 23

------------------------


Daniel P Connors/Watson/IBM@@IBMUS
11/04/2008 09:54 PM	
To J P Fasano/China/IBM@@IBMCN@@IBMAU
Subject: COIN build for WIT	

JP,
 
I can't remember if I gave you the resolution of the problem I had building the special COIN version for WIT on Ubuntu.  I explained the situation to Laci and Andreas and they agreed that the build procedure we have for the special version of COIN for WIT does use "arch" which is no longer part of Ubuntu.  An easy fix is to set up a simple script that executes "uname -m" when "arch" is called on the Ubuntu platform.  That is what I have done.  Furthermore, this issue is isolated to the special coin build procedure and "arch" is not used in the build procedure for the standard COIN build.

Daniel P. Connors

IBM Thomas J. Watson Research Center
P.O. Box 218 
Yorktown Heights, NY  10598

dconnors@@us.ibm.com
Voice: 914-945-3095, 8-862-3095
FAX: 914-945-3434, 8-862-3434

@


1.12
log
@Corrected a typo.
@
text
@d141 23
@


1.11
log
@Added instructions for building on Ubuntu Linux.
@
text
@d27 1
a27 1
uname -n
@


1.10
log
@Updated comments to include instructions for building on z-linux
@
text
@d6 3
a8 4
// Initial instructions by JP Fasano
// Instructions modified by Bob Wittrock 5/19/05
//                                       4/13/06
//                                       6/07/06
d14 18
@


1.9
log
@Updated instructions for building COIN for WIT on Linux.
@
text
@d23 8
@


1.8
log
@Slight modification
@
text
@d1 6
a6 2
// This file documents how JP built COIN for WIT's use 

d9 31
d42 1
a42 1
// Building coin with gcc on cygwin and linux
d44 1
d46 1
d51 1
d56 1
d66 1
d82 1
a82 1
   - cd /u/wit/powerVac/include
d85 1
a85 1
   - cd /u/wit/powerVac/lib
d93 1
a93 1
     power64v5 replaces powerVac
d102 6
d109 1
a109 1
export OSL_ROOT_DIR=../../../
d115 1
a115 10
make coin_build=on clean libwit.a wit

// on linux
export OSL_ROOT_DIR=../../../
export WIT_ROOT_DIR=/home/fasano/u/wit/fasano/wit
export MCL_ROOT_DIR=/home/fasano/u/wit/fasano/mcl
export SCENARIO_ROOT_DIR=/home/fasano/u/wit/fasano/scenario
export CVSROOT=:pserver:USER.watson.ibm.com:50027/u/wit/devbase
cd /home/fasano/u/wit/fasano/wit/cygwinGcc
make coin_build=on clean libwit.a wit
@


1.7
log
@Updated COIN building instructions (64 bit).
@
text
@d54 1
a54 1
   - exit from terminal session to undo export OBJECT_MODE=64
@


1.6
log
@Further update.
@
text
@d4 1
a4 1

d54 1
a54 1
  
@


1.5
log
@Removed reference to the opt-with-coin control parameter.
@
text
@d3 2
d69 1
a69 1
make coin_build=1 clean libwit.a wit
d78 1
a78 1
make coin_build=1 clean libwit.a wit
@


1.4
log
@updated to refer to Cbc instead of Sbb
@
text
@a76 19


//----------------------------------
// to run wit standalone with coin
//---------------------------------
Use run.params with "opt-with-coin yes":
  data_ifname /u/wit/wit-data/brenda/denise/wit.data

  action opt

  print_soln yes

  print_pre yes
  optInitMethod heur

  opt-with-coin yes

  printMps no

@


1.3
log
@Fixed documentation.
CS: ----------------------------------------------------------------------
@
text
@d11 2
a12 2
// Build Sbb and it dependancies
cd /cygdrive/d/u/wit/fasano/COIN/Sbb
d31 1
a31 1
   - cd /u/wit/fasano/Coin/Sbb;        rm -r AIX-O dep
d36 1
a36 1
   - cd/u/wit/fasano/Coin/Sbb
@


1.2
log
@no message
@
text
@d9 1
a9 1
make OptLevel=-O
d13 1
a13 1
make OptLevel=-O
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
// This file documents how JP built COIN for WIT's use on platforms that use gnu make.
d4 3
d22 31
d54 7
a60 1
// The following is the way to build wit with coin.
d66 29
a95 2
cd /cygdrive/d/u/wit/fasano/wit/cygwinGcc
make coin_build=1 wit@


1.1.1.1
log
@COIN code from IBM hosted repository (before move to informs)
@
text
@@
