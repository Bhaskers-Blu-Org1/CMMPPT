head	1.5;
access;
symbols
	beforeInforms:1.2
	Start:1.1.1.1
	IBM:1.1.1;
locks; strict;
comment	@// @;


1.5
date	2009.08.12.19.43.16;	author dpc;	state Exp;
branches;
next	1.4;

1.4
date	2007.01.25.17.05.02;	author fasano;	state Exp;
branches;
next	1.3;

1.3
date	2005.04.12.18.55.35;	author fasano;	state Exp;
branches;
next	1.2;

1.2
date	2004.12.23.22.13.36;	author fasano;	state Exp;
branches;
next	1.1;

1.1
date	2004.12.22.18.52.29;	author fasano;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.12.22.18.52.29;	author fasano;	state Exp;
branches;
next	;


desc
@@


1.5
log
@CoinFinite.hpp --- added a stanza for mingw
CoinTime.hpp --- added mingw to the stanza that is executed if Microsoft C is the compiler to
deal with the timing function
@
text
@// Copyright (C) 2002, International Business Machines
// Corporation and others.  All Rights Reserved.

// Also put all base defines here e.g. VC++ pragmas
#ifndef CoinFinite_H
#define CoinFinite_H

#include <algorithm>
#include <cmath>

//=============================================================================
#if COIN_BIG_INDEX==0
typedef int CoinBigIndex;
#elif COIN_BIG_INDEX==1
typedef long CoinBigIndex;
#else
typedef long long CoinBigIndex;
#endif
// Plus infinity
#ifndef COIN_DBL_MAX
#define COIN_DBL_MAX DBL_MAX
#endif

//=============================================================================

#if defined (_AIX)
# define CoinFinite finite
# define CoinIsnan  isnan
#endif

//=============================================================================

#if defined(sun)
extern "C" {
   int finite(double);
   int isnan(double);
}
# define CoinFinite finite
# define CoinIsnan  isnan
#endif

//=============================================================================

#if defined (__hpux)
#  if defined(__GNUC__)
      inline int CoinFinite(double d) { return d != DBL_MAX; }
#     define CoinIsnan  isnan
#  else
#     define CoinFinite isfinite
#     define CoinIsnan  isnan
#  endif
#endif

//=============================================================================

#if defined(_MSC_VER)
# include<float.h>
# define CoinIsnan   _isnan
# define CoinFinite  _finite
// Turn off compiler warning about long names
#  pragma warning(disable:4786)
#if !defined(min)
#define min(a,b)  (((a) < (b)) ? (a) : (b))
#endif
#if !defined(max)
#define max(a,b)  (((a) > (b)) ? (a) : (b))
#endif
#else
// Put standard min and max here
using std::min;
using std::max;
#endif

//=============================================================================

#if defined(__linux__)
# define CoinFinite finite
# define CoinIsnan  isnan
#endif

//=============================================================================
#if defined(__MINGW32__)
# define CoinFinite finite
# define CoinIsnan  std::isnan
#endif

//=============================================================================

#if defined(__CYGWIN32__)
# define CoinFinite finite
# define CoinIsnan  std::isnan
#endif

//=============================================================================

#if defined(__GNUC__) && defined(__MACH__)
extern "C" {
   int isnan(double);
}
inline int CoinFinite(double d);
# define CoinFinite finite
# define CoinIsnan  isnan
#endif

//=============================================================================

#if defined(__FreeBSD__)
extern "C" {
   int finite(double);
   int isnan(double);
}
# define CoinFinite finite
# define CoinIsnan  isnan
#endif

//=============================================================================
#endif
@


1.4
log
@modified isnan to std::isnan only on cygwin to get it to compile
@
text
@d82 6
@


1.3
log
@Updated from Informs COIN repository Apr 12 2005
@
text
@d85 1
a85 1
# define CoinIsnan  isnan
@


1.2
log
@Modified CoinFinite to build with xlC compiler
@
text
@d27 2
a28 7
#  if defined(__GNUC__)
      inline int CoinFinite(double d) { return d != DBL_MAX; }
#     define CoinIsnan  isnan
#  else
#     define CoinFinite finite
#     define CoinIsnan  isnan
#  endif
@


1.1
log
@Initial revision
@
text
@d31 1
a31 1
#     define CoinFinite isfinite
@


1.1.1.1
log
@COIN code from IBM hosted repository (before move to informs)
@
text
@@
