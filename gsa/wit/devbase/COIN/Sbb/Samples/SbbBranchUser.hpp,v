head	1.1;
branch	1.1.1;
access;
symbols
	beforeInforms:1.1.1.1
	Start:1.1.1.1
	IBM:1.1.1;
locks; strict;
comment	@// @;


1.1
date	2004.12.22.18.52.43;	author fasano;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.12.22.18.52.43;	author fasano;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@// Copyright (C) 2002, International Business Machines
// Corporation and others.  All Rights Reserved.
#ifndef SbbBranchUser_H
#define SbbBranchUser_H

#include "SbbBranchBase.hpp"

/** Branching decision user class */

class SbbBranchUserDecision : public SbbBranchDecision {
public:
  // Default Constructor 
  SbbBranchUserDecision ();

  // Copy constructor 
  SbbBranchUserDecision ( const SbbBranchUserDecision &);

  virtual ~SbbBranchUserDecision();

 /// Clone
  virtual SbbBranchDecision * clone() const;

    /// Initialize i.e. before start of choosing at a node
  virtual void initialize(SbbModel * model);

  /** Returns nonzero if branching on first object is "better" than on
      second (if second NULL first wins).
      This is only used after strong branching.  The initial selection
      is done by infeasibility() for each SbbObject
      return code +1 for up branch preferred, -1 for down
      
 */
  virtual int betterBranch(SbbBranchingObject * thisOne,
			    SbbBranchingObject * bestSoFar,
			    double changeUp, int numberInfeasibilitiesUp,
			    double changeDown, int numberInfeasibilitiesDown);

  /** \brief Compare N branching objects. Return index of best
      and sets way of branching in chosen object.
    
    This routine is used only after strong branching.
    This is reccommended version as it can be more sophisticated
  */

  virtual int
  bestBranch (SbbBranchingObject ** objects, int numberObjects, int numberUnsatisfied,
	      double * changeUp, int * numberInfeasibilitiesUp,
	      double * changeDown, int * numberInfeasibilitiesDown,
	      double objectiveValue) ;
private:
  
  /// Illegal Assignment operator 
  SbbBranchUserDecision & operator=(const SbbBranchUserDecision& rhs);

};

#endif
@


1.1.1.1
log
@COIN code from IBM hosted repository (before move to informs)
@
text
@@
