head	1.2;
access;
symbols;
locks; strict;
comment	@// @;


1.2
date	2009.07.14.19.14.15;	author dpc;	state Exp;
branches;
next	1.1;

1.1
date	2005.04.12.18.55.24;	author fasano;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Added #include <string.h> and <limits.h> as needed in various files to get
the newer g++ compiler to work with the code.
@
text
@// Copyright (C) 2005, International Business Machines
// Corporation and others.  All Rights Reserved.

#include "CoinPragma.hpp"
#include "CglMessage.hpp"

#include <string.h>
/// Structure for use by CglMessage.cpp
typedef struct {
  CGL_Message internalNumber;
  int externalNumber; // or continuation
  char detail;
  const char * message;
} Cgl_message;
static Cgl_message us_english[]=
{
  {CGL_INFEASIBLE,0,1,"Cut generators found to be infeasible!"},
  {CGL_CLIQUES,1,2,"%d cliques of average size %g"},
  {CGL_FIXED,2,1,"%d variables fixed"},
  {CGL_PROCESS_STATS,3,1,"%d fixed, %d tightened bounds, %d strengthened rows and %d twoCuts"},
  {CGL_DUMMY_END,999999,0,""}
};
/* Constructor */
CglMessage::CglMessage(Language language) :
  CoinMessages(sizeof(us_english)/sizeof(Cgl_message))
{
  language_=language;
  strcpy(source_,"Cgl");
  Cgl_message * message = us_english;

  while (message->internalNumber!=CGL_DUMMY_END) {
     CoinOneMessage oneMessage(message->externalNumber,message->detail,
			       message->message);
     addMessage(message->internalNumber,oneMessage);
     message ++;
}

}
@


1.1
log
@Updated from Informs COIN repository Apr 12 2005
@
text
@d6 2
@

