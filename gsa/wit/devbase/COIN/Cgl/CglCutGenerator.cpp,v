head	1.2;
access;
symbols
	beforeInforms:1.1.1.1
	Start:1.1.1.1
	IBM:1.1.1;
locks; strict;
comment	@// @;


1.2
date	2005.04.12.18.55.23;	author fasano;	state Exp;
branches;
next	1.1;

1.1
date	2004.12.22.18.52.09;	author fasano;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.12.22.18.52.09;	author fasano;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Updated from Informs COIN repository Apr 12 2005
@
text
@// Copyright (C) 2000, International Business Machines
// Corporation and others.  All Rights Reserved.
#if defined(_MSC_VER)
// Turn off compiler warning about long names
#  pragma warning(disable:4786)
#endif
//#include <stdlib.h>
#include <assert.h>
//#include <float.h>
//#include <iostream>

#include "CglCutGenerator.hpp"
 

//-------------------------------------------------------------------
// Default Constructor 
//-------------------------------------------------------------------
CglCutGenerator::CglCutGenerator ()
  : aggressive_(0)
{
  // nothing to do here
}

//-------------------------------------------------------------------
// Copy constructor 
//-------------------------------------------------------------------
CglCutGenerator::CglCutGenerator (
                  const CglCutGenerator & source)         
  : aggressive_(source.aggressive_)
{  
  // nothing to do here
}


//-------------------------------------------------------------------
// Destructor 
//-------------------------------------------------------------------
CglCutGenerator::~CglCutGenerator ()
{
  // nothing to do here
}

//----------------------------------------------------------------
// Assignment operator 
//-------------------------------------------------------------------
CglCutGenerator &
CglCutGenerator::operator=(
                   const CglCutGenerator& rhs)
{
  if (this != &rhs) {
    aggressive_ = rhs.aggressive_;
  }
  return *this;
}
bool 
CglCutGenerator::mayGenerateRowCutsInTree() const
{
  return true;
}



#ifdef NDEBUG
#undef NDEBUG
#endif

#if 0
//--------------------------------------------------------------------------
// test EKKsolution methods.
//--------------------------------------------------------------------------
void
CglCutGenerator::unitTest()
{
}
#endif
@


1.1
log
@Initial revision
@
text
@d55 5
@


1.1.1.1
log
@COIN code from IBM hosted repository (before move to informs)
@
text
@@
