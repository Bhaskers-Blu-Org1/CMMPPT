head	1.12;
access;
symbols;
locks; strict;
comment	@# @;


1.12
date	2010.12.20.22.03.19;	author rjw;	state Exp;
branches;
next	1.11;

1.11
date	2010.06.11.22.53.33;	author rjw;	state Exp;
branches;
next	1.10;

1.10
date	2010.06.07.16.17.30;	author rjw;	state Exp;
branches;
next	1.9;

1.9
date	2010.05.28.23.59.36;	author rjw;	state Exp;
branches;
next	1.8;

1.8
date	2010.05.28.23.46.56;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2010.05.20.20.19.38;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2009.08.14.20.57.36;	author dpc;	state Exp;
branches;
next	1.5;

1.5
date	2009.08.14.14.33.21;	author gresh;	state Exp;
branches;
next	1.4;

1.4
date	2009.08.13.15.50.53;	author dpc;	state Exp;
branches;
next	1.3;

1.3
date	2009.08.13.14.35.19;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2009.07.15.19.49.17;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2009.07.14.21.08.13;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.12
log
@Revised for the CVS repository on GSA.
@
text
@//------------------------------------------------------------------------------
// File "How-To-Build-Coin-For-Wit.txt"
//
// This file documents how to build COIN for WIT's use.
//
// In the following instructions, substitute your userid for rjw or
// fasano, etc.
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
// Building coin with gcc on linux
//------------------------------------------------------------------------------

cd /home/rjw/u/wit/rjw

   //--------------------------------------------------------
   // If the COIN directory is already there, CVS release it:
   //--------------------------------------------------------

cvs release -d COIN

   //--------------------------------------------------------------------
   // CVS checkout WIT's frozen version of the relevant COIN source code:
   //--------------------------------------------------------------------

cvs checkout COIN

   //-----------------------------------
   // Build OsiClp and its dependencies:
   //-----------------------------------
  
cd /home/rjw/u/wit/rjw/COIN/Osi/OsiClp

make OptLevel=-O LibType=STATIC

   //--------------------------------
   // Build Cbc and its dependencies:
   //--------------------------------
  
cd /home/rjw/u/wit/rjw/COIN/Cbc

make OptLevel=-O LibType=STATIC

//------------------------------------------------------------------------------
// Building coin with gcc on z-linux
//------------------------------------------------------------------------------

cd /home/rjw/u/wit/rjw

   //--------------------------------------------------------
   // If the COIN directory is already there, CVS release it:
   //--------------------------------------------------------

cvs release -d COIN

   //--------------------------------------------------------------------
   // CVS checkout WIT's frozen version of the relevant COIN source code:
   //--------------------------------------------------------------------

cvs checkout COIN


Change line 41 of COIN/Makefiles/Makefile.Linux from
    CXXFLAGS += -march=$(ARCH)
to be
    # CXXFLAGS += -march=$(ARCH)
   //
   // This line was generating an error message that indicates march is
   // not supported on S390.


   //-----------------------------------
   // Build OsiClp and its dependencies:
   //-----------------------------------

cd /home/rjw/u/wit/rjw/COIN/Osi/OsiClp

make OptLevel=-O LibType=STATIC

   //--------------------------------
   // Build Cbc and its dependencies:
   //--------------------------------
  
cd /home/rjw/u/wit/rjw/COIN/Cbc

make OptLevel=-O LibType=STATIC

//------------------------------------------------------------------------------
// Building coin with gcc on cygwin
//------------------------------------------------------------------------------

cd /cygdrive/d/u/wit/fasano/

   //--------------------------------------------------------
   // If the COIN directory is already there, CVS release it:
   //--------------------------------------------------------

cvs release -d COIN

   //--------------------------------------------------------------------
   // CVS checkout WIT's frozen version of the relevant COIN source code:
   //--------------------------------------------------------------------

cvs checkout COIN

   //-----------------------------------
   // Build OsiClp and its dependencies:
   //-----------------------------------

cd /cygdrive/d/u/wit/fasano/COIN/Osi/OsiClp

make OptLevel=-O LibType=STATIC

   //--------------------------------
   // Build Cbc and its dependencies:
   //--------------------------------

cd /cygdrive/d/u/wit/fasano/COIN/Cbc

make OptLevel=-O LibType=STATIC

//------------------------------------------------------------------------------
// Building coin with gcc on mingw
//------------------------------------------------------------------------------

cd /home/rjw/u/wit/rjw
cvs checkout COIN

// Build OsiClp and its dependencies:
  
cd /home/rjw/u/wit/rjw/COIN/Osi/OsiClp
make OptLevel=-O LibType=STATIC

// Build Cbc and its dependencies:
  
cd /home/rjw/u/wit/rjw/COIN/Cbc
make OptLevel=-O LibType=STATIC

// Copy coin files to where WIT expects them:

// If it doesn't exist, create the directory /home/rjw/u/wit/mingw/include
// If it doesn't exist, create the directory /home/rjw/u/wit/mingw/lib

cd /home/rjw/u/wit/mingw/include
cp /home/rjw/u/wit/rjw/COIN/include/*.hpp coin

cd /home/rjw/u/wit/mingw/lib/
cp /home/rjw/u/wit/rjw/COIN/lib/*.* coin

//------------------------------------------------------------------------------
// Build coin on aix with visual age compiler in 32 bit mode.
//------------------------------------------------------------------------------

cd /gsa/yktgsa/projects/w/wit/wittrock

   //--------------------------------------------------------
   // If the COIN directory is already there, CVS release it:
   //--------------------------------------------------------

cvs release -d COIN

   //--------------------------------------------------------------------
   // CVS checkout WIT's frozen version of the relevant COIN source code:
   //--------------------------------------------------------------------

cvs checkout COIN

   //-----------------------------------
   // Build OsiClp and its dependencies:
   //-----------------------------------
  
cd /gsa/yktgsa/projects/w/wit/wittrock/COIN/Osi/OsiClp

/usr/gnu/bin/make OptLevel=-O LibType=STATIC

   //--------------------------------
   // Build Cbc and its dependencies:
   //--------------------------------
  
cd /gsa/yktgsa/projects/w/wit/wittrock/COIN/Cbc

/usr/gnu/bin/make OptLevel=-O LibType=STATIC

//------------------------------------------------------------------------------
// Build coin on aix with visual age compiler in 64 bit mode.
//------------------------------------------------------------------------------

cd /gsa/yktgsa/projects/w/wit/wittrock

   //-----------------------------------------------------------
   // If the COIN-64 directory is already there, CVS release it:
   //-----------------------------------------------------------

cvs release -d COIN-64

   //--------------------------------------------------------------------
   // CVS checkout WIT's frozen version of the relevant COIN source code:
   //--------------------------------------------------------------------

cvs checkout -d COIN-64 COIN

   //---------------------
   // Go into 64-bit mode:
   //---------------------

export OBJECT_MODE=64

   //-----------------------------------
   // Build OsiClp and its dependencies:
   //-----------------------------------
  
cd /gsa/yktgsa/projects/w/wit/wittrock/COIN-64/Osi/OsiClp

/usr/gnu/bin/make OptLevel=-O LibType=STATIC

   //--------------------------------
   // Build Cbc and its dependencies:
   //--------------------------------
  
cd /gsa/yktgsa/projects/w/wit/wittrock/COIN-64/Cbc

/usr/gnu/bin/make OptLevel=-O LibType=STATIC

   //------------------------------------------------------
   // Leave 64-bit mode.
   //------------------------------------------------------

export OBJECT_MODE=32

//---------------------------------
// Building WIT with COIN on Linux
//---------------------------------

cd /home/rjw/u/wit/rjw/wit/linux

make clean libwit.a wit

//----------------------------------
// Building WIT with COIN on Cygwin
//---------------------------------_

export WIT_ROOT_DIR=/cygdrive/d/u/wit/fasano/wit
export MCL_ROOT_DIR=/cygdrive/d/u/wit/fasano/mcl
export SCENARIO_ROOT_DIR=/cygdrive/d/u/wit/fasano/scenario
export CVSROOT=:pserver:USER.watson.ibm.com:50027/u/wit/devbase
cd /cygdrive/d/u/wit/fasano/wit/cygwinGcc
make clean libwit.a wit

-------------------------------------------------------
From: Daniel P Connors/Watson/IBM@@IBMUS
Date: 11/04/2008 09:54 PM	
To: J P Fasano/China/IBM@@IBMCN@@IBMAU
Subject: COIN build for WIT

JP,
 
I can't remember if I gave you the resolution of the problem I had building the special COIN version for WIT on Ubuntu.  I explained the situation to Laci and Andreas and they agreed that the build procedure we have for the special version of COIN for WIT does use "arch" which is no longer part of Ubuntu.  An easy fix is to set up a simple script that executes "uname -m" when "arch" is called on the Ubuntu platform.  That is what I have done.  Furthermore, this issue is isolated to the special coin build procedure and "arch" is not used in the build procedure for the standard COIN build.

Daniel P. Connors

IBM Thomas J. Watson Research Center
P.O. Box 218 
Yorktown Heights, NY  10598

dconnors@@us.ibm.com
Voice: 914-945-3095, 8-862-3095
FAX: 914-945-3434, 8-862-3434


-------------------------


From: Daniel P Connors/Watson/IBM@@IBMUS 
Date: 11/11/2008 03:59 AM	
To: Bob Wittrock/Watson/IBM@@IBMUS, J P Fasano/China/IBM@@IBMCN
Subject: Problems building Wit and COIN(for wit) on "Intrepid" Unbuntu Linux

I was helping Donna with WitViz on Linux.  She needed a newer version of the windowing toolkit (SWT), so I decided to update my laptop Linux to the latest Unbuntu Linux (Intrepid) in order to get the latest SWT.  I update my linux operating system and then worked on compiling MCL, WIT and COIN (special WIT version).

The g++/gcc compiler for Intrepid is 4.3.2.  I had to make several changes in the WIT and COIN source files to get the code to compile. It seems that some 'c' functions (eg. exit, strdup, ...) and constants (INT_MAX) needed explicit #include's of limits.h, string.h, ..., in order to get the compiler to work.

Then once I got the compiler to work I get a link error with building wit:   /usr/bin/ld:  error in libwit.a(CoinSolver)(.eh_frame); no .eh_frame_hdr table will be created.

I googled that error message and it looks like there may be a bug in the compiler.  I can't figure it out.

So hold off on going to gcc/g++ 4.3.2

Daniel P. Connors
@


1.11
log
@Revised instructions for:
   Linux
   Z-Linux
   AIX
   Cygwin
@
text
@a149 1

d154 1
a154 1
cd /u/wit/rjw
d172 1
a172 1
cd /u/wit/rjw/COIN/Osi/OsiClp
d180 1
a180 1
cd /u/wit/rjw/COIN/Cbc
d188 1
a188 1
cd /u/wit/rjw
d212 1
a212 1
cd /u/wit/rjw/COIN-64/Osi/OsiClp
d220 1
a220 1
cd /u/wit/rjw/COIN-64/Cbc
d228 1
a228 1
export OBJECT_MODE=
d230 2
a231 2
//----------------------------------
// building wit with coin
d234 1
a234 1
// on linux
a235 2
export CVSROOT=:pserver:rjw@@poblano.watson.ibm.com:50027/u/wit/devbase
cd /home/rjw/u/wit/rjw/wit/linux
d238 3
a240 1
// on cygwin
a248 1

@


1.10
log
@Simpified the instructions for Cygwin.
@
text
@d1 1
a1 1
//-------------------------------------------------------------------------
d4 1
a4 1
// This file documents to build COIN for WIT's use.
d8 1
a8 1
//-------------------------------------------------------------------------
d10 1
a10 1
//---------------------------------------
d12 1
a12 1
//---------------------------------------
d14 33
a46 1
// CVS checkout WIT's frozen version of the relevant COIN source code:
d49 11
a61 5
If building on z-linux:
   Change line 41 of COIN/Makefiles/Makefile.Linux from
       CXXFLAGS += -march=$(ARCH)
   to be
       # CXXFLAGS += -march=$(ARCH)
d63 5
d71 5
a75 2
// Build OsiClp and its dependencies:
  
d77 1
d80 3
a82 1
// Build Cbc and its dependencies:
d85 1
d88 15
a102 5
// Soft link coin include files to where WIT expects them.
// (No need to soft link the library files.)
  
cd /home/rjw/u/wit/linux/include
ln -s /home/rjw/u/wit/rjw/COIN/include coin
d104 1
a104 3
//---------------------------------------
// Building coin with gcc on cygwin
//---------------------------------------
d106 3
a108 1
// Build OsiClp and it dependencies
d111 1
d114 3
a116 1
// Build Cbc and it dependencies
d119 1
d122 1
a122 1
//---------------------------------------
d124 1
a124 1
//---------------------------------------
d151 77
a227 60
//-------------------------------------------
// Build coin on aix with visual age compiler
//-------------------------------------------

Steps 1-3: Build COIN in 32 bit mode.

1. Remove object, libs, headers files
   - cd /u/wit/rjw/COIN/Osi/OsiClp; rm -r AIX-O dep
   - cd /u/wit/rjw/COIN/Osi;        rm -r AIX-O dep
   - cd /u/wit/rjw/COIN/Clp;        rm -r AIX-O dep
   - cd /u/wit/rjw/COIN/Coin;       rm -r AIX-O dep
   - cd /u/wit/rjw/COIN/Cgl;        rm -r AIX-O dep
   - cd /u/wit/rjw/COIN/Cbc;        rm -r AIX-O dep

   - cd /u/wit/rjw/COIN;            rm -r lib include

2. Build with VAC compiler
   - cd/u/wit/rjw/COIN/Osi/OsiClp
   - /usr/gnu/bin/make OptLevel=-O LibType=STATIC
   - cd/u/wit/rjw/COIN/Cbc
   - /usr/gnu/bin/make OptLevel=-O LibType=STATIC

3. Copy header and libraries to where wit expects them.
   - logon as wit
   - cd /u/wit/power53/include
   - rm -r coin
   - cp -r /u/wit/rjw/COIN/include coin
   - cd /u/wit/power53/lib
   - rm -r coin
   - cp -r /u/wit/rjw/COIN/lib coin


Steps 4-8: Build COIN in 64 bit mode.

4. - export OBJECT_MODE=64

5. Remove object, libs, headers files
   - cd /u/wit/rjw/COIN-64/Osi/OsiClp; rm -r AIX-O dep
   - cd /u/wit/rjw/COIN-64/Osi;        rm -r AIX-O dep
   - cd /u/wit/rjw/COIN-64/Clp;        rm -r AIX-O dep
   - cd /u/wit/rjw/COIN-64/Coin;       rm -r AIX-O dep
   - cd /u/wit/rjw/COIN-64/Cgl;        rm -r AIX-O dep
   - cd /u/wit/rjw/COIN-64/Cbc;        rm -r AIX-O dep

   - cd /u/wit/rjw/COIN-64;            rm -r lib include

6. Build with VAC compiler
   - cd/u/wit/rjw/COIN-64/Osi/OsiClp
   - /usr/gnu/bin/make OptLevel=-O LibType=STATIC
   - cd/u/wit/rjw/COIN-64/Cbc
   - /usr/gnu/bin/make OptLevel=-O LibType=STATIC

7. Copy header and libraries to where wit expects them.
   - logon as wit
   - cd /u/wit/power64v5/include
   - rm -r coin
   - cp -r /u/wit/rjw/COIN-64/include coin
   - cd /u/wit/power64v5/lib
   - rm -r coin
   - cp -r /u/wit/rjw/COIN-64/lib coin
d229 1
a229 1
8. Exit from terminal session to undo "export OBJECT_MODE=64"
@


1.9
log
@Revised the AIX instructions.
@
text
@d28 1
a28 1
// Build OsiClp and its dependancies:
d33 1
a33 1
// Build Cbc and its dependancies:
d48 1
a48 1
// Build OsiClp and it dependancies
d53 1
a53 1
// Build Cbc and it dependancies
a57 8
// Move coin files to where WIT expects them.

cd /cygdrive/d/u/wit/cygwinGcc/include
ln -s /cygdrive/d/u/wit/fasano/COIN/include coin

cd /cygdrive/d/u/wit/cygwinGcc/lib
ln -s /cygdrive/d/u/wit/fasano/COIN/lib coin

d65 1
a65 1
// Build OsiClp and its dependancies:
d70 1
a70 1
// Build Cbc and its dependancies:
@


1.8
log
@Clarified the AIX procedure.
@
text
@d108 2
a109 1
   - cd /u/wit/rjw/COIN;  rm -r lib include
d138 2
a139 1
   - cd /u/wit/rjw/COIN-64;  rm -r lib include
@


1.7
log
@Removed soft linking to library files on Linux.
@
text
@d95 1
a95 2
//-------------------------------------
//-------------------------------------
d97 3
a99 1
//-------------------------------------
d102 8
a109 7
   - cd /u/wit/fasano/COIN/Osi/OsiClp; rm -r AIX-O dep
   - cd /u/wit/fasano/COIN/Osi;        rm -r AIX-O dep
   - cd /u/wit/fasano/COIN/Clp;        rm -r AIX-O dep
   - cd /u/wit/fasano/COIN/Coin;       rm -r AIX-O dep
   - cd /u/wit/fasano/COIN/Cgl;        rm -r AIX-O dep
   - cd /u/wit/fasano/COIN/Cbc;        rm -r AIX-O dep
   - cd /u/wit/fasano/COIN;  rm -r lib include
d111 1
a111 1
   - cd/u/wit/fasano/COIN/Osi/OsiClp
d113 1
a113 1
   - cd/u/wit/fasano/COIN/Cbc
d115 1
d120 1
a120 1
   - cp -r /u/wit/fasano/COIN/include coin
d123 15
a137 8
   - cp -r /u/wit/fasano/COIN/lib coin
4. Build in 64 bit mode.
   - export OBJECT_MODE=64
   - remove files as above
   - Build as above
   - Copy header & libraries as above, except
     power64v5 replaces power53
   - exit from terminal session to undo "export OBJECT_MODE=64"
d139 14
d154 1
@


1.6
log
@Put a switch in based on MINGW to avoid pulling in a header file that doesn't exist in MINGW
Updated mingw build instructions
@
text
@d38 2
a39 1
// Link coin files to where WIT expects them:
a43 3
cd /home/rjw/u/wit/linux/lib
ln -s /home/rjw/u/wit/rjw/COIN/lib coin

@


1.5
log
@modified the instructions for mingw
@
text
@a71 1
//** add a empty file resource.h in C:\mingw\include\sys
d85 4
a88 1
// Link coin files to where WIT expects them:
a89 3
//create the directory /home/rjw/u/wit/mingw/include
//create the directory /home/rjw/u/wit/mingw/lib
  
d91 4
a94 1
ln -s /home/rjw/u/wit/rjw/COIN/include coin
a95 2
cd /home/rjw/u/wit/mingw/lib
ln -s /home/rjw/u/wit/rjw/COIN/lib coin
@


1.4
log
@Added mingw instructions
@
text
@d71 2
d87 3
d91 1
a91 1
cd /home/rjw/u/wit/linux/include
d94 1
a94 1
cd /home/rjw/u/wit/linux/lib
@


1.3
log
@Minor reformatting.
@
text
@d71 2
a72 14
// The most significant change I had to make was that
// in each makefile (starting with, for example
// C:\u\wit\gresh\COIN\Osi\OsiClp\Makefile
// I had to edit the lines that define CoinDir and MakefileDir
// as follows:
// #export CoinDir := $(shell cd ..; pwd)
// export CoinDir := C:/u/wit/gresh/COIN
// export MakefileDir := $(CoinDir)/Makefiles
// That is, I could not use the shell/pwd combination to find the correct 
// location for coin
// I also edited Makefile.coin as follows so that it would use a different
// makefile than the cygwin one:
// #export UNAME := $(shell uname)
// export UNAME := Mingw
d74 3
a76 6
//it is important that all code (coin, mcl, wit) be compiled with the 
// -mno-cywin flag 

// Build OsiClp and it dependancies

cd /cygdrive/d/u/wit/fasano/COIN/Osi/OsiClp
d79 3
a81 3
// Build Cbc and it dependancies

cd /cygdrive/d/u/wit/fasano/COIN/Cbc
d84 4
a87 9
// Move coin files to where WIT expects them.
// I couldn't get the symbolic links to work, so
// I just copied all the .a files from
// /u/wit/gresh/coin/lib to /u/wit/mingw/lib/coin
// and all the hpp files from /u/wit/gresh/coin/include to
// /u/wit/mingw/coin

cd /cygdrive/d/u/wit/cygwinGcc/include
ln -s /cygdrive/d/u/wit/fasano/COIN/include coin
d89 2
a90 2
cd /cygdrive/d/u/wit/cygwinGcc/lib
ln -s /cygdrive/d/u/wit/fasano/COIN/lib coin
@


1.2
log
@Minor correction.
@
text
@d6 2
a7 1
// In the following instructions, substitute your userid for rjw or fasano.
d19 2
a20 2
// If building on z-linux
Change line 41 of COIN/Makefiles/Makefile.Linux from
d22 1
a22 1
to be
d24 3
a26 2
This line is generating an error message that indicates march is 
not supported on S390.
@


1.1
log
@Changed name of readmeWitBuildWithCoin.txt to How-To-Build-Coin-For-Wit.txt.
Corrected the AIX instructions.
@
text
@d26 1
a26 1
// Build OsiClp and it dependancies:
d31 1
a31 1
// Build Cbc and it dependancies:
d119 1
a119 1
   - cd /u/wit/fasano/COIN/COIN;       rm -r AIX-O dep
@

