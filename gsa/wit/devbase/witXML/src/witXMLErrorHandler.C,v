head     1.1;
branch   1.1.1;
access   ;
symbols  start:1.1.1.1 IBM:1.1.1;
locks    ; strict;
comment  @ * @;


1.1
date     2001.04.04.18.43.51;  author fasano;  state Exp;
branches 1.1.1.1;
next     ;

1.1.1.1
date     2001.04.04.18.43.51;  author fasano;  state Exp;
branches ;
next     ;


desc
@@



1.1
log
@Initial revision
@
text
@/*
 *	Description: WitXMLErrorHandler.C
 *		class WitXMLText is used to deal with errors in the value of an attribute  
 *		in the xml file	
 *		
 *	Owner:
 *		IBM T. J. Watson Research Center
 *		Route 134
 *		Yorktown Heights, NY 10598
 *
 *	Author: Shuzheng Liu (LSZ)     
 *			35-238   liusz@@watson.ibm.com    8-862-2952
 *
 *	Proprietary Statement:
 *		IBM Confidential
 *		(C) Copyright IBM Corp. 2000
 *
 * 	Change History:
 *    		March, 2001  LSZ: New code.
 */
// ---------------------------------------------------------------------------
//  Includes
// ---------------------------------------------------------------------------
#include <iostream.h>
#include "witXMLErrorHandler.h"
#include "stdio.h"

WitXMLErrorHandler::WitXMLErrorHandler(WitXMLErrorHandler &aWitXMLErrorHandler)
{
	ErrorMsg = aWitXMLErrorHandler.ErrorMsg;
}

WitXMLErrorHandler& WitXMLErrorHandler::operator=(WitXMLErrorHandler &aWitXMLErrorHandler)
{
	ErrorMsg = aWitXMLErrorHandler.ErrorMsg;

	return *this;
}

void WitXMLErrorHandler::SetErrorMsg(const char *Attr,const char *filename,int LineNum)
{
	char num[16];

	sprintf(num,"%d",LineNum);
	ErrorMsg = "\n\nError in XML input file '";
	ErrorMsg += filename;
	ErrorMsg += "', line ";
	ErrorMsg += num;
	ErrorMsg +=	"\n\tattribute: '";
	ErrorMsg += Attr;
	ErrorMsg += "' is not defined in 'wit.dtd' file\n\n";
}

void WitXMLErrorHandler::SetErrorMsg(const char *name,const DOMString &Attr,const char *filename,int LineNum)
{
	char num[16];

	sprintf(num,"%d",LineNum);
	ErrorMsg = "\n\nError in XML input file '";
	ErrorMsg += filename;
	ErrorMsg += "', line ";
	ErrorMsg += num;
	ErrorMsg +=	"\n\tfound an undefined attribute of ";
	ErrorMsg += name;
	ErrorMsg += ": '";
	ErrorMsg += Attr;
	ErrorMsg += "'\n\n";
}

void WitXMLErrorHandler::SetErrorMsg(const char *name,const DOMString &objname,const DOMString &Attr,const char *filename,int LineNum)
{
	char num[16];

	sprintf(num,"%d",LineNum);
	ErrorMsg = "\n\nError in XML input file '";
	ErrorMsg += filename;
	ErrorMsg += "', line ";
	ErrorMsg += num;
	ErrorMsg +=	"\n\tfound an undefined attribute of ";
	ErrorMsg += name;
	ErrorMsg += " '";
	ErrorMsg += objname;
	ErrorMsg += "': '";
	ErrorMsg += Attr;
	ErrorMsg += "'\n\n";
}

void WitXMLErrorHandler::SetOpenFileErrorMsg(const char *filename)
{
	ErrorMsg = "\n\nError\n\tcan not open XML input file '";
	ErrorMsg += filename;
	ErrorMsg += "'\n\n";
}

void WitXMLErrorHandler::SetValueErrorMsg(const char *value,const char *correctmsg,const char *wrongmsg,const DOMString &attrName,const char *filename,int LineNum)
{
	char num[16];

	sprintf(num,"%d",LineNum);
	ErrorMsg = "\n\nError in XML input file '";
	ErrorMsg += filename;
	ErrorMsg += "', line ";
	ErrorMsg += num;
	ErrorMsg +=	"\n\ta format error in '";
	ErrorMsg += attrName;
	ErrorMsg += "=\"";
	ErrorMsg += value;
	ErrorMsg += "\"'\n\texpecting ";
	ErrorMsg += correctmsg;
	ErrorMsg += ", but found '";
	ErrorMsg += wrongmsg;
	ErrorMsg += "'\n\n";
}

void WitXMLErrorHandler::SetValueErrorMsg(const char *value,int nPeriod,int number,const DOMString &attrName,const char *filename,int LineNum)
{
	char num[16],msg[8];

	sprintf(num,"%d",LineNum);
	ErrorMsg = "\n\nError in XML input file '";
	ErrorMsg += filename;
	ErrorMsg += "', line ";
	ErrorMsg += num;
	ErrorMsg +=	"\n\ta format error in '";
	ErrorMsg += attrName;
	ErrorMsg += "=\"";
	ErrorMsg += value;
	ErrorMsg += "\"'\n\tthe number of periods is ";
	sprintf(msg,"%d",nPeriod);
	ErrorMsg += msg;
	ErrorMsg += ", but found ";
	sprintf(msg,"%d",number);
	ErrorMsg += msg;
	ErrorMsg += "\n\n";
}
@


1.1.1.1
log
@Importing wit xml code
@
text
@@
