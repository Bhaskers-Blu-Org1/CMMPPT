head	1.3;
access;
symbols
	start:1.1.1.1 IBM:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2001.04.11.20.21.09;	author liusz;	state Exp;
branches;
next	1.2;

1.2
date	2001.04.05.16.28.08;	author liusz;	state Exp;
branches;
next	1.1;

1.1
date	2001.04.04.18.43.50;	author fasano;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.04.04.18.43.50;	author fasano;	state Exp;
branches;
next	;


desc
@@


1.3
log
@By Shuzheng Liu: add wit enhancements for determining the order of objects.
@
text
@/*
 *	Description: unitTest.C
 *		Sample WIT API test program
 *		
 *	Owner:
 *		IBM T. J. Watson Research Center
 *		Route 134
 *		Yorktown Heights, NY 10598
 *
 *	Author: Shuzheng Liu (LSZ)     
 *			35-238   liusz@@watson.ibm.com    8-862-2952
 *
 *	Proprietary Statement:
 *		IBM Confidential
 *		(C) Copyright IBM Corp. 2000
 *
 * 	Change History:
 *    		March, 2001  LSZ: New code.
 */

#include <assert.h>
#include "witXMLApi.h"


void main (int argc, char * argv[])
{
	const int nFiles=46;
	char witFiles[nFiles][64]={      
		"/u/wit/wit-data/examples/wutltest/wit.data",
		"/u/wit/wit-data/anet/anet/wit.data",
//  "/u/wit/wit-data/anet/anet/wit34.data",     //WIT READ DATA FAILS
		"/u/wit/wit-data/brenda/vern929/wit.data",
		"/u/wit/wit-data/brenda/denise/wit.data",
		"/u/wit/wit-data/brenda/cmos26/wit.data",
		"/u/wit/wit-data/brenda/benson/wit.data",
		"/u/wit/wit-data/brenda/rch818/wit.data",
		"/u/wit/wit-data/brenda/rochrun1/wit.data",
		"/u/wit/wit-data/brenda/karen/wit.data",
		"/u/wit/wit-data/brenda/rch0110/wit.data",
		"/u/wit/wit-data/brenda/test103/wit.data",
		"/u/wit/wit-data/brenda/samp2/wit.data",
		"/u/wit/wit-data/brenda/samp2b/wit.data",
		"/u/wit/wit-data/brenda/bcase10b/wit.data",
		"/u/wit/wit-data/brenda/case10b/wit.data",
		"/u/wit/wit-data/csi/case10/wit.data",
		"/u/wit/wit-data/csi/case11/wit.data",
		"/u/wit/wit-data/csi/case09/wit.data",
		"/u/wit/wit-data/examples/diner/wit.data",
		"/u/wit/wit-data/examples/neglead/wit.data",
		"/u/wit/wit-data/examples/diner12/wit.data",
		"/u/wit/wit-data/examples/chal1/wit.data",
		"/u/wit/wit-data/examples/difWit/wit.data",
		"/u/wit/wit-data/examples/bldAhead/wit.data",
		"/u/wit/wit-data/examples/subs/wit.data",
		"/u/wit/wit-data/examples/twoprod/wit.data",
		"/u/wit/wit-data/examples/chal2/wit.data",
		"/u/wit/wit-data/examples/dillen/wit.data",
		"/u/wit/wit-data/examples/ex1/wit.data",
// "/u/wit/wit-data/examples/ex1/supply.data",    //WIT READ DATA FAILS
		"/u/wit/wit-data/examples/wutltest/wit2.data",
		"/u/wit/wit-data/examples/diner12a/wit.data",
		"/u/wit/wit-data/holder/lh/wit.data",
		"/u/wit/wit-data/holder/lht/wit.data",
		"/u/wit/wit-data/standard/obj1/wit.data",
		"/u/wit/wit-data/standard/obj1.bounds/wit.data",
		"/u/wit/wit-data/standard/obj2/wit.data",
		"/u/wit/wit-data/standard/obj2.nobounds/wit.data",
		"/u/wit/wit-data/wally/simple2/wit.data",
		"/u/wit/wit-data/wally/simple/wit.data",
		"/u/wit/wit-data/wally/obj1s2d1/wit.data",
		"/u/wit/wit-data/wally/obj1twodemands/wit.data",
		"/u/wit/wit-data/wally/deniseLps/wit.data",
		"/u/wit/wit-data/operations/case2/wit.data",
		"/u/wit/wit-data/operations/case3/wit.data",
		"/u/wit/wit-data/operations/case4/wit.data",
		"/u/wit/wit-data/xwit/wit.data"
		};

	int retVal=0;
	bool errorsOccured=false;  

	for (int i=0;i<nFiles;i++)
	{
		WitRun * wr1;
		witNewRun( &wr1 );
		witInitialize ( wr1 );
		witSetMesgTimesPrint(wr1,WitTRUE,WitINFORMATIONAL_MESSAGES,0);

//		retVal = witXMLRead(wr1,"temp.xml");
		witReadData(wr1,witFiles[i]);
//		witReadData(wr1,"../data/wit.data");
		assert( retVal==0 );
        
		retVal = witXMLWrite(wr1,"../src/wit.dtd","temp.xml");
		assert( retVal==0 );
		witWriteData(wr1,"temp.wit");

		WitRun * wr2;		// create the second WitRun
		witNewRun( &wr2 );
		witInitialize ( wr2 );
		witSetMesgTimesPrint(wr2,WitTRUE,WitINFORMATIONAL_MESSAGES,0);

		retVal = witXMLRead(wr2,"temp.xml"); // read the output file
		assert( retVal==0 );

		WitRun * wr3;
		witNewRun( &wr3 );
		witInitialize ( wr3 );
		witSetMesgTimesPrint(wr3,WitTRUE,WitINFORMATIONAL_MESSAGES,0);

		witReadData(wr3,"temp.wit");

		//compare 2 WitRuns
		CompareWitRuns(wr2,wr3);

		system("rm -f temp.wit");
		witDeleteRun( wr3 );
		witDeleteRun( wr2 );
		witDeleteRun( wr1 );
		cerr << "Finished testing file '" << witFiles[i] << "'.\n";
	}

 	cerr << "\nAll tests completed successfully.\n";

} /* main */

@


1.2
log
@By Shuzheng Liu,
  unitTest.C: put the temp file in working directory.
  witXML.C: modify function WriteProblem so that the value of optInitMethod will not be printed out.
  witXMLApi.C: change the error message so the reference to the WitRun is the first/second WitRun instead of WitRun1/WitRun2.
@
text
@d29 1
a59 1
		"/u/wit/wit-data/examples/wutltest/wit.data",
d92 1
a92 1
        assert( retVal==0 );
d94 3
a96 2
        retVal = witXMLWrite(wr1,"../src/wit.dtd","temp.xml");
        assert( retVal==0 );
d106 7
d114 1
a114 1
		CompareWitRuns(wr1,wr2);
d116 2
@


1.1
log
@Initial revision
@
text
@d94 1
a94 1
        retVal = witXMLWrite(wr1,"../src/wit.dtd","../data/temp.xml");
d102 1
a102 1
		retVal = witXMLRead(wr2,"../data/temp.xml"); // read the output file
@


1.1.1.1
log
@Importing wit xml code
@
text
@@
