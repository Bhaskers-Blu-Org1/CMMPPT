head	1.2;
access;
symbols
	sce_5_01_20080919:1.2
	latest_sce_4_20_20060523:1.2.0.6
	sce_4_20_20060523:1.2
	latest_sce4_20_OSL:1.2.0.4
	sce_4_20_OSL:1.2
	sce_4_20_20051222:1.2
	sce_4_10_30050426:1.2
	sce_4_05_20040511:1.2
	sce_4_00_20040201:1.2
	nextGenBranch:1.2.0.2
	nextGenRoot:1.2
	sce_3_30_20030627:1.2
	EndRw-branch:1.1.1.1.0.14
	Root-of-EndRw:1.1.1.1
	EndWitRw-branch:1.1.1.1.0.12
	Root-of-EndWitRw:1.1.1.1
	RwToStl-branch:1.1.1.1.0.10
	Root-of-RwToStl:1.1.1.1
	latest_sce_3_10_20010924:1.1.1.1.0.8
	sce_3_10_20010924:1.1.1.1
	latest_sce_3_00_20010601:1.1.1.1.0.6
	sce_3_00_20010601:1.1.1.1
	latest_sce_2_31_20010308:1.1.1.1.0.4
	sce_2_31_20010308:1.1.1.1
	latest_sce_2_31_20001003:1.1.1.1.0.2
	sce_2_31_20001003:1.1.1.1
	start:1.1.1.1
	IBM:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2003.01.15.19.36.54;	author rwToStl;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.25.18.36.49;	author wit;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.25.18.36.49;	author wit;	state Exp;
branches
	1.1.1.1.14.1;
next	;

1.1.1.1.14.1
date	2003.01.08.17.43.13;	author rwToStl;	state Exp;
branches;
next	;


desc
@@


1.2
log
@commiting to main branch witutil, scenario, and sce code which removes RW
@
text
@#ifndef sce_dblink_h
#define sce_dblink_h

// RW2STL - inserted:
#include <vector>
// End of RW2STL - inserted includes.

#include <sce/src/dbObj.h>
#include <sce/src/arg.h>

class SceDBObj;
class SceArgList;

typedef SceArgList *  SceArgListPtr;
// RW2STL - declare   (RWGVector,        SceArgListPtr)

// RW2STL - declare   (RWGOrderedVector, SceArgListPtr)


typedef std::vector<SceArgListPtr> SceArgListPtrVector; // RW2STL - typedef RWGOrderedVector(SceArgListPtr) SceArgListPtrVector;


class SceDBLink
{ 
public:
  SceDBLink(SceDBObj&);
  virtual ~SceDBLink();
  //execute DB update
  virtual void update(const char* field);
  //execute DB insert for a field
  virtual void insert(const char* field){};
  //execute DB insertion of new records
  virtual void insert();
  // insert data into data set
  virtual void insert(const SceArgList&);
  void export(const char* field){}
  void import(const char* fileName){}
  SceArgList& operator[](size_t i) const;
  size_t size() const;
  inline void nPeriods (int thePeriods) { nPeriods_ = thePeriods;}
  inline int nPeriods () const { return nPeriods_;}
  
protected:
  
  SceDBLink();
  int nPeriods_;
  SceArgListPtrVector& dataSet_;
  SceDBObj& tbl_;
  
private:
  SceDBLink(const SceDBLink&);
  SceDBLink& operator= (const SceDBLink&);
};

#endif
@


1.1
log
@Initial revision
@
text
@d4 4
a7 2
#include <rw/cstring.h>
#include <rw/gordvec.h>
d15 6
a20 2
declare   (RWGVector,        SceArgListPtr)
declare   (RWGOrderedVector, SceArgListPtr)
a21 1
typedef RWGOrderedVector(SceArgListPtr) SceArgListPtrVector;
d39 1
a39 1
  size_t entries() const;
@


1.1.1.1
log
@Import sce
@
text
@@


1.1.1.1.14.1
log
@Roguewave is gone
@
text
@d4 2
a5 4
// RW2STL - inserted:
#include <vector>
// End of RW2STL - inserted includes.

d13 2
a14 6
// RW2STL - declare   (RWGVector,        SceArgListPtr)

// RW2STL - declare   (RWGOrderedVector, SceArgListPtr)


typedef std::vector<SceArgListPtr> SceArgListPtrVector; // RW2STL - typedef RWGOrderedVector(SceArgListPtr) SceArgListPtrVector;
d16 1
d34 1
a34 1
  size_t size() const;
@

