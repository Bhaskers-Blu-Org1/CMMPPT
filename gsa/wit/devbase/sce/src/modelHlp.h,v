head	1.4;
access;
symbols
	sce_5_01_20080919:1.4
	latest_sce_4_20_20060523:1.3.0.4
	sce_4_20_20060523:1.3
	latest_sce4_20_OSL:1.3.0.2
	sce_4_20_OSL:1.3
	sce_4_20_20051222:1.3
	sce_4_10_30050426:1.2
	sce_4_05_20040511:1.2
	sce_4_00_20040201:1.2
	nextGenBranch:1.2.0.2
	nextGenRoot:1.2
	sce_3_30_20030627:1.2
	EndRw-branch:1.1.1.1.0.14
	Root-of-EndRw:1.1.1.1
	EndWitRw-branch:1.1.1.1.0.12
	Root-of-EndWitRw:1.1.1.1
	RwToStl-branch:1.1.1.1.0.10
	Root-of-RwToStl:1.1.1.1
	latest_sce_3_10_20010924:1.1.1.1.0.8
	sce_3_10_20010924:1.1.1.1
	latest_sce_3_00_20010601:1.1.1.1.0.6
	sce_3_00_20010601:1.1.1.1
	latest_sce_2_31_20010308:1.1.1.1.0.4
	sce_2_31_20010308:1.1.1.1
	latest_sce_2_31_20001003:1.1.1.1.0.2
	sce_2_31_20001003:1.1.1.1
	start:1.1.1.1
	IBM:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2006.08.09.16.32.17;	author ervolina;	state Exp;
branches;
next	1.3;

1.3
date	2005.11.09.18.32.47;	author ervolina;	state Exp;
branches;
next	1.2;

1.2
date	2003.01.15.19.36.56;	author rwToStl;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.25.18.36.52;	author wit;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.25.18.36.52;	author wit;	state Exp;
branches
	1.1.1.1.14.1;
next	;

1.1.1.1.14.1
date	2003.01.08.17.43.16;	author rwToStl;	state Exp;
branches;
next	;


desc
@@


1.4
log
@initial changes for sce4.40
@
text
@// file: modelHlp.h (model helper)
// author: robin

#ifndef  LGFRSCEMODELHELPER_H
#define  LGFRSCEMODELHELPER_H

//#include <scenario/src/part.h>
#include <sce/src/sceParam.h>



// forward References
//class WitRun;


// SCE heuristic model helper class
// Has as it's member data all the
// default parameters for a non-optimization model
class LgFrSceHeurModelHelper {

public:
  
// default constructor
LgFrSceHeurModelHelper();

// general constructor
LgFrSceHeurModelHelper( LgFrSceSetOfParameters & setOfParameters);

  // get default priority
  const
  int
  defaultPriority () const ;

  // get default explicit bop preference
  const
  float
  defaultExplicitBopPreference () const ;

  // get default aggregate bop preference
  const
  float
  defaultAggregateBopPreference () const ;

  // get default interPlant bop preference
  const
  float
  defaultInterPlantBopPreference () const ;


  // get default default bop preference
  const
  float
  defaultDefaultBopPreference () const ;

  // get default default bop preference
  const
  int
  defaultShipLateLimit () const ;

  
  
// Return a copy in the heap
LgFrSceHeurModelHelper*
clone()
const;


// copy constructor
LgFrSceHeurModelHelper(const LgFrSceHeurModelHelper& source);

// assignment operator
LgFrSceHeurModelHelper&
operator=(const LgFrSceHeurModelHelper& rhs);

// destructor
virtual
~LgFrSceHeurModelHelper();

     
// self-test
static void test();

private:

  int defaultPriority_ ;
  float defaultExplicitBopPreference_ ;
  float defaultInterPlantBopPreference_ ;
  float defaultAggregateBopPreference_ ;
  float defaultDefaultBopPreference_ ;    
  int defaultShipLateLimit_ ;
};
// ----------
// SCE lp model helper class
// Has as it's member data all the
// default parameters for an optimization model
class LgFrSceLpModelHelper {

public:
  
// default constructor
LgFrSceLpModelHelper();

// general constructor
LgFrSceLpModelHelper(LgFrSceSetOfParameters & setOfParameters);

// get default obj1 ship reward
const
float
defaultObj1ShipReward () const ;

// get default periodic interest rate
const
float
periodicInterestRate () const ;  

// get default Stock Cost Real Parts
const
float
obj1DefaultStockCostRealParts () const ;  


// get default obj1 prod cost real parts
const
float
defaultObj1ProdCostRealParts () const ;
  
// get default obj1 prod cost disc rate real parts
const
float
obj1ProdCostDiscRateRealParts () const ;
  
// get default obj1 prod cost real parts exec cost real operations
const
float
defaultObj1ExecCostRealOperations () const ;
  
// get obj1 exec cost disc rate real ops
const
float
obj1ExecCostDiscRateRealOperations () const ;
  
// get option ration supply stock penalty
const
float
optionRatioSupplyStockPenalty () const ;
  
// get default option ship reward
const
float
defaultOptionShipReward () const ;

// get featureSetStockPenalty
const
float
featureSetStockPenalty () const ;

// get featureSetStockPenalty
const
float
featureSetScrapPenalty () const ;
  
// get featureSetStockPenalty
const
float
defaultSubPenalty () const ; 
  
  
// Return a copy in the heap
LgFrSceLpModelHelper*
clone()
const;


// copy constructor
LgFrSceLpModelHelper(const LgFrSceLpModelHelper& source);

// assignment operator
LgFrSceLpModelHelper&
operator=(const LgFrSceLpModelHelper& rhs);

// destructor
virtual
~LgFrSceLpModelHelper();

     
// self-test
static void test();

private:

  float defaultObj1ShipReward_ ;
  float periodicInterestRate_ ;
  float obj1DefaultStockCostRealParts_;
  float defaultObj1ProdCostRealParts_ ;
  float obj1ProdCostDiscRateRealParts_ ;
  float defaultObj1ExecCostRealOperations_ ;
  float obj1ExecCostDiscRateRealOperations_ ;
  float optionRatioSupplyStockPenalty_ ;
  float defaultOptionShipReward_ ;
  float featureSetStockPenalty_ ;
  float featureSetScrapPenalty_ ;
  float defaultSubPenalty_ ;

};

#endif
@


1.3
log
@removed the "binning" stuff which is now obsolete
@
text
@d116 6
d193 1
@


1.2
log
@commiting to main branch witutil, scenario, and sce code which removes RW
@
text
@a48 6
#ifdef BINNING_OPERATION_TEMP_SOLUTION
  // get default bin bop preference
  const
  float
  defaultBinBopPreference () const ;
#endif
a87 3
#ifdef BINNING_OPERATION_TEMP_SOLUTION
  float defaultBinBopPreference_ ;
#endif
@


1.1
log
@Initial revision
@
text
@a7 1
#include <rw/cstring.h>
@


1.1.1.1
log
@Import sce
@
text
@@


1.1.1.1.14.1
log
@Roguewave is gone
@
text
@d8 1
@

