head	1.3;
access;
symbols
	sce_5_01_20080919:1.2
	latest_sce_4_20_20060523:1.2.0.6
	sce_4_20_20060523:1.2
	latest_sce4_20_OSL:1.2.0.4
	sce_4_20_OSL:1.2
	sce_4_20_20051222:1.2
	sce_4_10_30050426:1.2
	sce_4_05_20040511:1.2
	sce_4_00_20040201:1.2
	nextGenBranch:1.2.0.2
	nextGenRoot:1.2
	sce_3_30_20030627:1.2
	EndRw-branch:1.1.1.1.0.14
	Root-of-EndRw:1.1.1.1
	EndWitRw-branch:1.1.1.1.0.12
	Root-of-EndWitRw:1.1.1.1
	RwToStl-branch:1.1.1.1.0.10
	Root-of-RwToStl:1.1.1.1
	latest_sce_3_10_20010924:1.1.1.1.0.8
	sce_3_10_20010924:1.1.1.1
	latest_sce_3_00_20010601:1.1.1.1.0.6
	sce_3_00_20010601:1.1.1.1
	latest_sce_2_31_20010308:1.1.1.1.0.4
	sce_2_31_20010308:1.1.1.1
	latest_sce_2_31_20001003:1.1.1.1.0.2
	sce_2_31_20001003:1.1.1.1
	start:1.1.1.1
	IBM:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2009.12.08.13.58.34;	author ervolina;	state Exp;
branches;
next	1.2;

1.2
date	2003.01.15.19.36.55;	author rwToStl;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.25.18.36.49;	author wit;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.25.18.36.49;	author wit;	state Exp;
branches
	1.1.1.1.14.1;
next	;

1.1.1.1.14.1
date	2003.01.08.17.43.14;	author rwToStl;	state Exp;
branches;
next	;


desc
@@


1.3
log
@more fixes for 6.1
@
text
@#ifndef LgFrDataInterfaceImplementationFromSceFiles_h
#define LgFrDataInterfaceImplementationFromSceFiles_h

// RW2STL - inserted:
#include <string>
// End of RW2STL - inserted includes.


// This file contains the class: 
//    LgFrDataInterfaceFromSceFiles
//
// The following methods cause an abort when invoked:
//      rawParts()
//      productPart()
//      capacityParts()
//      partAttribute()
//      committedDemands();
//      newOpportunityDemands();
//      firmForecastDemands();
//      riskForecastDemands();
//      demandAttribute()
//
//  This class has a method "filename" which should be used by initial 
//  problem to obtain name of sce data file.

   
  //--------------------------------------------------------------------
  //  
//      

#include <wit/src/wit.h>
#include <scenario/src/difWitR.h>
#include <scenario/src/calendar.h>




// #include <wit/src/wit.h>
#include <scenario/src/dif.h>
#include <scenario/src/difImpl.h>

#include <sce/src/scrub.h>
// Forward references

class LgFrWitRunVeneer;
class LgFrDataInterfaceEssentials;

//------------------------------------------------------------------------------
// To register all global functions for this class
//------------------------------------------------------------------------------
void
registerSceFilesDifImpFunctions(LgFrDataInterfaceImplementation *dImpSce);

//------------------------------------------------------------------------------
// To create a LgFrDataInterfaceImplementationFromCmrpFiles object
//------------------------------------------------------------------------------
LgFrDataInterfaceImplementation *
createSceFilesDifImp(const std::string filename);


#if 0
//-------------------------------------------------------------------
//
//   Global functions to obtain the defined parts and capacities.
//
//-------------------------------------------------------------------

// difSceFGetRawPart global function (registering in the attribute table).
// Get raw parts for the Perfect_World ATP and insert them into set_of_part
// Return: a LgFrPartVector object (vector of raw parts).

void *
difSceFGetRawParts(
    const LgFrDataInterfaceImplementation * dImp,
    const LgFrItemPtrVector*,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);

// difSceFGetRawPart global function (registering in the attribute table).
// Get raw parts for the Perfect_World ATP and insert them into set_of_part
// Return: a LgFrPartVector object (vector of product parts).

void*
difSceFGetProductParts(
    const LgFrDataInterfaceImplementation * dImp,
    const LgFrItemPtrVector* ,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);

// difSceFGetRawPart global function (registering in the attribute table).
// Get raw parts for the Perfect_World ATP and insert them into set_of_part
// Return: a LgFrPartVector object (vector of product parts).

void*
difSceFGetCapacityParts(
    const LgFrDataInterfaceImplementation * dImp,
    const LgFrItemPtrVector* ,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);
//-----------------------------------------------------------------------------
//
//  Global functions to obtain raw material attributes
//
//-----------------------------------------------------------------------------



// difSceFGetRawUnitCost global function (registered in the attribute table)
// it returns a LgFrFloatVector object.

void *
difSceFGetRawUnitCost(
  const LgFrDataInterfaceImplementation * dImp,
  const LgFrItemPtrVector* itemPtrOrdVecPtr,
  LgFrError & status,
  const LgFrDataInterfaceEssentials * difEssenPtr = 0);

// difSceFGetRawProcCost global function (registered in the attribute table).
// It returns a LgFrFloatVector object.

void *
difSceFGetRawProcCost(
    const LgFrDataInterfaceImplementation * difImp,
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);

// difSceFGetRawConstrained global function (registered in the attribute
// table).  It returns a LgFrIntVector object.

void *
difSceFGetRawConstrained(
    const LgFrDataInterfaceImplementation * difImp,
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);

// difSceFGetRawProcLeadTime global function (registered in the attribute
// table).  It returns a LgFrIntVector object.

void *
difSceFGetRawProcLeadTime(
    const LgFrDataInterfaceImplementation * difImp,
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);

// difSceFGetRawObj1ScrapCost global function (registered in the attribute
// table).  It returns a LgFrIntVector object.

void *
difSceFGetRawObj1ScrapCost(
    const LgFrDataInterfaceImplementation * difImp,
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);

// difSceFGetRawObj1StockCost global function (registered in the attribute
// table).  It returns a LgFrIntVector object.

void *
difSceFGetRawObj1StockCost(
    const LgFrDataInterfaceImplementation * difImp,
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);

// difSceFGetRawSupplyVol global function (registered in the attribute
// table).  It returns a LgFrIntVector object.

void *
difSceFGetRawSupplyVol(
    const LgFrDataInterfaceImplementation * difImp,
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
    LgFrError & status,
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);

//-----------------------------------------------------------------------------
//
//  Global functions to obtain producible part attributes
//
//-----------------------------------------------------------------------------
// difSceFGetProductUnitCost global function (registered in the attribute
// table).  It returns a LgFrIntVector object.

void *
difSceFGetProductUnitCost(
  const LgFrDataInterfaceImplementation * dImp,
  const LgFrItemPtrVector* itemPtrOrdVecPtr,
  LgFrError & status,
  const LgFrDataInterfaceEssentials * difEssenPtr = 0);

// difSceFGetProductProcCost global function (registered in the attribute
// table).  It returns a LgFrIntVector object.

void *
difSceFGetProductProcCost(
  const LgFrDataInterfaceImplementation * dImp,
  const LgFrItemPtrVector* itemPtrOrdVecPtr,
  LgFrError & status,
  const LgFrDataInterfaceEssentials * difEssenPtr = 0);
// difSceFGetProductConstrained global function (registered in the attribute
// table).  It returns a LgFrIntVector object.

void *
difSceFGetProductConstrained(
  const LgFrDataInterfaceImplementation * dImp,
  const LgFrItemPtrVector* itemPtrOrdVecPtr,
  LgFrError & status,
  const LgFrDataInterfaceEssentials * difEssenPtr = 0);

// difSceFGetProducYieldt global function (registered in the attribute
// table).  It returns a LgFrIntVector object.

void *
difSceFGetProductYield(
  const LgFrDataInterfaceImplementation * dImp,
  const LgFrItemPtrVector* itemPtrOrdVecPtr,
  LgFrError & status,
  const LgFrDataInterfaceEssentials * difEssenPtr = 0);

// difSceFGetProductProcLeadTime global function (registered in the attribute
// table).  It returns a LgFrIntVector object.

void *
difSceFGetProductProcLeadTime(
  const LgFrDataInterfaceImplementation * dImp,
  const LgFrItemPtrVector* itemPtrOrdVecPtr,
  LgFrError & status,
  const LgFrDataInterfaceEssentials * difEssenPtr = 0);

// difSceFGetProductCycleTime global function (registered in the attribute
// table).  It returns a LgFrIntVector object.

void *
difSceFGetProductCycleTime(
  const LgFrDataInterfaceImplementation * dImp,
  const LgFrItemPtrVector* itemPtrOrdVecPtr,
  LgFrError & status,
  const LgFrDataInterfaceEssentials * difEssenPtr = 0);

// difSceFGetObj1ProdCost global function (registered in the attribute
// table).  It returns a LgFrIntVector object.
void *
difSceFGetProductObj1ProdCost(
  const LgFrDataInterfaceImplementation * dImp,
  const LgFrItemPtrVector* itemPtrOrdVecPtr,
  LgFrError & status,
  const LgFrDataInterfaceEssentials * difEssenPtr = 0);

// difSceFGetProductObj1ScrapCost global function (registered in the attribute

// table).  It returns a LgFrIntVector object.

void *
difSceFGetProductObj1ScrapCost(
  const LgFrDataInterfaceImplementation * dImp,
  const LgFrItemPtrVector* itemPtrOrdVecPtr,
  LgFrError & status,
  const LgFrDataInterfaceEssentials * difEssenPtr = 0);

// difSceFGetProductObj1StockCost global function (registered in the attribute
// table).  It returns a LgFrIntVector object.

void *
difSceFGetProductObj1StockCost(
  const LgFrDataInterfaceImplementation * dImp,
  const LgFrItemPtrVector* itemPtrOrdVecPtr,
  LgFrError & status,
  const LgFrDataInterfaceEssentials * difEssenPtr = 0);

// difSceFGetProductSupplyVol global function (registered in the attribute
// table).  It returns a LgFrIntVector object.

void *
difSceFGetProductSupplyVol(
  const LgFrDataInterfaceImplementation * dImp,
  const LgFrItemPtrVector* itemPtrOrdVecPtr,
  LgFrError & status,
  const LgFrDataInterfaceEssentials * difEssenPtr = 0);

void *
difSceFGetProductMinLotSize(
  const LgFrDataInterfaceImplementation * dImp,
  const LgFrItemPtrVector* itemPtrOrdVecPtr,
  LgFrError & status,
  const LgFrDataInterfaceEssentials * difEssenPtr = 0);


//-----------------------------------------------------------------------------

//
//  Global functions to obtain capacity attributes
//
//-----------------------------------------------------------------------------

// difSceFGetCapacityUnitCost global function (registered in the attribute
// table).  It returns a LgFrIntVector object.

void *
difSceFGetCapacityUnitCost(
  const LgFrDataInterfaceImplementation * dImp,
  const LgFrItemPtrVector* itemPtrOrdVecPtr,
  LgFrError & status,
  const LgFrDataInterfaceEssentials * difEssenPtr = 0);

// difSceFGetCapacityConstrained global function (registered in the attribute
// table).  It returns a LgFrIntVector object.

void *
difSceFGetCapacityConstrained(
  const LgFrDataInterfaceImplementation * dImp,
  const LgFrItemPtrVector* itemPtrOrdVecPtr,
  LgFrError & status,
  const LgFrDataInterfaceEssentials * difEssenPtr = 0);

// difSceFGetCapacityObj1ScrapCost global function (registered in the attribut
// table).  It returns a LgFrIntVector object.

void *
difSceFGetCapacityObj1ScrapCost(
  const LgFrDataInterfaceImplementation * dImp,
  const LgFrItemPtrVector* itemPtrOrdVecPtr,
  LgFrError & status,
  const LgFrDataInterfaceEssentials * difEssenPtr = 0);

// difSceFGetCapacitySupplyVol global function (registered in the attribute
// table).  It returns a LgFrIntVector object.

void *
difSceFGetCapacitySupplyVol(
  const LgFrDataInterfaceImplementation * dImp,
  const LgFrItemPtrVector* itemPtrOrdVecPtr,
  LgFrError & status,
  const LgFrDataInterfaceEssentials * difEssenPtr = 0);


//-----------------------------------------------------------------------------
//
//  Global functions  to obtain demands
//
//-----------------------------------------------------------------------------


// difSceFGetCommittedDemands global function (registering in the attribute
// table).  Get committed demands for the Perfect_World ATP and insert
// them into set_of_demand.  Return: a LgFrDemandVector object (vector
// of committed demands).

void *
difSceFGetCommittedDemands(
  const LgFrDataInterfaceImplementation * dImp,
  const LgFrItemPtrVector* itemPtrOrdVecPtr,
  LgFrError & status,
  const LgFrDataInterfaceEssentials * difEssenPtr = 0);

// difSceFGetNewOpportunityDemands global function (registering in the attribu
// table).  Get committed demands for the Perfect_World ATP and insert
// them into set_of_demand.  Return: a LgFrDemandVector object (vector
// of committed demands).

void *
difSceFGetNewOpportunityDemands(
  const LgFrDataInterfaceImplementation * dImp,
  const LgFrItemPtrVector* itemPtrOrdVecPtr,
  LgFrError & status,
  const LgFrDataInterfaceEssentials * difEssenPtr = 0);

// difSceFGetFirmForecastDemands global function (registering in the attribute

// table).  Get committed demands for the Perfect_World ATP and insert
// them into set_of_demand.  Return: a LgFrDemandVector object (vector
// of committed demands).

void *
difSceFGetFirmForecastDemands(
  const LgFrDataInterfaceImplementation * dImp,
  const LgFrItemPtrVector* itemPtrOrdVecPtr,
  LgFrError & status,
  const LgFrDataInterfaceEssentials * difEssenPtr = 0);

// difSceFGetRiskForecastDemands global function (registering in the attribute

// table).  Get committed demands for the Perfect_World ATP and insert
// them into set_of_demand.  Return: a LgFrDemandVector object (vector
// of committed demands).

void *
difSceFGetRiskForecastDemands(
  const LgFrDataInterfaceImplementation * dImp,
  const LgFrItemPtrVector* itemPtrOrdVecPtr,
  LgFrError & status,
  const LgFrDataInterfaceEssentials * difEssenPtr = 0);


//-----------------------------------------------------------------------------
//
//  Global functions to obtain demand attributes
//
//-----------------------------------------------------------------------------

// difSceFGetDemandGrossRev global function (registering in the attribute
// table).  Get committed demands for the Perfect_World ATP and insert
// them into set_of_demand.  Return: a LgFrDemandVector object (vector
// of committed demands).

void *
difSceFGetDemandGrossRev(
  const LgFrDataInterfaceImplementation * dImp,
  const LgFrItemPtrVector* itemPtrOrdVecPtr,
  LgFrError & status,
  const LgFrDataInterfaceEssentials * difEssenPtr = 0);

// difSceFGetDemandVol global function (registering in the attribute
// table).  Get committed demands for the Perfect_World ATP and insert

// them into set_of_demand.  Return: a LgFrDemandVector object (vector
// of committed demands).

void *
difSceFGetDemandVol(
  const LgFrDataInterfaceImplementation * dImp,
  const LgFrItemPtrVector* itemPtrOrdVecPtr,
  LgFrError & status,
  const LgFrDataInterfaceEssentials * difEssenPtr = 0);

// difSceFGetDemandObj1CumShipReward global function (registering in the attri
// table).  Get committed demands for the Perfect_World ATP and insert
// them into set_of_demand.  Return: a LgFrDemandVector object (vector
// of committed demands).

void *
difSceFGetDemandObj1CumShipReward(
  const LgFrDataInterfaceImplementation * dImp,
  const LgFrItemPtrVector* itemPtrOrdVecPtr,
  LgFrError & status,
  const LgFrDataInterfaceEssentials * difEssenPtr = 0);

// difSceFGetDemandObj1ShipReward global function (registering in the attribut
// table).  Get committed demands for the Perfect_World ATP and insert
// them into set_of_demand.  Return: a LgFrDemandVector object (vector
// of committed demands).

void *
difSceFGetDemandObj1ShipReward(
  const LgFrDataInterfaceImplementation * dImp,
  const LgFrItemPtrVector* itemPtrOrdVecPtr,
  LgFrError & status,
  const LgFrDataInterfaceEssentials * difEssenPtr = 0);


void *
difSceFGetDemandPriority(
  const LgFrDataInterfaceImplementation * dImp,
  const LgFrItemPtrVector* itemPtrOrdVecPtr,
  LgFrError & status,
  const LgFrDataInterfaceEssentials * difEssenPtr = 0);

//---------------------------------------------------------------------
// Define BOM
//---------------------------------------------------------------------
void*
difSceFDefineBom(
  const LgFrDataInterfaceImplementation * dImp,
  const LgFrItemPtrVector* itemPtrOrdVecPtr,
  LgFrError & status,
  const LgFrDataInterfaceEssentials * difEssenPtr = 0);

#endif

//---------------------------------------------------------------------
//
//   Data interface from Wit Run
//
//---------------------------------------------------------------------

class LgFrDataInterfaceImplementationFromSceFiles :
  public LgFrDataInterfaceImplementation {

//private:

public:

  virtual int GetDIIType() const { return __LGFRDATAINTERFACEIMPLEMENTATIONFROMSCEFILES; }

  //--------------------------------------------------------------------
  //
  //   Methods for processing file in minor ways
  //
  //-------------------------------------------------------------------

  // Find out date in header
  static
    LgFrCalendar
      calendar(const std::string fileNameWithoutSuffix);


  //--------------------------------------------------------------------
  //  
  //   Dynamic type query methods
  //
 
 
  //-------------------------------------------------------------------
  virtual
  isAReturnType
  isA()
       const;

       
  
    
  //--------------------------------------------------------------------
  //  
  //   Standard class methods
  //
  //-------------------------------------------------------------------


  // Make a clone copy of this object
  virtual
    LgFrDataInterfaceImplementation *
        clone()
           const;
           
  // Preferred Constructor
  LgFrDataInterfaceImplementationFromSceFiles(
     std::string filename);

    LgFrDataInterfaceImplementationFromSceFiles(
     std::string filename, std::string scrubDir,
     bool scrubMode, bool scrubOnly); 
  
  // Destructor
  virtual
     ~LgFrDataInterfaceImplementationFromSceFiles();

  // Assignment operator.
  LgFrDataInterfaceImplementationFromSceFiles&
    operator=(
           const LgFrDataInterfaceImplementationFromSceFiles& rhs);


  // Copy constructor
  LgFrDataInterfaceImplementationFromSceFiles(
           const LgFrDataInterfaceImplementationFromSceFiles& source);


#if 0
  // Tests this class.  Only returns if all tests passed
  static
    void
      test ();

static
void
contextTest
  (
   LgFrDataInterface    	* ts1dif,	// testScenario1's
   LgFrLastProblemSolved        & lps,          // testScenario1's
   LgFrDataInterface    	* ts1dupDif,	// testScenario1dup's
   LgFrDataInterface    	* ts2dif,	// testScenario2's
   const LgFrScenario      * scenPtr);
#endif
  

//--------------
//   specific methods
//----------------

virtual
std::string filename()
const;
    
LgFrSceScrubber scrubber() const;
  
private:

  std::string  filename_;
  LgFrSceScrubber myScrubber_;
  
protected:


   // Default Constructor
  LgFrDataInterfaceImplementationFromSceFiles();
  

  
};


#endif
@


1.2
log
@commiting to main branch witutil, scenario, and sce code which removes RW
@
text
@d60 2
d469 1
a469 1

@


1.1
log
@Initial revision
@
text
@d4 4
a30 2
#include <rw/regexp.h>
#include <rw/hashdict.h>
d58 1
a58 1
createSceFilesDifImp(const RWCString filename);
d68 1
a68 1
// Return: a LgFrOrderedVectorPart object (vector of raw parts).
d73 1
a73 1
    const LgFrOrderedVectorItemPtr*,
d75 1
a75 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d79 1
a79 1
// Return: a LgFrOrderedVectorPart object (vector of product parts).
d84 1
a84 1
    const LgFrOrderedVectorItemPtr* ,
d86 1
a86 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d90 1
a90 1
// Return: a LgFrOrderedVectorPart object (vector of product parts).
d95 1
a95 1
    const LgFrOrderedVectorItemPtr* ,
d97 1
a97 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d107 1
a107 1
// it returns a LgFrVectorFloat object.
d112 1
a112 1
  const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d114 1
a114 1
  const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d117 1
a117 1
// It returns a LgFrVectorFloat object.
d122 1
a122 1
    const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d124 1
a124 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d127 1
a127 1
// table).  It returns a LgFrVectorInt object.
d132 1
a132 1
    const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d134 1
a134 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d137 1
a137 1
// table).  It returns a LgFrVectorInt object.
d142 1
a142 1
    const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d144 1
a144 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d147 1
a147 1
// table).  It returns a LgFrVectorInt object.
d152 1
a152 1
    const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d154 1
a154 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d157 1
a157 1
// table).  It returns a LgFrVectorInt object.
d162 1
a162 1
    const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d164 1
a164 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d167 1
a167 1
// table).  It returns a LgFrVectorInt object.
d172 1
a172 1
    const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d174 1
a174 1
    const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d182 1
a182 1
// table).  It returns a LgFrVectorInt object.
d187 1
a187 1
  const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d189 1
a189 1
  const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d192 1
a192 1
// table).  It returns a LgFrVectorInt object.
d197 1
a197 1
  const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d199 1
a199 1
  const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d201 1
a201 1
// table).  It returns a LgFrVectorInt object.
d206 1
a206 1
  const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d208 1
a208 1
  const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d211 1
a211 1
// table).  It returns a LgFrVectorInt object.
d216 1
a216 1
  const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d218 1
a218 1
  const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d221 1
a221 1
// table).  It returns a LgFrVectorInt object.
d226 1
a226 1
  const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d228 1
a228 1
  const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d231 1
a231 1
// table).  It returns a LgFrVectorInt object.
d236 1
a236 1
  const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d238 1
a238 1
  const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d241 1
a241 1
// table).  It returns a LgFrVectorInt object.
d245 1
a245 1
  const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d247 1
a247 1
  const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d251 1
a251 1
// table).  It returns a LgFrVectorInt object.
d256 1
a256 1
  const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d258 1
a258 1
  const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d261 1
a261 1
// table).  It returns a LgFrVectorInt object.
d266 1
a266 1
  const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d268 1
a268 1
  const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d271 1
a271 1
// table).  It returns a LgFrVectorInt object.
d276 1
a276 1
  const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d278 1
a278 1
  const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d283 1
a283 1
  const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d285 1
a285 1
  const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d296 1
a296 1
// table).  It returns a LgFrVectorInt object.
d301 1
a301 1
  const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d303 1
a303 1
  const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d306 1
a306 1
// table).  It returns a LgFrVectorInt object.
d311 1
a311 1
  const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d313 1
a313 1
  const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d316 1
a316 1
// table).  It returns a LgFrVectorInt object.
d321 1
a321 1
  const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d323 1
a323 1
  const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d326 1
a326 1
// table).  It returns a LgFrVectorInt object.
d331 1
a331 1
  const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d333 1
a333 1
  const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d345 1
a345 1
// them into set_of_demand.  Return: a LgFrOrderedVectorDemand object (vector
d351 1
a351 1
  const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d353 1
a353 1
  const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d357 1
a357 1
// them into set_of_demand.  Return: a LgFrOrderedVectorDemand object (vector
d363 1
a363 1
  const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d365 1
a365 1
  const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d370 1
a370 1
// them into set_of_demand.  Return: a LgFrOrderedVectorDemand object (vector
d376 1
a376 1
  const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d378 1
a378 1
  const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d383 1
a383 1
// them into set_of_demand.  Return: a LgFrOrderedVectorDemand object (vector
d389 1
a389 1
  const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d391 1
a391 1
  const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d402 1
a402 1
// them into set_of_demand.  Return: a LgFrOrderedVectorDemand object (vector
d408 1
a408 1
  const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d410 1
a410 1
  const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d415 1
a415 1
// them into set_of_demand.  Return: a LgFrOrderedVectorDemand object (vector
d421 1
a421 1
  const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d423 1
a423 1
  const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d427 1
a427 1
// them into set_of_demand.  Return: a LgFrOrderedVectorDemand object (vector
d433 1
a433 1
  const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d435 1
a435 1
  const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d439 1
a439 1
// them into set_of_demand.  Return: a LgFrOrderedVectorDemand object (vector
d445 1
a445 1
  const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d447 1
a447 1
  const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d453 1
a453 1
  const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d455 1
a455 1
  const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d463 1
a463 1
  const LgFrOrderedVectorItemPtr* itemPtrOrdVecPtr,
d465 1
a465 1
  const LgFrDataInterfaceEssentials * difEssenPtr = NULL);
d482 2
d493 1
a493 1
      calendar(const RWCString fileNameWithoutSuffix);
d526 1
a526 1
     RWCString filename);
d529 2
a530 2
     RWCString filename, RWCString scrubDir,
     RWBoolean scrubMode, RWBoolean scrubOnly); 
d570 1
a570 1
RWCString filename()
d577 1
a577 1
  RWCString  filename_;
@


1.1.1.1
log
@Import sce
@
text
@@


1.1.1.1.14.1
log
@Roguewave is gone
@
text
@a3 4
// RW2STL - inserted:
#include <string>
// End of RW2STL - inserted includes.

d27 2
d56 1
a56 1
createSceFilesDifImp(const std::string filename);
d66 1
a66 1
// Return: a LgFrPartVector object (vector of raw parts).
d71 1
a71 1
    const LgFrItemPtrVector*,
d73 1
a73 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d77 1
a77 1
// Return: a LgFrPartVector object (vector of product parts).
d82 1
a82 1
    const LgFrItemPtrVector* ,
d84 1
a84 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d88 1
a88 1
// Return: a LgFrPartVector object (vector of product parts).
d93 1
a93 1
    const LgFrItemPtrVector* ,
d95 1
a95 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d105 1
a105 1
// it returns a LgFrFloatVector object.
d110 1
a110 1
  const LgFrItemPtrVector* itemPtrOrdVecPtr,
d112 1
a112 1
  const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d115 1
a115 1
// It returns a LgFrFloatVector object.
d120 1
a120 1
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
d122 1
a122 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d125 1
a125 1
// table).  It returns a LgFrIntVector object.
d130 1
a130 1
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
d132 1
a132 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d135 1
a135 1
// table).  It returns a LgFrIntVector object.
d140 1
a140 1
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
d142 1
a142 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d145 1
a145 1
// table).  It returns a LgFrIntVector object.
d150 1
a150 1
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
d152 1
a152 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d155 1
a155 1
// table).  It returns a LgFrIntVector object.
d160 1
a160 1
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
d162 1
a162 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d165 1
a165 1
// table).  It returns a LgFrIntVector object.
d170 1
a170 1
    const LgFrItemPtrVector* itemPtrOrdVecPtr,
d172 1
a172 1
    const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d180 1
a180 1
// table).  It returns a LgFrIntVector object.
d185 1
a185 1
  const LgFrItemPtrVector* itemPtrOrdVecPtr,
d187 1
a187 1
  const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d190 1
a190 1
// table).  It returns a LgFrIntVector object.
d195 1
a195 1
  const LgFrItemPtrVector* itemPtrOrdVecPtr,
d197 1
a197 1
  const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d199 1
a199 1
// table).  It returns a LgFrIntVector object.
d204 1
a204 1
  const LgFrItemPtrVector* itemPtrOrdVecPtr,
d206 1
a206 1
  const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d209 1
a209 1
// table).  It returns a LgFrIntVector object.
d214 1
a214 1
  const LgFrItemPtrVector* itemPtrOrdVecPtr,
d216 1
a216 1
  const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d219 1
a219 1
// table).  It returns a LgFrIntVector object.
d224 1
a224 1
  const LgFrItemPtrVector* itemPtrOrdVecPtr,
d226 1
a226 1
  const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d229 1
a229 1
// table).  It returns a LgFrIntVector object.
d234 1
a234 1
  const LgFrItemPtrVector* itemPtrOrdVecPtr,
d236 1
a236 1
  const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d239 1
a239 1
// table).  It returns a LgFrIntVector object.
d243 1
a243 1
  const LgFrItemPtrVector* itemPtrOrdVecPtr,
d245 1
a245 1
  const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d249 1
a249 1
// table).  It returns a LgFrIntVector object.
d254 1
a254 1
  const LgFrItemPtrVector* itemPtrOrdVecPtr,
d256 1
a256 1
  const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d259 1
a259 1
// table).  It returns a LgFrIntVector object.
d264 1
a264 1
  const LgFrItemPtrVector* itemPtrOrdVecPtr,
d266 1
a266 1
  const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d269 1
a269 1
// table).  It returns a LgFrIntVector object.
d274 1
a274 1
  const LgFrItemPtrVector* itemPtrOrdVecPtr,
d276 1
a276 1
  const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d281 1
a281 1
  const LgFrItemPtrVector* itemPtrOrdVecPtr,
d283 1
a283 1
  const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d294 1
a294 1
// table).  It returns a LgFrIntVector object.
d299 1
a299 1
  const LgFrItemPtrVector* itemPtrOrdVecPtr,
d301 1
a301 1
  const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d304 1
a304 1
// table).  It returns a LgFrIntVector object.
d309 1
a309 1
  const LgFrItemPtrVector* itemPtrOrdVecPtr,
d311 1
a311 1
  const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d314 1
a314 1
// table).  It returns a LgFrIntVector object.
d319 1
a319 1
  const LgFrItemPtrVector* itemPtrOrdVecPtr,
d321 1
a321 1
  const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d324 1
a324 1
// table).  It returns a LgFrIntVector object.
d329 1
a329 1
  const LgFrItemPtrVector* itemPtrOrdVecPtr,
d331 1
a331 1
  const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d343 1
a343 1
// them into set_of_demand.  Return: a LgFrDemandVector object (vector
d349 1
a349 1
  const LgFrItemPtrVector* itemPtrOrdVecPtr,
d351 1
a351 1
  const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d355 1
a355 1
// them into set_of_demand.  Return: a LgFrDemandVector object (vector
d361 1
a361 1
  const LgFrItemPtrVector* itemPtrOrdVecPtr,
d363 1
a363 1
  const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d368 1
a368 1
// them into set_of_demand.  Return: a LgFrDemandVector object (vector
d374 1
a374 1
  const LgFrItemPtrVector* itemPtrOrdVecPtr,
d376 1
a376 1
  const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d381 1
a381 1
// them into set_of_demand.  Return: a LgFrDemandVector object (vector
d387 1
a387 1
  const LgFrItemPtrVector* itemPtrOrdVecPtr,
d389 1
a389 1
  const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d400 1
a400 1
// them into set_of_demand.  Return: a LgFrDemandVector object (vector
d406 1
a406 1
  const LgFrItemPtrVector* itemPtrOrdVecPtr,
d408 1
a408 1
  const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d413 1
a413 1
// them into set_of_demand.  Return: a LgFrDemandVector object (vector
d419 1
a419 1
  const LgFrItemPtrVector* itemPtrOrdVecPtr,
d421 1
a421 1
  const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d425 1
a425 1
// them into set_of_demand.  Return: a LgFrDemandVector object (vector
d431 1
a431 1
  const LgFrItemPtrVector* itemPtrOrdVecPtr,
d433 1
a433 1
  const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d437 1
a437 1
// them into set_of_demand.  Return: a LgFrDemandVector object (vector
d443 1
a443 1
  const LgFrItemPtrVector* itemPtrOrdVecPtr,
d445 1
a445 1
  const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d451 1
a451 1
  const LgFrItemPtrVector* itemPtrOrdVecPtr,
d453 1
a453 1
  const LgFrDataInterfaceEssentials * difEssenPtr = 0);
d461 1
a461 1
  const LgFrItemPtrVector* itemPtrOrdVecPtr,
d463 1
a463 1
  const LgFrDataInterfaceEssentials * difEssenPtr = 0);
a479 2
  virtual int GetDIIType() const { return __LGFRDATAINTERFACEIMPLEMENTATIONFROMSCEFILES; }

d489 1
a489 1
      calendar(const std::string fileNameWithoutSuffix);
d522 1
a522 1
     std::string filename);
d525 2
a526 2
     std::string filename, std::string scrubDir,
     bool scrubMode, bool scrubOnly); 
d566 1
a566 1
std::string filename()
d573 1
a573 1
  std::string  filename_;
@

