head	1.2;
access;
symbols
	sce_5_01_20080919:1.2
	latest_sce_4_20_20060523:1.2.0.6
	sce_4_20_20060523:1.2
	latest_sce4_20_OSL:1.2.0.4
	sce_4_20_OSL:1.2
	sce_4_20_20051222:1.2
	sce_4_10_30050426:1.2
	sce_4_05_20040511:1.2
	sce_4_00_20040201:1.2
	nextGenBranch:1.2.0.2
	nextGenRoot:1.2
	sce_3_30_20030627:1.2
	EndRw-branch:1.1.1.1.0.14
	Root-of-EndRw:1.1.1.1
	EndWitRw-branch:1.1.1.1.0.12
	Root-of-EndWitRw:1.1.1.1
	RwToStl-branch:1.1.1.1.0.10
	Root-of-RwToStl:1.1.1.1
	latest_sce_3_10_20010924:1.1.1.1.0.8
	sce_3_10_20010924:1.1.1.1
	latest_sce_3_00_20010601:1.1.1.1.0.6
	sce_3_00_20010601:1.1.1.1
	latest_sce_2_31_20010308:1.1.1.1.0.4
	sce_2_31_20010308:1.1.1.1
	latest_sce_2_31_20001003:1.1.1.1.0.2
	sce_2_31_20001003:1.1.1.1
	start:1.1.1.1
	IBM:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2003.01.15.19.36.57;	author rwToStl;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.25.18.36.53;	author wit;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.25.18.36.53;	author wit;	state Exp;
branches
	1.1.1.1.14.1;
next	;

1.1.1.1.14.1
date	2003.01.08.17.43.17;	author rwToStl;	state Exp;
branches;
next	;


desc
@@


1.2
log
@commiting to main branch witutil, scenario, and sce code which removes RW
@
text
@// file: sceAlMrp.h
// author:  tom/dan

#ifndef  LGFRSCEALLOCATEDMRP_H
#define  LGFRSCEALLOCATEDMRP_H

// RW2STL - inserted:
#include <string>
// End of RW2STL - inserted includes.

#include <stdlib.h>
#include <witutil/src/allocMrp.h>


// forward references
class LgFrMultiPlantHelper;
class LgFrSceSetOfParameters;
class LgFrSceFlatFileMgr;


class LgFrSceAllocatedMrp : public WUtlAllocatedMrp {  
public:
  

  // print the Allocated MRP in SCE format
  virtual
  int
  scePrint(std::string& filename, std::string& indepfileName);
  
  // default constructor
  LgFrSceAllocatedMrp();
  
  // general constructor
  LgFrSceAllocatedMrp(
                      WitRun * const theWitRun, 
                      LgFrMultiPlantHelper * mpHelper,
		      const char aMrpSeparatorChar,
		      LgFrSceSetOfParameters * setOfParameters);

    
  
  // destructor
  virtual
  ~LgFrSceAllocatedMrp();
  
  
  
private:

  // ===== Private member functions: DO Not CALL ====

  // copy constructor
  LgFrSceAllocatedMrp(const LgFrSceAllocatedMrp& source);
  
  // assignment operator
  LgFrSceAllocatedMrp&
  operator=(const LgFrSceAllocatedMrp& rhs);


  // preferred print method but not implemented, so its private
  // print the Allocated MRP in SCE format
  virtual
  int
  printWithoutAccessToAMrpGuts(std::string filename,
			       MclFacility * theErrFacil,
			       LgFrSceFlatFileMgr * fFileMgr);



  // =========  Member DAta =============

  LgFrMultiPlantHelper * mpHelper_;
  LgFrSceSetOfParameters * setOfParameters_;
  
};
#endif
@


1.1
log
@Initial revision
@
text
@d7 4
a11 1
#include <rw/cstring.h>
d28 1
a28 1
  scePrint(RWCString& filename, RWCString& indepfileName);
d64 1
a64 1
  printWithoutAccessToAMrpGuts(RWCString filename,
@


1.1.1.1
log
@Import sce
@
text
@@


1.1.1.1.14.1
log
@Roguewave is gone
@
text
@a6 4
// RW2STL - inserted:
#include <string>
// End of RW2STL - inserted includes.

d8 1
d25 1
a25 1
  scePrint(std::string& filename, std::string& indepfileName);
d61 1
a61 1
  printWithoutAccessToAMrpGuts(std::string filename,
@

