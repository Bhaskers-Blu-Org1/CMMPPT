head	1.3;
access;
symbols
	sce_5_01_20080919:1.3
	latest_sce_4_20_20060523:1.3.0.6
	sce_4_20_20060523:1.3
	latest_sce4_20_OSL:1.3.0.4
	sce_4_20_OSL:1.3
	sce_4_20_20051222:1.3
	sce_4_10_30050426:1.3
	sce_4_05_20040511:1.3
	sce_4_00_20040201:1.3
	nextGenBranch:1.3.0.2
	nextGenRoot:1.3
	sce_3_30_20030627:1.3
	EndRw-branch:1.2.0.6
	Root-of-EndRw:1.2
	EndWitRw-branch:1.2.0.4
	Root-of-EndWitRw:1.2
	RwToStl-branch:1.2.0.2
	Root-of-RwToStl:1.2
	latest_sce_3_10_20010924:1.1.1.1.0.8
	sce_3_10_20010924:1.1.1.1
	latest_sce_3_00_20010601:1.1.1.1.0.6
	sce_3_00_20010601:1.1.1.1
	latest_sce_2_31_20010308:1.1.1.1.0.4
	sce_2_31_20010308:1.1.1.1
	latest_sce_2_31_20001003:1.1.1.1.0.2
	sce_2_31_20001003:1.1.1.1
	start:1.1.1.1
	IBM:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2003.01.15.19.36.54;	author rwToStl;	state Exp;
branches;
next	1.2;

1.2
date	2001.11.20.22.13.11;	author ervolina;	state Exp;
branches
	1.2.6.1;
next	1.1;

1.1
date	2000.02.25.18.36.49;	author wit;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.25.18.36.49;	author wit;	state Exp;
branches;
next	;

1.2.6.1
date	2003.01.08.17.43.13;	author rwToStl;	state Exp;
branches;
next	;


desc
@@


1.3
log
@commiting to main branch witutil, scenario, and sce code which removes RW
@
text
@// file: dDriver
// author:  tom

// see usage in sce/src/ipSce.C to see how this should be used

#ifndef  LGFRSCEDEMANDDRIVER_H
#define  LGFRSCEDEMANDDRIVER_H

// RW2STL - inserted:
#include <string>
// End of RW2STL - inserted includes.

#include <stdlib.h>
#include <sce/src/mPlantH.h>
// #include <wit/src/wit.h>


// forward references
class LgFrCalendar;
class WitRun;
class LgFrMultiPlantHelper;

class LgFrSceDemandDriver {  
public:
  
  // compute the demand drivers table 
  virtual
  void
  compute();

  // Turn ON or OFF the subNetAllowed flag of every REAL and DUMMY sub arc or every 
  // REAL and DUMMY operation
  // NOTE:  
  // FINISH_ME: If we ever introduce sub arcs that need to set NetAllowed=false, then this will
  // screw it up and we need to use appData!!  
  void
  setSubsNetAllowed(bool subNetAllowed, LgFrMultiPlantHelper & mpHelper);
  


  // print demand drivers file
  virtual
  void
  print(std::string filename,
	MclFacility * theErrFacil);

  // print demand drivers file
  virtual
  void
  computeAndPrint(std::string filename,
		  MclFacility * theErrFacil);


  void
  getDDincidenceVector(char *  thePart, 
		       float minMwoScaled,
		       int childPartIndex);

  
  
  // default constructor
  LgFrSceDemandDriver();
  
  // general constructor
  LgFrSceDemandDriver(
                      WitRun * const theWitRun, 
                      LgFrMultiPlantHelper * mpHelper);

    
  // copy constructor
  LgFrSceDemandDriver(const LgFrSceDemandDriver& source);
  
  // assignment operator
  LgFrSceDemandDriver&
  operator=(const LgFrSceDemandDriver& rhs);
  
  // destructor
  virtual
  ~LgFrSceDemandDriver();
  
  
  
private:
  WitRun * theWitRun_;
  LgFrMultiPlantHelper * mpHelper_;
  int nParts_;
  float ** incidenceMatrix_;
  int state_;
  
};
#endif
@


1.2
log
@commit for 3.103
@
text
@d9 4
a13 1
#include <rw/cstring.h>
d34 1
a34 1
  // FINISH_ME: If we ever introduce sub arcs that need to set NetAllowed=FALSE, then this will
d37 1
a37 1
  setSubsNetAllowed(RWBoolean subNetAllowed, LgFrMultiPlantHelper & mpHelper);
d44 1
a44 1
  print(RWCString filename,
d50 1
a50 1
  computeAndPrint(RWCString filename,
@


1.2.6.1
log
@Roguewave is gone
@
text
@a8 4
// RW2STL - inserted:
#include <string>
// End of RW2STL - inserted includes.

d10 1
d31 1
a31 1
  // FINISH_ME: If we ever introduce sub arcs that need to set NetAllowed=false, then this will
d34 1
a34 1
  setSubsNetAllowed(bool subNetAllowed, LgFrMultiPlantHelper & mpHelper);
d41 1
a41 1
  print(std::string filename,
d47 1
a47 1
  computeAndPrint(std::string filename,
@


1.1
log
@Initial revision
@
text
@d44 7
@


1.1.1.1
log
@Import sce
@
text
@@
