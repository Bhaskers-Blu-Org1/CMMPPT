head	1.2;
access;
symbols
	sce_5_01_20080919:1.2
	latest_sce_4_20_20060523:1.2.0.6
	sce_4_20_20060523:1.2
	latest_sce4_20_OSL:1.2.0.4
	sce_4_20_OSL:1.2
	sce_4_20_20051222:1.2
	sce_4_10_30050426:1.2
	sce_4_05_20040511:1.2
	sce_4_00_20040201:1.2
	nextGenBranch:1.2.0.2
	nextGenRoot:1.2
	sce_3_30_20030627:1.2
	EndRw-branch:1.1.1.1.0.14
	Root-of-EndRw:1.1.1.1
	EndWitRw-branch:1.1.1.1.0.12
	Root-of-EndWitRw:1.1.1.1
	RwToStl-branch:1.1.1.1.0.10
	Root-of-RwToStl:1.1.1.1
	latest_sce_3_10_20010924:1.1.1.1.0.8
	sce_3_10_20010924:1.1.1.1
	latest_sce_3_00_20010601:1.1.1.1.0.6
	sce_3_00_20010601:1.1.1.1
	latest_sce_2_31_20010308:1.1.1.1.0.4
	sce_2_31_20010308:1.1.1.1
	latest_sce_2_31_20001003:1.1.1.1.0.2
	sce_2_31_20001003:1.1.1.1
	start:1.1.1.1
	IBM:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2003.01.15.19.36.58;	author rwToStl;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.25.18.36.55;	author wit;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.25.18.36.55;	author wit;	state Exp;
branches
	1.1.1.1.14.1;
next	;

1.1.1.1.14.1
date	2003.01.08.17.43.19;	author rwToStl;	state Exp;
branches;
next	1.1.1.1.14.2;

1.1.1.1.14.2
date	2003.01.09.13.14.30;	author rwToStl;	state Exp;
branches;
next	;


desc
@@


1.2
log
@commiting to main branch witutil, scenario, and sce code which removes RW
@
text
@// File: scrub.h

#ifndef LGFRSCESCRUBBER_H
#define LGFRSCESCRUBBER_H

// RW2STL - inserted:
#include <string>
// End of RW2STL - inserted includes.

#include <stdlib.h>
#include <iostream>

class LgFrSceScrubber
{
public:
  LgFrSceScrubber(const std::string& scrubDir,
                  bool scrubMode = false,
                  bool scrubOnly= false)
    : scrubDir_(scrubDir),
      scrubMode_(scrubMode),
      scrubOnly_(scrubOnly)
  {
    scrubDir_.append("/");
  }

  LgFrSceScrubber()
    :scrubDir_(""),
      scrubMode_(false),
      scrubOnly_(false)
  {
  }
  
  virtual ~LgFrSceScrubber(){}
  LgFrSceScrubber(const LgFrSceScrubber& source);
  LgFrSceScrubber& operator=(const LgFrSceScrubber& source);
  const std::string& scrubDir(void) const { return scrubDir_;}
  void scrubDir(const std::string& dir) { scrubDir_ = dir;}
  bool scrubMode(void) { return scrubMode_; }
  void scrubMode(bool mode) { scrubMode_ = mode;}
  const bool scrubOnly(void) const { return scrubOnly_;}
  void scrubOnly(const bool scrubOnly) { scrubOnly_ = scrubOnly;}

private:

  std::string scrubDir_;
  bool scrubOnly_;
  bool scrubMode_;
  
};

#endif
@


1.1
log
@Initial revision
@
text
@d6 4
a9 1
#include <rw/cstring.h>
d11 1
a11 1
#include <iostream.h>
d16 3
a18 3
  LgFrSceScrubber(const RWCString& scrubDir,
                  RWBoolean scrubMode = FALSE,
                  RWBoolean scrubOnly= FALSE)
d28 2
a29 2
      scrubMode_(FALSE),
      scrubOnly_(FALSE)
d36 6
a41 6
  const RWCString& scrubDir(void) const { return scrubDir_;}
  void scrubDir(const RWCString& dir) { scrubDir_ = dir;}
  RWBoolean scrubMode(void) { return scrubMode_; }
  void scrubMode(RWBoolean mode) { scrubMode_ = mode;}
  const RWBoolean scrubOnly(void) const { return scrubOnly_;}
  void scrubOnly(const RWBoolean scrubOnly) { scrubOnly_ = scrubOnly;}
d45 3
a47 3
  RWCString scrubDir_;
  RWBoolean scrubOnly_;
  RWBoolean scrubMode_;
@


1.1.1.1
log
@Import sce
@
text
@@


1.1.1.1.14.1
log
@Roguewave is gone
@
text
@d6 1
a6 4
// RW2STL - inserted:
#include <string>
// End of RW2STL - inserted includes.

d13 3
a15 3
  LgFrSceScrubber(const std::string& scrubDir,
                  bool scrubMode = false,
                  bool scrubOnly= false)
d25 2
a26 2
      scrubMode_(false),
      scrubOnly_(false)
d33 6
a38 6
  const std::string& scrubDir(void) const { return scrubDir_;}
  void scrubDir(const std::string& dir) { scrubDir_ = dir;}
  bool scrubMode(void) { return scrubMode_; }
  void scrubMode(bool mode) { scrubMode_ = mode;}
  const bool scrubOnly(void) const { return scrubOnly_;}
  void scrubOnly(const bool scrubOnly) { scrubOnly_ = scrubOnly;}
d42 3
a44 3
  std::string scrubDir_;
  bool scrubOnly_;
  bool scrubMode_;
@


1.1.1.1.14.2
log
@Went all the way to std::cout
@
text
@d11 1
a11 1
#include <iostream>
@


