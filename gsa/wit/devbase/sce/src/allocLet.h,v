head	1.2;
access;
symbols
	sce_5_01_20080919:1.2
	latest_sce_4_20_20060523:1.2.0.6
	sce_4_20_20060523:1.2
	latest_sce4_20_OSL:1.2.0.4
	sce_4_20_OSL:1.2
	sce_4_20_20051222:1.2
	sce_4_10_30050426:1.2
	sce_4_05_20040511:1.2
	sce_4_00_20040201:1.2
	nextGenBranch:1.2.0.2
	nextGenRoot:1.2
	sce_3_30_20030627:1.2
	EndRw-branch:1.1.0.10
	Root-of-EndRw:1.1
	EndWitRw-branch:1.1.0.8
	Root-of-EndWitRw:1.1
	RwToStl-branch:1.1.0.6
	Root-of-RwToStl:1.1
	latest_sce_3_10_20010924:1.1.0.4
	sce_3_10_20010924:1.1
	latest_sce_3_00_20010601:1.1.0.2
	sce_3_00_20010601:1.1;
locks; strict;
comment	@ * @;


1.2
date	2003.01.15.19.36.54;	author rwToStl;	state Exp;
branches;
next	1.1;

1.1
date	2001.06.01.16.53.54;	author ervolina;	state Exp;
branches
	1.1.10.1;
next	;

1.1.10.1
date	2003.01.08.17.43.13;	author rwToStl;	state Exp;
branches;
next	;


desc
@@


1.2
log
@commiting to main branch witutil, scenario, and sce code which removes RW
@
text
@// file: allocLet.h
// author:  tom

#ifndef  LGFRSCEALLOCLET_H
#define  LGFRSCEALLOCLET_H

// RW2STL - inserted:
#include <string>
// End of RW2STL - inserted includes.

#include <stdlib.h>
#include <sce/src/sceDefin.h>
// #include <sce/src/mPlantH.h>
// #include <wit/src/wit.h>


class WitRun;
class LgFrMultiPlantHelper;

class LgFrSceAllocLet {  
public:




  // set/get the Amount to try 
  void    qtyDemand(const float qty);
  float  qtyDemand() const;

  // set/get the Ship Amount 
  void      qtyShip(const float qty);
  float    qtyShip() const;


  // set/get the  demandPd 
  void   demandPd(const int reqPd);
  int    demandPd() const;

  // set/get the  shipPd 
  void   shipPd(const int shipPd);
  int    shipPd() const;

  // set/get the priority 
  void   priority(const int prio);
  int    priority() const;





  // get partName and demandName
  std::string    demandName() const;
  std::string    partName() const;

  // set partName and DemandName (as char *)
 void    demandName(char * dName);
 void    partName(char * pName);

  // get partName and demandName
  // Return 1 if Shipful, 0 oWise
  int    demandName(std::string & dName);
  int    partName(std::string &   pName);
  
  // set/get the allocated flag
  int   allocated() const;
  void  allocated(int allocFlag);

  // set/get the dependent 
  void backlogDependent(LgFrSceAllocLet * dependent);
  LgFrSceAllocLet * backlogDependent();



  // create a TRACE STRING
  std::string
  traceString();


   // create a Human Readable TRACE STRING
  std::string
  hrTraceString(WitRun * const theWitRun, 
		LgFrMultiPlantHelper * mpHelper, 
		int equitCount);

   


  // print the allocLet to stdout
  void
  print();




  

  // preferred constructor 
  LgFrSceAllocLet(std::string & partName, 
	       std::string & demandName,
	       int    priority,
	       int    demandPd,
               int    shipPd,
	       float  qtyDemand,
	       int    shipLateLimit);

  // Construct from a Trace String
  LgFrSceAllocLet(std::string & traceString);



  // destructor
  virtual
  ~LgFrSceAllocLet();


  // copy constructor
  LgFrSceAllocLet(const LgFrSceAllocLet& source);
  
  // assignment operator
  LgFrSceAllocLet&
  operator=(const LgFrSceAllocLet& rhs);
  
  // default constructor
  LgFrSceAllocLet();
  
  
  
private:
  std::string partName_;
  std::string demandName_;
  int    priority_;
  int    demandPd_;
  int    shipPd_;  
  float  qtyDemand_;
  float  qtyShip_;
  int    shipLateLimit_;
  int    allocated_;            // 1=allocated, 0=unallocated
  LgFrSceAllocLet * backlogDependent_;

  // --- FUTURE USE ----
  // LgFrSceAllocLetBacklogStrategy * backlogStrategy_;      // shipLateLimit
  // int partIndex_;                                      // for user convenience
  // int demandIndex_;                                    // for user convenience
};



#endif
















@


1.1
log
@new files for release 3.00
@
text
@d7 4
a11 1
#include <rw/cstring.h>
d52 2
a53 2
  RWCString    demandName() const;
  RWCString    partName() const;
d61 2
a62 2
  int    demandName(RWCString & dName);
  int    partName(RWCString &   pName);
d75 1
a75 1
  RWCString
d80 1
a80 1
  RWCString
d98 2
a99 2
  LgFrSceAllocLet(RWCString & partName, 
	       RWCString & demandName,
d107 1
a107 1
  LgFrSceAllocLet(RWCString & traceString);
d129 2
a130 2
  RWCString partName_;
  RWCString demandName_;
@


1.1.10.1
log
@Roguewave is gone
@
text
@a6 4
// RW2STL - inserted:
#include <string>
// End of RW2STL - inserted includes.

d8 1
d49 2
a50 2
  std::string    demandName() const;
  std::string    partName() const;
d58 2
a59 2
  int    demandName(std::string & dName);
  int    partName(std::string &   pName);
d72 1
a72 1
  std::string
d77 1
a77 1
  std::string
d95 2
a96 2
  LgFrSceAllocLet(std::string & partName, 
	       std::string & demandName,
d104 1
a104 1
  LgFrSceAllocLet(std::string & traceString);
d126 2
a127 2
  std::string partName_;
  std::string demandName_;
@

