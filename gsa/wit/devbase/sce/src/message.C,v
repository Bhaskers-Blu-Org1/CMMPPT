head	1.15;
access;
symbols
	sce_5_01_20080919:1.12
	latest_sce_4_20_20060523:1.10.0.4
	sce_4_20_20060523:1.10
	latest_sce4_20_OSL:1.10.0.2
	sce_4_20_OSL:1.10
	sce_4_20_20051222:1.10
	sce_4_10_30050426:1.8
	sce_4_05_20040511:1.8
	sce_4_00_20040201:1.7
	nextGenBranch:1.7.0.2
	nextGenRoot:1.7
	sce_3_30_20030627:1.7
	EndRw-branch:1.6.0.2
	Root-of-EndRw:1.6
	EndWitRw-branch:1.5.0.4
	Root-of-EndWitRw:1.5
	RwToStl-branch:1.5.0.2
	Root-of-RwToStl:1.5
	latest_sce_3_10_20010924:1.1.1.1.0.8
	sce_3_10_20010924:1.1.1.1
	latest_sce_3_00_20010601:1.1.1.1.0.6
	sce_3_00_20010601:1.1.1.1
	latest_sce_2_31_20010308:1.1.1.1.0.4
	sce_2_31_20010308:1.1.1.1
	latest_sce_2_31_20001003:1.1.1.1.0.2
	sce_2_31_20001003:1.1.1.1
	start:1.1.1.1
	IBM:1.1.1;
locks; strict;
comment	@ * @;


1.15
date	2011.03.10.15.31.42;	author ervolina;	state Exp;
branches;
next	1.14;
deltatype	text;
permissions	644;
commitid	14cc4d78ede700a2;
kopt	kv;
filename	@message.C@;

1.14
date	2010.03.29.11.54.39;	author ervolina;	state Exp;
branches;
next	1.13;
deltatype	text;

1.13
date	2010.03.26.19.48.24;	author ervolina;	state Exp;
branches;
next	1.12;
deltatype	text;

1.12
date	2006.08.09.16.32.17;	author ervolina;	state Exp;
branches;
next	1.11;
deltatype	text;

1.11
date	2006.06.26.15.23.31;	author ervolina;	state Exp;
branches;
next	1.10;
deltatype	text;

1.10
date	2005.12.22.22.34.31;	author ervolina;	state Exp;
branches;
next	1.9;
deltatype	text;

1.9
date	2005.11.09.18.32.47;	author ervolina;	state Exp;
branches;
next	1.8;
deltatype	text;

1.8
date	2004.05.07.14.09.56;	author ervolina;	state Exp;
branches;
next	1.7;
deltatype	text;

1.7
date	2003.01.15.19.36.56;	author rwToStl;	state Exp;
branches;
next	1.6;
deltatype	text;

1.6
date	2002.11.26.14.25.31;	author fasano;	state Exp;
branches
	1.6.2.1;
next	1.5;
deltatype	text;

1.5
date	2002.09.06.13.33.08;	author ervolina;	state Exp;
branches;
next	1.4;
deltatype	text;

1.4
date	2002.08.08.17.37.44;	author ervolina;	state Exp;
branches;
next	1.3;
deltatype	text;

1.3
date	2002.07.02.20.20.07;	author ervolina;	state Exp;
branches;
next	1.2;
deltatype	text;

1.2
date	2002.03.28.21.49.43;	author ervolina;	state Exp;
branches;
next	1.1;
deltatype	text;

1.1
date	2000.02.25.18.36.52;	author wit;	state Exp;
branches
	1.1.1.1;
next	;
deltatype	text;

1.1.1.1
date	2000.02.25.18.36.52;	author wit;	state Exp;
branches;
next	;
deltatype	text;

1.6.2.1
date	2003.01.08.17.43.16;	author rwToStl;	state Exp;
branches;
next	1.6.2.2;
deltatype	text;

1.6.2.2
date	2003.01.09.13.14.32;	author rwToStl;	state Exp;
branches;
next	;
deltatype	text;


desc
@@


1.15
log
@cplex, and some cleanup
@
text
@
// RW2STL - inserted:
#include <string>
#include <ostream>
#include <scenario/src/RWToSTLHelpers.h>
// End of RW2STL - inserted includes.
#include <mcl/src/mcl.h>
#include <sce/src/scenSce.h>

//----------------------------------------------------------------------------
//  The following methods are the members of LgFrScenarioForSce
//  that are used for messaging in SCE.
//
//  This file contains all the methods of that class that relate to messaging.
//  It was just to keep things more readable and so nothing in scenSce.*
//  would be altered too much.
//
//  *** SEE END OF FILE FOR MORE INFO ON SCE MESSAGING ***
//----------------------------------------------------------------------------

// initialize static data memeber of LgFrScenarioForSce
unsigned int LgFrScenarioForSce::numTempFiles_ = 0;

// methods
MclFacility* 
LgFrScenarioForSce::getErrFacility()
{
  return sceErrFacility_;
}

MclFacility* 
LgFrScenarioForSce::getMsgFacility()
{
  return sceMsgFacility_;
}

void 
LgFrScenarioForSce::initMsgFacility(std::string buffername)
{
  sceMsgFacDisp_ = new MclPrintfOutputDisplayer(buffername.c_str(),"w+");
  sceMsgFacility_ = new MclFacility("SCE",*sceMsgFacDisp_);
  sceMsgFacility_->minErrOutLevel (MclLevel::error ());
 
  if (readMessages(sceMsgFacility_,"sceMSG.txt") == 0) {
    // std::cout << "Loading default messages.\n";
    loadDefaultMsgs(sceMsgFacility_,nonerrMsgs_,(numberNonErrMsgs-numberErrMsgs-1));
  }
}


void 
LgFrScenarioForSce::initErrFacility(std::string buffername)
{
  sceErrFacDisp_ = new MclPrintfOutputDisplayer(buffername.c_str(),"w+");
  sceErrFacility_ = new MclFacility("SCE",*sceErrFacDisp_);
  sceErrFacility_->minErrOutLevel(MclLevel::error ());

  if (readMessages(sceErrFacility_,"sceERR.txt") == 0) {
    // std::cout << "Loading default messages.\n";
    loadDefaultMsgs(sceErrFacility_,errorMsgs_,numberErrMsgs);
  }
}

void
LgFrScenarioForSce::loadDefaultMsgs(MclFacility * theFacil,
				    const messageStructure msgArray[],
				    unsigned int upTill) 
{
  int i = 0; // Pulled out of the for below by RW2STL
  for (i=0; i<upTill; i++) {
    char * currMsgID = msgArray[i].internalMsgName;
    switch(msgArray[i].msgType) {
      case info: new SceMsg(*theFacil,
			    currMsgID,
			    MclLevel::info(),
			    msgArray[i].msgTemplate,
			    msgArray[i].extNum); break;
      case warning: new SceMsg(*theFacil,
			       currMsgID,
			       MclLevel::warning(),
			       msgArray[i].msgTemplate,
			       msgArray[i].extNum); break;
      case error: new SceMsg(*theFacil,
			     currMsgID,
			     MclLevel::error(),
			     msgArray[i].msgTemplate,
			     msgArray[i].extNum); break;
      case severe: new SceMsg(*theFacil,
			      currMsgID,
			      MclLevel::severe(),
			      msgArray[i].msgTemplate,
			      msgArray[i].extNum); break;
      case fatal: new SceMsg(*theFacil,
			     currMsgID,
			     MclLevel::fatal(),
			     msgArray[i].msgTemplate,
			     msgArray[i].extNum); break;
    }
  }
}


// this adds messages to a given MclFacility class object from an external
// file. this is obsolete now since we have the default messages.
// if this is ever used in the future, it would be easier if things were
// changed over to RWCStrings and other relevant Rogue Wave stuff.
// currently, only standard C++ is used here, but using RW stuff is easier. 
int 
LgFrScenarioForSce::readMessages(MclFacility * theFacil,
				      const char * msgFileName)
{
  //** Read in message from a file
  // These are the maximum lengths of the strings that contain parts of
  // each message issued.
  // can later change these, but keep sizes within reason
  const int MAXMSGID = 75;
  const int MAXFORMAT = 400;
  const int MAXCHARS = 400;
  const int MAXDIGIT = 5;
  const int MaxNumMsgs = 300;

  // structure for holding message parts
  struct MclError
  {
    char msgID[75];
    char msgLevel;
    char msgFormat[400];
    char extNum[5];
  };

  // other local vars
  int i,curr1,curr2;
  char temp[MAXCHARS];
  MclError errArray[MaxNumMsgs];

  // create an input stream that our input file is read into 
  std::ifstream errFile;
  errFile.open(msgFileName);// ios::nocreate);

  // make sure input file is valid(exists) -- if not then exit.
  if(!errFile.good()) {
    return 0;
  }

  i = 0;
  // start reading until there is nothing left in file
  while (!errFile.fail()) {
    // only read up to the number of errors = MaxNumMsgs input parameter
    while (errFile.getline(temp,MAXCHARS,'\n') &&
	   (i < MaxNumMsgs))
    {
      // IMPORTANT: this function only works if error messages follow this
      //            format in the input file...
      //{
      //   <string = msgID>,
      //   <string = msgLevel>,
      //   <string = external message number>,
      //   "<string = msgFormat>"
      //}

      // wait until an open paren.
      if (temp[0] != '{') {
	continue;
      }

      // this should be the msgID
      errFile.getline(temp,MAXCHARS,'\n');

      curr1=0; // set place holder in string to zero
      // discard all whitespace
      while ((temp[curr1] == ' ') ||
	     (temp[curr1] == '\t') ||
	     (temp[curr1] == '\n'))
      {
	curr1++;
      }

      curr2=0; // set second place holder to zero
      // copy rest of string in file
      while ((temp[curr1] != '\0') &&
	     (temp[curr1] != ',') &&
	     (curr1 < MAXCHARS) &&
	     (curr2 < (MAXMSGID -1)))
      {
	errArray[i].msgID[curr2]=temp[curr1];
	curr1++;
	curr2++;
      }

      // tack on the EOL character
      errArray[i].msgID[curr2]='\0';

      // this should be a level =
      // {Info,Warning,Error,Severe,Fatal}
      errFile.getline(temp,MAXCHARS,'\n');
      curr1 = 0;
      while ((temp[curr1] == ' ') ||
	     (temp[curr1] == '\t') ||
	     (temp[curr1] == '\n'))
      {
	curr1++;
      }

      // this time we only need the first character to distinguish
      // between the different severity levels
      errArray[i].msgLevel = temp[curr1];

      // this should be an external error number
      errFile.getline(temp,MAXCHARS,'\n');
      curr1=0;
      while ((temp[curr1] == ' ') ||
	     (temp[curr1] == '\t') ||
	     (temp[curr1] == '\n'))
      {
	curr1++;
      }

      curr2=0;
      while ((temp[curr1] != '\0') &&
	     (temp[curr1] != ',') &&
	     (curr1 < MAXCHARS) && 
	     (curr2 < (MAXDIGIT-1)))
      {
	errArray[i].extNum[curr2]=temp[curr1];
	curr1++;
	curr2++;
      }
      errArray[i].extNum[curr2]='\0';

      // this should be a message format BUT this is different from the other
      // parts because it will just read everything until an end paren.
      curr2=0;
      errFile.getline(temp,MAXCHARS,'\n');
      while (temp[0] != '}')  //** maybe change this so won't loop forever
      {
	curr1=0;
	// reads BETWEEN QUOTES ONLY
	while (temp[curr1] != '"')   //look for first quote
	{
	  curr1++;
	  if (curr1 >= MAXCHARS) errFile.getline(temp,MAXCHARS,'\n');
	  // check if MAXCHARS has been exceeded...if so, get next line
	}
	curr1++;   // this skips the first quote
	// now copy until end quote
	while ((temp[curr1] != '"')  &&
	       (curr1 < MAXCHARS) && 
	       (curr2 < (MAXFORMAT-1)))
	{
	  //** this doesn't work because a '\n' ends the string!!!
	  // check for carriage returns
          if (temp[curr1] == '\\') {
            if (temp[curr1+1] == 'n') {
	      errArray[i].msgFormat[curr2]='\n';
	      curr1++; // skip the following 'n'
	    }
          }
          else
	    errArray[i].msgFormat[curr2]=temp[curr1];
	  // increment place holders
	  curr1++;
	  curr2++;
	}

	// then read another line from file
	errFile.getline(temp,MAXFORMAT,'\n');
      }
      errArray[i].msgFormat[curr2]='\0';

      // work on next errArray entry
      i++;
    }
  }

  // this is just to show progress -- make sure it's not hanging
  std::cout << "Processing messages from " << msgFileName << "\n[";

  // Now we need to actually add messages to the MclFacility
  int x = 0; // Pulled out of the for below by RW2STL
  for (x=0; x<i; x++) {
    // can't have extNum be a string -- figure something out later

    std::cout << ".";

    switch (errArray[x].msgLevel) 
    {
    case 'i':
    case 'I': new SceMsg(*theFacil,
			 errArray[x].msgID,
			 MclLevel::info(),
			 errArray[x].msgFormat,
			 atoi(errArray[x].extNum)); break;
    case 'w':
    case 'W': new SceMsg(*theFacil,
			 errArray[x].msgID,
			 MclLevel::warning(),
			 errArray[x].msgFormat,
			 atoi(errArray[x].extNum)); break;
    case 'e':
    case 'E': new SceMsg(*theFacil,
			 errArray[x].msgID,
			 MclLevel::error(),
			 errArray[x].msgFormat,
			 atoi(errArray[x].extNum)); break;
    case 's':
    case 'S': new SceMsg(*theFacil,
			 errArray[x].msgID,
			 MclLevel::severe(),
			 errArray[x].msgFormat,
			 atoi(errArray[x].extNum)); break;
    case 'f':
    case 'F': new SceMsg(*theFacil,
			 errArray[x].msgID,
			 MclLevel::fatal(),
			 errArray[x].msgFormat,
			 atoi(errArray[x].extNum)); break;
    }
  }

  std::cout << "]\n";

  return 1;
}



//----------------------------------------------------------------------------
//  The following are the arrays that hold the messages to initialize the
//  messaging facilities for SCE
//----------------------------------------------------------------------------

// this list was put together rather sloppily. some may not be as clear as
// they could be, the levels were chosen rather arbitrarily, and the error
// numbers are pretty random. may later want to give this some ordering.
const messageStructure LgFrScenarioForSce::errorMsgs_[] = {
  {
        "IllegalCharacter",
	error,
	1,
	"An illegal character was detected in an input record.\n"
        "SCE halts execution.\n"
	"File: %1$s   Line: %2$d\n"
        "Data Line: %3$s"
	//<EXP> The input file contained an illegal character
	//
	//<RESP> Verify that your input files do not contain the\n  
        //<RESP> pdfSeparator character.
	//
	//<SYS>SCE halts execution.
	//
  },
  {
        "MissingDataWarning",
	warning,
	2,
	"Non-mandatory %1$s missing.  The data line is rejected.\n"
	"File: %2$s   Line: %3$d\n"
	"Data Line: %4$s"
        //<EXP> Non-mandatory data element was missing.  
        //<SYS> The data line is rejected.
        //<RESP> Provide the missing data in the data line.
  },
  {
	"MissingData",
	error,
	3,
	"Mandatory %1$s missing.  SCE halts execution.\n"
	"File: %2$s   Line: %3$d\n"
	"Data Line: %4$s"
        //<EXP> A mandatory data was missing.
        //<SYS> SCE halts execution.
        //<RESP> Provide the missing data for the mandatory data.
  },
  {
	"InvalidDataType",
	error,
	5,
	"Invalid Data. Expecting Type: %1$s.  SCE halts execution.\n"
	"File: %2$s    Line: %3$d\n"
	"Data Line: %4$s"
        //<EXP> The data type is invalid.
        //<SYS> SCE halts execution.
        //<RESP> Check the data type to make sure it is of the right type.
  },
  {
	"InvalidDataWarning",
	warning,
	7,
	"Invalid %1$s.\n"
	"File: %2$s    Line: %3$d\n"
        "Data Line: %4$s\n"
	"%5$s"
        //<EXP> An invalid data element was provided.
        //<SYS> SCE rejects the invalid data.\n
        //<SYS> The message will indicate if a default value is used. 
        //<RESP> Correct the invalid data element.
  },
  {
	"InvalidDataWarningb",
	warning,
	8,
	"Invalid %1$s.\n"
	"File: %2$s   Line: %3$d\n"
	"Data Line: %4$s\n"
        //<EXP> An invalid data element was provided.
        //<SYS> SCE rejects the invalid data.
        //<RESP> Correct the invalid data element.
  },
  {
	"InvalidDate",
	warning,
	9,
	"Invalid Date specified: %1$s.\n"
	"SCE ignores the record.\n"
	"File: %2$s   Line: %3$d\n"
	"Data Line: %4$s\n"
        //<EXP> An invalid date was provided.
        //<SYS> SCE rejects the data record containing the bad Date.
        //<RESP> Correct the invalid date (duh).
  },
  {
	"OutOfRangeFloatWithBound",
	error,
	10,
	"Float data element out of Range.\n"
	"Value = %4$f    %5$s = %6$f\n"
	"File: %1$s   Line: %2$d\n"
        "Data Line: %3$s\n"
	"%7$s"
        //<EXP> The float data was not in the valid range.
        //<SYS> SCE halts execution.
        //<RESP> Check that the data is in the valid range.
  },
  {
	"OutOfRangeIntWithBound",
	error,
	11,
	"Int data element out of Range.\n"
	"Value = %4$d    %5$s = %6$d\n"
	"File: %1$s   Line: %2$d\n"
        "Data Line: %3$s\n"
	"%7$s"
        //<EXP> The integer data was not in the valid range.
        //<SYS> SCE halts execution.
        //<RESP> Check that the data is in the valid range.
  },
  {
	"ParamOutOfRange",
	error,
	12,
	"%1$s out of Range.  Terminating the program.\n"
	"Parameter File: %2$s\n"
	"%3$s"
        //<EXP> The parameter data was not in the valid range.
        //<SYS> SCE halts execution.
        //<RESP> Check that the data is in the valid range for the parameter.
  },
  {
	"OutOfRange",
	warning,
	13,
	"%1$s out of Range\n"
	"File: %2$s    Line: %3$d\n"
        "Data Line: %4$s\n"
	"%5$s"
        //<EXP> The input data was out of range.
        //<SYS> SCE rejects the input record.
        //<RESP> Check that the data is in the proper range.
  },
  {
	"OutOfRangeVectorElement",
	warning,
	14,
	"An element in the maxWithout input vector exceeds 1.0.\n"
	"The value will be rounded down to 1.0.\n"
	"File: %1$s    Line: %2$d\n"
        "Data Line: %3$s\n"
	"plannerTopLevelPart: %4$s    Geo: %5$s\n"
	"Standalone option is: %6$s"
        //<EXP> An element in the maxWithout input vector exceeded 1.0.
        //<SYS> SCE changes that element to 1.0 and proceeds.
        //<RESP> Change the value to less than or equal to 1.0
  },
  {
	"ConflictingBounds",
	warning,
	15,
	"Attempting to set %1$s (hard) Upper Bound which\n"
	"is LESS THAN %1$s (soft) Lower Bound.\n"
	"The hard upper bound is being set to the soft lower bound.\n"
	"Violation occured while trying to set execVolUB for (operation, pdf): %2$s\n"
	"File: %3$s    Line: %4$d    Period: %5$d"
        //<EXP> A hard upper bound was being set less than a soft lower bound\n
        //<EXP> for the execVolUB.
        //<SYS> SCE sets the hard upper bound equal to the soft lower bound\n
        //<SYS> and proceeds.
        //<RESP> Set the upper bound greater than or equal to the lower bound.
  },
  {
	"WarningCannotOpenFile",
	warning,
	17,
	"Could not open %1$s file.\n"
	"Filename: %2$s\n"
	"%3$s"
        //<EXP> SCE could not open the specified input file.
        //<SYS> SCE will not use the file.
        //<RESP> Check that the file exists.
  },
  {
	"SevereCannotOpenFile",
	error,
	18,
	"Could not open %1$s file.\n"
	"Filename: %2$s\n"
	"%3$s"
        //<EXP> SCE could not open the specified file.
        //<SYS> SCE will halt execution.
        //<RESP> Check that the file exists.
  },
  {
	"CannotOpenFileForWrite",
	error,
	19,
	"Could not open %1$s output file!!\n"
	"Filename: %2$s\n"
	"Check existence and permissions on directory and file"
        //<EXP> SCE could not open the specified file.
        //<SYS> SCE will halt execution.
        //<RESP> Check that directory exists and user has write authority.
  },
  {
	"CalendarPeriod",
	error,
	20,
	"There is an error with the Periods of the Calendar.\n"
	"Calendar file: %1$s    Line: %2$d\n"
	"Dataline: %3$s"
      	"%4$s"
        //<EXP> There is an error in the specification of the calendar.
        //<SYS> SCE halts execution.
        //<RESP> Correct the calendar file.
  },
  {
	"CalendarWorkUnits",
	warning,
	21,
	"Missing workUnits field for period %1$d \n"
	"Default of 20.0 will be used.\n"
	"Calendar file: %2$s    Line: %3$d\n"
        "Data Line: %4$s\n"
        //<EXP> The work units was missing in the calendar file.
        //<SYS> SCE will use 20 days as the number of days in the period.
        //<RESP> Correct the number of work units in the calendar file.
  },
  {
	"CalendarFormat",
	warning,
	22,
	"Creating a default Locale for this platform.\n"
	"The calendarFormat will take the default value.\n"
        //<EXP> This warning is specific to the Sun4 
        //<SYS> This warning is specific to the Sun4
        //<RESP> Contact SCE support.
  },
  {
	"CalendarNotUpToDate",
	error,
	23,
	"Calendar is not up to date.\n"
	"The start date of the first period must not be before\n"
	"the first day of the current year.\n"
	"Unable to create an EPPS demand Volume File."
        //<EXP> This is an EPPS specific error.\n
        //<EXP>The start date of the first period must NOT be before\n
        //<EXP> the first day of the current year.
        //<SYS> SCE halts execution.
        //<RESP> Correct the calendar file.
  },
  {
	"CalendarLateStartDate",
	error,
	24,
	"The start date of the first period must be less than\n"
	"28 months after the first month of the current year.\n"
	"Unable to create an EPPS demand Volume File."
        //<EXP> This is an EPPS specific error.\n
        //<EXP> The start date of the first period must be less than
	//<EXP> 28 months after the first month of the current year.
        //<SYS> SCE halts execution.
        //<RESP> Correct the calendar file.
  },
  {
	"InvalidPCFPart",
	warning,
	25,
	"Part in partConditionFile is not in partDefinitionFile.  Data is ignored.\n"
	"Part: %1$s    PDF: %2$s\n"
        "File: %3$s    Line: %4$d\n"
	"Data Line %5$s"
        //<EXP> The part in the part conditioning file was not in the\n
        //<EXP> part definition file.
        //<SYS> SCE ignores the input data.	
        //<RESP> Define the part in the part definition file.
  },
  {
	"DuplicatePCFPart",
	warning,
	26,
	"Part in partConditionFile is duplicated.  The data is ignored.\n"
	"Part: %1$s    PDF: %2$s\n"
        "File: %3$s    Line: %4$d\n"
	"Data Line %5$s"
        //<EXP> The part in the part conditioning file was duplicated.
        //<SYS> SCE ignores the input data.	
        //<RESP> Remove the duplicate entry.
  },
  {
	"ExtraPCFPart",
	warning,
	27,
	"Part does not need to be in the partConditionFile.\n"
	"Because %1$s.\n"
	"Part: %2$s    PDF: %3$s\n"
        "File: %4$s    Line: %5$d\n"
        "Data Line: %6$s"
        //<EXP> This part is not eligible to be in the part conditioning file.
        //<SYS> SCE ignores the input data.
        //<RESP> Remove the part from the part conditioning file.
  },
  {
	"ExtraPCFPartBogon",
	warning,
	1027,
	"PCF Bogon detected.  Because %1$s.\n"
	"Since you have set ==> forcePcfBogons to true, SCE will disable production of the part.\n"
	"Part: %2$s    PDF: %3$s\n"
        "File: %4$s    Line: %5$d\n"
        "Data Line: %6$s"
        //<EXP> This part is not eligible to be in the part conditioning file.
        //<SYS> SCE ignores the input data.
        //<RESP> Remove the part from the part conditioning file.
  },
  {
	"UnrecognizedPartError",
	error,
	28,
	"Unrecognized Part: %1$s.\n"
	"File: %2$s    Line: %3$d\n"
	"Data Line: %4$s"
        //<EXP> SCE doesn't recognize the part as valid.
        //<SYS> SCE halts running.
        //<RESP> Remove the offending part.
  },
  {
	"UnrecognizedPartWarning",
	warning,
	29,
	"Unrecognized Part: %1$s.\n"
	"Line will be ignored.\n"
	"File: %2$s    Line: %3$d\n"
	"Data Line: %4$s"
        //<EXP> SCE doesn't recognize the part as valid.
        //<SYS> SCE ignores the input data.
        //<RESP> Remove the offending part.
  },
  {
	"UnrecognizedPartPdfError",
	error,
	44,
	"Unrecognized Part/PDF Detected.\n"
	"Part: %1$s.\n"
	"PDF: %2$s.\n"
	"File: %3$s    Line: %4$d\n"
	"Data Line: %5$s"
        //<EXP> SCE doesn't recognize the part as valid.
        //<SYS> SCE terminates.
        //<RESP> Remove the offending part from this file, OR, add the part to the Part Definition File.
  },
  {
	"UnrecognizedPartPdfWarning",
	warning,
	45,
	"Unrecognized Part/PDF Detected.\n"
	"Part: %1$s.\n"
	"PDF: %2$s.\n"
	"Line will be ignored.\n"
	"File: %3$s    Line: %4$d\n"
	"Data Line: %5$s"
        //<EXP> SCE doesn't recognize the part as valid.
        //<SYS> SCE ignores the input data.
        //<RESP> Remove the offending part from this file, OR, add the part to the Part Definition File.
  },
  {
	"UnrecognizedOperationError",
	error,
	128,
	"Unrecognized Operation: %1$s.\n"
	"File: %2$s    Line: %3$d\n"
	"Data Line: %4$s"
        //<EXP> SCE doesn't recognize the operation as valid.
        //<SYS> SCE halts execution.
        //<RESP> Remove the offending operation.
  },
  {
	"UnrecognizedOperationWarning",
	warning,
	129,
	"Unrecognized Operation: %1$s.\n"
	"Line will be ignored.\n"
	"File: %2$s    Line: %3$d\n"
	"Data Line: %4$s"
        //<EXP> SCE doesn't recognize the operation as valid.
        //<SYS> SCE ignores the input data.
        //<RESP> Remove the offending operation.
  },
  {
	"UnrecognizedOperationPdfError",
	error,
	46,
	"Unrecognized Operation/PDF Detected.\n"
	"Operation: %1$s.\n"
	"PDF: %2$s.\n"
	"File: %3$s    Line: %4$d\n"
	"Data Line: %5$s"
        //<EXP> SCE doesn't recognize the operation as valid.
        //<SYS> SCE terminates.
        //<RESP> Remove the offending operation from this file, OR, add the operation to the Operation Definition File.
  },
  {
	"UnrecognizedOperationPdfWarning",
	warning,
	47,
	"Unrecognized Operation/PDF Detected.\n"
	"Operation: %1$s.\n"
	"PDF: %2$s.\n"
	"Line will be ignored.\n"
	"File: %3$s    Line: %4$d\n"
	"Data Line: %5$s"
        //<EXP> SCE doesn't recognize the operation as valid.
        //<SYS> SCE ignores the input data.
        //<RESP> Remove the offending operation from this file, OR, add the operation to the Operation Definition File.
  },
  {
	"OptionAlreadyDefined",
	warning,
	48,
	"Duplicate Feature Ratio record.\n"
	"A Machine-feature relationship must only have one record.\n"
	"The record will be ignored.\n"
	"Machine: %3$s    Geo: %4$s    FeaturePart: %5$s.\n"
	"File: %1$s    Line: %2$d\n"
        "Data Line: %6$s"
        //<EXP> The part has already been defined.
        //<SYS> SCE ignores the input data.
        //<RESP> Remove the duplicate definition.
  },
  {
	"MwoPosAndNegNotSupported",
	warning,
	49,
	"Illegal values for maxWithout vector detected\n."
	"MaxWithout vector must consist of either All negative values, or, all non-negative values.\n"
	"The record will be ignored.\n"
	"Machine: %4$s    Geo: %5$s    FeaturePart: %6$s.\n"
	"File: %1$s    Line: %2$d\n"
        "Data Line: %3$s"
        //<EXP> The part has already been defined.
        //<SYS> SCE ignores the input data.
        //<RESP> Remove the duplicate definition.
  },
  {
	"AlreadyDefined",
	warning,
	30,
	"%1$s already defined.\n"
	"The record will be ignored.\n"
	"File: %2$s    Line: %3$d\n"
        "Data Line: %4$s"
        //<EXP> The part has already been defined.
        //<SYS> SCE ignores the input data.
        //<RESP> Remove the duplicate definition.
  },
  {
	"DuplicatePartPDFPairWarning",
	warning,
	31,
	"(Part,pdf) and (operation,pdf) pairs must be UNIQUE.\n"
	"Duplicate usage detected for %1$s.\n"
	"Line will be ignored.\n"
	"File: %2$s    Line: %3$d\n"
	"Data Line: %4$s"
        //<EXP> SCE requires that the pairs (part,pdf) and (operation,pdf)\n
        //<EXP> be unique.
        //<SYS> SCE rejects the duplicate input data.
        //<RESP> Make sure the pairs (part,pdf) and (operation,pdf) \n
        //<RESP> are unique.
  },
  {
	"DuplicatePartPDFPairError",
	error,
	931,
	"(Part,pdf) and (operation,pdf) pairs must be UNIQUE.\n"
	"Duplicate usage detected for %1$s.\n"
	"Line will be ignored.\n"
	"File: %2$s    Line: %3$d\n"
	"Data Line: %4$s"
        //<EXP> SCE requires that the pairs (part,pdf) and (operation,pdf) \n
        //      be unique.
        //<SYS> SCE halts running.
        //<RESP> Make sure the pairs (part,pdf) and (operation,pdf) \n
        //       are unique.
  },
  {
	"DuplicateAggRecord",
	warning,
	312,
	"Aggregation record is duplicated.\n"
	"Line will be ignored.\n"
	"File: %1$s    Line: %2$d\n"
        "Data Line: %3$s"
        //<EXP> SCE detected a duplicate aggregation record.
        //<SYS> SCE ignores the duplicate record.
        //<RESP> Remove the duplicate aggregation record.
  },
  {
	"MinIndDemVolIsNegative",
	warning,
	429,
	"A negative minimum independent demand volume is encountered.\n"
	"Since negative demands can always be met, this value has been set to zero.\n"
	"Part: %1$s    Pdf: %2$s    demandID: %3$s\n"
	"File: %4$s    Line: %5$d\n"
        "Data Line: %6$s"
        //<EXP> negative minimum in demand volume is being ignored.
        //<SYS> SCE ignores the input data.
        //<RESP> Make sure the  demand has been defined via Direct Independent Demand File.
  },


  {
	"IndDemandDoesNotExist",
	warning,
	428,
	"demandID for Part being demanded  does not exist.\n"
	"Line will be ignored.\n"
	"Part: %1$s    Pdf: %2$s    demandID: %3$s\n"
	"File: %4$s    Line: %5$d\n"
        "Data Line: %6$s"
        //<EXP> DemandID for part/pdf  does not exist.
        //<SYS> SCE ignores the input data.
        //<RESP> Make sure the  demand has been defined via Direct Independent Demand File.
  },
  {
	"IndDemandedPartNotExist",
	warning,
	427,
	"Part being demand via Independent Demand File does not exist.\n"
	"Line will be ignored.\n"
	"Part: %1$s    Pdf: %2$s    demandName: %3$s\n"
	"File: %4$s    Line: %5$d\n"
        "Data Line: %6$s"
        //<EXP> Demanded part/pdf  does not exist.
        //<SYS> SCE ignores the input data.
        //<RESP> Make sure the  part has been defined.
  },
  {
	"PartDoesNotExist",
	warning,
	32,
	"PlannerTopLevelBuild part does not exist.\n"
	"Line will be ignored.\n"
	"plannerTopLevelPart: %1$s    Geo: %2$s    BbCategory: %3$s\n"
	"File: %4$s    Line: %5$d\n"
        "Data Line: %6$s"
        //<EXP> The planner top level build part does not exist.
        //<SYS> SCE ignores the input data.
        //<RESP> Make sure the top level build part has been defined.
  },
  {
	"PartDoesNotExistb",
	warning,
	33,
	"PlannerTopLevelBuild part does not exist.\n"
	"Line will be ignored.\n"
	"plannerTopLevelPart: %1$s    Geo: %2$s    Standalone option: %3$s\n"
	"File: %4$s    Line: %5$d\n"
        "Data Line: %6$s"
        //<EXP> The planner top level build part does not exist.
        //<SYS> SCE ignores the input data.
        //<RESP> Make sure the top level build part has been defined
  },
  {
	"OptEngineNotSupported",
	error,
	34,
	"This version of SCE does not support the Optimization Engine."
        //<EXP> Your version of SCE doesn't support the Optimization Engine.
        //<SYS> SCE halts running.
        //<RESP> You must get a version of SCE that supports optimization.
  },
  {
	"OptEngineAndPriorities",
	info,
	35,
	"The Parameter file specifies the optimization engine and objective type 1.\n"
	"Using the SCE LP model with priorities is an advanced capability\n"
	"and is not generally recommended.\n"
        //<EXP> You are running SCE with the optimization engine and\n
        //<EXP> the objective type set to priority.
        //<SYS> SCE will run with the objective type and engine you set.
        //<RESP> Review your choice of engine and objective type.
  },
  {
	"UnknownMfgPartPDFPair",
	warning,
	36,
	"Unknown (mfgPart,pdf) pair found in Demand Geography to Pdf Source File.\n"
        "This line will be ignored.\n"
	"File: %1$s    Line: %2$d\n"
        "Data Line: %3$s"
        //<EXP> The pair (part, pdf) in the Demand GeoSource file is not valid.
        //<SYS> SCE ignores the input data.
        //<RESP> Check that the pair (part, pdf) are valid.
  },
  {
	"MissingSourceAndPart",
	warning,
	37,
	"Demand record being rejected.\n"
	"Both the source and the part do not exist in SCE.\n"
	"Line will be ignored\n"
	"File: %1$s    Line: %2$d\n"
	"plannerPartName: %3$s    Geo: %4$s\n"
        "Data Line: %5$s\n"
        //<EXP> The part and pdf source have not been defined for this demand.
        //<SYS> SCE ignores the input data.
        //<RESP> Check that the pdf source and part have been defined.
  },
  {
	"CannotSourceDemandRecord",
	warning,
	38,
	"Unable to source a demand record to a valid part in SCE.\n"
	"Line will be ignored.\n"
	"File: %1$s    Line: %2$d\n"
	"plannerPartName: %3$s    Geo: %4$s   GeoPlannerDemandPartName: %5$s\n"
        "Data Line: %6$s\n"
        //<EXP> SCE is unable to identify a manufacturing source for the demand.
        //<SYS> SCE ignores the record.
        //<RESP> Check that the manufacturing part is valid.
  },
  {
	"InternalError1",
	fatal,
	39,
	"SCE internal error.\n"
	"Default source exists, but the geoPlannerPart does not.\n"
	"Please contact SCE support.\n"
	"File: %1$s    Line: %2$d\n"
	"plannerPartName: %3$s    Invalid geoPlannerPart: %4$s\n"
	"Valid pdf_Partname: %5$s\n"
        "Data Line: %6$s\n"
        //<EXP> An SCE internal error has occurred.
        //<SYS> SCE halts execution.
        //<RESP> Contact SCE support.
  },
  {
	"InternalError2",
	fatal,
	40,
	"SCE internal error.\n"
	"BopEntryAppData already exists.\n"
	"Please contact SCE support."
	"File: %1$s    Line: %2$d\n"
	"producedPart: %3$s    PDF: %4$s    Operation: %5$s\n"
        "Data Line: %6$s\n"
        //<EXP> An SCE internal error has occurred.
        //<SYS> SCE halts.
        //<RESP> Contact SCE support.
  },
  {
	"InternalError3",
	fatal,
	41,
	"SCE Internal Error.\n"
	"BopEntryAppData already exists.\n"
	"File: %1$s    Line: %2$d\n"
	"destinationPart: %3$s    destinationPdf: %4$s\n"
	"sourcePart: %5$s    sourcePDF: %6$s\n"
	"Data Line: %7$s"
        //<EXP> An SCE internal error has occurred.
        //<SYS> SCE halts execution.
        //<RESP> Contact SCE support.
  },
  {
	"BBCategoryAlreadyDefined",
	warning,
	42,
	"A BuildingBlock Category is already defined for a given top level build.\n"
	"This line will be ignored.\n"
	"File: %1$s    Line: %2$d\n"
	"plannerTopLevelPart: %3$s    Geo: %4$s\n"
	"bbCategory: %5$s    Internal bbCategory part: %6$s\n"
        "Data Line: %7$s\n"
        //<EXP> The building block category was already defined for the top level build.
        //<SYS> SCE ignores the input record.
        //<RESP> Check the building block category name.
  },
  {
	"CannotFindFeatureRel",
	warning,
	43,
	"Cannot find a valid Optional Feature Record to match against.\n"
	"This line will being ignored.\n"
	"File: %1$s    Line: %2$d\n"
	"plannerTopLevelPart: %3$s    Geo: %4$s\n"
	"Feature part: %5$s\n"
        "Data Line: %6$s\n"
        //<EXP> Cannot find a valid feature record to match this feature offset record against.
        //<SYS> SCE ignores the input record.
        //<RESP> Check that the feature fatio record exists.  Also check to see that it did not get rejected.
  },
  {
	"BBCategoryNotDefined",
	warning,
	611,
	"A BuildingBlock Category is not defined for a given option.\n"
	"This line will being ignored.\n"
	"File: %1$s    Line: %2$d\n"
	"plannerTopLevelPart: %3$s    Geo: %4$s\n"
	"BbCategory: %5$s    Feature part: %6$s    Internal bbCategory: %7$s\n"
        "Data Line: %8$s\n"
        //<EXP> The building block category is not defined for this option.
        //<SYS> SCE ignores the input record.
        //<RESP> Check that the build block category is defined.
  },
  {
	"OptionAllZeroRatios",
	warning,
	612,
	"An option with all zero ratio's has been entered.\n"
	"This line will be ignored.\n"
	"File: %1$s    Line: %2$d\n"
	"plannerTopLevelPart: %3$s    Geo: %4$s\n"
	"BbCategory: %5$s    Feature part: %6$s    Internal bbCategory: %7$s\n"
        "Data Line: %8$s\n"
        //<EXP> An option with all zero ratios was entered.
        //<SYS> SCE ignores the input record.
        //<RESP> Check that the ratios are correct.
  },
  {
	"OptionRatiosAlreadySpecified",
	warning,
	613,
	"Option ratios already specified.\n"
	"This line will be ignored.\n"
	"File: %1$s    Line: %2$d\n"
	"plannerTopLevelPart: %3$s    Geo: %4$s\n"
	"BbCategory: %5$s    Feature part: %6$s    Internal bbCategory: %7$s\n" 
        "Data Line: %8$s\n"
        //<EXP> The option ratios were already specified.
        //<SYS> SCE ignores the input record.
        //<RESP> Remove the duplicate entry.
  },
  // SCE 6.1
  {
        "DatedRecordBeyondHorizonEndIgnore",
         warning,
         6101,
         "Date falls beyond the end of the calendar horizon.  Record is IGNORED for this data attribute.\n"
         "File: %1$s   Line: %2$d\n"
         "Data Line: %3$s"
         //<EXP> The cumulative minimum demand exceeds the cumulative demand.
         //<SYS> SCE rejects the record.
         //<RESP> Fix your minimum demand record.
  },
  {
        "DatedRecordBeforeHorizonStartIgnore",
         warning,
         6102,
         "Date falls before the start of the calendar horizon.  Record is IGNORED for this data attribute. \n"
         "File: %1$s   Line: %2$d\n"
         "Data Line: %3$s"
         //<EXP> The cumulative minimum demand exceeds the cumulative demand.
         //<SYS> SCE rejects the record.
         //<RESP> Fix your minimum demand record.
  },
  // SCE 6.1
  {
        "DatedRecordBeyondHorizonEndAccept",
         info,
         6103,
         "Date falls beyond the end of the calendar horizon.  Record is ACCEPTED for this data attribute. \n"
         "File: %1$s   Line: %2$d\n"
         "Data Line: %3$s"
         //<EXP> The cumulative minimum demand exceeds the cumulative demand.
         //<SYS> SCE rejects the record.
         //<RESP> Fix your minimum demand record.
  },
  {
        "DatedRecordBeforeHorizonStartAccept",
         info,
         6104,
         "Date falls before the start of the calendar horizon.  Record is ACCEPTED for this data attribute. \n"
         "File: %1$s   Line: %2$d\n"
         "Data Line: %3$s"
         //<EXP> The cumulative minimum demand exceeds the cumulative demand.
         //<SYS> SCE rejects the record.
         //<RESP> Fix your minimum demand record.
  },
  {
        "MinDemandExceedsDemand",
         warning,
         1213,
         "The minimum demand exceeded the demand in period %4$d.\n"
         "File: %1$s   Line: %2$d\n"
         "Data Line: %3$s"
         //<EXP> The cumulative minimum demand exceeds the cumulative demand.
         //<SYS> SCE rejects the record.
         //<RESP> Fix your minimum demand record.
  },
  {
	"CannotSourceFeature",
	warning,
	614,
	"Could not source feature to (PDF,part).\n"
	"File: %1$s    Line: %2$d\n"
	"plannerTopLevelPart: %3$s    Geo: %4$s    mfgTopLevelPart: %5$s\n"
	"BbCategory: %6$s    Feature Part: %7$s\n"
	"Missing (PDF,part): (%8$s,%9$s)\n"
	"PDF source is for the interval: (%10$d,%11$d)\n"
        "Data Line: %12$s\n"
	"This line will be ignored with the effect that the ratio\n"
        "can be met out of thin air during this interval."
        //<EXP> SCE could not source the feature to a manufacturing part.
        //<SYS> SCE ignores the feature;  it will be sourced out of thin-air.
        //<RESP> Check that the source for the feature is valid.
  },
  {
	"MissingMfgOptionPart",
	warning,
	615,
	"Could not find mfgOptionPart as an option for this topLevelPlannerPart.\n"
	"This line will be ignored.\n"
	"File: %1$s    Line: %2$d\n"
	"plannerTopLevelPart: %3$s    Geo: %4$s    Standalone option: %5$s\n"
        "Data Line: %6$s\n"
        //<EXP> SCE could not find the manufacturing option part for this build.
        //<SYS> SCE ignores the input record.
        //<RESP> Check that the option part has been defined as an option for the build.
  },
  {
	"OptionAllZeroRatiosPO",
	warning,
	629,
	"An option with all zero ratio's has been entered.\n"
	"This line will be ignored.\n"
	"File: %1$s    Line: %2$d\n"
	"plannerTopLevelPart: %3$s\n"
	"Geo: %4$s\n"
	"Feature part: %5$s\n"
        "Data Line: %6$s\n"
        //<EXP> An option with all zero ratios was entered.
        //<SYS> SCE ignores the input record.
        //<RESP> Check that the ratios are correct.
  },
  {
	"CustChoiceFeatRatioGreaterThanOne",
	warning,
	628,
	"The specified customer choice feature record has a feature ratio greater than 1.0.\n"
	"File: %1$s    Line: %2$d\n"
	"plannerTopLevelPart: %3$s    Geo: %4$s    Option Part: %5$s\n"
        "Data Line: %6$s\n"
	"This record will be rejected.\n"
        //<EXP> The feature record has ratio greater than 1.0.  This is illegal for customer choice type features
        //<SYS> SCE ignores this input record.
        //<RESP> Remove the offending  record, or, modify the maxWithout so that its not customer choice, 
	//<RESP> or, modify the ratio.
  },
  {
	"CannotSourcePureOption",
	warning,
	616,
	"Could not source PURE OPTION to (PDF,part).\n"
	"File: %1$s     Line: %2$d\n"
	"plannerTopLevelPart: %3$s    Geo: %4$s\n"
	"mfgTopLevelPart: %5$s     Option part: %6$s\n"
	"The missing (PDF,part): (%7$s,%8$s)\n"
	"The PDF source is for the interval: (%9$d,%10$d)\n"
        "Data Line: %11$s\n"
	"This line will be ignored with the effect that the machine\n"
	"will not 'use' this option during this interval."
        //<EXP> SCE could not source a pure option to a manufacturing part.
        //<SYS> SCE halts execution..
        //<RESP> Make sure there is a valid source for the pure option.
  },
  {
	"MissingBillRecord",
	warning,
	617,
	"Could not find a bill record for [Parent,ParentPDF]-->[Child,ChildPDF]\n"
	"[%1$s,%2$s]-->[%3$s,%4$s]\n"
	"The substitute record will be ignored.\n"
	"File: %5$s     Line: %6$d\n"
        "Data Line: %7$s\n"
        //<EXP> SCE could not find a BOM record for the parent/child.
        //<SYS> SCE ignores the substitute BOM input record.
        //<RESP> Check that the parent/child BOM is valid.
  },
  {
	"MissingBOMMatch",
	warning,
	618,
	"Could not find a BOM match for substitute with any Overlapping\n"
	"effectivity Range.  Sub record for [Parent,ParentPDF]-->[Child,ChildPDF]\n"
	"[%1$s,%2$s]-->[%3$s,%4$s]\n"
	"The substitute record will be ignored.\n"
	"File: %5$s    Line: %6$d\n"
        "Data Line: %7$s\n"
        //<EXP> SCE could not find a BOM match for the substitute with any overlapping effectivity range.
        //<SYS> SCE ignores the substitute input record.
        //<RESP> Check the effectivity dates on the substitute and parent/child BOM.
  },
  {
	"InternalError4",
	fatal,
	903,
	"SCE internal error.\n"
	"Please contact SCE support.\n"
	"Substitute record for [Parent,ParentPdf]-->[Child,ChildPdf]\n"
	"[%1$s,%2$s]-->[%3$s,%4$s]\n"
	"File: %5$s    Line: %6$d\n"
        "Data Line: %7$s\n"
        //<EXP> An internal SCE error occurred.
        //<SYS> SCE halts execution.
        //<RESP> Contact SCE support.
  },
  {
	"MultipleSourceAttempt",
	warning,
	619,
	"An attempt is being made to source a Geo demand to two different PDF's\n"
	"during the same period.\n"
	"This line will be ignored.\n"
	"Geo: %1$s    plannerPart: %2$s\n"
	"Source 1: PDF [%3$s]    mfgPart [%4$s]\n"
	"Source 2: PDF [%5$s]    mfgPart [%6$s]\n"
	"Overlap occurs during period ---> %7$d\n"
	"File: %8$s    Line: %9$d\n"
        "Data Line: %10$s\n"
        //<EXP> SCE does not allow a demand to be sourced to multiple PDFs during the same period.
        //<SYS> SCE ignores the input record.
        //<RESP> Remove the duplicate sourcing.
  },
  {
	"QualifiedInputFileName",
	warning,
	731,
	"An input file name uses a qualified pathname.\n"
	"This may cause problems for the SCE data Scrubber.\n"
	"SCE will proceed but with unexpected results.\n"
	"Filename: %1$s\n"
        //<EXP> SCE Scrubber does not condone the use of filename path qualification.
        //<SYS> SCE continues with unexpected results.
        //<RESP> Ensure that there is no path qualification in the parameter file.
  },
  {
	"QualifiedOutputFilePrefix",
	warning,
	732,
	"The parameter, outputFilePrefix, uses a qualified path.\n"
	"This may cause problems for the SCE data Scrubber.\n"
	"SCE will proceed but with unexpected results.\n"
	"OutputFilePrefix parameter setting:: %1$s\n"
        //<EXP> SCE Scrubber does not condone the use of filename path qualification.
        //<SYS> SCE continues with unexpected results.
        //<RESP> Ensure that there is no path qualification in the parameter, outputFilePrefix.
  },
  {
	"QualifiedOutputFileName",
	warning,
	733,
	"An output filename has resolved to a filename with a qualified path.\n"
	"This may cause problems for the SCE data Scrubber.\n"
	"SCE will proceed but with unexpected results.\n"
	"Filename: %1$s\n"
        //<EXP> SCE Scrubber does not condone the use of filename path qualification.
        //<SYS> SCE continues with unexpected results.
        //<RESP> Ensure that there is no path qualification in the parameter, outputFilePrefix.
  },
  {
	"ScrubOutPutFileNameBad",
	error,
	734,
	"SCE Scrub utility unable to open scrubbed output file.\n"
	"Check permissions and existence of directory.\n"
	"SCE will terminate.\n"
	"Filename: %1$s\n"
        //<EXP> SCE Scrubber could not open the resolved scrub filename.
        //<SYS> SCE terminates.
        //<RESP> Check permissions and directory.
  },
  {
	"BadDate",
	warning,
	802,
	"Early effectivity date is later than late effectivity date.\n"
	"The record will be ignored.\n"
	"File: %1$s    Line: %2$d\n"
	"Data Line: %3$s"
        //<EXP> The starting effectivity date is later than the ending effectivity date.
        //<SYS> SCE ignores the input record.
        //<RESP> Correct the effectivity dates.
  },
  {
	"CollapsedEffectiveInterval",
	warning,
	803,
	"Effectivity interval collpases to zero within period interval.\n"
	"The record will be ignored.\n"
	"File: %1$s    Line: %2$d\n"
	"Data Line: %3$s"
        //<EXP> The starting effectivity date is later than the ending effectivity date.
        //<SYS> SCE ignores the input record.
        //<RESP> Correct the effectivity dates.
  },

  {
	"MissingPDFSource",
	error,
	810,
	"Cannot find PDF source for a plannerPart,Geo.\n"
	"Planner part: %1$s    Geo: %2$s    Start period: %3$d\n"
	"File: %4$s    Line: %5$d\n"
	"Data Line: %6$s"
        //<EXP> SCE cannot find the PDF source for the planner part/geo.
        //<SYS> SCE halts execution.
        //<RESP> Provide a valid source for the planner part/geo.
  },
  {
	"MissingParameter",
	error,
	811,
	"SCE tried to access a parameter which is not in the parameterSet.\n"
	"Please report this error to the SCE Development team.\n"
	"Parameter: %1$s\n"
        //<EXP> SCE tried to access a parameter which is not internally defined.  This is an internal SCE error.
        //<SYS> SCE halts execution.
        //<RESP> Contact SCE support.
  },
  {
	"ConflictingInterplantRecordsUR",
	warning,
	812,
	"Interplant records for the same (destination part,destination pdf),\n"
	"(source part,source pdf) fields but with different usage rates were detected.\n"
	"File: %1$s    Line: %2$d\n"
	"Destination Part: %3$s    Destination PDF: %4$s\n"
	"Source Part: %5$s    Source PDF: %6$s\n"
	"The input record will ignored.\n"
	"Data Line: %7$s\n"
        //<EXP> SCE detected duplicate interplant records with different usage rates.
        //<SYS> SCE ignores the input record.
        //<RESP> Correct the usage rate in the duplicate records.
  },
  {
	"ConflictingInterplantRecordsED",
	warning,
	813,
	"Interplant records for the same (destination part,destination pdf),\n"
	"(source part,source pdf) fields but with overlapping effectivity dates detected.\n"
	"File: %1$s    Line: %2$d\n"
	"Destination Part: %3$s    Destination PDF: %4$s\n"
	"Source Part: %5$s    Source PDF: %6$s\n"
	"The input record will ignored.\n"
	"Data Line: %7$s\n"
        //<EXP> SCE detected duplicate interplant records with overlapping effectivity dates.
        //<SYS> SCE ignores the input record.
        //<RESP> Correct the usage rate in the duplicate records.
  },
  {
        "ForcingSubNetAllowedFalse",
	warning,
	814,
	"Substitute Bom entry is being disabled for supply Netting.  \n"
	"This condition occurs when the sub has netAllowed=TRUE ... AND ... \n"
	"either the sub has execPen>0.0 OR the bom has execPen>0.0 OR another sub for this bom has execPen>0.0. \n"
	"Condition occured for sub with: (parent,primary,sub,pdf) as follows:  \n"
	"(%1$s, %2$s, %3$s, %4$s)\n"
        //<EXP> SCE detected duplicate interplant records with overlapping effectivity dates.
        //<SYS> SCE ignores the input record.
        //<RESP> Correct the usage rate in the duplicate records.
  },
  {
	"InterplantToMyselfWithoutMultiSourcing",
	warning,
	815,
	"Interplant record sourced on itself without the proper SourceCode in effect.\n"
	"This situation should only occur when the sourceCode of the destinationPart is set for AFP.\n"
	"File: %1$s    Line: %2$d\n"
	"Destination Part: %3$s    Destination PDF: %4$s\n"
	"SourceCode of Destination Part: %5$s\n"
	"The input record will ignored.\n"
	"Data Line: %6$s\n"
        //<EXP> SCE detected duplicate interplant records with different usage rates.
        //<SYS> SCE ignores the input record.
        //<RESP> Correct the usage rate in the duplicate records.
  },
  {
	"RoutingShareOfZero",
	info,
	816,
	"RoutingShare value is too small.   It will be truncated to Zero.\n"
	"This is equivalent to omitting it from the interplant file.\n"
	"File: %1$s    Line: %2$d\n"
	"Destination Part: %3$s    Destination PDF: %4$s\n"
	"Source Part: %5$s    Source PDF: %6$s\n"
	"SourceCode: %7$s     RoutingShare: %8$f\n"
	"The input record will ignored.\n"
	"Data Line: %9$s\n"
        //<EXP> A routing share is set to value less than 1.0. 
        //<SYS> SCE will truncate the routingShare to zero.
        //<RESP> Omit this record from the input file.
  },
  {
        "FssHorizon",
        info,
        822,
        "All demands in this FSS set are fully committed within the FSSHorizon.\n"
        "FSS Set: %1$s,  fssHorizon: Period %2$d.\n"
        "No FSS will be run for this set.\n"
        //<EXP> SCE determined that all the demands within the FSS set were fully met.
        //<SYS> This is an informational message.
        //<RESP> No user response is necessary.
  },
  {
        "InvalidPartFSS",
        warning,
        823,
        "Invalid PlannerPart, Geo  specified.\n"
        "File: %1$s    Line %2$d\n"
        "PlannerPart,Geo: %3$s, %4$s\n"
        "Data Line: %5$s\n"
        "The record will be ignored (will be left out of FOCUS set)."
        //<EXP> The demand (planner part/geo) specified in the FSS Set is not valid.
        //<SYS> SCE ignores the input record (the demand is not included in the FSS set).
        //<RESP> Check that the demand (planner part/geo) is valid.
  },
  {
        "NoDemandFSS",
        warning,
        824,
        "Invalid PlannerPart, Geo specified in FOCUS set.\n"
        "There is a geoSource record but no demand record for this PlannerPart, Geo\n"
        "Found while reading file: %1$s\n"
        "Line: %2$d\n"
        "PlannerPart,Geo: %3$s, %4$s\n"
        "The record will be ignored (will be left out of FOCUS set).\n"
        //<EXP> A demand in the FSS Focus Set had a geoSource record but no\n
        //<EXP> demand record.
        //<SYS> SCE does not include this demand in the FSS Focus Set.
        //<RESP> Provide a demand record or remove this demand from the FSS\n
        //<RESP> Focus Set.
  },
  {
        "JumperArstd::cerror",
        error,
        830,
        "Jumper Arc Error: Interplant Operation: %1$s, has a substitute: %2$s,\n"
	"that is not valid.\n"
	"Contact SCE Support.\n"
        //<EXP> SCE detected an internal error due to an invalid jumper arc.
        //<SYS> SCE halts execution.
        //<RESP> Contact SCE support.
  },
  {
        "PossibleInvalidParameter",
	warning,
	888,
	"While processing the parameter file, unfamiliar parameter found and skipped.\n"
	"This may be an invalid entry.\n"
	"Encountered parameter: %1$s\n"
	"File: %2$s    Line: %3$d\n"
        "Data Line: %4$s\n"
        //<EXP> SCE has detected a parameter value which is not valid. 
        //<SYS> SCE rejects the parameter value.
        //<RESP> Check the value of the parameter.
  },
  {
        "MissingParameterRequested",
	info,
	999,
	"There was an attempt to access a parameter with a null string value.\n"
	"This is not recommended.\n"
	"Please initialize all string parameters used in the set of parameters.\n"
	"Parameter Requested: %1$s"
        //<EXP> This error message is no longer used.
        //<SYS> This error message is no longer used
        //<RESP> This error message is no longer used
  },
  {
        "UsingDefaultParameter",
	warning,
	998,
	"While reading parameter file, encountered a parameter with no value.\n"
	"SCE will proceed using default value, but this may produce unexpected results.\n"
	"File: %1$s    Line: %2$d\n"
	"Parameter Name: %3$s\n"
        "Data Line: %4$s\n"
        //<EXP> The parameter did not have a value.
        //<SYS> SCE will use the default value for the parameter.
        //<RESP> Provide a value for the parameter.
  },
  {
        "IllegalParameterEntry",
	warning,
	898,
	"There was an illegal attempt to add a parameter to the set of parameters.\n"
	"Parameter Name: %1$s is of an illegal type\n"
	"File: %2$s    Line: %3$d\n"
        "Data Line: %4$s\n"
        //<EXP> The parameter did not belong to the set of parameters.  
        //<SYS> SCE ignores the input record.
        //<RESP> Verify that the parameter should belong to the set of parameters.
  },
  {
        "MiscountWarning",
	warning,
	777,
	"There may be a conflict between the output file: %1$s\n"
	"and its corresponding input file.\n"
	"An error was detected when counting the number of printed records\n" 
        "in these files."
        //<EXP> SCE's reconciling of an output to an input file didn't match.
        //<SYS> SCE issues a warning.
        //<RESP> Contact the SCE support.
  },
  {
        "BadBuildAheadCode",
	warning,
	778,
	"BuildAheadType is not recognized.   It must be either A (for BuildASAP) or N (for BuildNstn).\n"
	"Assuming A (for BuildASAP).\n"
	"Part: %1$s    Pdf: %2$s    BuildAheadType: %3$s\n"
	"File: %4$s    Line: %5$d\n"
	"Data Line: %6$s"
        //<EXP> SCE found an illegal BuildAheadType specified.   BuildAheadType=A (for BuildASAP)  will be assumed.
        //<SYS> SCE issues a warning and continues  execution.
        //<RESP> set the BuildAheadType to either A or N.
  },
  {
        "MandatoryParameterMissing",
	error,
	555,
	"Mandatory Parameter is missing from parameter file. User must define\n"
	"a value for this parameter.\n"
	"File: %1$s    Missing Parameter: %2$s"
        //<EXP> A mandatory parameter was not given in the parameter file.
        //<SYS> SCE halts execution.
        //<RESP> Provide the mandatory parameter.
  },
  {
        "InternalError5",
	fatal,
	950,
	"SCE internal error. Please contact SCE Support.\n"
	"Number of periods = 1\n"
	"Found while pre-processing default operations."
        //<EXP> An SCE internal error occurred.
        //<SYS> SCE halts execution.
        //<RESP> Contact SCE support.
  },
  {
        "InternalError6",
	fatal,
	951,
	"SCE internal error. Please contact SCE Support.\n"
	"Found while pre-processing default operations."
        //<EXP> An internal SCE error occurred. 
        //<SYS> SCE halts execution.
        //<RESP> Contact SCE support.
  },
  {
        "InterplantOperationBomError",
	error,
	952,
	"Detected interplant operation that does not have exactly one bom entry."
        //<EXP> An internal SCE error occurred.
        //<SYS> SCE halts execution.
        //<RESP> Contact SCE support.
  },
  {
        "DatalessMandatoryInputFile",
	warning,
	1000,
	"There was no acceptable data in mandatory input file: %1$s\n"
        //<EXP> A mandatory input file had no valid data.
        //<SYS> SCE continues execution.
        //<RESP> Verify that the input file has the correct data.
  },
  {
        "MultipleDemandVolRecs",
	warning,
	1023,
	"Multiple demand records detected.  Demand quantities will be accumulated.\n"
	"This may cause reconciliation errors in demand oriented output files.\n"
	"File: %1$s    Line number (where duplicate found): %2$d\n"
	"Planner part: %3$s     Geo: %4$s"
        //<EXP> SCE detected a multiple demand record.
        //<SYS> SCE will accumulate the multiple demand records.
        //<RESP> Check that the multiple demand records are correct.
  },
  {
        "MultipleMinDemandVolRecs",
	warning,
	1024,
	"Multiple minimum demand records detected.  The minimum demand quantities will be overwritten with the latest record.\n"
	"File: %1$s    Line number (where duplicate found): %2$d\n"
	"Planner part: %3$s     Geo: %4$s"
        //<EXP> SCE detected a multiple minimum volume demand record.
        //<SYS> SCE will accumulate the multiple demand records.
        //<RESP> Check that the multiple demand records are correct.
  },
  {
        "ResetMinDemandVolRecs",
	warning,
	1025,
        "The minimum demand volume is been reset to zero.\n"
         "File: %1$s   Line: %2$d\n"
         "Data Line: %3$s"
        //<EXP> SCE detected that a minimum demand record was reset to zero.
        //<SYS> SCE resets the minimum demand to zero.  Another setting of this demand will not generate a warning message.
        //<RESP> Check that the reset was intended.
  },
  {
        "InvalidCalendar",
	error,
	2001,
	"This run of SCE is halting due to an unusable Calendar."
        //<EXP> The internal SCE calendar is not valid.
        //<SYS> SCE halts execution.
        //<RESP> Contact SCE support.
  },
  {
        "ExecCostInHeurMode",
	warning,
	2002,
	"SCE cannot load ExecCosts in Heuristic Mode.\n"   
	"The Exec Costs file will be ignored and exec costs will not be loaded.\n"
        "Remedy this problem by commenting out the param setting: operationExecCostFile\n"
	"  ... or, setting engine=optimization.\n"
        //<EXP> The internal SCE calendar is not valid.
        //<SYS> SCE keeps on truckin.
        //<RESP> Use engine=optimization or remove operationExecCostFile parameter.
  },
  {
        "UnrecognizedSourceCode",
	warning,
	2003,
	"SourceCode is not valid.\n"   
	"File: %1$s    Line: %2$d\n"
	"Part: %3$s    PDF: %4$s\n"
	"Defaulting to ==> AFP.\n"
	"Data Line: %5$s\n"
        //<EXP> The internal SCE calendar is not valid.
        //<SYS> SCE keeps on truckin.
        //<RESP> Use engine=optimization or remove operationExecCostFile parameter.
  },
  {
        "GeoDemandNotSourced",
	error,
	1002,
	"Encountered a geo demand with no source.\n"
	"Geo: %1$s    Planner Part: %2$s\n"
	"Period: %3$d"
        //<EXP> SCE encountered a planner part/geo with no source.
        //<SYS> SCE halts execution.
        //<RESP> Give the planner part/geo a source.
  },
  {
        "InvalidCalendarDate",
	error,
	1003,
	"Encountered a date that could not be translated. SCE cannot continue.\n"
	"File: %1$s    Line: %2$d\n"
	"Data Line: %3$s"
        //<EXP> A date could not be translated into a valid SCE date.
        //<SYS> SCE halts execution.
        //<RESP> Change the date data to a valid SCE date.
  },
  {
        "MipModeAndCritListDontMix",
	error,
	6201,
	"Illegal parameter settings.  Cannot have mipMode=TRUE and printCriticalListFile=TRUE in the same model.\n"
	"SCE cannot continue.\n"
        //<EXP> Illegal parameter settings: mipMode=TRUE and printCriticalListFile=TRUE.
        //<SYS> SCE halts execution.
        //<RESP> Change the settings in SCE Param file.
  },
  {
        "MipModeAndShadowProcesDontMix",
	error,
	6202,
	"Illegal parameter settings.  Cannot have mipMode=TRUE and printShadowPricesFile=TRUE in the same model.\n"
	"SCE cannot continue.\n"
        //<EXP> Illegal parameter settings: mipMode=TRUE and printShadowPricesFile=TRUE.
        //<SYS> SCE halts execution.
        //<RESP> Change the settings in SCE Param file.
  }
};
// NOTE: if you ever want to add a message, remember to update the enumeration
//       in the message.h file as well...simply add the name of the new
//       message right before the 'numberErrMsgs' entry.


// this hasn't really been used, but it was added as an experiment, and may
// be used later.

const messageStructure LgFrScenarioForSce::nonerrMsgs_[] = {
  {
	"TestMsg",
	info,
	1,
	"This is just a test\n"
	"TESTTESTTESTTSETTESTSETSETSESET."
  }
};


//---------------------------   README   --------------------------------------

//I.	What is new about messaging in SCE?
//
//	The big change in messaging is that now, rather than depending on the
//        standard output and error streams, SCE uses the Message Class Library.
//	There are notes on how to use the MCL in the header file:
//	<mcl/src/mcl.h>, but the gist of it is that an MCLFacility object can 
//	be used to issue messages that can be directed to a particular file or 
//	to standard out. The messages that are used by the facility object 
//	must be "added" at the beginning of a run of SCE. These messages can 
//	then be issued by using the facility.
//
//
//II.	Messages ...
//
//(1) 	Of what does a message consist?
//
//	The constructor for an MclMsg requires a facility (reference), 
//	a unique msgId string, an MclLevel (reference), the msgFormat in
//	string form with printf type flags, an integral external number.
//
//	example:
//
//	new MclMsg(myFacility,"IllegalCharacter",MclLevel::error,
//		   "SCE found illegal char in line %2$s\nof file: $1%s",
//		   101);
//
//	For further information on specifics of the MclMsg, check out the
//	header file. It's pretty self-explanatory, but just beware to not
//	put the wrong argument flags in the the message format string. 
//
//
//(2) 	Where are the messages defined?
//
//	The messages are defined as a static data member of the class 
//	LgFrScenarioForSce, currently declared/defined in the files scenSce.C,
//	scenSce.h, message.C (contains more method definitions), and message.h
//	(which contains some things relating to methods defined in message.C).
//
//	The messages themselves are defined in the file: message.C
//	The elements of each message (messageID,externalNumber,severityLevel,
//	and messageFormat) appear in entries of the array defined in that file.
//
//
//(3) 	How do you add a new message?
// 
//	In general, in order to have create a new message with MCL, you must
//	already have a facility object. Because of this you can think of the
//	messages belonging to the facility, though this is not exactly the 
//	case. To add a new message, you will need to use a call similar to
//	the example given above: "new MclMsg(...)"
//
//	However, in the context of SCE, it is sufficient to just add the
//	required contents of each message in the array defined in message.C.
//	The SCE scenario will use a loop to go through this array and add
//	messages to its facility.
//
//	If you have a message that is not already included in the set of
//	messages currently being added to the facility at the beginning of
//	an SCE run, goto the file: message.C. Within that file there is a
//	large array that is a constant,static member of LgFrScenarioForSce.
//	Just add a structure to the end or anywhere else in the array,
//	following the same format as the other message entries. For example:
//
//	{
//	.
//	.
//	.	(previous message)
//	.
//
//	},
//	{
//		"NewTestMessage1",
//		warning,
//		9999,
//		"This is the message format text of this test message.\n"
//		"Notice, you don't have to put a comma at that end of a "
//		"message format line, but if you want a newline character\n"
//		"you must put it in the format text\n like that\n"
//		"these are some argument place-holders: %1$s %2$d %3$b %4$f"
//	},
//	{
//	.
//	.
//	.	(next message)
//	.
//
//	},
//	etc.
//
//	NB: Order won't matter here, but make sure you do not try to add 
//	    messages with the same message id string or the same external
//	    number. MCL will not allow this and will halt execution of SCE.
//
//	IN ADDITION !!  You should go to the file: message.h and in the 
//	enumeration of message names, you must add it the name there. The
//	reason for this is that it is an easy way to keep track of all the
//	message names, and also we define a term in the enumeration called
//	'numberoferrors' or something along those lines which must be equal
//	to the number of errors that exist in SCE...otherwise some messages
//	will not be loaded. We use this number to determine how many far to
//	index in the array of messages.
//
//
//(4) 	How do you modify a message?
//
//	If you want to change a message that isn't issued anywhere in the
//	code, you can just do basically what is described above and make
//	changes to entries in the array defined in the file: message.C.
//
//	However, if you want to make changes in a message that is currently
//	somewhere in the code, make sure to change all places where there
//	may be a conflict with the message format or id. Just do a grep for
//	the message ID to find all places where the message can be issued.
//
//
//(5) 	How do you issue a message?
//
//	What you will want to do is use the facility (there should be only
//	one error facility and one non-error facility) to issue the message
//	you want. See below in the "Facilities" section.
//
//	Alternatively, though you will not want to do this, the message
//	objects themselves have a public data method called: "issue(..)"
//	that allow it to issue itself. However, this doesn't really make
//	sense, and the need will probably never arise.
//
//	More about messages (MclMsgUnit,MclMsg,MclMsgFrag) in header file:
//	<mcl/src/msg.h> or <../mcl.h>
//
//
//III.	Facilities ...
//
//(1)	What is a 'Facility'?
//
//	You can think of a facility object as a black box to which you can 
//	pass arguments and a message ID, and get out an error. That's all
//	you really need to know. In the case of SCE, there is one of these
//	boxes that belongs to an instance of the LgFrScenarioForSce class
//	(since there should only be one in any given run of SCE, correct?)
//	and this box is shared with other objects by giving access to this
//	box via a handle (a pointer).
//
//	For general notes on how to implement an MclFacility, you can read
//	the header file <mcl/src/facility.h> or <../mcl.h>
//
//
//(2)	How are these facilities used in SCE?
//
//	There are only two facilities that come into existance during a run
//	of SCE. There are the 'sceErrFacility_' and 'sceMsgFacility_' data
//	members of the class LgFrScenarioForSce. One is used for issuing 
//	error messages (actually of MclLevels: info,warning,error,severe,or
//	fatal), and the other for non-error messages. Currently the non-err
//	facility sceMsgFacility_, isn't being used although it does work.
//
//	These data members are actually pointers to facilities rather than
//	facility objects. This makes it easier to implement as the MclFacility
//	class doesn't have a default constructor, and all assignment operators
//	are overloaded and private.
//
//	We share the facilities by passing pointers using 'set' and 'get'
//	type methods of various classes.
//
//	NB: If you should ever need to share the facilities with another
//	    class which currently does not have access to them, then follow
//	    the same technique used by other classes. 
//	
//	(1) First, find the nearest and most logically accessible class with 
//	    a handle/ptr to the facility. 
//	(2) Introduce two new methods to the class without access to the 
//	    messaging facilities, 'setFacility(..)' and 'getFacility()', 
//	    and also a data member which is a pointer to a facility: 
//	    'MclFacility * myFacPtr_;'
//	(3) Then find out where in the code is the earliest that there is
//	    access to the previously mentioned class so that the facility
//	    can be grabbed ASAP. Make sure not to try issuing messages with
//	    an uninitialized facility pointer.
//
//
//(2b)    Why two message facilities?
//
//	Now the reason for two messaging facilities is that associated with
//	each facility, there is something called an MclOutputDisplayer
//	which can write to a specified file, but not to multiple files. In
//	order to easily distinguish betweent the messages (error vs. non-err),
//	we use these two facilities which will write to two different files.
//	Real quick, there is actually a way to change the file to which the
//	messages are written by using a method of the MclOutputDisplayer
//	object which the facility possesses... this would not be possible
//	if we did not have access to the displayer, but as it was implemented
//	in the scenario, we actually have the displayers declared as members
//	of the scenario as well. However, you cannot change the output
//	displayer itself ... ie. you can't switch displayers of a facility.
//
//	Right now, the names of the files into which these messages are being
//	written are hard-coded in one of the methods of the scenario builder
//	(in file scBdSce.C). These could possibly be passed as a parameter,
//	but not through the parameter file, because we need to have these
//	files open as soon as possible so that all messages can be caught,
//	but the parameter file is not processed till much further (a couple
//	of milliseconds) in the code. Their names are: sceERROR.log and
//	sceMESSAGE.log
//
//
//(3)	So how do you issue a message?
//
//	A typical call to a facility to issue a message used to look like:
//
//	std::cerr << "SCE found an illegal character in line " << line << "\n"
//	     << "of file: " << filename << "\n";
//
//	But now would look something like:
//
//	(*theFacil)("IllegalCharacter",MclArgList() << filename << (int)line);
//
//	-The "theFacil" is a pointer to an MCLFacility... so we use the "*"
//	 dereferencing operator.
//	-The () operator is overloaded so that it is the operator used for
//	 issuing messages.
//	-The call requires a unique messageID which is given to a message 
//	 object when it is created ("IllegalCharacter" in this case). If there
//	 are any arguments specified in the message format with which this 
//	 message was defined, then you must also pass an MCLArgList object 
//	 that contains the correct number of arguments in the correct order.


void SceMsg::postIssue()
{
  if (myLevel () < MclLevel::error ())
      return;

   std::cerr <<
      "\n\n"
      "The above message indicates an error.\n"
      "SCE terminates unsuccessfully.  Return Code: 8\n" << std::flush;

   exit(8);

}
@


1.14
log
@fixed array bounds checks
@
text
@d1692 20
@


1.13
log
@more dated fixes
@
text
@d1068 1
a1068 1
        "DatedRecordBeyondHorizonEnd",
d1071 1
a1071 1
         "Date falls beyond the end of the calendar horizon.  Record will be ignored.\n"
d1079 1
a1079 1
        "DatedRecordBeforeHorizonStart",
d1082 24
a1105 1
         "Date falls before the start of the calendar horizon.  Record will be ignored.\n"
@


1.12
log
@initial changes for sce4.40
@
text
@d1066 23
@


1.11
log
@Preliminary commit for SCE 5.00
@
text
@d1495 13
@


1.10
log
@put in check for forcing netAllowed=FALSE when illegal penalized exectuion situations
@
text
@d1351 31
d1600 13
@


1.9
log
@removed the "binning" stuff which is now obsolete
@
text
@d1338 13
@


1.8
log
@more memory fixes ... AND ... increased array sizes on messageStruct
@
text
@a1336 32
#ifdef BINNING_OPERATION_TEMP_SOLUTION
  {
	"ConflictingBinRecordsUR",
	warning,
	814,
	"Bin records for the same (markedpart, pdf),\n"
	"(unmarkedPart, pdf) fields but with different usage rates were detected.\n"
	"File: %1$s    Line: %2$d\n"
	"Marked Part: %3$s     PDF: %4$s\n"
	"Unmarked Part: %5$s    PDF: %6$s\n"
	"The input record will ignored.\n"
	"Data Line: %7$s\n"
        //<EXP> SCE detected duplicate bin records with different usage rates.
        //<SYS> SCE ignores the input record.
        //<RESP> Correct the usage rate in the duplicate records.
  },
  {
	"ConflictingBinRecordsED",
	warning,
	815,
	"Bin records for the same (marked part, pdf),\n"
	"(unmarked part, pdf) fields but with overlapping effectivity dates detected.\n"
	"File: %1$s    Line: %2$d\n"
	"Marked Part: %3$s    Marked PDF: %4$s\n"
	"Unmarked Part: %5$s    PDF: %6$s\n"
	"The input record will ignored.\n"
	"Data Line: %7$s\n"
        //<EXP> SCE detected duplicate bin records with overlapping effectivity dates.
        //<SYS> SCE ignores the input record.
        //<RESP> Correct the usage rate in the duplicate records.
  },
#endif
@


1.7
log
@commiting to main branch witutil, scenario, and sce code which removes RW
@
text
@d116 3
a118 3
  const int MAXMSGID = 50;
  const int MAXFORMAT = 200;
  const int MAXCHARS = 200;
d120 1
a120 1
  const int MaxNumMsgs = 200;
d125 1
a125 1
    char msgID[50];
d127 1
a127 1
    char msgFormat[200];
@


1.6
log
@Added include of mcl/src/mcl.h near top of include list to avoid
compile time problems on AIX which did not occur on Windows.

added
  implement(RWGVector, float)
  implement(RWGVector, int)
to ipSce.C to avoid unresolved symbols at link time
@
text
@d1 6
d38 1
a38 1
LgFrScenarioForSce::initMsgFacility(RWCString buffername)
d40 1
a40 1
  sceMsgFacDisp_ = new MclPrintfOutputDisplayer(buffername,"w+");
d45 1
a45 1
    // cout << "Loading default messages.\n";
d52 1
a52 1
LgFrScenarioForSce::initErrFacility(RWCString buffername)
d54 1
a54 1
  sceErrFacDisp_ = new MclPrintfOutputDisplayer(buffername,"w+");
d59 1
a59 1
    // cout << "Loading default messages.\n";
d69 2
a70 1
  for (int i=0; i<upTill; i++) {
d137 2
a138 2
  ifstream errFile;
  errFile.open(msgFileName, ios::in | ios::nocreate);
d276 1
a276 1
  cout << "Processing messages from " << msgFileName << "\n[";
d279 2
a280 1
  for (int x=0; x<i; x++) {
d283 1
a283 1
    cout << ".";
d320 1
a320 1
  cout << "]\n";
d636 1
a636 1
	"Since you have set ==> forcePcfBogons to TRUE, SCE will disable production of the part.\n"
d1410 1
a1410 1
        "JumperArcError",
d1839 1
a1839 1
//	cerr << "SCE found an illegal character in line " << line << "\n"
d1862 1
a1862 1
   cerr <<
d1865 1
a1865 1
      "SCE terminates unsuccessfully.  Return Code: 8\n" << flush;
@


1.6.2.1
log
@Roguewave is gone
@
text
@a0 6

// RW2STL - inserted:
#include <string>
#include <ostream.h>
#include <scenario/src/RWToSTLHelpers.h>
// End of RW2STL - inserted includes.
d32 1
a32 1
LgFrScenarioForSce::initMsgFacility(std::string buffername)
d34 1
a34 1
  sceMsgFacDisp_ = new MclPrintfOutputDisplayer(buffername.c_str(),"w+");
d46 1
a46 1
LgFrScenarioForSce::initErrFacility(std::string buffername)
d48 1
a48 1
  sceErrFacDisp_ = new MclPrintfOutputDisplayer(buffername.c_str(),"w+");
d63 1
a63 2
  int i = 0; // Pulled out of the for below by RW2STL
  for (i=0; i<upTill; i++) {
d130 2
a131 2
  std::ifstream errFile;
  errFile.open(msgFileName);// ios::nocreate);
d272 1
a272 2
  int x = 0; // Pulled out of the for below by RW2STL
  for (x=0; x<i; x++) {
d628 1
a628 1
	"Since you have set ==> forcePcfBogons to true, SCE will disable production of the part.\n"
@


1.6.2.2
log
@Went all the way to std::cout
@
text
@d4 1
a4 1
#include <ostream>
d45 1
a45 1
    // std::cout << "Loading default messages.\n";
d59 1
a59 1
    // std::cout << "Loading default messages.\n";
d276 1
a276 1
  std::cout << "Processing messages from " << msgFileName << "\n[";
d283 1
a283 1
    std::cout << ".";
d320 1
a320 1
  std::cout << "]\n";
d1410 1
a1410 1
        "JumperArstd::cerror",
d1839 1
a1839 1
//	std::cerr << "SCE found an illegal character in line " << line << "\n"
d1862 1
a1862 1
   std::cerr <<
d1865 1
a1865 1
      "SCE terminates unsuccessfully.  Return Code: 8\n" << std::flush;
@


1.5
log
@added prodVolPegging for ats and forcePcfBogons (experimental)
@
text
@d1 1
@


1.4
log
@bogon output, and minor changes
@
text
@d623 13
@


1.3
log
@print lowest level non-pcf files
@
text
@d1554 12
@


1.2
log
@3.11 commit
@
text
@d805 15
@


1.1
log
@Initial revision
@
text
@d808 1
a808 1
	"demandID for Part being demand via Direct Independent Demand File does not exist.\n"
d1030 11
d1333 1
a1333 1
        "fssHorizon",
d1344 1
a1344 1
        "invalidPartFSS",
d1357 1
a1357 1
        "noDemandFSS",
a1558 20
  },
  {
        "EppsObsolete",
         error,
         1212,
         "The prepForEPPS function is no longer supported in SCE.\n"
         //<EXP> SCE no longer supports prepForEPPS.
         //<SYS> SCE halts execution.
         //<RESP> Do not set the prepForEPPS flag.
  },
  {
        "MinDemandExceedsDemand",
         warning,
         1213,
         "The minimum demand exceeded the demand in some period.\n"
         "File: %1$s   Line: %2$d\n"
         "Data Line: %3$s"
         //<EXP> The cumulative minimum demand exceeds the cumulative demand.
         //<SYS> SCE rejects the record.
         //<RESP> Fix your minimum demand record.
a1559 3



@


1.1.1.1
log
@Import sce
@
text
@@
