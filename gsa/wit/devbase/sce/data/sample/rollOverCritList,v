head	1.1;
branch	1.1.1;
access;
symbols
	sce_5_01_20080919:1.1.1.1
	latest_sce_4_20_20060523:1.1.1.1.0.20
	sce_4_20_20060523:1.1.1.1
	latest_sce4_20_OSL:1.1.1.1.0.18
	sce_4_20_OSL:1.1.1.1
	sce_4_10_30050426:1.1.1.1
	sce_4_05_20040511:1.1.1.1
	sce_4_00_20040201:1.1.1.1
	nextGenBranch:1.1.1.1.0.16
	nextGenRoot:1.1.1.1
	sce_3_30_20030627:1.1.1.1
	EndRw-branch:1.1.1.1.0.14
	Root-of-EndRw:1.1.1.1
	EndWitRw-branch:1.1.1.1.0.12
	Root-of-EndWitRw:1.1.1.1
	RwToStl-branch:1.1.1.1.0.10
	Root-of-RwToStl:1.1.1.1
	latest_sce_3_10_20010924:1.1.1.1.0.8
	sce_3_10_20010924:1.1.1.1
	latest_sce_3_00_20010601:1.1.1.1.0.6
	sce_3_00_20010601:1.1.1.1
	latest_sce_2_31_20010308:1.1.1.1.0.4
	sce_2_31_20010308:1.1.1.1
	latest_sce_2_31_20001003:1.1.1.1.0.2
	sce_2_31_20001003:1.1.1.1
	start:1.1.1.1
	IBM:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2000.02.25.18.36.35;	author wit;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.25.18.36.35;	author wit;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@#!/bin/rexx
/*
 *  Utility for creating roll over heuristic critical list.
 *
 *  rollOverCritList inputFile outputFile
 */

/* Get input parameters */
parse arg inputFile outputFile

/* Remove output file, if it exists */
"rm" outputFile "2>/dev/null"

/* initialize hash table */
h.=0

/* Loop reading each line of input file */
do forever

  /* if there are 0 lines left to read, then exit loop */
  if lines( inputFile )=0 then leave

  /* Read next line of input file */
  line = linein( inputFile )

  /* Get two comma seperated tokens line */
  parse var line partname "?" period

  /* check to see if this partname, period triple were already read */
  if h.partname.period=0 then 
    do
      /* write line to output file */
      rc = lineout( outputFile, line)
    end

  /* Mark this part, period triple as complete */
  h.partname.period=1

end
rc = stream( inputFile ,"Command", "close" );
rc = stream( outputFile ,"Command", "close" );
@


1.1.1.1
log
@Import sce
@
text
@@
