head	1.13;
access;
symbols;
locks; strict;
comment	@// @;


1.13
date	2004.11.08.23.23.20;	author fasano;	state Exp;
branches;
next	1.12;

1.12
date	2004.11.06.23.51.19;	author fasano;	state Exp;
branches;
next	1.11;

1.11
date	2004.10.28.19.24.05;	author fasano;	state Exp;
branches;
next	1.10;

1.10
date	2004.10.28.16.48.43;	author grzes;	state Exp;
branches;
next	1.9;

1.9
date	2004.10.28.15.57.05;	author grzes;	state Exp;
branches;
next	1.8;

1.8
date	2004.10.28.15.44.52;	author grzes;	state Exp;
branches;
next	1.7;

1.7
date	2004.10.28.15.19.52;	author grzes;	state Exp;
branches;
next	1.6;

1.6
date	2004.10.28.14.53.30;	author grzes;	state Exp;
branches;
next	1.5;

1.5
date	2004.10.28.14.11.48;	author grzes;	state Exp;
branches;
next	1.4;

1.4
date	2004.10.28.13.55.24;	author grzes;	state Exp;
branches;
next	1.3;

1.3
date	2004.10.28.12.57.45;	author fasano;	state Exp;
branches;
next	1.2;

1.2
date	2004.10.28.04.44.11;	author fasano;	state Exp;
branches;
next	1.1;

1.1
date	2004.10.11.17.44.09;	author fasano;	state Exp;
branches;
next	;


desc
@@


1.13
log
@Fixed up to recognize and test for records with duplicate keys.
@
text
@#if defined(_MSC_VER)
#pragma warning(disable:4786)
#pragma warning(disable:4503)
#endif

#include <cassert>
#include <iostream>
#include <cfloat>

//#include <wit.h>

#include "demandFile.h"
#include "materialFile.h"
#include "materialAttributesFile.h"
#include "parameterFile.h"
#include "capacityFile.h"
#include "operationFile.h"
#include "operationAttributesFile.h"
#include "consumptionArcFile.h"
#include "productionArcFile.h"
#include "substituteMaterialFile.h"
#include "populateOvpt.h"
#include "ovptProblem.h"

// Function Prototypes. Function definitions is in this file.
void testingMessage( const char * const msg );



int
main (int argc, char * argv[])
{
  testingMessage( "Testing ECCproductionArcFile\n" );
  ECCproductionArcFile::test();
  testingMessage( "Testing ECCproductionArcFileIterator\n" );
  ECCproductionArcFileIterator::test();

  testingMessage( "Testing ECCmaterialFile\n" );
  ECCmaterialFile::test();
  testingMessage( "Testing ECCmaterialFileIterator\n" );
  ECCmaterialFileIterator::test();

  testingMessage( "Testing ECCsubstituteMaterialFile\n" );
  ECCsubstituteMaterialFile::test();
  testingMessage( "Testing ECCsubstituteMaterialFileIterator\n" );
  ECCsubstituteMaterialFileIterator::test();

  testingMessage( "Testing ECCconsumptionArcFile\n" );
  ECCconsumptionArcFile::test();
  testingMessage( "Testing ECCconsumptionArcFileIterator\n" );
  ECCconsumptionArcFileIterator::test();

  testingMessage( "Testing ECCoperatonAttributesFile\n" );
  ECCoperationAttributesFile::test();
  testingMessage( "Testing ECCoperationAttributesFileIterator\n" );
  ECCoperationAttributesFileIterator::test();

  testingMessage( "Testing ECCoperationFile\n" );
  ECCoperationFile::test();
  testingMessage( "Testing ECCoperationFileIterator\n" );
  ECCoperationFileIterator::test();

  testingMessage( "Testing ECCcapacityFile\n" );
  ECCcapacityFile::test();
  testingMessage( "Testing ECCcapacityFileIterator\n" );
  ECCcapacityFileIterator::test();

  testingMessage( "Testing ECCdemandFile\n" );
  ECCdemandFile::test();
  testingMessage( "Testing ECCdemandFileIterator\n" );
  ECCdemandFileIterator::test();

  testingMessage( "Testing ECCmaterialAttributesFile\n" );
  ECCmaterialAttributesFile::test();
  testingMessage( "Testing ECCmaterialAttributesFileIterator\n" );
  ECCmaterialAttributesFileIterator::test();

  testingMessage( "Testing ECCparameterFile\n" );
  ECCparameterFile::test();

  testingMessage( "Testing ECCpopulateProblem\n" );
  ECCpopulateProblem::test();

  testingMessage( "Testing ECCovptProblem\n" );
  ECCovptProblem::test();

  testingMessage( "All tests completed successfully\n" );

  return 0;
}


// Display message on stdout and stderr
void testingMessage( const char * const msg )
{
	std::cerr <<msg;
  //cout <<endl <<"*****************************************"
  //     <<endl <<msg <<endl;
}
@


1.12
log
@Modified so populate method is now a class
@
text
@d33 10
a47 5
  testingMessage( "Testing ECCproductionArcFile\n" );
  ECCproductionArcFile::test();
  testingMessage( "Testing ECCproductionArcFileIterator\n" );
  ECCproductionArcFileIterator::test();

a72 5
  testingMessage( "Testing ECCmaterialFile\n" );
  ECCmaterialFile::test();
  testingMessage( "Testing ECCmaterialFileIterator\n" );
  ECCmaterialFileIterator::test();

@


1.11
log
@Added skeleton to start
@
text
@d22 1
d81 3
@


1.10
log
@Added substituteMaterialFile.h.
Fixed a couple of nasty bugs in previously added files.
@
text
@d22 1
a76 1
  
d80 3
@


1.9
log
@Added productionArcFile.h
@
text
@d21 1
d31 5
@


1.8
log
@Added consumptionArcFile.h
@
text
@d20 1
d30 5
@


1.7
log
@Added operationAttributesFile.h.
@
text
@d19 1
d29 5
@


1.6
log
@Added operationFile.h.
@
text
@d18 1
d28 5
@


1.5
log
@Added capacityFile class
@
text
@d17 1
d27 4
@


1.4
log
@Modifed include statements to work with .Net.
Added std prefix to cerr to work with .Net.
@
text
@d16 1
d27 5
@


1.3
log
@Added class for reading parameter file.
Fixed typo in file format document.
Added code for throwing exceptions when problems reading files
@
text
@d6 3
a8 3
#include <assert.h>
#include <iostream.h>
#include <float.h>
d54 1
a54 1
  cerr <<msg;
@


1.2
log
@added materialAttributesFile and materialFile
@
text
@d15 1
d41 4
@


1.1
log
@Added files to read demand.csv
@
text
@d13 2
d27 13
@

