head	1.2;
access;
symbols
	Start:1.1.1.1 IBM:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2002.10.31.19.33.24;	author yingdong;	state dead;
branches;
next	1.1;

1.1
date	2002.10.31.16.59.39;	author fasano;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.10.31.16.59.39;	author fasano;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Moved Java Classes from src directory to AirCanada directory
@
text
@package com.ibm.mathsci.witApplications.airCanada;


import java.util.*;

/**
 * @@author JPF2
 *
 * Convert Dates to periods
 */
public class ACperiods {
	
	Date startDate_;
	int daysPerPeriod_;
	int nPeriods_;
	static Calendar calendar_= new GregorianCalendar();


	/**
	 * Constructor for ACperiods.
	 */
	public ACperiods() {
		super();
		daysPerPeriod_ = 1;
		nPeriods_ = 365;
		startDate_ = calendar_.getTime();
	}
	
	public ACperiods(Date startDate, int numPeriods ) {
		super();
		daysPerPeriod_ = 1;
		nPeriods_ = numPeriods;
		startDate_ = startDate;
	}
	
	//Convert date to period number
    int periodNumber(Date date) throws ACexception
    {
    	long  dateCount = (long) (date.getTime() - startDate_.getTime()) / (1000 * 60 * 60 * 24);
        int retVal =(int)( dateCount/daysPerPeriod_ );
        if (retVal<0){
	  		throw new ACexception(
	  		  "Error ACperiods::periodNumber. Period before starting period. period is " + retVal);
	  	}
        if (retVal>=nPeriods_){
	  		throw new ACexception(
	  		  "Error ACperiods::periodNumber. Period after last period. period is " + retVal +". Last period is " + (nPeriods_-1));
	  	}
        
        return retVal;    	
    }
}
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Initial Import
@
text
@@
