head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2008.11.19.16.07.39;	author gresh;	state Exp;
branches;
next	;


desc
@@


1.1
log
@initial checkin
@
text
@/*
 * Created on Jan 7, 2005
 *
 * TODO To change the template for this generated file go to
 * Window - Preferences - Java - Code Style - Code Templates
 */
package witviz;


import java.util.Iterator;
import java.util.Vector;

import org.eclipse.swt.custom.StyledText;
import org.eclipse.swt.widgets.Shell;

import com.ibm.witj.Attribute;

/**
 * @@author gresh
 *
 * TODO To change the template for this generated type comment go to
 * Window - Preferences - Java - Code Style - Code Templates
 */
public class BomOptionsDialog extends OptionsDialog {
	Vector listOfBomAttributes;

     public BomOptionsDialog(Shell shell, SimpleTree p) {
    	super(shell,p);
    }

	public void fillShell() {
		listOfBomAttributes= wo.getListOfBomAttributes();

		for (Iterator i=listOfBomAttributes.iterator();i.hasNext();) {
			Attribute option = (Attribute)i.next();
			addOptionButton(option.toString());
		}	    
	}
	public void setEnabled() {
		//nothing to do here
	}
	public void getOptionsString(String operationName, StyledText t) {
		//not used
	}

	public void getOptionsString(String operationName, int bomIndex, StyledText textBox) {
		for (Iterator i=listOfBomAttributes.iterator();i.hasNext();) {
			Attribute attribute = (Attribute)i.next();
			if (optionDesired(attribute.toString())) {
				String bomValue = wo.GetBomAttributeDescription(operationName, bomIndex, attribute);
				boolean highLight = wo.GetBomAttributeInteresting(operationName, bomIndex, attribute);
				AppendText(textBox,highLight,bomValue);
			}
		}
	}
		

	
	




}
@
