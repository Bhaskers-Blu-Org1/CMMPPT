head	1.4;
access;
symbols;
locks; strict;
comment	@# @;


1.4
date	2009.03.19.14.40.08;	author gresh;	state Exp;
branches;
next	1.3;

1.3
date	2008.11.24.18.44.10;	author gresh;	state Exp;
branches;
next	1.2;

1.2
date	2008.11.20.18.35.18;	author gresh;	state Exp;
branches;
next	1.1;

1.1
date	2008.11.19.16.07.42;	author gresh;	state Exp;
branches;
next	;


desc
@@


1.4
log
@changes due to bob's changes to witj interface
@
text
@/*
 * Created on Jan 7, 2005
 *
 * TODO To change the template for this generated file go to
 * Window - Preferences - Java - Code Style - Code Templates
 */
package witviz;

import java.io.FileWriter;
import java.io.PrintWriter;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Set;
import java.util.Vector;

import org.eclipse.swt.custom.StyledText;
import org.eclipse.swt.widgets.Button;
import org.eclipse.swt.widgets.Shell;

import com.ibm.witj.Attribute;

/**
 * @@author gresh
 *
 * TODO To change the template for this generated type comment go to
 * Window - Preferences - Java - Code Style - Code Templates
 */
public class PartOptionsDialog extends OptionsDialog {
	Vector listOfPartOptions;

	public PartOptionsDialog(Shell parent,SimpleTree p) {
		super(parent,p);

	}


	public void fillShell() {
		
		listOfPartOptions= wo.getListOfPartAttributes();

		for (Iterator i=listOfPartOptions.iterator();i.hasNext();) {
			Attribute option = (Attribute)i.next();
			addOptionButton(option.toString());
		}
		setEnabled();
    

	}


	public void setEnabled() {

		
    	boolean isStochMode = wo.getStochMode();
    	
    	for (Iterator i = listOfPartOptions.iterator(); i.hasNext();) {
	      Attribute attr = (Attribute)i.next();
	      
	      String name = attr.toString();
          Button b = (Button)buttonTable.get(name);
          if (attr.requiresStochMode()&&(!isStochMode))
        	  b.setEnabled(false);
          else 
        	  b.setEnabled(true);
        }
    	
    	boolean stageByObject = wo.GetStageByObject();

     	Button bO = (Button)buttonTable.get("objectStage");
    	if (stageByObject) {
    		bO.setEnabled(true);
    	}
    	else {
    		bO.setEnabled(false);
    	}
	}

	public void getOptionsString(String partName, StyledText textBox) {
		if (wo.getStochMode()) {
			int currentScenario=wo.getCurrentScenario();
			String currentScenarioString = "Current Scenario: "+currentScenario+"\n";
			AppendText(textBox,true,currentScenarioString);
		}
	
		//put the category at the top
		String category = wo.getPartCategory(partName);
		AppendText(textBox,true,category+"\n");
		for (Iterator i=listOfPartOptions.iterator();i.hasNext();) {
			Attribute attribute = (Attribute)i.next();
			if (attribute.requiresMaterialPart()&&category.compareTo("CAPACITY")==0)
				continue;
			if (optionDesired(attribute.toString())) {
				String attributeValue = wo.GetPartAttributeDescription(partName, attribute);
				boolean highLight = wo.GetPartAttributeInteresting(partName, attribute);
				AppendText(textBox,highLight,attributeValue);
			}
		}
	}
	
    

}
@


1.3
log
@handle setting the scenario number
@
text
@d38 1
a38 1

@


1.2
log
@clean up, and handle stochMode properly
@
text
@d79 6
a84 1
		
@


1.1
log
@initial checkin
@
text
@d53 1
a53 26
		boolean isPostProcessed = wo.getPostProcessed();
		if (!isPostProcessed) {
			Button b = (Button)buttonTable.get("mrpConsVol");
			b.setEnabled(false);
			b = (Button)buttonTable.get("excessVol");
			b.setEnabled(false);
			b = (Button)buttonTable.get("scrapVol");
			b.setEnabled(false);
			b = (Button)buttonTable.get("stockVol");
			b.setEnabled(false);
			b = (Button)buttonTable.get("prodVol");
			b.setEnabled(false);
		}
		else {
			Button b = (Button)buttonTable.get("mrpConsVol");
			b.setEnabled(true);
			b = (Button)buttonTable.get("excessVol");
			b.setEnabled(true);
			b = (Button)buttonTable.get("scrapVol");
			b.setEnabled(true);
			b = (Button)buttonTable.get("stockVol");
			b.setEnabled(true);
			b = (Button)buttonTable.get("prodVol");
			b.setEnabled(true);
		}

d58 1
d66 10
@

