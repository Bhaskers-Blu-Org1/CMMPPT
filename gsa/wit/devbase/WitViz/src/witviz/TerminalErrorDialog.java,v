head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2009.03.19.14.40.08;	author gresh;	state Exp;
branches;
next	;


desc
@@


1.1
log
@changes due to bob's changes to witj interface
@
text
@/*
 * Created on Jan 7, 2005
 *
 * TODO To change the template for this generated file go to
 * Window - Preferences - Java - Code Style - Code Templates
 */
package witviz;

import org.eclipse.swt.SWT;
import org.eclipse.swt.custom.StyledText;
import org.eclipse.swt.layout.GridLayout;
import org.eclipse.swt.layout.RowLayout;
import org.eclipse.swt.widgets.Button;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.swt.widgets.Dialog;
import org.eclipse.swt.widgets.Display;
import org.eclipse.swt.widgets.Event;
import org.eclipse.swt.widgets.Listener;
import org.eclipse.swt.widgets.Shell;
import org.eclipse.swt.widgets.Text;

import witviz.WitObject.STATUS;



/**
 * @@author gresh
 *
 * TODO To change the template for this generated type comment go to
 * Window - Preferences - Java - Code Style - Code Templates
 */
public class TerminalErrorDialog extends Dialog {
    final Shell shell;
    final Composite buttonC;
    final Button ok;
    SimpleTree parentApp;
    Shell parent;
    STATUS status;
    Composite composite;
	/**
	 * @@param parent
	 */
	public TerminalErrorDialog(Shell parent, SimpleTree p, String message, STATUS allOK) {
		super(parent);
		parentApp=p;
		status=allOK;
	    shell= new Shell(parent, SWT.DIALOG_TRIM | SWT.APPLICATION_MODAL);
	    buttonC = new Composite(shell,SWT.BORDER);
	    composite = new Composite(shell,0);

		ok = new Button (composite, SWT.PUSH);


	    StyledText text = new StyledText(buttonC, SWT.WRAP | SWT.V_SCROLL | SWT.WRAP | SWT.MULTI);
	    text.setText(message);
		// TODO Auto-generated constructor stub
		initializeShell();
	}

	/**
	 * @@param parent
	 * @@param style
	 */
	public TerminalErrorDialog(Shell parent, int style, STATUS allOK) {
		super(parent, style);
		status = allOK;
	    shell= new Shell(parent, SWT.DIALOG_TRIM | SWT.APPLICATION_MODAL );
	    buttonC = new Composite(shell,SWT.BORDER);
	    Composite composite = new Composite(shell,0);

		ok = new Button (composite, SWT.PUSH);

		initializeShell();
		// TODO Auto-generated constructor stub
	}
    
	public void initializeShell() {

		parent = getParent();
		shell.setText(getText());
		shell.setSize(300,400);
	
		
		
		shell.addListener(SWT.Close, new Listener(){
			   public void handleEvent(Event event) {
			       event.doit=false;
			       close();
			       //your code here

			    }
			   });	   
	    GridLayout gridLayout1 = new GridLayout();
	    gridLayout1.numColumns = 1;
	    shell.setLayout(gridLayout1);
		
	    GridLayout gridLayout = new GridLayout();
	    gridLayout.numColumns = 2;
	    buttonC.setLayout(gridLayout);
	    
 		composite.setLayout (new RowLayout ());


		ok.setText ("Terminate WitViz");

		Listener listener =new Listener () {
			public void handleEvent (Event event) {
				//result [0] = event.widget == ok;
				shell.setVisible (false);
				shell.dispose();
			}
		};
		ok.addListener (SWT.Selection, listener);
		shell.pack ();
		ok.setText("Ok");
		shell.setVisible(true);
	}
	public void open () {
		shell.setVisible(true);
		if (status==STATUS.DEAD) {
			ok.setText("Terminate WitViz");
		}
		Display display = parent.getDisplay();
		while (!shell.isDisposed()) {
			if (!display.readAndDispatch()) display.sleep();
		}

	}

	
	
public void close() {
	//just make invisible
	shell.setVisible(false);
	if (status==STATUS.DEAD) shell.dispose();
}
}
@
