head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2008.11.19.16.07.41;	author gresh;	state Exp;
branches;
next	;


desc
@@


1.1
log
@initial checkin
@
text
@/*
 * Created on Jan 7, 2005
 *
 * TODO To change the template for this generated file go to
 * Window - Preferences - Java - Code Style - Code Templates
 */
package witviz;


import java.util.Iterator;
import java.util.Vector;

import org.eclipse.swt.custom.StyledText;
import org.eclipse.swt.widgets.Shell;

import com.ibm.witj.Attribute;
/**
 * @@author gresh
 *
 * TODO To change the template for this generated type comment go to
 * Window - Preferences - Java - Code Style - Code Templates
 */
public class BopOptionsDialog extends OptionsDialog {
	Vector listOfBopAttributes;

	/**
	 * @@param parent
	 */
	public BopOptionsDialog(Shell parent, SimpleTree p) {
		super(parent,p);
	}
	public void setEnabled() {
		//don't need to do anything
	}


	public void fillShell() {
		listOfBopAttributes= wo.getListOfBopAttributes();

		for (Iterator i=listOfBopAttributes.iterator();i.hasNext();) {
			Attribute option = (Attribute)i.next();
			addOptionButton(option.toString());
		}	    
	

 	}
	public void getOptionsString(String opName, StyledText t) {
		//not used
	}

	public void getOptionsString(String opName,  int bopIndex, StyledText textBox) {
		for (Iterator i=listOfBopAttributes.iterator();i.hasNext();) {
			Attribute attribute = (Attribute)i.next();
			if (optionDesired(attribute.toString())) {
				String bopValue = wo.GetBopAttributeDescription(opName, bopIndex, attribute);
				boolean highLight = wo.GetBopAttributeInteresting(opName, bopIndex, attribute);
				AppendText(textBox,highLight,bopValue);
			}
		}
	}

}
@
