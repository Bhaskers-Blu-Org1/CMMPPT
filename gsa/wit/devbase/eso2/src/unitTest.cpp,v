head	1.18;
access;
symbols
	abandoningEtnParts:1.15
	beforeEtnParts:1.15
	eso2InitialFileFormats:1.10
	Start:1.1.1.1
	IBM:1.1.1;
locks; strict;
comment	@// @;


1.18
date	2006.10.27.02.19.05;	author fasano;	state Exp;
branches;
next	1.17;

1.17
date	2006.04.03.13.50.26;	author fasano;	state Exp;
branches;
next	1.16;

1.16
date	2004.09.21.17.23.50;	author fasano;	state Exp;
branches;
next	1.15;

1.15
date	2003.11.08.01.08.33;	author fasano;	state Exp;
branches;
next	1.14;

1.14
date	2003.10.09.19.34.11;	author fasano;	state Exp;
branches;
next	1.13;

1.13
date	2003.07.14.18.49.52;	author fasano;	state Exp;
branches;
next	1.12;

1.12
date	2003.02.28.01.25.08;	author fasano;	state Exp;
branches;
next	1.11;

1.11
date	2003.02.20.18.10.41;	author fasano;	state Exp;
branches;
next	1.10;

1.10
date	2003.02.10.00.25.49;	author fasano;	state Exp;
branches;
next	1.9;

1.9
date	2003.02.09.21.36.02;	author fasano;	state Exp;
branches;
next	1.8;

1.8
date	2003.02.07.17.04.19;	author fasano;	state Exp;
branches;
next	1.7;

1.7
date	2003.02.06.18.32.14;	author fasano;	state Exp;
branches;
next	1.6;

1.6
date	2002.11.04.04.52.37;	author fasano;	state Exp;
branches;
next	1.5;

1.5
date	2002.11.02.12.33.31;	author fasano;	state Exp;
branches;
next	1.4;

1.4
date	2002.11.02.11.09.10;	author fasano;	state Exp;
branches;
next	1.3;

1.3
date	2002.11.02.03.52.11;	author fasano;	state Exp;
branches;
next	1.2;

1.2
date	2002.11.02.03.00.12;	author fasano;	state Exp;
branches;
next	1.1;

1.1
date	2002.11.01.17.14.25;	author fasano;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.11.01.17.14.25;	author fasano;	state Exp;
branches;
next	;


desc
@@


1.18
log
@Updated to implement applyScaleFactorLoc
@
text
@#if defined(_MSC_VER)
#pragma warning(disable:4786)
#pragma warning(disable:4503)
#endif

#include <assert.h>
#include <iostream>
#include <float.h>

//#include <wit.h>

#include "altData.h"
#include "applyScaleFactorLocData.h"
#include "altOverrideData.h"
#include "altExcludeLocData.h"
#include "mtmData.h"
#include "mtmInterplantData.h"
#include "featureData.h"
#include "featureXrefData.h"
#include "featureConversionData.h"
#include "featureConversionOverrideData.h"
#include "loosePartData.h"
#include "partDemandData.h"
#include "mtmDemanBomData.h"
#include "alternatePartData.h"
#include "partInterplantData.h"
#include "globalAttrData.h"
#include "probAppData.h"
#include "mtmAppData.h"
#include "featureXrefAppData.h"
#include "eso2Problem.h"
#include "pipSequenceTriple.h"
#include "partDemandAppData.h"

// Function Prototypes. Function definitions is in this file.
void testingMessage( const char * const msg );



int
main (int argc, char * argv[])
{

  testingMessage( "Testing ESO2pipSequenceTriple\n" );
  ESO2pipSequenceTriple::test();
  testingMessage( "Testing ESO2partDemandAppData\n" );
  ESO2partDemandAppData::test();

  testingMessage( "Testing ESO2altData\n" );
  ESO2altData::test();

  testingMessage( "Testing ESO2applyScaleFactorLocData\n" );
  ESO2applyScaleFactorLocData::test();

  testingMessage( "Testing ESO2altDataIterator\n" );
  ESO2altDataIterator::test();

  testingMessage( "Testing ESO2altOverrideData\n" );
  ESO2altOverrideData::test();

  testingMessage( "Testing ESO2altOverrideDataIterator\n" );
  ESO2altOverrideDataIterator::test();

  testingMessage( "Testing ESO2altExcludeLocData\n" );
  ESO2altExcludeLocData::test();

  testingMessage( "Testing ESO2altExcludeLocDataIterator\n" );
  ESO2altExcludeLocDataIterator::test();

  testingMessage( "Testing ESO2mtmData\n" );
  ESO2mtmData::test();

  testingMessage( "Testing ESO2mtmDataIterator\n" );
  ESO2mtmDataIterator::test();

  testingMessage( "Testing ESO2featureData\n" );
  ESO2featureData::test();

  testingMessage( "Testing ESO2featureXrefData\n" );
  ESO2featureXrefData::test();

  testingMessage( "Testing ESO2featureConversionData\n" );
  ESO2featureConversionData::test();

  testingMessage( "Testing ESO2featureConversionOverrideData\n" );
  ESO2featureConversionOverrideData::test();

  testingMessage( "Testing ESO2featureDataIterator\n" );
  ESO2featureDataIterator::test();

  testingMessage( "Testing ESO2loosePartData\n" );
  ESO2loosePartData::test();

  testingMessage( "Testing ESO2loosePartIterator\n" );
  ESO2loosePartDataIterator::test();

  testingMessage( "Testing ESO2partDemandData\n" );
  ESO2partDemandData::test();

  testingMessage( "Testing ESO2partDemandDataIterator\n" );
  ESO2partDemandDataIterator::test();

  testingMessage( "Testing ESO2mtmDemanBomData\n" );
  ESO2mtmDemanBomData::test();

  testingMessage( "Testing ESO2mtmDemanBomDataIterator\n" );
  ESO2mtmDemanBomDataIterator::test();

#if 0
  testingMessage( "Testing ESO2alternatePartData\n" );
  ESO2alternatePartData::test();

  testingMessage( "Testing ESO2alternatePartDataIterator\n" );
  ESO2alternatePartDataIterator::test();
#endif

  testingMessage( "Testing ESO2partInterplantData\n" );
  ESO2partInterplantData::test();

  testingMessage( "Testing ESO2interplantIterator\n" );
  ESO2partInterplantDataIterator::test();

  testingMessage( "Testing ESO2globalAttrData\n" );
  ESO2globalAttrData::test();

  testingMessage( "Testing ESO2probAppData\n" );
  ESO2probAppData::test();

  testingMessage( "Testing ESO2featureXrefAppData\n" );
  ESO2featureXrefAppData::test();

  testingMessage( "Testing ESO2mtmAppData\n" );
  ESO2mtmAppData::test();

  testingMessage( "Testing ESO2problem\n" );
  ESO2problem::test();

  testingMessage( "All tests completed successfully\n" );

  return 0;
}


// Display message on stdout and stderr
void testingMessage( const char * const msg )
{
	std::cerr <<msg;
  //cout <<endl <<"*****************************************"
  //     <<endl <<msg <<endl;
}
@


1.17
log
@Added a more general method for dealing with the ETN flags
@
text
@d13 1
d52 3
@


1.16
log
@Changes to add loc to altData file.
Changes to start implementing PIP (pegging).
@
text
@d7 1
a7 1
#include <iostream.h>
d143 1
a143 1
  cerr <<msg;
@


1.15
log
@Add unitTest of featureXrefAppData
@
text
@d31 2
d42 5
@


1.14
log
@added code to read alt files.
@
text
@d29 1
d117 3
@


1.13
log
@Modified to implement featureXref
@
text
@d12 3
d39 18
@


1.12
log
@Added loosePart data file
@
text
@d15 3
d46 9
d76 1
d82 1
@


1.11
log
@modifications to accomodate 2/18 file format changes
@
text
@d15 1
d45 6
@


1.10
log
@Added mtm acquire operation appData and storing wfmv here.
@
text
@d13 1
d17 2
a18 2
#include "etnCspData.h"
#include "interplantData.h"
d57 2
a58 2
  testingMessage( "Testing ESO2etnCspData\n" );
  ESO2etnCspData::test();
d60 2
a61 2
  testingMessage( "Testing ESO2etnCspDataIterator\n" );
  ESO2etnCspDataIterator::test();
d63 2
a64 2
  testingMessage( "Testing ESO2interplantData\n" );
  ESO2interplantData::test();
d67 1
a67 1
  ESO2interplantDataIterator::test();
@


1.9
log
@added methods for set/getting wfmvScaleFactor
@
text
@d20 1
d73 3
@


1.8
log
@updated to add eso2Problem class and eso2 main program
@
text
@d19 1
d69 3
@


1.7
log
@Updated to match current understanding of file formats
@
text
@d19 1
d68 3
@


1.6
log
@added code for globalAttrData files
@
text
@d17 1
d28 1
d58 6
@


1.5
log
@Added code to read etnCspData file
@
text
@d17 1
d56 3
@


1.4
log
@Added code to read mtmDemanBomData file
@
text
@d16 1
d49 6
@


1.3
log
@Added code to read partDemandData file
@
text
@d15 1
d42 6
@


1.2
log
@Added code to read featureData file
@
text
@d14 1
d35 6
@


1.1
log
@Initial revision
@
text
@d13 1
d28 6
@


1.1.1.1
log
@Initial Import
@
text
@@
