head	1.4;
access;
symbols;
locks; strict;
comment	@# @;


1.4
date	2009.08.13.21.25.20;	author rjw;	state dead;
branches;
next	1.3;

1.3
date	2009.08.03.19.41.21;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2009.07.31.20.11.48;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2009.07.09.22.13.01;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Revised and renamed the document for building and running Demo1.
@
text
@
--------------------------------------------------------------------------------
This document explains how to build and run the example WIT-J application
program "Demo1" on a Linux machine. This is done by running two scripts. Thus to
fully understand how this task is done, it would be helpful to read the content
and comments in these scripts.

One good way to build and run your own WIT-J application program on Linux would
be to copy these two scripts and modify them as needed for your own
program / userid / directory structure.
--------------------------------------------------------------------------------

Bob Wittrock

Revised 8/3/09


Assumptions:

* WIT-J has been set up on the machine / userid; see Set-Up-WIT-J-On-Linux.txt.

* Java 6.0 has been installed on the machine.

* KornShell (Ksh) is available on the machine.

* The userid is given as "user2"; substitute any userid for this.


To build demo1, run the following script:

/home/user2/u/wit/user2/witj/scripts/linux/build-witj-demo1

To run demo1, run the following script:

/home/user2/u/wit/user2/witj/scripts/linux/witj-demo1
@


1.3
log
@Revised the documentation to the current state of WIT-J.
@
text
@@


1.2
log
@*** empty log message ***
@
text
@d4 3
a6 2
program "demo1" on a linux machine. This is done by running two scripts, whose
content is also explained in this document.
d8 2
a9 2
One good way to build and run your own WIT-J application program on Linux
would be to copy these two scripts and modify them as needed for your own
d15 1
a15 1
Revised 7/23/09
a35 43


The main content of the build-witj-demo1 script is as follows:

.......................................................

cd /home/$USER/u/wit/$USER/witj/examples/demo1/bytecode

rm com/ibm/witj/demo1/*.class 2> /dev/null

$JAVA_HOME/bin/javac                                \
   -sourcepath ../src                               \
   -classpath  .:../../../java/bytecode/witj.jar    \
   -d          .                                    \
   -Xlint                                           \
               ../src/com/ibm/witj/demo1/Demo1.java \

.......................................................

The main content of the witj-demo1 script is as follows:

....................................................................

cd /home/$USER/u/wit/$USER/witj/examples/demo1/data

$JAVA_HOME/bin/java                                                \
   -classpath          ../bytecode:../../../java/bytecode/witj.jar \
   -Djava.library.path=../../../cpp/linux                          \
    com.ibm.witj.demo1.Demo1                                       \

....................................................................

Notes on the witj-demo1 script:

* The class path has two entries:
  * The bytecode directory where the class file for the demo1 program is located
  * The jar file for WIT-J's java portion

* The java.library.path is set to the directory where the shared object file for
  the C++ portion of WIT-J is located.

--------------------------------------------------------------------------------

@


1.1
log
@Revised the documentation, especially adding Set-Up-WIT-J-On-Linux.txt.
@
text
@d14 1
a14 1
Revised 7/9/09
d21 1
a21 1
* Java 1.6 (or higher) has been installed on the machine.
@

