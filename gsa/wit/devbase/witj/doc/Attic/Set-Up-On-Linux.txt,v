head	1.9;
access;
symbols;
locks; strict;
comment	@# @;


1.9
date	2009.06.24.16.15.00;	author rjw;	state dead;
branches;
next	1.8;

1.8
date	2008.11.14.16.58.01;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2008.11.05.22.54.00;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2008.10.17.22.35.02;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2008.10.17.20.50.27;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2008.10.17.19.50.15;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2008.10.16.16.09.26;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2008.10.16.15.51.13;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2008.10.16.15.45.41;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Changed some file names.
@
text
@
How to Set Up WIT-J on a Linux Machine
--- -- --- -- ----- -- - ----- -------

Bob Wittrock

Revised 11/14/08


Assumptions:

* WIT has been set up on the machine / userid.

* Java 1.5 (or higher) has been installed on the machine.

* KornShell (Ksh) is available on the machine.

* The userid is given as "user2"; substitute any userid for this.


Steps:

1. Permanently set the JAVA_HOME environment variable to the full path name of
   the directory in which Java is located. For example, my login profile script
   contains the following line:

      export JAVA_HOME=/usr/lib/jvm/java-1.5.0-ibm-1.5.0.6

   Specifically, JAVA_HOME should be set so that the programs "javac", "jar",
   and "java" are located under $JAVA_HOME/bin and the C++ header file "jni.h"
   is located under $JAVA_HOME/include.

2. cd /home/user2/u/wit/user2

3. cvs checkout -P witj

4. cd witj

5. scripts/linux/build-witj-cpp beta

6. scripts/linux/build-witj-java

7. scripts/linux/build-witj-tester

8. scripts/linux/test-witj

9. cat test/data/output.diff


Notes:

* The -P option is recommended for cvs checkout of WIT-J in order to avoid some
  extraneous directories. (Directories cannot be deleted from CVS.)

* Similarly, cvs update -d should be done as cvs update -d -P.

* In step 5, a "beta" build of the C++ portion of WIT-J is used. Any exe_type
  may be used; however, it's probably a good idea to have to the exe_type of
  WIT-J/C++ match that of WIT.

* Step 8 runs a standard set of tests of WIT-J, then does a diff on the output,
  comparing to a prior output acquired from CVS. Step 9 displays the difference
  file. If the difference file is empty, then the installed version of WIT-J has
  passed the test. Otherwise, please notify me.

@


1.8
log
@Updated scripts to use the version of Java installed at $JAVA_HOME.
@
text
@@


1.7
log
@Used the -I option of the diff command to filter out irrelevant differences.
@
text
@d7 2
d24 1
a24 1
   the directory in which Java is located. For example, my setvars script
d29 3
a31 3
   The important thing is that jni.h must be located at:

      $JAVA_HOME/include/jni.h
@


1.6
log
@Added an explanation of how to set up JAVA_HOST.
@
text
@d45 1
a45 1
9. more test/data/output.diff
d61 2
a62 2
  file. If the differences consist only of time-stamps, then the installed
  version of WIT-J has passed the test. Otherwise, please notify me.
@


1.5
log
@Minor revision.
@
text
@d21 3
a23 1
1. cd /home/user2/u/wit/user2
d25 1
a25 1
2. cvs checkout -P witj
d27 1
a27 1
3. cd witj
d29 1
a29 1
4. scripts/linux/build-witj-cpp beta
d31 1
a31 1
5. scripts/linux/build-witj-java
d33 1
a33 1
6. scripts/linux/build-witj-tester
d35 1
a35 1
7. scripts/linux/test-witj
d37 9
a45 1
8. more test/data/output.diff
d55 1
a55 1
* In step 4, a "beta" build of the C++ portion of WIT-J is used. Any exe_type
d59 2
a60 2
* Step 7 runs a standard set of tests of WIT-J, then does a diff on the output,
  comparing to a prior output acquired from CVS. Step 8 displays the difference
@


1.4
log
@Added need for ksh to the Set-Up-On-Linux document.
Added a call to "make depend" to build-witj-cpp.
@
text
@d3 3
d51 2
a52 2
  file. If the test is completely successful, the differences should consist
  only of time-stamps, etc.
@


1.3
log
@Minor revision.
@
text
@d11 2
@


1.2
log
@Minor revision.
@
text
@d38 2
@


1.1
log
@Added documentation for setting up WIT-J on a Linux machine.
@
text
@d1 1
d46 1
@

