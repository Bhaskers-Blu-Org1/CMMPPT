head	1.11;
access;
symbols;
locks; strict;
comment	@# @;


1.11
date	2011.05.02.18.32.25;	author rjw;	state Exp;
branches;
next	1.10;

1.10
date	2009.07.23.17.47.22;	author rjw;	state Exp;
branches;
next	1.9;

1.9
date	2009.07.22.22.18.30;	author rjw;	state Exp;
branches;
next	1.8;

1.8
date	2009.07.22.21.49.47;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2009.07.06.20.43.23;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2009.05.12.15.57.58;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2009.01.05.20.21.34;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2009.01.02.23.44.18;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2008.12.24.00.18.56;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2008.12.22.23.15.51;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2008.12.18.23.48.09;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.11
log
@Reduced heading comments.
@
text
@
//==============================================================================
// WIT-J Java Source File InternalErrorException.java
//==============================================================================

package       com.ibm.witj;

import static com.ibm.witj.Utility.*;

//==============================================================================
// Class InternalErrorException
//
// One kind of unchecked Exception thrown by WIT-J.
//
// When WIT-J throws a InternalErrorException, this indicates that:
//
// * A bug in WIT-J has been detected.
// * As a result of the throw, WIT-J is now in a non-functional state.
//   No further calls to WIT-J methods should be made for the rest of the
//   program process.
//
// Class Hierarchy:
//
// RuntimeException (java.lang.RuntimeException)
//    WitjException
//       TerminalException
//          InternalErrorException
//==============================================================================

public final class InternalErrorException extends TerminalException
{
//==============================================================================
// Package-Internal Methods
//==============================================================================

//------------------------------------------------------------------------------
// newInstanceForJavaAssertionError (theAssertErr)
//
// Constructs and returns a new InternalErrorException to be thrown when a Java
// AssertionError, theAssertErr, has been thrown. Sets theAssertErr as the
// cause of the InternalErrorException.
//------------------------------------------------------------------------------

   static InternalErrorException newInstanceForJavaAssertionError (
         AssertionError theAssertErr)
      {
      InternalErrorException theInternalErrorExc;

      theInternalErrorExc =
         new InternalErrorException (
            "   An AssertionError was thrown from the Java side of WIT-J.");

      theInternalErrorExc.initCause (theAssertErr);

      return theInternalErrorExc;
      }

//------------------------------------------------------------------------------
// newInstanceForUnexpJavaThrowable (theThrowable)
//
// Constructs and returns a new InternalErrorException to be thrown when a
// Throwable (theThrowable) of an unexpected class has been thrown from the Java
// side of WIT-J. Sets theThrowable as the cause of the InternalErrorException.
//------------------------------------------------------------------------------

   static InternalErrorException newInstanceForUnexpJavaThrowable (
         Throwable theThrowable)
      {
      InternalErrorException theInternalErrorExc;

      theInternalErrorExc =
         new InternalErrorException (
            "   An instance of an unexpected Throwable class was thrown from\n"
          + "   the Java side of WIT-J:\n"
          + "\n"
          + "      " + theThrowable.getClass ());

      theInternalErrorExc.initCause (theThrowable);

      return theInternalErrorExc;
      }

//==============================================================================
// Private Constructor
//
// Called from this class and from C++.
//==============================================================================

   private InternalErrorException (String message)
      {
      super (
             message + "\n"
       +    "\n"
       + "   This indicates an internal error in WIT-J.\n");
      }

//==============================================================================
// Private Methods
//==============================================================================

//------------------------------------------------------------------------------
// newInstanceForThrowableFromJni (theThrowable)
//
// Constructs and returns a new InternalErrorException to be thrown when a Java
// Throwable (theThrowable) has been thrown during the execution of a JNI
// function called by the C++ side of WIT-J. Sets theThrowable as the cause of
// the InternalErrorException.
//------------------------------------------------------------------------------

   private static InternalErrorException newInstanceForThrowableFromJni (
         Throwable theThrowable)
      {
      InternalErrorException theInternalErrorExc;

      theInternalErrorExc =
         new InternalErrorException (
            "   A Java Throwable was thrown during the execution of a JNI\n"
          + "   function called by the C++ side of WIT-J:\n"
          + "\n"
          + "      " + theThrowable.getClass ());

      theInternalErrorExc.initCause (theThrowable);

      return theInternalErrorExc;
      }

//==============================================================================
// Private Fields
//==============================================================================

//------------------------------------------------------------------------------
// serialVersionUID
//
// This field is required in order to avoid a compiler warning whenever an
// instance is constructed, because this class inherits from class Throwable,
// which implements the interface Serializable.
//------------------------------------------------------------------------------

   private static final long serialVersionUID = 1L;

//==============================================================================
}
@


1.10
log
@Switched two exceptions from class InternalErrorException to
   TerminalAppErrorException.
@
text
@a3 2
//
// Contains the declaration of class InternalErrorException.
@


1.9
log
@Made WIT-j catch and explain UnsatisfiedLinkErrors.
@
text
@a60 56
// newInstanceForLoadLibraryFailure (theLinkErr)
//
// Constructs and returns a new InternalErrorException to be thrown when the
// call to System.loadLibrary ("witj") threw an UnsatisfiedLinkError.
//------------------------------------------------------------------------------

   static InternalErrorException newInstanceForLoadLibraryFailure (
         UnsatisfiedLinkError theLinkErr)
      {
      String                 thePath;
      InternalErrorException theInternalErrorExc;

      thePath = System.getProperty ("java.library.path");

      theInternalErrorExc  =
         new InternalErrorException (
            "   The Java portion of WIT-J was not able to load the native\n"
          + "   library for the C++ portion of WIT-J. This may indicate a\n"
          + "   problem with the native library path:\n"
          + "\n"
          + "      java.library.path = \"" + thePath + "\"");

      theInternalErrorExc.initCause (theLinkErr);

      return theInternalErrorExc;
      }

//------------------------------------------------------------------------------
// newInstanceForUnsatisfiedLink (theLinkErr)
//
// Constructs and returns a new InternalErrorException to be thrown when an
// UnsatisfiedLinkError was thrown other than by System.loadLibrary.
//------------------------------------------------------------------------------

   static InternalErrorException newInstanceForUnsatisfiedLink (
         UnsatisfiedLinkError theLinkErr)
      {
      String                 thePath;
      InternalErrorException theInternalErrorExc;

      thePath = System.getProperty ("java.library.path");

      theInternalErrorExc  =
         new InternalErrorException (
            "   An UnsatisfiedLinkError was thrown within the Java portion of\n"
          + "   WIT-J. This may indicate a problem linking to the native\n"
          + "   method implementations in the witj native library.\n"
          + "\n"
          + "      java.library.path = \"" + thePath + "\"");

      theInternalErrorExc.initCause (theLinkErr);

      return theInternalErrorExc;
      }

//------------------------------------------------------------------------------
@


1.8
log
@Made WIT-J throw an InternalErrorException instead of a
   TerminalAppErrorException when the native library fails to load.
@
text
@d78 2
a79 1
          + "   library for the C++ portion of WIT-J.\n"
d81 27
a107 1
          + "   There may be a problem with the native library path:\n"
@


1.7
log
@Changed class name GeneralException to WitjException.
@
text
@d61 29
@


1.6
log
@Changed name of Java class WitjException to GeneralException.
@
text
@d27 1
a27 1
//    GeneralException
@


1.5
log
@Added code to handle errors in the execution of readData.
@
text
@d27 1
a27 1
//    WitjException
@


1.4
log
@Collapsed the subclasses of InternalErrorException into InternalErrorException.
@
text
@d26 1
a26 1
// RuntimeException
@


1.3
log
@Added code to handle Java exceptions raised during the execution of JNI
   functions.
@
text
@a29 5
//             JavaAssertionException
//             UnexpJavaThrowableException
//             CppAssertionException
//             JniExcException
//             UnexpCppExcException
d32 1
a32 1
public abstract class InternalErrorException extends TerminalException
d35 1
a35 1
// Package-Internal Constructor
d38 54
a91 1
   InternalErrorException (String message)
d94 1
a94 1
             message
d100 44
@


1.2
log
@Changed some Java Exception class names.
@
text
@d33 1
@


1.1
log
@Implemented class InternalErrorException.
@
text
@d30 4
a33 4
//             AssertionErrorException
//             CppAssertFailureException
//             UnexpectedCppExcException
//             UnexpectedThrowableException
@

