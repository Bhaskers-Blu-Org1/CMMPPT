head	1.18;
access;
symbols;
locks; strict;
comment	@# @;


1.18
date	2008.09.26.22.21.26;	author rjw;	state dead;
branches;
next	1.17;

1.17
date	2008.09.19.15.11.14;	author rjw;	state Exp;
branches;
next	1.16;

1.16
date	2008.09.12.14.43.24;	author rjw;	state Exp;
branches;
next	1.15;

1.15
date	2008.09.09.19.00.00;	author rjw;	state Exp;
branches;
next	1.14;

1.14
date	2008.09.05.22.06.51;	author rjw;	state Exp;
branches;
next	1.13;

1.13
date	2008.09.03.20.33.11;	author rjw;	state Exp;
branches;
next	1.12;

1.12
date	2008.09.02.14.37.24;	author rjw;	state Exp;
branches;
next	1.11;

1.11
date	2008.08.29.18.36.43;	author rjw;	state Exp;
branches;
next	1.10;

1.10
date	2008.08.29.15.07.59;	author rjw;	state Exp;
branches;
next	1.9;

1.9
date	2008.08.29.14.22.01;	author rjw;	state Exp;
branches;
next	1.8;

1.8
date	2008.08.18.22.16.58;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2008.06.30.22.02.11;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2008.06.12.14.54.24;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2008.05.29.22.03.32;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2008.05.29.20.53.57;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2008.05.27.14.57.44;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2008.05.15.19.45.19;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2008.05.13.21.06.37;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.18
log
@Numerous class name changes.
@
text
@
//==============================================================================
// WIT-J Java Source File PartCI.java.
//
// Contains the declaration of class PartCI.
//==============================================================================

package       com.ibm.witj;

import static com.ibm.witj.Utility.*;

//==============================================================================
// Class PartCI
//
// "Part C++ Interface"
// The Java interface to a C++ Part.
//
// Class Hierarchy:
//
//    RetainedObject
//       CppInterface
//          ComponentCI
//             PartCI
//==============================================================================

final class PartCI extends ComponentCI
{
//==============================================================================
// Package-Internal Constructor
//==============================================================================

   PartCI (
         ProblemCI theProblemCI,
         String    thePartName,
         boolean   toBeAMaterial)
      {
      createMyCppPart (theProblemCI, thePartName, toBeAMaterial);
      }

//==============================================================================
// Package-Internal Methods
//==============================================================================

//------------------------------------------------------------------------------
// setPartName (...)
//
// Sets the PartName of the C++ Part.
//------------------------------------------------------------------------------

   native void setPartName (String thePartName);

//------------------------------------------------------------------------------
// isAMaterial ()
//
// Returns true, iff the C++ Part is a Material Part.
//------------------------------------------------------------------------------

   native boolean isAMaterial ();

//==============================================================================
// Private Methods
//==============================================================================

//------------------------------------------------------------------------------
// createMyCppPart (...)
// 
// Constructs a new C++ Part for the arguments and takes ownership of it.
//------------------------------------------------------------------------------

   private native void createMyCppPart (
      ProblemCI theProblemCI,
      String    thePartName,
      boolean   toBeAMaterial);

//==============================================================================
}
@


1.17
log
@Minor revision.
@
text
@@


1.16
log
@Revised the use of class CTVecRes.
@
text
@d35 1
a35 1
         boolean   isMaterialBool)
d37 1
a37 1
      createMyCppPart (theProblemCI, thePartName, isMaterialBool);
d53 1
a53 1
// isMaterial ()
d58 1
a58 1
   native boolean isMaterial ();
d73 1
a73 1
      boolean   isMaterialBool);
@


1.15
log
@Renamed Java class ProbCoordCI to SessionCI.
Renamed C++  class ProbCoord   to Session.
@
text
@d33 1
a33 1
         SessionCI theSessionCI,
d37 1
a37 1
      createMyCppPart (theSessionCI, thePartName, isMaterialBool);
d71 1
a71 1
      SessionCI theSessionCI,
@


1.14
log
@Terminology change.
@
text
@d33 3
a35 3
         ProbCoordCI theProbCoordCI,
         String      thePartName,
         boolean     isMaterialBool)
d37 1
a37 1
      createMyCppPart (theProbCoordCI, thePartName, isMaterialBool);
d71 3
a73 3
      ProbCoordCI theProbCoordCI,
      String      thePartName,
      boolean     isMaterialBool);
@


1.13
log
@Replaced class InternalObject with class VitalObject.
@
text
@d20 1
a20 1
//    VitalObject
@


1.12
log
@"partCategory" attribute.
@
text
@d20 1
a20 1
//    InternalObject
@


1.11
log
@"demandName" attribute.
@
text
@d32 4
a35 1
   PartCI (ProbCoordCI theProbCoordCI, String thePartName, boolean isaMaterial)
d37 1
a37 1
      createMyCppPart (theProbCoordCI, thePartName, isaMaterial);
d52 8
d73 1
a73 1
      boolean     isaMaterial);
@


1.10
log
@"partName" attribute.
@
text
@d29 9
d42 3
a44 1
// Constructor.
d47 1
a47 4
   PartCI (ProbCoordCI theProbCoordCI, String thePartName, boolean isaMaterial)
      {
      createMyCppPart (theProbCoordCI, thePartName, isaMaterial);
      }
a63 8
//------------------------------------------------------------------------------
// setPartName (...)
//
// Sets the PartName of the C++ Part.
//------------------------------------------------------------------------------

   native void setPartName (String thePartName);

@


1.9
log
@"partName" attribute.
@
text
@d59 1
a59 1
// Sets the partName of the C++ Part.
d62 1
a62 1
   native void setPartName (String partNameVal);
@


1.8
log
@Implemented Utility class.
@
text
@d56 8
@


1.7
log
@Made accessor names begin with "get".
@
text
@d8 3
a10 1
package com.ibm.witj;
@


1.6
log
@Comments, etc.
@
text
@d34 1
a34 1
   PartCI (ProbCoordCI theProbCoordCI, String partNameVal, boolean isaMaterial)
d36 1
a36 1
      createMyCppPart (theProbCoordCI, partNameVal, isaMaterial);
d51 1
a51 1
      String      partNameVal,
@


1.5
log
@Attributes
@
text
@d1 7
@


1.4
log
@Attributes.
@
text
@a31 8
//------------------------------------------------------------------------------
// getSupplyVol (...)
//
// Wrapper for witGetPartSupplyVolDbl (...).
//------------------------------------------------------------------------------

   native void getSupplyVol (double[] supplyVolVal);

@


1.3
log
@*** empty log message ***
@
text
@a32 8
// setSupplyVol (...)
//
// Wrapper for witSetPartSupplyVolDbl (...).
//------------------------------------------------------------------------------

   native void setSupplyVol (double[] supplyVolVal);

//------------------------------------------------------------------------------
@


1.2
log
@*** empty log message ***
@
text
@d32 16
@


1.1
log
@*** empty log message ***
@
text
@d27 1
a27 1
   PartCI (ProblemCI theProblemCI, String partNameVal, boolean isaMaterial)
d29 1
a29 1
      createMyCppPart (theProblemCI, partNameVal, isaMaterial);
d43 3
a45 3
      ProblemCI theProblemCI,
      String    partNameVal,
      boolean   isaMaterial);
@

