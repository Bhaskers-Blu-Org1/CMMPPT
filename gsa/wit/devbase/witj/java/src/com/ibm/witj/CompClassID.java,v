head	1.16;
access;
symbols;
locks; strict;
comment	@# @;


1.16
date	2011.05.02.18.32.21;	author rjw;	state Exp;
branches;
next	1.15;

1.15
date	2011.02.25.16.07.04;	author rjw;	state Exp;
branches;
next	1.14;

1.14
date	2010.04.09.19.54.32;	author rjw;	state Exp;
branches;
next	1.13;

1.13
date	2009.05.29.21.59.17;	author rjw;	state Exp;
branches;
next	1.12;

1.12
date	2009.04.01.16.34.50;	author rjw;	state Exp;
branches;
next	1.11;

1.11
date	2009.03.30.20.19.55;	author rjw;	state Exp;
branches;
next	1.10;

1.10
date	2009.03.19.20.45.26;	author rjw;	state Exp;
branches;
next	1.9;

1.9
date	2009.03.13.19.32.21;	author rjw;	state Exp;
branches;
next	1.8;

1.8
date	2008.10.06.22.14.04;	author rjw;	state dead;
branches;
next	1.7;

1.7
date	2008.08.28.18.30.37;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2008.08.18.22.16.57;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2008.08.06.18.48.22;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2008.07.25.22.06.58;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2008.07.07.18.41.50;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2008.06.26.19.18.08;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2008.06.25.19.47.28;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.16
log
@Reduced heading comments.
@
text
@
//==============================================================================
// WIT-J Java Source File CompClassID.java.
//==============================================================================

package       com.ibm.witj;

import                java.util.*;

import static com.ibm.witj.Utility.*;

//==============================================================================
// Enum CompClassID
//
// "Component Class Identification"
// Identifies a subclass of class Component.
//==============================================================================

enum CompClassID
{
//==============================================================================
// Enum Constants
//==============================================================================

   PROBLEM    (Problem   .class),
   PART       (Part      .class),
   DEMAND     (Demand    .class),
   OPERATION  (Operation .class),
   BOM_ENTRY  (BomEntry  .class),
   SUBSTITUTE (Substitute.class),
   BOP_ENTRY  (BopEntry  .class),
   ;

//==============================================================================
// Public Methods
//==============================================================================

//------------------------------------------------------------------------------
// toString ().
//
// Override from class Object.
//------------------------------------------------------------------------------

   public final String toString ()
      {
      return myCompClass.getSimpleName ();
      }

//==============================================================================
// Package Internal Methods
//==============================================================================

   static CompClassID getInstanceFor (Class <? extends Component> theCompClass)
      {
      assert (theCompClass != Component.class);

      return instForCompClass.get (theCompClass);
      }

//------------------------------------------------------------------------------
// Accessors.
//------------------------------------------------------------------------------

   Class <? extends Component> getCompClass ()
      {
      return myCompClass;
      }

//==============================================================================
// Private Constructor
//==============================================================================

   private CompClassID (Class <? extends Component> theCompClass)
      {     
      myCompClass = theCompClass;
      }

//==============================================================================
// Private Fields
//==============================================================================

//------------------------------------------------------------------------------
// myCompClass
//
// The Component class identified by this CompClassID.
//------------------------------------------------------------------------------

   private final Class <? extends Component> myCompClass;

//------------------------------------------------------------------------------
// instForCompClass
//
// instForCompClass.get (theCompClass) is the CompClassID that identifies
// theCompClass, if any; otherwise null.
//------------------------------------------------------------------------------

   private
      static
         final
            HashMap <Class <? extends Component>, CompClassID> instForCompClass;

//==============================================================================
// Static initialization block
//==============================================================================

   static
      {
      Class <? extends Component> theCompClass;

      instForCompClass =
         new HashMap <Class <? extends Component>, CompClassID> (50);

      for (CompClassID theCompClassID: CompClassID.values ())
         {
         theCompClass = theCompClassID.myCompClass;

         instForCompClass.put (theCompClass, theCompClassID);
         }
      }
}
@


1.15
log
@Moved GlobalAspect responsibilities to class Problem.
Removed class GlobalAspect.
@
text
@a3 2
//
// Contains the declaration of enum CompClassID.
@


1.14
log
@Minor revision.
@
text
@d27 7
a33 7
   GLOBAL_ASPECT (GlobalAspect.class),
   PART          (Part        .class),
   DEMAND        (Demand      .class),
   OPERATION     (Operation   .class),
   BOM_ENTRY     (BomEntry    .class),
   SUBSTITUTE    (Substitute  .class),
   BOP_ENTRY     (BopEntry    .class),
@


1.13
log
@Revised pegging methods.
@
text
@d55 1
a55 1
   static CompClassID getInstance (Class <? extends Component> theCompClass)
d59 1
a59 1
      return staticInstanceMap.get (theCompClass);
d93 1
a93 1
// staticInstanceMap
d95 1
a95 1
// staticInstanceMap.get (theCompClass) is the CompClassID that identifies
d102 1
a102 1
            Map <Class <? extends Component>, CompClassID> staticInstanceMap;
d112 1
a112 1
      staticInstanceMap =
d119 1
a119 1
         staticInstanceMap.put (theCompClass, theCompClassID);
@


1.12
log
@Initial implementation of theComp.queueElementValue (...).
@
text
@d75 1
a75 1
   CompClassID (Class <? extends Component> theCompClass)
@


1.11
log
@Replaced theProblem.getInstances (theClass) with theProblem.GetParts (),
etc.
@
text
@d59 1
a59 1
      return ourInstanceMap.get (theCompClass);
d93 1
a93 1
// ourInstanceMap
d95 1
a95 1
// ourInstanceMap.get (theCompClass) is the CompClassID that identifies
d102 1
a102 1
            Map <Class <? extends Component>, CompClassID> ourInstanceMap;
d112 1
a112 1
      ourInstanceMap =
d119 1
a119 1
         ourInstanceMap.put (theCompClass, theCompClassID);
@


1.10
log
@Implemented theProblem.getInstances (theCompClass).
@
text
@d48 1
a48 1
      return myClass.getSimpleName ();
d55 1
a55 1
   static CompClassID getInstance (Class <? extends Component> theClass)
d57 1
a57 1
      assert (theClass != Component.class);
d59 10
a68 1
      return ourInstanceMap.get (theClass);
d75 1
a75 1
   CompClassID (Class <? extends Component> theClass)
d77 1
a77 1
      myClass = theClass;
d85 1
a85 1
// myClass
d90 1
a90 1
   private final Class <? extends Component> myClass;
d95 2
a96 2
// ourInstanceMap.get (theClass) is the CompClassID that identifies theClass,
// if any; otherwise null.
d110 1
a110 1
      Class <? extends Component> theClass;
d117 1
a117 1
         theClass = theCompClassID.myClass;
d119 1
a119 1
         ourInstanceMap.put (theClass, theCompClassID);
@


1.9
log
@Changed name of Element classes in Java and C++ to Component.
@
text
@d57 2
@


1.8
log
@Changed name of Component to Entity.
@
text
@d10 2
d15 1
a15 1
// Class CompClassID
d27 7
a33 7
   GLOBAL_COMP ("GlobalComp"),
   PART        ("Part"),
   DEMAND      ("Demand"),
   OPERATION   ("Operation"),
   BOM_ENTRY   ("BomEntry"),
   SUBSTITUTE  ("Substitute"),
   BOP_ENTRY   ("BopEntry"),
d48 10
a57 1
      return myClassName;
d64 1
a64 1
   CompClassID (String theName)
d66 1
a66 1
      myClassName = theName;
d74 1
a74 1
// myClassName
d76 1
a76 1
// The name of the Component class identified by this CompClassID.
d79 32
a110 1
   private final String myClassName;
@


1.7
log
@Name change: Global --> GlobalComp.
@
text
@@


1.6
log
@Implemented Utility class.
@
text
@d25 7
a31 7
   GLOBAL     ("Global"),
   PART       ("Part"),
   DEMAND     ("Demand"),
   OPERATION  ("Operation"),
   BOM_ENTRY  ("BomEntry"),
   SUBSTITUTE ("Substitute"),
   BOP_ENTRY  ("BopEntry"),
@


1.5
log
@Classes Global and GlobalCI.
@
text
@d8 3
a10 1
package com.ibm.witj;
@


1.4
log
@Attributes.
@
text
@d23 7
a29 7
   GLOBAL_COMP ("GlobalComp"),
   PART        ("Part"),
   DEMAND      ("Demand"),
   OPERATION   ("Operation"),
   BOM_ENTRY   ("BomEntry"),
   SUBSTITUTE  ("Substitute"),
   BOP_ENTRY   ("BopEntry"),
@


1.3
log
@Implemented and use class AppAtt.
@
text
@d48 1
a48 1
// Private Methods
a50 4
//------------------------------------------------------------------------------
// Constructor.
//------------------------------------------------------------------------------

@


1.2
log
@Attributes.
@
text
@d64 6
a70 2
      //
      // The name of the Component class identified by this CompClassID.
@


1.1
log
@Added enum CompClassID.
@
text
@d19 48
a66 6
   PART,
   DEMAND,
   OPERATION,
   BOM_ENTRY,
   SUBSTITUTE,
   BOP_ENTRY,
@

