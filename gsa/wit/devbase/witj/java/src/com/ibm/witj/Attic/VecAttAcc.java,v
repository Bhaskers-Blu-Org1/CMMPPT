head	1.4;
access;
symbols;
locks; strict;
comment	@# @;


1.4
date	2008.06.24.15.39.28;	author rjw;	state dead;
branches;
next	1.3;

1.3
date	2008.06.19.22.16.56;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2008.06.19.16.06.28;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2008.06.19.15.54.41;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Removed AttAcc classes.
@
text
@
//==============================================================================
// WIT-J Java Source File VecAttAcc.java.
//
// Contains the declaration of class VecAttAcc.
//==============================================================================

package com.ibm.witj;

//==============================================================================
// Class VecAttAcc
//
// "Vector Attribute Accessor"
// Provides access to all input or output attributes of some vector type
// belonging to all the Components of a Problem.
//
// Class Hierarchy:
//
//    PublicObject
//       AttAcc
//          VecAttAcc
//             DblVecInAttAcc
//             DblVecOutAttAcc
//==============================================================================

public abstract class VecAttAcc extends AttAcc
{
//==============================================================================
// Package-Internal Methods
//==============================================================================

//------------------------------------------------------------------------------
// Constructor.
//------------------------------------------------------------------------------

   VecAttAcc (AttMgr theAttMgr)
      {
      super (theAttMgr);
      }

//------------------------------------------------------------------------------
// checkVecLength (int theLength)
//
// Checks the length of a vector for setValue (...).
//------------------------------------------------------------------------------

   void checkVecLength (int theLength)
      {
      if (theLength != nPeriods ())
         abortWmsg (
              "   "
            +     concClassName ()
            +    ".setValue (...) was called with an array\n"
            + "   whose length does not match nPeriods for the Problem.\n"
            + "\n"
            + "      Array Length: "
            +        theLength
            + "\n"
            + "      nPeriods:     "
            +        nPeriods ());
      }

//------------------------------------------------------------------------------
// getDblVec ()
//
// If the associated attribute is of type vector of doubles, this method returns
// the current value of the associated attribute for the associated Component.
// Otherwise, it reports an internal error.
//------------------------------------------------------------------------------

   double[] getDblVec ()
      {
      double[] theDblArr;

      checkState ("getValue");

      theDblArr = new double[nPeriods ()];

      assocAttCI ().getDblVec (assocCompCI (), theDblArr);

      return theDblArr;
      }

//==============================================================================
// Private Methods
//==============================================================================

//------------------------------------------------------------------------------
// nPeriods ()
//
// Access Wrapper
//------------------------------------------------------------------------------

   private int nPeriods ()
      {
      return
         myAttMgr ().
            myProbCoord ().
               myCompMgr ().
                  myGlobalComp ().
                     nPeriods ();
      }

//==============================================================================
}
@


1.3
log
@Implemented of class DblVecOutAttAcc.
@
text
@@


1.2
log
@Attributes.
@
text
@d23 1
@


1.1
log
@Initial implementation of Java class VecAttAcc.
@
text
@d84 20
@

