head	1.20;
access;
symbols;
locks; strict;
comment	@# @;


1.20
date	2011.05.04.22.15.40;	author rjw;	state Exp;
branches;
next	1.19;

1.19
date	2011.05.02.18.32.18;	author rjw;	state Exp;
branches;
next	1.18;

1.18
date	2010.04.13.23.10.43;	author rjw;	state Exp;
branches;
next	1.17;

1.17
date	2009.09.29.19.09.23;	author rjw;	state Exp;
branches;
next	1.16;

1.16
date	2009.09.25.22.42.42;	author rjw;	state Exp;
branches;
next	1.15;

1.15
date	2009.06.05.15.08.22;	author rjw;	state Exp;
branches;
next	1.14;

1.14
date	2009.05.05.20.17.05;	author rjw;	state Exp;
branches;
next	1.13;

1.13
date	2009.04.08.19.18.01;	author rjw;	state Exp;
branches;
next	1.12;

1.12
date	2009.03.23.21.51.39;	author rjw;	state Exp;
branches;
next	1.11;

1.11
date	2009.03.13.19.32.20;	author rjw;	state Exp;
branches;
next	1.10;

1.10
date	2008.12.15.15.35.32;	author rjw;	state Exp;
branches;
next	1.9;

1.9
date	2008.12.03.18.55.07;	author rjw;	state Exp;
branches;
next	1.8;

1.8
date	2008.12.03.18.28.49;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2008.11.21.15.49.16;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2008.10.14.22.04.38;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2008.10.07.18.50.25;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2008.10.06.22.14.04;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2008.10.06.14.42.39;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2008.10.01.22.55.33;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2008.09.26.22.21.24;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.20
log
@setValue ==> set
getValue ==> get
@
text
@
//==============================================================================
// WIT-J Java Source File AttCOR.java.
//==============================================================================

package       com.ibm.witj;

import static com.ibm.witj.Utility.*;

//==============================================================================
// Class AttCOR
//
// "Att C++ Object Representation"
// A Java representation of a C++ Att.
// In the comments below, the WIT attribute represented by the C++ Att that
// belongs to this AttCOR is called "the represented attribute".
//
// Class Hierarchy:
//
// PreservedInternal
//    CppObjRep
//       AttCOR
//==============================================================================

final class AttCOR extends CppObjRep
{
//==============================================================================
// Package-Internal Constructor
// 
// Creates an AttCOR that will own the C++ Att whose scoped name matches
// scopedAttName and that was built by the C++ AttBldr that belongs to
// theAttBldrCOR.
//==============================================================================

   AttCOR (AttBldrCOR theAttBldrCOR, String scopedAttName)
      {
      acquireCppObject (theAttBldrCOR, scopedAttName);
      }

//==============================================================================
// Package-Internal Methods
//==============================================================================

//------------------------------------------------------------------------------
// set... (theCompCOR, theValue) methods
//
// Each of these methods sets the represented attribute's value associated with 
// the C++ Component that belongs to theCompCOR to theValue.
//
// Throws a C++ assert exception if any of the following conditions occur:
//
//    The represented attribute is not an input attribute.
//    The type of the represented attribute does not match the scalar type
//       indicated by the method name.
//    The Component class of the represented attribute does not match the C++
//       Component that belongs to theCompCOR.
//------------------------------------------------------------------------------

   native void setBool   (ComponentCOR theCompCOR, boolean theValue);
   native void setInt    (ComponentCOR theCompCOR, int     theValue);
   native void setDbl    (ComponentCOR theCompCOR, double  theValue);
   native void setString (ComponentCOR theCompCOR, String  theValue);

//------------------------------------------------------------------------------
// set...Vec (theCompCOR, theArray) methods
//
// Each of these methods sets the represented attribute's value associated with 
// the C++ Component that belongs to theCompCOR to theArray.
//
// Throws a C++ assert exception if any of the following conditions occur:
//
//    The represented attribute is not an input attribute.
//    The type of the represented attribute does not match the vector type
//       indicated by the method name.
//    The Component class of the represented attribute does not match the C++
//       Component that belongs to theCompCOR.
//    The length of theArray != nPeriods.
//------------------------------------------------------------------------------

   native void setBoolVec (ComponentCOR theCompCOR, boolean[] theArray);
   native void setIntVec  (ComponentCOR theCompCOR, int[]     theArray);
   native void setDblVec  (ComponentCOR theCompCOR, double[]  theArray);

//------------------------------------------------------------------------------
// set...VecToScalar (theCompCOR, theValue) methods
//
// Each of these methods sets each element of the represented attribute's value
// associated with the C++ Component that belongs to theCompCOR to theValue.
//
// Throws a C++ assert exception if any of the following conditions occur:
//
//    The represented attribute is not an input attribute.
//    The type of the represented attribute does not match the vector type
//       indicated by the method name.
//    The Component class of the represented attribute does not match the C++
//       Component that belongs to theCompCOR.
//------------------------------------------------------------------------------

   native void setBoolVecToScalar (ComponentCOR theCompCOR, boolean theValue);
   native void setIntVecToScalar  (ComponentCOR theCompCOR, int     theValue);
   native void setDblVecToScalar  (ComponentCOR theCompCOR, double  theValue);

//------------------------------------------------------------------------------
// get... (theCompCOR) methods
//
// Returns the represented attribute's value associated with the C++ Component
// that belongs to theCompCOR.
//
// Throws a C++ assert exception if either of the following conditions occur:
//
//    The type of the represented attribute does not match the scalar type
//       indicated by the method name.
//    The Component class of the represented attribute does not match the C++
//       Component that belongs to theCompCOR.
//------------------------------------------------------------------------------

   native boolean getBool   (ComponentCOR theCompCOR);
   native int     getInt    (ComponentCOR theCompCOR);
   native double  getDbl    (ComponentCOR theCompCOR);
   native String  getString (ComponentCOR theCompCOR);

//------------------------------------------------------------------------------
// get...Vec (theCompCOR, theArray) methods
//
// Sets theArray to the represented attribute's value associated with the
// the C++ Component that belongs to theCompCOR.
//
// Throws a C++ assert exception if any of the following conditions occur:
//
//    The type of the represented attribute does not match the vector type
//       indicated by the method name.
//    The Component class of the represented attribute does not match the C++
//       Component that belongs to theCompCOR.
//    The length of theArray != nPeriods.
//------------------------------------------------------------------------------

   native void getBoolVec (ComponentCOR theCompCOR, boolean[] theArray);
   native void getIntVec  (ComponentCOR theCompCOR, int[]     theArray);
   native void getDblVec  (ComponentCOR theCompCOR, double[]  theArray);

//------------------------------------------------------------------------------
// isModifiable
//
// Returns true, iff the C++ Att supports a "set" member function.
//------------------------------------------------------------------------------

   native boolean isModifiable ();

//------------------------------------------------------------------------------
// valueTypeMatches (theTypeName)
//
// Returns true, iff the value type of the represented attribute matches
// theTypeName.
//------------------------------------------------------------------------------

   native boolean valueTypeMatches (String theTypeName);

//------------------------------------------------------------------------------
// appliesTo (theClassName)
//
// Returns true, iff the represented attribute applies to the Component class
// whose name is given by theClassName.
//------------------------------------------------------------------------------

   native boolean appliesTo (String theClassName);

//==============================================================================
// Private Methods
//==============================================================================

//------------------------------------------------------------------------------
// acquireCppObject (theAttBldrCOR, scopedAttName)
// 
// Takes ownership of the C++ Att whose scoped name matches scopedAttName and
// that was built by the C++ AttBldr that belongs to theAttBldrCOR.
//------------------------------------------------------------------------------

   private native void acquireCppObject (
      AttBldrCOR theAttBldrCOR,
      String     scopedAttName);

//==============================================================================
}
@


1.19
log
@Reduced heading comments.
@
text
@d144 1
a144 1
// Returns true, iff the C++ Att supports a "setValue" member function.
@


1.18
log
@Implemented String StdAttImps.
@
text
@a3 2
//
// Contains the declaration of class AttCOR.
@


1.17
log
@Implemented class PreservedInternal and made several classes extend it
   instead of class PreservedObject.
@
text
@d61 4
a64 3
   native void setBool (ComponentCOR theCompCOR, boolean theValue);
   native void setInt  (ComponentCOR theCompCOR, int     theValue);
   native void setDbl  (ComponentCOR theCompCOR, double  theValue);
d101 3
a103 3
   native void setBoolVecToScalar (ComponentCOR theCompCOR, boolean      theValue);
   native void setIntVecToScalar  (ComponentCOR theCompCOR, int          theValue);
   native void setDblVecToScalar  (ComponentCOR theCompCOR, double       theValue);
d119 4
a122 3
   native boolean getBool (ComponentCOR theCompCOR);
   native int     getInt  (ComponentCOR theCompCOR);
   native double  getDbl  (ComponentCOR theCompCOR);
@


1.16
log
@Implemented thePreservedObject.getCoordinator ().
@
text
@d22 1
a22 1
// PreservedObject
a38 2
      super (theAttBldrCOR.getCoordinator ());

@


1.15
log
@Changed the name each native method that creates a C++ object to
   createCppObject.
@
text
@d37 1
a37 3
   AttCOR (
         AttBldrCOR theAttBldrCOR,
         String     scopedAttName)
d39 2
@


1.14
log
@Changed name of Java class RetainedObject to PreservedObject.
@
text
@d41 1
a41 1
      acquireMyCppAtt (theAttBldrCOR, scopedAttName);
d174 1
a174 1
// acquireMyCppAtt (theAttBldrCOR, scopedAttName)
d180 1
a180 1
   private native void acquireMyCppAtt (
@


1.13
log
@Made some methods final.
@
text
@d22 1
a22 1
// RetainedObject
@


1.12
log
@Added theComp.setValueToScalar (...) methods.
@
text
@d102 3
a104 3
   native void setBoolVecToScalar (ComponentCOR theCompCOR, boolean theValue);
   native void setIntVecToScalar  (ComponentCOR theCompCOR, int     theValue);
   native void setDblVecToScalar  (ComponentCOR theCompCOR, double  theValue);
@


1.11
log
@Changed name of Element classes in Java and C++ to Component.
@
text
@d54 1
a54 1
// Issues an internal error if any of the following conditions occur:
d73 1
a73 1
// Issues an internal error if any of the following conditions occur:
d88 19
d112 1
a112 1
// Issues an internal error if either of the following conditions occur:
d130 1
a130 1
// Issues an internal error if any of the following conditions occur:
@


1.10
log
@Minor revision.
@
text
@d49 1
a49 1
// set... (theElementCOR, theValue) methods
d52 1
a52 1
// the C++ Element that belongs to theElementCOR to theValue.
d59 2
a60 2
//    The Element class of the represented attribute does not match the C++
//       Element that belongs to theElementCOR.
d63 3
a65 3
   native void setBool (ElementCOR theElementCOR, boolean theValue);
   native void setInt  (ElementCOR theElementCOR, int     theValue);
   native void setDbl  (ElementCOR theElementCOR, double  theValue);
d68 1
a68 1
// set...Vec (theElementCOR, theArray) methods
d71 1
a71 1
// the C++ Element that belongs to theElementCOR to theArray.
d78 2
a79 2
//    The Element class of the represented attribute does not match the C++
//       Element that belongs to theElementCOR.
d83 3
a85 3
   native void setBoolVec (ElementCOR theElementCOR, boolean[] theArray);
   native void setIntVec  (ElementCOR theElementCOR, int[]     theArray);
   native void setDblVec  (ElementCOR theElementCOR, double[]  theArray);
d88 1
a88 1
// get... (theElementCOR) methods
d90 2
a91 2
// Returns the represented attribute's value associated with the C++ Element
// that belongs to theElementCOR.
d97 2
a98 2
//    The Element class of the represented attribute does not match the C++
//       Element that belongs to theElementCOR.
d101 3
a103 3
   native boolean getBool (ElementCOR theElementCOR);
   native int     getInt  (ElementCOR theElementCOR);
   native double  getDbl  (ElementCOR theElementCOR);
d106 1
a106 1
// get...Vec (theElementCOR, theArray) methods
d109 1
a109 1
// the C++ Element that belongs to theElementCOR.
d115 2
a116 2
//    The Element class of the represented attribute does not match the C++
//       Element that belongs to theElementCOR.
d120 3
a122 3
   native void getBoolVec (ElementCOR theElementCOR, boolean[] theArray);
   native void getIntVec  (ElementCOR theElementCOR, int[]     theArray);
   native void getDblVec  (ElementCOR theElementCOR, double[]  theArray);
d144 1
a144 1
// Returns true, iff the represented attribute applies to the Element class
@


1.9
log
@Minor changes.
@
text
@d22 3
a24 3
//    RetainedObject
//       CppObjRep
//          AttCOR
@


1.8
log
@Changed name of method Attribute.allowsSetValue to isModifiable.
@
text
@d125 1
a125 1
// isModifiable ()
@


1.7
log
@Attributes.
@
text
@d125 1
a125 1
// allowsSetValue ()
d130 1
a130 1
   native boolean allowsSetValue ();
@


1.6
log
@Minor Revision.
@
text
@d125 1
a125 1
// getIsInputAtt ()
d127 1
a127 2
// Returns true, iff the represented attribute is an input attribute, i.e., one
// that supports "set".
d130 1
a130 1
   native boolean getIsInputAtt ();
@


1.5
log
@Name change.
@
text
@d125 1
a125 1
// getInputAccess ()
d131 1
a131 1
   native boolean getInputAccess ();
@


1.4
log
@Changed name of Component to Entity.
@
text
@d49 1
a49 1
// set... (theEntityCOR, theValue) methods
d52 1
a52 1
// the C++ Entity that belongs to theEntityCOR to theValue.
d59 2
a60 2
//    The Entity class of the represented attribute does not match the C++
//       Entity that belongs to theEntityCOR.
d63 3
a65 3
   native void setBool (EntityCOR theEntityCOR, boolean theValue);
   native void setInt  (EntityCOR theEntityCOR, int     theValue);
   native void setDbl  (EntityCOR theEntityCOR, double  theValue);
d68 1
a68 1
// set...Vec (theEntityCOR, theArray) methods
d71 1
a71 1
// the C++ Entity that belongs to theEntityCOR to theArray.
d78 2
a79 2
//    The Entity class of the represented attribute does not match the C++
//       Entity that belongs to theEntityCOR.
d83 3
a85 3
   native void setBoolVec (EntityCOR theEntityCOR, boolean[] theArray);
   native void setIntVec  (EntityCOR theEntityCOR, int[]     theArray);
   native void setDblVec  (EntityCOR theEntityCOR, double[]  theArray);
d88 1
a88 1
// get... (theEntityCOR) methods
d90 2
a91 2
// Returns the represented attribute's value associated with the C++ Entity
// that belongs to theEntityCOR.
d97 2
a98 2
//    The Entity class of the represented attribute does not match the C++
//       Entity that belongs to theEntityCOR.
d101 3
a103 3
   native boolean getBool (EntityCOR theEntityCOR);
   native int     getInt  (EntityCOR theEntityCOR);
   native double  getDbl  (EntityCOR theEntityCOR);
d106 1
a106 1
// get...Vec (theEntityCOR, theArray) methods
d109 1
a109 1
// the C++ Entity that belongs to theEntityCOR.
d115 2
a116 2
//    The Entity class of the represented attribute does not match the C++
//       Entity that belongs to theEntityCOR.
d120 3
a122 3
   native void getBoolVec (EntityCOR theEntityCOR, boolean[] theArray);
   native void getIntVec  (EntityCOR theEntityCOR, int[]     theArray);
   native void getDblVec  (EntityCOR theEntityCOR, double[]  theArray);
d145 1
a145 1
// Returns true, iff the represented attribute applies to the Entity class
@


1.3
log
@Minor revision.
@
text
@d49 1
a49 1
// set... (theCompCOR, theValue) methods
d52 1
a52 1
// the C++ Component that belongs to theCompCOR to theValue.
d59 2
a60 2
//    The Component class of the represented attribute does not match the C++
//       Component that belongs to theCompCOR.
d63 3
a65 3
   native void setBool (ComponentCOR theCompCOR, boolean theValue);
   native void setInt  (ComponentCOR theCompCOR, int     theValue);
   native void setDbl  (ComponentCOR theCompCOR, double  theValue);
d68 1
a68 1
// set...Vec (theCompCOR, theArray) methods
d71 1
a71 1
// the C++ Component that belongs to theCompCOR to theArray.
d78 2
a79 2
//    The Component class of the represented attribute does not match the C++
//       Component that belongs to theCompCOR.
d83 3
a85 3
   native void setBoolVec (ComponentCOR theCompCOR, boolean[] theArray);
   native void setIntVec  (ComponentCOR theCompCOR, int[]     theArray);
   native void setDblVec  (ComponentCOR theCompCOR, double[]  theArray);
d88 1
a88 1
// get... (theCompCOR) methods
d90 2
a91 2
// Returns the represented attribute's value associated with the C++ Component
// that belongs to theCompCOR.
d97 2
a98 2
//    The Component class of the represented attribute does not match the C++
//       Component that belongs to theCompCOR.
d101 3
a103 3
   native boolean getBool (ComponentCOR theCompCOR);
   native int     getInt  (ComponentCOR theCompCOR);
   native double  getDbl  (ComponentCOR theCompCOR);
d106 1
a106 1
// get...Vec (theCompCOR, theArray) methods
d109 1
a109 1
// the C++ Component that belongs to theCompCOR.
d115 2
a116 2
//    The Component class of the represented attribute does not match the C++
//       Component that belongs to theCompCOR.
d120 3
a122 3
   native void getBoolVec (ComponentCOR theCompCOR, boolean[] theArray);
   native void getIntVec  (ComponentCOR theCompCOR, int[]     theArray);
   native void getDblVec  (ComponentCOR theCompCOR, double[]  theArray);
d145 1
a145 1
// Returns true, iff the represented attribute applies to the Component class
@


1.2
log
@Minor revision.
@
text
@d125 1
a125 1
// getInputMode ()
d131 1
a131 1
   native boolean getInputMode ();
@


1.1
log
@Numerous class name changes.
@
text
@d125 1
a125 1
// isAnInputAtt ()
d131 1
a131 1
   native boolean isAnInputAtt ();
@

