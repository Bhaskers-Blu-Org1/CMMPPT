head	1.37;
access;
symbols;
locks; strict;
comment	@# @;


1.37
date	2011.05.02.18.32.23;	author rjw;	state Exp;
branches;
next	1.36;

1.36
date	2011.04.15.19.12.40;	author rjw;	state Exp;
branches;
next	1.35;

1.35
date	2011.03.25.22.49.29;	author rjw;	state Exp;
branches;
next	1.34;

1.34
date	2011.02.25.16.07.06;	author rjw;	state Exp;
branches;
next	1.33;

1.33
date	2009.09.29.19.09.24;	author rjw;	state Exp;
branches;
next	1.32;

1.32
date	2009.09.25.23.44.30;	author rjw;	state Exp;
branches;
next	1.31;

1.31
date	2009.09.25.22.42.43;	author rjw;	state Exp;
branches;
next	1.30;

1.30
date	2009.09.18.21.13.22;	author rjw;	state Exp;
branches;
next	1.29;

1.29
date	2009.09.18.18.35.08;	author rjw;	state Exp;
branches;
next	1.28;

1.28
date	2009.07.23.18.26.41;	author rjw;	state Exp;
branches;
next	1.27;

1.27
date	2009.07.23.17.47.22;	author rjw;	state Exp;
branches;
next	1.26;

1.26
date	2009.07.22.21.49.47;	author rjw;	state Exp;
branches;
next	1.25;

1.25
date	2009.07.21.22.33.03;	author rjw;	state Exp;
branches;
next	1.24;

1.24
date	2009.06.05.15.08.23;	author rjw;	state Exp;
branches;
next	1.23;

1.23
date	2009.05.05.20.17.06;	author rjw;	state Exp;
branches;
next	1.22;

1.22
date	2009.04.08.19.18.02;	author rjw;	state Exp;
branches;
next	1.21;

1.21
date	2009.03.13.19.32.21;	author rjw;	state Exp;
branches;
next	1.20;

1.20
date	2009.03.13.16.36.08;	author rjw;	state Exp;
branches;
next	1.19;

1.19
date	2009.03.12.22.45.20;	author rjw;	state Exp;
branches;
next	1.18;

1.18
date	2009.03.12.19.02.42;	author rjw;	state Exp;
branches;
next	1.17;

1.17
date	2009.03.06.23.23.04;	author rjw;	state Exp;
branches;
next	1.16;

1.16
date	2009.02.17.23.46.02;	author rjw;	state Exp;
branches;
next	1.15;

1.15
date	2009.02.10.23.19.30;	author rjw;	state Exp;
branches;
next	1.14;

1.14
date	2009.02.06.22.40.59;	author rjw;	state Exp;
branches;
next	1.13;

1.13
date	2009.02.03.16.32.28;	author rjw;	state Exp;
branches;
next	1.12;

1.12
date	2009.01.31.00.56.27;	author rjw;	state Exp;
branches;
next	1.11;

1.11
date	2009.01.22.23.12.41;	author rjw;	state Exp;
branches;
next	1.10;

1.10
date	2009.01.21.21.43.24;	author rjw;	state Exp;
branches;
next	1.9;

1.9
date	2009.01.16.17.03.36;	author rjw;	state Exp;
branches;
next	1.8;

1.8
date	2009.01.15.17.03.29;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2008.12.15.15.35.33;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2008.12.03.18.55.07;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2008.11.26.14.48.19;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2008.10.07.18.50.26;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2008.10.06.22.14.05;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2008.09.26.22.50.17;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2008.09.26.22.21.25;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.37
log
@Reduced heading comments.
@
text
@
//==============================================================================
// WIT-J Java Source File CppObjRep.java.
//==============================================================================

package       com.ibm.witj;

import static com.ibm.witj.Utility.*;

//==============================================================================
// Class CppObjRep
//
// "C++ Object Representation"
// A Java representation of a C++ object.
// The C++ object will be an instance of a class derived from class JavaAccObj.
// An instance of this class has the following responsibilities:
//
// * Store an association to the represented C++ object when the CppObjRep is
//   being constructed. In most cases, the C++ object will be created by the
//   CppObjRep.
// * Provide an Java interface to the represented C++ object via native methods.
// * Destroy the represented C++ object when the CppObjRep is deactivated.
//
// Most concrete subclasses of this class have a private native method called
// "acquireNewCppObject" which creates the C+ object and stores the association
// to it. The acquireNewCppObject method is called by the subclass ctor.
//
// Class Hierarchy:
//
// PreservedInternal
//    CppObjRep
//       CoordinatorCOR
//       AttBldrCOR
//       AttCOR
//       MessageMgrCOR
//       ComponentCOR
//          ProblemCOR
//          PartCOR
//          DemandCOR
//          OperationCOR
//          BomEntryCOR
//          SubstituteCOR
//          BopEntryCOR
//==============================================================================

abstract class CppObjRep extends PreservedInternal
{
//==============================================================================
// Package-Internal Constructor
//==============================================================================

   CppObjRep ()
      {
      setUpCppPortion ();
      }

//==============================================================================
// Package-Internal Methods
//==============================================================================

//------------------------------------------------------------------------------
// deactivate
//
// Override from class PreservedInternal.
//------------------------------------------------------------------------------

   void deactivate ()
      {
      deleteCppObject ();

      super.deactivate ();
      }

//==============================================================================
// Private Methods
//==============================================================================

//------------------------------------------------------------------------------
// setUpCppPortion ()
//
// Sets up the C++ side of WIT-J.
//------------------------------------------------------------------------------

   private static synchronized void setUpCppPortion ()
      {
      if (setUpCalled)
         return;

      try
         {
         System.loadLibrary ("witj");
         }

      catch (UnsatisfiedLinkError theLinkErr)
         {
         throw
            TerminalAppException.
               newInstanceForLoadLibraryFailure (theLinkErr);
         }

      setUpJni ();

      setUpCalled = true;
      }

//------------------------------------------------------------------------------
// setUpJni ().
//
// Sets up the interaction between WIT-J/C++ and JNI.
// This method is to be called only from setUpCppPortion (), which is statically
// synchronized.
//------------------------------------------------------------------------------

   private static native void setUpJni ();

//------------------------------------------------------------------------------
// deleteCppObject ().
//
// Deletes the C++ JavaAccObj represented by this CppObjRep and sets the
// pointer to NULL.
//------------------------------------------------------------------------------

   private native void deleteCppObject ();

//==============================================================================
// Private Fields
//==============================================================================

//------------------------------------------------------------------------------
// setUpCalled
//
// True, iff setUpCppPortion () has been called at least once.
//------------------------------------------------------------------------------

   private static boolean setUpCalled = false;

//------------------------------------------------------------------------------
// myCppObjectAsLong.
//
// A pointer to the C++ Object represented by this CppObjRep, cast as a long.
//------------------------------------------------------------------------------

   private long myCppObjectAsLong = 0;

//==============================================================================
}
@


1.36
log
@Java CppObjRep classes
@
text
@a3 2
//
// Contains the declaration of class CppObjRep.
@


1.35
log
@ArrayListJOR
@
text
@d27 2
a28 2
// "createCppObject" which creates the C+ object and stores the association to
// it. The createCppObject is called by the subclass ctor.
d71 1
a71 1
      deleteMyCppJavaAccObj ();
d119 1
a119 1
// deleteMyCppJavaAccObj ().
d125 1
a125 1
   private native void deleteMyCppJavaAccObj ();
@


1.34
log
@Moved GlobalAspect responsibilities to class Problem.
Removed class GlobalAspect.
@
text
@a45 1
//       AllocTripleVecCOR
@


1.33
log
@Implemented class PreservedInternal and made several classes extend it
   instead of class PreservedObject.
@
text
@a33 1
//       ProblemCOR
d39 1
a39 1
//          GlobalAspectCOR
@


1.32
log
@Moved myCoordinator to PreservedObject.
@
text
@d32 1
a32 1
// PreservedObject
d50 1
a50 1
abstract class CppObjRep extends PreservedObject
d56 1
a56 1
   CppObjRep (Coordinator theCoord)
a57 2
      super (theCoord);

a65 11
// toStringActive ().
//
// Override from class PreservedObject.
//------------------------------------------------------------------------------

   final String toStringActive ()
      {
      return "CppObjRep";
      }

//------------------------------------------------------------------------------
d68 1
a68 1
// Override from class PreservedObject.
@


1.31
log
@Implemented thePreservedObject.getCoordinator ().
@
text
@d58 1
a58 1
      myCoordinator = theCoord;
a78 11
// getCoordinator ()
//
// Override from class PreservedObject.
//------------------------------------------------------------------------------

   Coordinator getCoordinator ()
      {
      return myCoordinator;
      }

//------------------------------------------------------------------------------
a154 8
// myCoordinator
//
// The myCoordinator for this CppObjRep.
//------------------------------------------------------------------------------

   private final Coordinator myCoordinator;

//------------------------------------------------------------------------------
@


1.30
log
@Revised some comments.
@
text
@d56 1
a56 1
   CppObjRep ()
d58 2
d79 11
d166 8
@


1.29
log
@Implemented synchronized WIT-J/C++/JNI set-up.
@
text
@d125 2
@


1.28
log
@Changed name of class TerminalAppErrorException to TerminalAppException.
@
text
@d58 1
a58 4
      if (! setUpCalled)
         {
         setUpCppPortion ();
         }
d99 1
a99 1
   private static void setUpCppPortion ()
d101 3
d124 1
a124 1
// Sets up the interaction between the C++ portion and JNI.
@


1.27
log
@Switched two exceptions from class InternalErrorException to
   TerminalAppErrorException.
@
text
@d112 1
a112 1
            TerminalAppErrorException.
@


1.26
log
@Made WIT-J throw an InternalErrorException instead of a
   TerminalAppErrorException when the native library fails to load.
@
text
@d112 1
a112 1
            InternalErrorException.
@


1.25
log
@Made WIT-J throw a TerminalAppErrorException when the C++ library could not
be loaded.
@
text
@d109 1
a109 1
      catch (UnsatisfiedLinkError theError)
d111 3
a113 17
         String                    thePath;
         TerminalAppErrorException theExc;

         thePath = System.getProperty ("java.library.path");

         theExc  =
            new TerminalAppErrorException (
               "   The Java portion of WIT-J was not able to load the library\n"
             + "   for the C++ portion of WIT-J.\n"
             + "\n"
             + "   There may be a problem with the library path:\n"
             + "\n"
             + "      java.library.path = \"" + thePath + "\"");

         theExc.initCause (theError);

         throw theExc;
@


1.24
log
@Changed the name each native method that creates a C++ object to
   createCppObject.
@
text
@a52 11
// Static initialization block
//==============================================================================

   static
      {
      System.loadLibrary ("witj");

      initTimeSetUp ();
      }

//==============================================================================
d58 4
d97 1
a97 1
// initTimeSetUp ().
d99 1
a99 1
// Takes actions appropriate during static initialization of this class.
d102 40
a141 1
   private static native void initTimeSetUp ();
d157 8
@


1.23
log
@Changed name of Java class RetainedObject to PreservedObject.
@
text
@d16 13
a28 1
// A Java representation of a C++ JavaAccObj.
d47 1
d125 1
a125 1
// myCppJavaAccObjAsLong.
d127 1
a127 2
// A pointer to the C++ JavaAccObj represented by this CppObjRep, cast as a
// long.
d130 1
a130 1
   private long myCppJavaAccObjAsLong = 0;
@


1.22
log
@Made some methods final.
@
text
@d20 1
a20 1
// RetainedObject
d37 1
a37 1
abstract class CppObjRep extends RetainedObject
d65 1
a65 1
// Override from class RetainedObject.
d76 1
a76 1
// Override from class RetainedObject.
@


1.21
log
@Changed name of Element classes in Java and C++ to Component.
@
text
@d68 1
a68 1
   String toStringActive ()
@


1.20
log
@Changed name of GlobalComponent classes to GlobalAspect.
@
text
@d27 1
a27 1
//       ElementCOR
@


1.19
log
@Changed name of GlobalElement classes to GlobalComponent.
@
text
@d28 1
a28 1
//          GlobalComponentCOR
@


1.18
log
@Changed name of Problem method shutDown to deactivate.
@
text
@d28 1
a28 1
//          GlobalElementCOR
@


1.17
log
@purgeData
@
text
@d74 1
a74 1
// shutDown
d79 1
a79 1
   void shutDown ()
d83 1
a83 1
      super.shutDown ();
@


1.16
log
@Removed the ShipTriple classes.
@
text
@d63 11
@


1.15
log
@Replaced the AllocTarget classes with ShipTriple classes.
@
text
@a34 1
//       ShipTripleCOR
@


1.14
log
@Problem.eqHeurAlloc.
@
text
@d35 1
a35 1
//       AllocTargetCOR
@


1.13
log
@Removed the Alternative classes.
@
text
@d35 1
@


1.12
log
@Part.Category as Alternative
@
text
@a25 1
//       AlternativeCOR
@


1.11
log
@Removed java class ElementMgr, moving its responsibilities to class
Coordinator.
@
text
@d26 1
@


1.10
log
@Change the names of the ProbMgr classes to Coordinator, etc.
@
text
@d22 1
a25 1
//       ProblemCOR
@


1.9
log
@Change the mname of the ProbCtr classes to ProbMgr in both Java and C++.
@
text
@d22 1
a22 1
//       ProbMgrCOR
@


1.8
log
@Initial implementation of Java classes ProbCtrCOR ProbCtr.
@
text
@d22 1
a22 1
//       ProbCtrCOR
@


1.7
log
@Minor revision.
@
text
@d22 1
@


1.6
log
@Minor changes.
@
text
@d20 14
a33 14
//    RetainedObject
//       CppObjRep
//          AttBldrCOR
//          AttCOR
//          ProblemCOR
//          MessageMgrCOR
//          ElementCOR
//             GlobalElementCOR
//             PartCOR
//             DemandCOR
//             OperationCOR
//             BomEntryCOR
//             SubstituteCOR
//             BopEntryCOR
@


1.5
log
@Removed Java class SessionCOR.
@
text
@d62 1
a62 1
// shutDown ().
@


1.4
log
@Name change.
@
text
@d22 3
a24 1
//          SessionCOR
a25 1
//          ProblemCOR
a33 2
//          AttBldrCOR
//          AttCOR
@


1.3
log
@Changed name of Component to Entity.
@
text
@d25 2
a26 2
//          EntityCOR
//             GlobalEntityCOR
@


1.2
log
@Changed name of C++ class JAccObject to JavaAccObj.
@
text
@d25 2
a26 2
//          ComponentCOR
//             GlobalCompCOR
@


1.1
log
@Numerous class name changes.
@
text
@d16 1
a16 1
// A Java representation of a C++ object.
d70 1
a70 1
      deleteMyCppJAccObject ();
d88 1
a88 1
// deleteMyCppJAccObject ().
d90 1
a90 1
// Deletes the C++ JAccObject represented by this CppObjRep and sets the
d94 1
a94 1
   private native void deleteMyCppJAccObject ();
d101 1
a101 1
// myCppJAccObjectAsLong.
d103 1
a103 1
// A pointer to the C++ JAccObject represented by this CppObjRep, cast as a
d107 1
a107 1
   private long myCppJAccObjectAsLong = 0;
@

