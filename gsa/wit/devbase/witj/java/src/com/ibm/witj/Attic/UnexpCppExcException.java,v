head	1.3;
access;
symbols;
locks; strict;
comment	@# @;


1.3
date	2009.01.02.23.44.19;	author rjw;	state dead;
branches;
next	1.2;

1.2
date	2008.12.24.00.18.56;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2008.12.22.23.15.51;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Collapsed the subclasses of InternalErrorException into InternalErrorException.
@
text
@
//==============================================================================
// WIT-J Java Source File UnexpCppExcException.java.
//
// Contains the declaration of class UnexpCppExcException.
//==============================================================================

package       com.ibm.witj;

import static com.ibm.witj.Utility.*;

//==============================================================================
// Class UnexpCppExcException
//
// One kind of unchecked Exception thrown by WIT-J.
//
// When WIT-J throws an UnexpCppExcException, this indicates that:
//
// * A C++ exception of an unexpected type was thrown from the C++ side of
//   WIT-J.
// * This was apparently caused by a bug in WIT-J.
// * As a result of the throw, WIT-J is now in a non-functional state.
//   No further calls to WIT-J methods should be made for the rest of the
//   program process.
//
// The Exceptions of this class are intended to be constructed by and thrown
// from the C++ side from WIT-J.
//
// Class Hierarchy:
//
// RuntimeException
//    WitjException
//       TerminalException
//          InternalErrorException
//             UnexpCppExcException
//==============================================================================

public final class UnexpCppExcException extends InternalErrorException
{
//==============================================================================
// Private Constructor
//
// To be invoked from C++.
//==============================================================================

   private UnexpCppExcException (String message)
      {
      super (
         "   A C++ exception of an unexpected type "
       +    "was thrown from the C++ side of WIT-J.\n");
      }

//==============================================================================
// Private Fields
//==============================================================================

//------------------------------------------------------------------------------
// serialVersionUID
//
// This field is required in order to avoid a compiler warning whenever an
// instance is constructed, because this class inherits from class Throwable,
// which implements the interface Serializable.
//------------------------------------------------------------------------------

   private static final long serialVersionUID = 1L;

//==============================================================================
}
@


1.2
log
@Added code to handle Java exceptions raised during the execution of JNI
   functions.
@
text
@@


1.1
log
@Changed some Java Exception class names.
@
text
@d48 3
a50 1
      super (message);
@

