head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2009.02.09.22.50.19;	author rjw;	state dead;
branches;
next	1.1;

1.1
date	2009.02.06.22.40.59;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Replaced Java class AllocTarget with AllocTriple <Demand>.
@
text
@
//==============================================================================
// WIT-J Java Source File AllocTarget.java.
//
// Contains the declaration of class AllocTarget.
//==============================================================================

package       com.ibm.witj;

import static com.ibm.witj.Utility.*;

//==============================================================================
// Class AllocTarget
//
// "Allocation Target"
//
// Represents a request to ship a specified # of units to a specified Demand in
// a specified period.
//==============================================================================

public final class AllocTarget
{
//==============================================================================
// Public Methods
//==============================================================================

//------------------------------------------------------------------------------
// newInstance (theDemand, theShipPer, theDesIncVol)
//
// Factory method: Constructs and returns a new AllocTarget for the arguments.
//------------------------------------------------------------------------------

   public static AllocTarget newInstance (
         Demand theDemand,
         int    theShipPer,
         double theDesIncVol)
      {
      try
         {
         notAllowedWhenTerminated ("AllocTarget.newInstance");

         argMustBeActive (theDemand, "theDemand", "AllocTarget.newInstance");

         return new AllocTarget (theDemand, theShipPer, theDesIncVol);
         }

      catch (Throwable theThrowable)
         {
         throw getWitjExceptionFor (theThrowable);
         }
      }

//------------------------------------------------------------------------------
// getDemand ()
//
// Accessor
//------------------------------------------------------------------------------

   public Demand getDemand ()
      {
      try
         {
         return myDemand;
         }

      catch (Throwable theThrowable)
         {
         throw getWitjExceptionFor (theThrowable);
         }
      }

//------------------------------------------------------------------------------
// getShipPer ()
//
// Accessor
//------------------------------------------------------------------------------

   public int getShipPer ()
      {
      try
         {
         return myShipPer;
         }

      catch (Throwable theThrowable)
         {
         throw getWitjExceptionFor (theThrowable);
         }
      }

//------------------------------------------------------------------------------
// getDesIncVol ()
//
// Accessor
//------------------------------------------------------------------------------

   public double getDesIncVol ()
      {
      try
         {
         return myDesIncVol;
         }

      catch (Throwable theThrowable)
         {
         throw getWitjExceptionFor (theThrowable);
         }
      }

//------------------------------------------------------------------------------
// getIncVol ()
//
// Accessor
//------------------------------------------------------------------------------

   public double getIncVol ()
      {
      try
         {
         return myIncVol;
         }

      catch (Throwable theThrowable)
         {
         throw getWitjExceptionFor (theThrowable);
         }
      }

//==============================================================================
// Package Internal Methods
//==============================================================================

   void setIncVol (double theIncVol)
      {
      myIncVol = theIncVol;
      }

//==============================================================================
// Private Constructor
//==============================================================================

   private AllocTarget (
         Demand theDemand,
         int    theShipPer,
         double theDesIncVol)
      {
      myDemand    = theDemand;
      myShipPer   = theShipPer;
      myDesIncVol = theDesIncVol;
      }

//==============================================================================
// Private Fields
//==============================================================================

//------------------------------------------------------------------------------
// myDemand
//
// The Demand to which shipment is being requested.
//------------------------------------------------------------------------------

   private final Demand myDemand;

//------------------------------------------------------------------------------
// myShipPer
//
// The period in which shipment is being requested.
//------------------------------------------------------------------------------

   private final int myShipPer;

//------------------------------------------------------------------------------
// myDesIncVol
//
// The desired incremental shipment volume being requested.
//------------------------------------------------------------------------------

   private final double myDesIncVol;

//------------------------------------------------------------------------------
// myIncVol
//
// The incremental shipment volume achived by Heuristic Allocation.
//------------------------------------------------------------------------------

   private double myIncVol = 0.0;

//==============================================================================
}
@


1.1
log
@Problem.eqHeurAlloc.
@
text
@@

