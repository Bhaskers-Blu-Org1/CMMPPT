head	1.24;
access;
symbols;
locks; strict;
comment	@# @;


1.24
date	2011.05.02.18.32.27;	author rjw;	state Exp;
branches;
next	1.23;

1.23
date	2011.04.15.19.12.42;	author rjw;	state Exp;
branches;
next	1.22;

1.22
date	2011.03.30.16.20.52;	author rjw;	state Exp;
branches;
next	1.21;

1.21
date	2011.03.29.23.38.57;	author rjw;	state Exp;
branches;
next	1.20;

1.20
date	2009.09.29.19.09.24;	author rjw;	state Exp;
branches;
next	1.19;

1.19
date	2009.06.05.15.08.23;	author rjw;	state Exp;
branches;
next	1.18;

1.18
date	2009.05.05.20.17.07;	author rjw;	state Exp;
branches;
next	1.17;

1.17
date	2009.03.13.19.32.22;	author rjw;	state Exp;
branches;
next	1.16;

1.16
date	2009.03.09.20.05.25;	author rjw;	state Exp;
branches;
next	1.15;

1.15
date	2009.02.20.21.18.32;	author rjw;	state Exp;
branches;
next	1.14;

1.14
date	2009.02.20.20.58.43;	author rjw;	state Exp;
branches;
next	1.13;

1.13
date	2009.02.14.00.51.31;	author rjw;	state Exp;
branches;
next	1.12;

1.12
date	2009.01.29.22.06.40;	author rjw;	state Exp;
branches;
next	1.11;

1.11
date	2009.01.23.19.32.25;	author rjw;	state Exp;
branches;
next	1.10;

1.10
date	2009.01.22.23.41.06;	author rjw;	state Exp;
branches;
next	1.9;

1.9
date	2009.01.21.21.43.25;	author rjw;	state Exp;
branches;
next	1.8;

1.8
date	2009.01.16.17.03.36;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2009.01.16.16.32.02;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2008.12.15.15.35.34;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2008.12.03.18.55.08;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2008.10.07.18.50.27;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2008.10.06.22.14.06;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2008.09.29.22.43.48;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2008.09.26.22.21.26;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.24
log
@Reduced heading comments.
@
text
@
//==============================================================================
// WIT-J Java Source File OperationCOR.java.
//==============================================================================

package       com.ibm.witj;

import static com.ibm.witj.Utility.*;

//==============================================================================
// Class OperationCOR
//
// "Operation C++ Object Representation"
// A Java representation of a C++ Operation.
//
// Class Hierarchy:
//
// PreservedInternal
//    CppObjRep
//       ComponentCOR
//          OperationCOR
//==============================================================================

final class OperationCOR extends ComponentCOR
{
//==============================================================================
// Package-Internal Constructor
//==============================================================================

   OperationCOR (CoordinatorCOR theCoordCOR, String theOpnName)
      {
      acquireNewCppObject (theCoordCOR, theOpnName);
      }

//==============================================================================
// Package-Internal Native Methods
//==============================================================================

//------------------------------------------------------------------------------
// setOperationName
//
// Sets the OperationName of the C++ Operation.
//------------------------------------------------------------------------------

   native void setOperationName (String theOpnName);

//==============================================================================
// Private Methods
//==============================================================================

//------------------------------------------------------------------------------
// acquireNewCppObject
// 
// This method is explained in the comment for class CppObjRep.
//------------------------------------------------------------------------------

   private native void acquireNewCppObject (
      CoordinatorCOR theCoordCOR,
      String         theOpnName);

//==============================================================================
}
@


1.23
log
@Java CppObjRep classes
@
text
@a3 2
//
// Contains the declaration of class OperationCOR.
@


1.22
log
@Revised CppObjRep class ctors.
@
text
@d34 1
a34 1
      createCppObject (theCoordCOR, theOpnName);
d54 1
a54 1
// createCppObject
d59 1
a59 1
   private native void createCppObject (
@


1.21
log
@Replaced C++ class CORJOR with ComponentJOR.
@
text
@d32 1
a32 1
   OperationCOR (Operation theOpn)
a33 6
      CoordinatorCOR theCoordCOR;
      String         theOpnName;
      
      theCoordCOR = theOpn.getCoordinator   ().getCoordinatorCOR ();
      theOpnName  = theOpn.getOperationName ();

@


1.20
log
@Implemented class PreservedInternal and made several classes extend it
   instead of class PreservedObject.
@
text
@a33 2
      super (theOpn);

a55 38
// Private C++ Call-Back Methods
//==============================================================================

//------------------------------------------------------------------------------
// makeBomEntry (thePartCOR)
//
// Constructs a new BomEntry.
//------------------------------------------------------------------------------

   private void makeBomEntry (PartCOR thePartCOR)
      {
      Operation theOpn;
      Part      thePart;

      theOpn  =            getComponent ().asOperation ();
      thePart = thePartCOR.getComponent ().asPart      ();

      BomEntry.newInstance (theOpn, thePart);
      }

//------------------------------------------------------------------------------
// makeBopEntry (thePartCOR)
//
// Constructs a new BopEntry.
//------------------------------------------------------------------------------

   private void makeBopEntry (PartCOR thePartCOR)
      {
      Operation theOpn;
      Part      thePart;

      theOpn  =            getComponent ().asOperation ();
      thePart = thePartCOR.getComponent ().asPart      ();

      BopEntry.newInstance (theOpn, thePart);
      }

//==============================================================================
@


1.19
log
@Changed the name each native method that creates a C++ object to
   createCppObject.
@
text
@d20 1
a20 1
// PreservedObject
@


1.18
log
@Changed name of Java class RetainedObject to PreservedObject.
@
text
@d42 1
a42 1
      createMyCppOperation (theCoordCOR, theOpnName);
d100 1
a100 1
// createMyCppOperation
d102 1
a102 1
// Constructs a new C++ Operation for the arguments and takes ownership of it.
d105 1
a105 1
   private native void createMyCppOperation (
@


1.17
log
@Changed name of Element classes in Java and C++ to Component.
@
text
@d20 1
a20 1
// RetainedObject
@


1.16
log
@purgeData
@
text
@d22 1
a22 1
//       ElementCOR
d26 1
a26 1
final class OperationCOR extends ElementCOR
d72 2
a73 2
      theOpn  =            getElement ().asOperation ();
      thePart = thePartCOR.getElement ().asPart      ();
d89 2
a90 2
      theOpn  =            getElement ().asOperation ();
      thePart = thePartCOR.getElement ().asPart      ();
@


1.15
log
@Minor revision.
@
text
@d72 2
a73 3
      theOpn  = (Operation) getElement ();

      thePart = thePartCOR.getPart ();
d89 2
a90 3
      theOpn  = (Operation) getElement ();

      thePart = thePartCOR.getPart ();
@


1.14
log
@Removed Java class CppGateway.
@
text
@a57 9
// Package-Internal Accessors
//==============================================================================

   Operation getOperation ()
      {
      return (Operation) getElement ();
      }

//==============================================================================
d69 4
a72 1
      Part thePart;
d76 1
a76 1
      BomEntry.newInstance (getOperation (), thePart);
d87 4
a90 1
      Part thePart;
d94 1
a94 1
      BopEntry.newInstance (getOperation (), thePart);
@


1.13
log
@Implemented getPipSeq.
@
text
@d67 34
@


1.12
log
@Implemented Java class CppGateway.
@
text
@d34 2
a38 1
      myOperation = theOpn;
d63 1
a63 1
      return myOperation;
a80 12
// Private Fields
//==============================================================================

//------------------------------------------------------------------------------
// myOperation
//
// The Operation that owns this OperationCOR.
//------------------------------------------------------------------------------

   private final Operation myOperation;

//==============================================================================
@


1.11
log
@Coordinator
@
text
@d37 2
a38 2
      theCoordCOR = theOpn.getCoordinator ().getCoordinatorCOR ();

d41 1
a41 1
      createMyCppOperation (theCoordCOR, theOpnName, theOpn);
d45 1
a45 1
// Package-Internal Methods
d57 9
d77 13
a89 2
      String         theOpnName,
      Operation      theOpn);
@


1.10
log
@Coordinator
@
text
@d34 1
a34 1
      CoordinatorCOR theCoordinatorCOR;
d37 1
a37 1
      theCoordinatorCOR = theOpn.getCoordinator ().getCoordinatorCOR ();
d39 1
a39 1
      theOpnName        = theOpn.getOperationName ();
d41 1
a41 1
      createMyCppOperation (theCoordinatorCOR, theOpnName, theOpn);
d67 1
a67 1
      CoordinatorCOR theCoordinatorCOR,
@


1.9
log
@Change the names of the ProbMgr classes to Coordinator, etc.
@
text
@d37 1
a37 2
      theCoordinatorCOR =
         theOpn.getProblem ().getCoordinator ().getCoordinatorCOR ();
@


1.8
log
@Change the mname of the ProbCtr classes to ProbMgr in both Java and C++.
@
text
@d34 2
a35 2
      ProbMgrCOR theProbMgrCOR;
      String     theOpnName;
d37 2
a38 1
      theProbMgrCOR = theOpn.getProblem ().getProbMgr ().getProbMgrCOR ();
d40 1
a40 1
      theOpnName    = theOpn.getOperationName ();
d42 1
a42 1
      createMyCppOperation (theProbMgrCOR, theOpnName, theOpn);
d68 3
a70 3
      ProbMgrCOR theProbMgrCOR,
      String     theOpnName,
      Operation  theOpn);
@


1.7
log
@Continued implementation of the ProbCtr classes.
@
text
@d34 1
a34 1
      ProbCtrCOR theProbCtrCOR;
d37 1
a37 1
      theProbCtrCOR = theOpn.getProblem ().getProbCtr ().getProbCtrCOR ();
d41 1
a41 1
      createMyCppOperation (theProbCtrCOR, theOpnName, theOpn);
d67 1
a67 1
      ProbCtrCOR theProbCtrCOR,
@


1.6
log
@Minor revision.
@
text
@d34 1
a34 1
      ProblemCOR theProblemCOR;
d37 1
a37 1
      theProblemCOR = theOpn.getProblem ().getProblemCOR ();
d41 1
a41 1
      createMyCppOperation (theProblemCOR, theOpnName, theOpn);
d67 1
a67 1
      ProblemCOR theProblemCOR,
@


1.5
log
@Minor changes.
@
text
@d20 4
a23 4
//    RetainedObject
//       CppObjRep
//          ElementCOR
//             OperationCOR
@


1.4
log
@Name change.
@
text
@d49 1
a49 1
// setOperationName (...)
d61 1
a61 1
// createMyCppOperation (...)
@


1.3
log
@Changed name of Component to Entity.
@
text
@d22 1
a22 1
//          EntityCOR
d26 1
a26 1
final class OperationCOR extends EntityCOR
@


1.2
log
@Call-back infrastructure.
@
text
@d22 1
a22 1
//          ComponentCOR
d26 1
a26 1
final class OperationCOR extends ComponentCOR
@


1.1
log
@Numerous class name changes.
@
text
@d32 1
a32 1
   OperationCOR (ProblemCOR theProblemCOR, String theOpnName)
d34 8
a41 1
      createMyCppOperation (theProblemCOR, theOpnName);
d68 2
a69 1
      String     theOpnName);
@

