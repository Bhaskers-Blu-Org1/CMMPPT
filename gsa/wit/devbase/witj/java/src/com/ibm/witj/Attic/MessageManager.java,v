head	1.6;
access;
symbols;
locks; strict;
comment	@# @;


1.6
date	2008.09.19.16.29.51;	author rjw;	state dead;
branches;
next	1.5;

1.5
date	2008.09.19.15.52.57;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2008.09.16.20.39.16;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2008.09.16.18.57.29;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2008.09.15.21.24.56;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2008.09.15.16.20.39;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Class name change.
@
text
@
//==============================================================================
// WIT-J Java Source File MessageManager.java.
//
// Contains the declaration of class MessageManager.
//==============================================================================

package       com.ibm.witj;

import static com.ibm.witj.Utility.*;

//==============================================================================
// Class MessageManager
//
// Provides an interface WIT's message functions for a Session.
//
// Class Hierarchy:
//
//    RetainedObject
//       MessageManager
//==============================================================================

public final class MessageManager extends RetainedObject
{
//==============================================================================
// Public Methods
//==============================================================================

//------------------------------------------------------------------------------
// flushFile ()
//
// Flushes WIT's message file.
//------------------------------------------------------------------------------

   public void flushFile ()
      {
      mustBeActive ("MessageManager.flushFile");

      myMsgMgrCI.flushFile ();
      }

//------------------------------------------------------------------------------
// setQuiet (isQuietVal)
//
// Updater.
//------------------------------------------------------------------------------

   public void setQuiet (boolean isQuietVal)
      {
      mustBeActive ("MessageManager.setQuiet");

      myMsgMgrCI.setQuiet (isQuietVal);
      }

//------------------------------------------------------------------------------
// isQuiet ()
//
// Accessor.
//------------------------------------------------------------------------------

   public boolean isQuiet ()
      {
      mustBeActive ("MessageManager.isQuiet");

      return myMsgMgrCI.isQuiet ();
      }

//------------------------------------------------------------------------------
// toString ().
//
// Override from class Object.
//------------------------------------------------------------------------------

   public String toString ()
      {
      return "MessageManager";
      }

//------------------------------------------------------------------------------
// Wrappers for corresponding WIT API functions.
//------------------------------------------------------------------------------

   public void setMesgFileAccessMode (String theValue)
      {
      mustBeActive ("MessageManager.setMesgFileAccessMode");

      myMsgMgrCI.setMesgFileAccessMode (theValue);
      }

   public String getMesgFileAccessMode ()
      {
      mustBeActive ("MessageManager.getMesgFileAccessMode");

      return myMsgMgrCI.getMesgFileAccessMode ();
      }

   public void setMesgFileName (String theValue)
      {
      mustBeActive ("MessageManager.setMesgFileName");

      myMsgMgrCI.setMesgFileName (theValue);
      }

   public String getMesgFileName ()
      {
      mustBeActive ("MessageManager.getMesgFileName");

      return myMsgMgrCI.getMesgFileName ();
      }

   public void setMesgTimesPrint (int theMsgNo, int theInt)
      {
      mustBeActive ("MessageManager.setMesgTimesPrint");

      myMsgMgrCI.setMesgTimesPrint (theMsgNo, theInt);
      }

   public int getMesgTimesPrint (int theMsgNo)
      {
      mustBeActive ("MessageManager.getMesgTimesPrint");

      return myMsgMgrCI.getMesgTimesPrint (theMsgNo);
      }

   public void setMesgTimesPrint (MessageGroup theGroup, int theInt)
      {
      mustBeActive ("MessageManager.setMesgTimesPrint");

      myMsgMgrCI.setMesgTimesPrint (theGroup.getMsgNo (), theInt);
      }

   public int getMesgTimesPrint (MessageGroup theGroup)
      {
      mustBeActive ("MessageManager.getMesgTimesPrint");

      return myMsgMgrCI.getMesgTimesPrint (theGroup.getMsgNo ());
      }

//==============================================================================
// Package-Internal Constructor
//
// To be called only from theSession....
//==============================================================================

   MessageManager (Session theSession)
      {
      SessionCI theSessionCI;

      theSessionCI = theSession.getSessionCI ();

      myMsgMgrCI   = new MsgMgrCI (theSessionCI);
      }

//==============================================================================
// Package-Internal Methods
//==============================================================================

//------------------------------------------------------------------------------
// shutDown ()
//
// Override from class RetainedObject.
//------------------------------------------------------------------------------

   void shutDown ()
      {
      myMsgMgrCI.shutDown ();
      super     .shutDown ();
      }

//==============================================================================
// Private Fields
//==============================================================================

//------------------------------------------------------------------------------
// myMsgMgrCI.
//
// The C++ MsgMgr interface that belongs to this MessageManager.
//------------------------------------------------------------------------------

   private final MsgMgrCI myMsgMgrCI;

//==============================================================================
}
@


1.5
log
@Minor revision.
@
text
@@


1.4
log
@Allowed mesgTimesPrint to be set by message group.
@
text
@d43 1
a43 1
// setQuietMode (theValue)
d45 1
a45 1
// Mutator.
d48 1
a48 1
   public void setQuietMode (boolean theValue)
d50 1
a50 1
      mustBeActive ("MessageManager.setQuietMode");
d52 1
a52 1
      myMsgMgrCI.setQuietMode (theValue);
d56 1
a56 1
// getQuietMode ()
d61 1
a61 1
   public boolean getQuietMode ()
d63 1
a63 1
      mustBeActive ("MessageManager.getQuietMode");
d65 1
a65 1
      return myMsgMgrCI.getQuietMode ();
@


1.3
log
@Implemented the mesgTimesPrint attribute.
@
text
@d125 14
@


1.2
log
@Added the fileName msg attribute.
@
text
@d83 1
a83 1
   public void setFileAccessMode (String theValue)
d85 1
a85 1
      mustBeActive ("MessageManager.setFileAccessMode");
d87 1
a87 1
      myMsgMgrCI.setFileAccessMode (theValue);
d90 1
a90 1
   public String getFileAccessMode ()
d92 1
a92 1
      mustBeActive ("MessageManager.getFileAccessMode");
d94 1
a94 1
      return myMsgMgrCI.getFileAccessMode ();
d97 1
a97 1
   public void setFileName (String theValue)
d99 1
a99 1
      mustBeActive ("MessageManager.setFileName");
d101 1
a101 1
      myMsgMgrCI.setFileName (theValue);
d104 1
a104 1
   public String getFileName ()
d106 1
a106 1
      mustBeActive ("MessageManager.getFileName");
d108 15
a122 1
      return myMsgMgrCI.getFileName ();
@


1.1
log
@Class name changes.
@
text
@d97 14
@

