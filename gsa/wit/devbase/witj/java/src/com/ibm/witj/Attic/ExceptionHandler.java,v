head	1.3;
access;
symbols;
locks; strict;
comment	@# @;


1.3
date	2008.12.10.22.27.43;	author rjw;	state dead;
branches;
next	1.2;

1.2
date	2008.12.10.21.34.04;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2008.12.09.22.58.42;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Added class FatalException.
Removed class ExceptionHandler.
@
text
@
//==============================================================================
// WIT-J Java Source File ExceptionHandler.java.
//
// Contains the declaration of class ExceptionHandler.
//==============================================================================

package       com.ibm.witj;

import static com.ibm.witj.Utility.*;

//==============================================================================
// Class ExceptionHandler
//
// Noninstantiable class.
//
// Handles Throwables.
//==============================================================================

final class ExceptionHandler
{
//==============================================================================
// Package-Internal Methods
//==============================================================================

//------------------------------------------------------------------------------
// getWitjExceptionFor (theThrowable)
//
// Returns a WitjException suitable to be caught by the application program
// when theThrowable was caught by WIT-J.
//------------------------------------------------------------------------------

   static WitjException getWitjExceptionFor (Throwable theThrowable)
      {
      try
         {
         throw theThrowable;
         }

      catch (IntactException theIntactExc)
         {
         return theIntactExc;
         }

      catch (Throwable unexpThrowable)
         {
         witjFunctional = false;

         return new UnexpectedException (unexpThrowable);
         }
      }

//------------------------------------------------------------------------------
// Accessors.
//------------------------------------------------------------------------------

   static boolean witjIsFunctional ()
      {
      return witjFunctional;
      }

//==============================================================================
// Private Constructor.
//==============================================================================

   private ExceptionHandler ()
      {
      internalError (
         "   The constructor for class ExceptionHandler was invoked.");
      }

//==============================================================================
// Private Fields
//==============================================================================

//------------------------------------------------------------------------------
// witjFunctional
//
// WIT-J is considered to be is a functional state, iff witjFunctional is true.
//------------------------------------------------------------------------------

   private static boolean witjFunctional = true;

//==============================================================================
}
@


1.2
log
@Added method getWitjExceptionFor.
@
text
@@


1.1
log
@Initial implementation of class ExceptionHandler.
@
text
@d27 27
@

