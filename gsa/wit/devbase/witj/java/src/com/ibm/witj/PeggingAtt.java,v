head	1.4;
access;
symbols;
locks; strict;
comment	@# @;


1.4
date	2011.05.02.18.32.29;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2009.06.02.21.57.30;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2009.05.29.23.42.01;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2009.05.29.21.59.17;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Reduced heading comments.
@
text
@
//==============================================================================
// WIT-J Java Source File PeggingAtt.java.
//==============================================================================

package       com.ibm.witj;

import static com.ibm.witj.Utility.*;

//==============================================================================
// Enum PeggingAtt
//
// "Pegging Attribute"
// Identifies an attribute for pegging.
// Specifies one of the two forms of pegging:
//    Post-Implosion Pegging vs. Concurrent Pegging.
//==============================================================================

enum PeggingAtt
{
//==============================================================================
// Enum Constants
//==============================================================================

      CONS_VOL_PIP (0),
   CO_EXEC_VOL_PIP (1),
      EXEC_VOL_PIP (2),
      PROD_VOL_PIP (3),
      SIDE_VOL_PIP (4),
       SUB_VOL_PIP (5),
    SUPPLY_VOL_PIP (6),
      EXEC_VOL_CP  (7),
       SUB_VOL_CP  (8),
   ;

//==============================================================================
// Package Internal Methods
//==============================================================================

//------------------------------------------------------------------------------
// Accessors.
//------------------------------------------------------------------------------

   int getIndex ()
      {
      return myIndex;
      }

//==============================================================================
// Private Constructor
//==============================================================================

   private PeggingAtt (int theIdx)
      {
      myIndex = theIdx;
      }

//==============================================================================
// Private Fields
//==============================================================================

//------------------------------------------------------------------------------
// myIndex.
//
// The Index of this PeggingAtt.
// This value must match the int value of the C++ PeggingAtt with the same
// name.
//------------------------------------------------------------------------------

   private final int myIndex;

//==============================================================================
}
@


1.3
log
@Made pegging retrieval methods not use enum PeggingAtt.
@
text
@a3 2
//
// Contains the declaration of enum PeggingAtt.
@


1.2
log
@Revised pegging to use PeggingAtt in the public interface.
@
text
@d16 3
a18 1
// Indicates an attribute for Post-Implosion Pegging or Concurrent Pegging.
d21 1
a21 1
public enum PeggingAtt
d27 9
a35 9
      CONS_VOL_PIP (0, Part      .class),
   CO_EXEC_VOL_PIP (1, BopEntry  .class),
      EXEC_VOL_PIP (2, Operation .class),
      PROD_VOL_PIP (3, Part      .class),
      SIDE_VOL_PIP (4, Part      .class),
       SUB_VOL_PIP (5, Substitute.class),
    SUPPLY_VOL_PIP (6, Part      .class),
      EXEC_VOL_CP  (7, Operation .class),
       SUB_VOL_CP  (8, Substitute.class),
a38 23
// Public Methods
//==============================================================================

//------------------------------------------------------------------------------
// Accessors.
//------------------------------------------------------------------------------

   public Class <? extends Component> getComponentClass ()
      {
      try
         {
         notAllowedWhenTerminated ("PeggingAtt.getComponentClass");

         return myComponentClass;
         }

      catch (Throwable              theThrowable)
         {
         throw getExceptionToThrow (theThrowable);
         }
      }

//==============================================================================
d55 1
a55 1
   private PeggingAtt (int theIdx, Class <? extends Component> theCompClass)
d57 1
a57 2
      myIndex          = theIdx;
      myComponentClass = theCompClass;
a73 8
//------------------------------------------------------------------------------
// myComponentClass
//
// The Component class for this PeggingAtt.
//------------------------------------------------------------------------------

   private final Class <? extends Component> myComponentClass;

@


1.1
log
@Revised pegging methods.
@
text
@d19 1
a19 1
enum PeggingAtt
d25 9
a33 9
      CONS_VOL_PIP (0),
   CO_EXEC_VOL_PIP (1),
      EXEC_VOL_PIP (2),
      PROD_VOL_PIP (3),
      SIDE_VOL_PIP (4),
       SUB_VOL_PIP (5),
    SUPPLY_VOL_PIP (6),
      EXEC_VOL_CP  (7),
       SUB_VOL_CP  (8),
d37 23
d76 1
a76 1
   private PeggingAtt (int theIdx)
d78 2
a79 1
      myIndex = theIdx;
d96 8
@

