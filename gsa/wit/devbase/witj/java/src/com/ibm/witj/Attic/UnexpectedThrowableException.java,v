head	1.13;
access;
symbols;
locks; strict;
comment	@# @;


1.13
date	2008.12.22.23.15.51;	author rjw;	state dead;
branches;
next	1.12;

1.12
date	2008.12.22.20.21.39;	author rjw;	state Exp;
branches;
next	1.11;

1.11
date	2008.12.18.23.48.09;	author rjw;	state Exp;
branches;
next	1.10;

1.10
date	2008.12.18.20.39.34;	author rjw;	state Exp;
branches;
next	1.9;

1.9
date	2008.12.16.23.43.04;	author rjw;	state Exp;
branches;
next	1.8;

1.8
date	2008.12.16.16.13.31;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2008.12.16.15.19.21;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2008.12.15.21.40.51;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2008.12.15.15.35.35;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2008.12.11.23.39.51;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2008.12.11.21.54.03;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2008.12.11.21.37.16;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2008.12.11.20.48.52;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.13
log
@Changed some Java Exception class names.
@
text
@
//==============================================================================
// WIT-J Java Source File UnexpectedThrowableException.java.
//
// Contains the declaration of class UnexpectedThrowableException.
//==============================================================================

package       com.ibm.witj;

import static com.ibm.witj.Utility.*;

//==============================================================================
// Class UnexpectedThrowableException
//
// One kind of unchecked Exception thrown by WIT-J.
//
// When WIT-J throws an UnexpectedThrowableException, this indicates that:
//
// * An instance of an unexpected Throwable class was thrown from the Java side
//   of WIT-J.
// * This was apparently caused by a bug in WIT-J.
// * As a result of the throw, WIT-J is now in a non-functional state.
//   No further calls to WIT-J methods should be made for the rest of the
//   program process.
//
// Class Hierarchy:
//
// RuntimeException
//    WitjException
//       TerminalException
//          InternalErrorException
//             UnexpectedThrowableException
//==============================================================================

public final class UnexpectedThrowableException extends InternalErrorException
{
//==============================================================================
// Package-Internal Constructor
//==============================================================================

   UnexpectedThrowableException (Throwable theThrowable)
      {
      super (
         "   An instance of an unexpected Throwable class was thrown from the\n"
       + "   Java side of WIT-J:\n"
       + "\n"
       + "      " + theThrowable.getClass () + "\n");

      initCause (theThrowable);
      }

//==============================================================================
// Private Fields
//==============================================================================

//------------------------------------------------------------------------------
// serialVersionUID
//
// This field is required in order to avoid a compiler warning whenever an
// instance is constructed, because this class inherits from class Throwable,
// which implements the interface Serializable.
//------------------------------------------------------------------------------

   private static final long serialVersionUID = 1L;

//==============================================================================
}
@


1.12
log
@Split unrecoverable error testing from the rest of the tests.
@
text
@@


1.11
log
@Implemented class InternalErrorException.
@
text
@d44 4
a47 3
         "   An instance of an unexpected Throwable class\n"
       + "   (" + theThrowable.getClass () + ")\n"
       + "   was thrown from the Java side of WIT-J.\n");
@


1.10
log
@theProblem.performAction (theCommand)
@
text
@d31 2
a32 1
//          UnexpectedThrowableException
d35 1
a35 1
public final class UnexpectedThrowableException extends TerminalException
@


1.9
log
@Changed a Java class name: WitjAbortsException ==> TerminalException
@
text
@a36 27
// Public Methods
//==============================================================================

//------------------------------------------------------------------------------
// selfTest
//
// Tests this class:
// Causes a NullPointerException to be thrown within WIT-J, which causes an
// UnexpectedThrowableException to be thrown to the application program.
//------------------------------------------------------------------------------

   public static void selfTest ()
      {
      try
         {
         ElementMgr theElementMgr = null;

         theElementMgr.getElements ();
         }

      catch (Throwable theThrowable)
         {
         throw getWitjExceptionFor (theThrowable);
         }
      }

//==============================================================================
@


1.8
log
@Changed class name: NonFunctionalException ==> WitjAbortsException
@
text
@d30 1
a30 1
//       WitjAbortsException
d34 1
a34 1
public final class UnexpectedThrowableException extends WitjAbortsException
@


1.7
log
@Minor revision.
@
text
@d30 1
a30 1
//       NonFunctionalException
d34 1
a34 1
public final class UnexpectedThrowableException extends NonFunctionalException
@


1.6
log
@Implemented Java class UnexpectedCppExcException.
@
text
@d70 1
a70 3
            "\n"
       +    "\n"
       + "   An instance of an unexpected Throwable class\n"
d72 1
a72 9
       + "   was thrown from the Java side of WIT-J.\n"
       +    "\n"
       + "   This indicates a programming error in WIT-J.\n"
       +    "\n"
       + "   As a result of this Exception, "
       +    "WIT-J is now in a non-functional state. No\n"
       + "   further calls to WIT-J methods should be made for the rest of "
       +    "the program\n" 
       + "   process.\n");
@


1.5
log
@Minor revision.
@
text
@d19 2
a20 2
// * An instance of an unexpected Throwable class was thrown within WIT-J and
//   caught by WIT-J.
d22 3
a24 2
// * As a result of the throw, WIT-J is now in an invalid state. No further
//   calls to WIT-J methods should be made for the rest of the program process.
d73 2
a74 1
       + "   (" + theThrowable.getClass () + ") was thrown within WIT-J.\n"
@


1.4
log
@Implementated class AssertionErrorException.
@
text
@d27 4
a30 6
//    Throwable
//       Exception
//          RuntimeException
//             WitjException
//                NonFunctionalException
//                   UnexpectedThrowableException
d71 2
a72 2
       + "   An instance of an unexpected Throwable class was thrown within "
       +    "WIT-J.\n"
@


1.3
log
@Changed class name: FatalException ==> NonFunctionalException
@
text
@d20 1
a20 1
//   and caught by WIT-J.
d38 27
d68 1
a68 1
   UnexpectedThrowableException (Throwable cause)
d73 2
a74 2
       + "   A try block in WIT-J has caught an instance "
       +    "of an unexpected Throwable class.\n"
d84 1
a84 1
      initCause (cause);
@


1.2
log
@Added code to test WIT-J's response to catching an instance of an
unexpected Throwable class.
@
text
@d31 1
a31 1
//                FatalException
d35 1
a35 1
public final class UnexpectedThrowableException extends FatalException
@


1.1
log
@Changed class name: UnexpectedException ==> UnexpectedThrowableException.
Improved the detail message for UnexpectedThrowableException.
@
text
@d49 1
a49 1
       + "   This indicates an programming error in WIT-J.\n"
@

