head	1.37;
access;
symbols;
locks; strict;
comment	@# @;


1.37
date	2011.05.02.18.32.35;	author rjw;	state Exp;
branches;
next	1.36;

1.36
date	2009.07.23.18.26.41;	author rjw;	state Exp;
branches;
next	1.35;

1.35
date	2009.07.23.17.47.22;	author rjw;	state Exp;
branches;
next	1.34;

1.34
date	2009.07.22.22.18.30;	author rjw;	state Exp;
branches;
next	1.33;

1.33
date	2009.07.22.21.49.48;	author rjw;	state Exp;
branches;
next	1.32;

1.32
date	2009.07.21.22.35.24;	author rjw;	state Exp;
branches;
next	1.31;

1.31
date	2009.07.21.19.09.17;	author rjw;	state Exp;
branches;
next	1.30;

1.30
date	2009.07.06.20.43.24;	author rjw;	state Exp;
branches;
next	1.29;

1.29
date	2009.05.12.15.57.59;	author rjw;	state dead;
branches;
next	1.28;

1.28
date	2009.04.15.16.29.28;	author rjw;	state Exp;
branches;
next	1.27;

1.27
date	2009.04.13.19.51.41;	author rjw;	state Exp;
branches;
next	1.26;

1.26
date	2009.04.10.23.51.14;	author rjw;	state Exp;
branches;
next	1.25;

1.25
date	2009.01.05.20.21.35;	author rjw;	state Exp;
branches;
next	1.24;

1.24
date	2009.01.02.23.49.46;	author rjw;	state Exp;
branches;
next	1.23;

1.23
date	2009.01.02.23.44.19;	author rjw;	state Exp;
branches;
next	1.22;

1.22
date	2008.12.24.22.59.46;	author rjw;	state Exp;
branches;
next	1.21;

1.21
date	2008.12.24.00.18.56;	author rjw;	state Exp;
branches;
next	1.20;

1.20
date	2008.12.22.23.15.51;	author rjw;	state Exp;
branches;
next	1.19;

1.19
date	2008.12.22.22.26.42;	author rjw;	state Exp;
branches;
next	1.18;

1.18
date	2008.12.18.23.48.09;	author rjw;	state Exp;
branches;
next	1.17;

1.17
date	2008.12.18.23.03.43;	author rjw;	state Exp;
branches;
next	1.16;

1.16
date	2008.12.16.23.43.05;	author rjw;	state Exp;
branches;
next	1.15;

1.15
date	2008.12.16.23.00.57;	author rjw;	state Exp;
branches;
next	1.14;

1.14
date	2008.12.16.22.53.13;	author rjw;	state Exp;
branches;
next	1.13;

1.13
date	2008.12.16.16.13.31;	author rjw;	state Exp;
branches;
next	1.12;

1.12
date	2008.12.15.23.01.42;	author rjw;	state Exp;
branches;
next	1.11;

1.11
date	2008.12.15.21.40.51;	author rjw;	state Exp;
branches;
next	1.10;

1.10
date	2008.12.15.15.35.35;	author rjw;	state Exp;
branches;
next	1.9;

1.9
date	2008.12.11.23.39.51;	author rjw;	state Exp;
branches;
next	1.8;

1.8
date	2008.12.11.21.54.03;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2008.12.11.20.48.52;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2008.12.11.17.01.29;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2008.12.10.23.10.15;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2008.12.10.22.27.44;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2008.12.10.19.20.41;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2008.12.09.22.23.58;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2008.12.09.18.38.19;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.37
log
@Reduced heading comments.
@
text
@
//==============================================================================
// WIT-J Java Source File WitjException.java.
//==============================================================================

package       com.ibm.witj;

import static com.ibm.witj.Utility.*;

//==============================================================================
// Class WitjException
//
// An unchecked Exception thrown by WIT-J.
//
// Class Hierarchy:
//
// java.lang.RuntimeException
//    WitjException
//       StatusQuoException
//       TerminalException
//          TerminalAppException
//          ReadDataException
//          BadCharacterException
//          OutOfMemoryException
//          InternalErrorException
//==============================================================================

public abstract class WitjException extends RuntimeException
{
//==============================================================================
// Package-Internal Constructor
//==============================================================================

   WitjException (String message)
      {
      super (message);
      }

//==============================================================================
// Package-Internal Methods
//==============================================================================

//------------------------------------------------------------------------------
// getExceptionToThrow (theThrowable)
//
// Returns a WitjException to be thrown when theThrowable was caught by WIT-J.
//------------------------------------------------------------------------------

   static WitjException getExceptionToThrow (Throwable theThrowable)
      {
      try
         {
         throw theThrowable;
         }


      catch (WitjException theWitjExc)
         {
         return theWitjExc;
         }

      catch (OutOfMemoryError theMemoryErr)
         {
         return new OutOfMemoryException (theMemoryErr);
         }

      catch (AssertionError theAssertErr)
         {
         return
            InternalErrorException.
               newInstanceForJavaAssertionError (theAssertErr);
         }

      catch (UnsatisfiedLinkError theLinkErr)
         {
         return
            TerminalAppException.
               newInstanceForUnsatisfiedLink (theLinkErr);
         }

      catch (Throwable unexpThrowable)
         {
         return
            InternalErrorException.
               newInstanceForUnexpJavaThrowable (unexpThrowable);
         }
      }

//==============================================================================
// Private methods
//==============================================================================

//------------------------------------------------------------------------------
// mentionExceptionsForCpp ()
//
// This method is never called.
// The purpose of this method is to force the Exception subclasses that it
// mentions to be compiled, so that the Exceptions that they define will be
// available to be constructed and thrown from C++.
//------------------------------------------------------------------------------

   private void mentionExceptionsForCpp ()
      {
      ReadDataException     theReadDataExc;
      BadCharacterException theBadCharacterExc;
      }

//==============================================================================
}
@


1.36
log
@Changed name of class TerminalAppErrorException to TerminalAppException.
@
text
@a3 2
//
// Contains the declaration of class WitjException.
@


1.35
log
@Switched two exceptions from class InternalErrorException to
   TerminalAppErrorException.
@
text
@d23 1
a23 1
//          TerminalAppErrorException
d79 1
a79 1
            TerminalAppErrorException.
@


1.34
log
@Made WIT-j catch and explain UnsatisfiedLinkErrors.
@
text
@d79 1
a79 1
            InternalErrorException.
d106 2
a107 3
      TerminalAppErrorException theAppErrorExc;
      ReadDataException         theReadDataExc;
      BadCharacterException     theBadCharacterExc;
@


1.33
log
@Made WIT-J throw an InternalErrorException instead of a
   TerminalAppErrorException when the native library fails to load.
@
text
@d80 1
a80 1
               newInstanceForUnexpJavaThrowable (theLinkErr);
@


1.32
log
@Minor tweak.
@
text
@d76 7
d106 3
a108 2
      ReadDataException     theReadDataExc;
      BadCharacterException theBadCharacterExc;
@


1.31
log
@Replaced class WitSevereErrorException with class TerminalAppErrorException.
@
text
@d99 2
a100 3
      TerminalAppErrorException theTerminalAppErrorException;
      ReadDataException         theReadDataExc;
      BadCharacterException     theBadCharacterExc;
@


1.30
log
@Changed class name GeneralException to WitjException.
@
text
@d23 1
a23 1
//          WitSevereErrorException
d99 3
a101 3
      WitSevereErrorException theWitSevereErrorExc;
      ReadDataException       theReadDataExc;
      BadCharacterException   theBadCharacterExc;
@


1.29
log
@Changed name of Java class WitjException to GeneralException.
@
text
@d19 1
a19 1
// RuntimeException (java.lang.RuntimeException)
a22 2
//          OutOfMemoryException
//          InternalErrorException
d26 2
d33 9
d46 1
a46 1
// getWitjExceptionFor (theThrowable)
d48 1
a48 2
// Returns a WitjException suitable to be caught by the application program
// when theThrowable was caught by WIT-J.
d51 1
a51 1
   static WitjException getWitjExceptionFor (Throwable theThrowable)
a84 9
// Package-Internal Constructor
//==============================================================================

   WitjException (String message)
      {
      super (message);
      }

//==============================================================================
@


1.28
log
@Changed the name of Java class NonUTF8DataFileException to
   BadCharacterException.
@
text
@@


1.27
log
@Detection of  non-UFT-8 strings.
@
text
@d27 1
a27 1
//          NonUTF8DataFileException
d100 3
a102 3
      WitSevereErrorException  theWitSevereErrorExc;
      ReadDataException        theReadDataExc;
      NonUTF8DataFileException theNonUTF8DataFileExc;
@


1.26
log
@Bad data file character detection.
@
text
@d27 1
a27 1
//          BadCharacterException
d100 3
a102 3
      WitSevereErrorException theWitSevereErrorExc;
      ReadDataException       theReadDataExc;
      BadCharacterException   theBadCharacterExc;
@


1.25
log
@Added code to handle errors in the execution of readData.
@
text
@d27 1
d94 1
a94 1
// mentions to be compiled so that the Exceptions that they define will be
d101 2
a102 1
      ReadDataException       theReadData1xc;
@


1.24
log
@Revised some comments.
@
text
@d19 1
a19 1
// RuntimeException
d26 1
d100 1
@


1.23
log
@Collapsed the subclasses of InternalErrorException into InternalErrorException.
@
text
@d24 1
a25 1
//          InternalErrorException
@


1.22
log
@Added code to handle severe errors from WIT.
@
text
@a25 5
//             JavaAssertionException
//             UnexpJavaThrowableException
//             CppAssertionException
//             JniExcException
//             UnexpCppExcException
d61 3
a63 1
         return new JavaAssertionException (theAssertErr);
d68 3
a70 1
         return new UnexpJavaThrowableException (unexpThrowable);
a98 3
      CppAssertionException   theCppAssertionExc;
      JniExcException         theJniExcException;
      UnexpCppExcException    theUnexpCppExcExc;
@


1.21
log
@Added code to handle Java exceptions raised during the execution of JNI
   functions.
@
text
@d24 1
d99 4
a102 3
      CppAssertionException theCppAssertionExc;
      JniExcException       theJniExcException;
      UnexpCppExcException  theUnexpCppExcExc;
@


1.20
log
@Changed some Java Exception class names.
@
text
@d28 1
d99 1
@


1.19
log
@Implemented Java class OutOfMemoryException.
@
text
@d25 4
a28 4
//             AssertionErrorException
//             CppAssertFailureException
//             UnexpectedCppExcException
//             UnexpectedThrowableException
d64 1
a64 1
         return new AssertionErrorException (theAssertErr);
d69 1
a69 1
         return new UnexpectedThrowableException (unexpThrowable);
d97 2
a98 2
      CppAssertFailureException theCppAssertFailureExc;
      UnexpectedCppExcException theUnexpectedCppExcExc;
@


1.18
log
@Implemented class InternalErrorException.
@
text
@d23 1
d57 5
@


1.17
log
@Allowed all WitjExceptions to pass through the canonical try-block.
@
text
@d23 5
a27 4
//          AssertionErrorException
//          CppAssertFailureException
//          UnexpectedCppExcException
//          UnexpectedThrowableException
@


1.16
log
@Changed a Java class name: WitjAbortsException ==> TerminalException
@
text
@d49 2
a50 1
      catch (StatusQuoException theStatusQuoExc)
d52 1
a52 1
         return theStatusQuoExc;
a59 10
      catch (CppAssertFailureException theCppAssertFailureExc)
         {
         return theCppAssertFailureExc;
         }

      catch (UnexpectedCppExcException theUnexpectedCppExcExc)
         {
         return theUnexpectedCppExcExc;
         }

d76 19
@


1.15
log
@C++ assertion exceptions.
@
text
@d22 1
a22 1
//       WitjAbortsException
@


1.14
log
@C++ assertion exceptions.
@
text
@a43 2
      CppAssertFailureException theExc;

d59 5
@


1.13
log
@Changed class name: NonFunctionalException ==> WitjAbortsException
@
text
@d44 2
@


1.12
log
@Initial implementation of java class CppAssertFailureException.
@
text
@d22 1
a22 1
//       NonFunctionalException
@


1.11
log
@Implemented Java class UnexpectedCppExcException.
@
text
@d24 1
@


1.10
log
@Minor revision.
@
text
@d24 1
d58 5
@


1.9
log
@Implementated class AssertionErrorException.
@
text
@d19 6
a24 8
//    Throwable
//       Exception
//          RuntimeException
//             WitjException
//                StatusQuoException
//                NonFunctionalException
//                   AssertionErrorException
//                   UnexpectedThrowableException
@


1.8
log
@Changed class name: FatalException ==> NonFunctionalException
@
text
@d25 1
d32 34
@


1.7
log
@Changed class name: UnexpectedException ==> UnexpectedThrowableException.
Improved the detail message for UnexpectedThrowableException.
@
text
@d24 1
a24 1
//                FatalException
@


1.6
log
@Changed name of class IntactException to StatusQuoException.
@
text
@d25 1
a25 1
//                   UnexpectedException
@


1.5
log
@Added canonical try blocks to all public methods of class Problem.
@
text
@d23 1
a23 1
//                IntactException
@


1.4
log
@Added class FatalException.
Removed class ExceptionHandler.
@
text
@a30 29
// Package-Internal Methods
//==============================================================================

//------------------------------------------------------------------------------
// getInstanceFor (theThrowable)
//
// Returns a WitjException suitable to be caught by the application program
// when theThrowable was caught by WIT-J.
//------------------------------------------------------------------------------

   static WitjException getInstanceFor (Throwable theThrowable)
      {
      try
         {
         throw theThrowable;
         }

      catch (IntactException theIntactExc)
         {
         return theIntactExc;
         }

      catch (Throwable unexpThrowable)
         {
         return new UnexpectedException (unexpThrowable);
         }
      }

//==============================================================================
@


1.3
log
@Changed class names:
   HarmlessException ==> IntactException
   UnknownException  ==> UnexpectedException
@
text
@d24 2
a25 1
//                UnexpectedException
d31 29
@


1.2
log
@Initial implementation of class UnknownException.
@
text
@d23 2
a24 2
//                HarmlessException
//                UnknownException
@


1.1
log
@Replaced standard Exceptions with HarmlessExceptions in throw statements.
@
text
@d24 1
@

