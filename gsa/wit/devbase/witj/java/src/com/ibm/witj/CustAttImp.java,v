head	1.18;
access;
symbols;
locks; strict;
comment	@# @;


1.18
date	2011.05.04.22.15.42;	author rjw;	state Exp;
branches;
next	1.17;

1.17
date	2011.05.02.18.32.23;	author rjw;	state Exp;
branches;
next	1.16;

1.16
date	2011.04.22.20.00.24;	author rjw;	state Exp;
branches;
next	1.15;

1.15
date	2011.02.25.16.07.06;	author rjw;	state Exp;
branches;
next	1.14;

1.14
date	2010.04.13.23.10.43;	author rjw;	state Exp;
branches;
next	1.13;

1.13
date	2010.04.12.22.28.18;	author rjw;	state Exp;
branches;
next	1.12;

1.12
date	2010.04.09.22.13.16;	author rjw;	state Exp;
branches;
next	1.11;

1.11
date	2009.09.29.19.09.24;	author rjw;	state Exp;
branches;
next	1.10;

1.10
date	2009.09.21.22.06.30;	author rjw;	state Exp;
branches;
next	1.9;

1.9
date	2009.06.15.15.54.11;	author rjw;	state Exp;
branches;
next	1.8;

1.8
date	2009.05.05.20.17.06;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2009.05.05.17.56.47;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2009.05.04.21.49.57;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2009.04.08.19.39.26;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2009.04.08.19.18.02;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2009.04.08.17.57.03;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2009.04.01.16.34.50;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2009.03.30.21.07.31;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.18
log
@setValue ==> set
getValue ==> get
@
text
@
//==============================================================================
// WIT-J Java Source File CustAttImp.java.
//==============================================================================

package       com.ibm.witj;

import static com.ibm.witj.Utility  .*;
import static com.ibm.witj.Attribute.*;

//==============================================================================
// Class CustAttImp
//
// "Customized Attribute Implementation."
// An AttImp that operates in a specific, customized way.
//
// Class Hierarchy:
//
// PreservedInternal
//    AttImp
//       CustAttImp
//          {Anonymous Inner Classes}
//==============================================================================

abstract class CustAttImp extends AttImp
{
//==============================================================================
// Package-Internal Methods
//==============================================================================

//------------------------------------------------------------------------------
// buildInstances (theCoord)
//
// Constructs all of the CustAttImps that are to belong to theCoord.
// They are all anonymous class instances.
//------------------------------------------------------------------------------

   static void buildInstances (Coordinator theCoord)
      {
      //------------------------------------------------------------------------

      new CustAttImp (bomIndex, theCoord)
         {
         int getInt (Component theComp)
            {
            return theComp.asBomEntry ().getBomEntryCOR ().getBomIndex ();
            }
         };

      //------------------------------------------------------------------------

      new CustAttImp (bopIndex, theCoord)
         {
         int getInt (Component theComp)
            {
            return theComp.asBopEntry ().getBopEntryCOR ().getBopIndex ();
            }
         };

      //------------------------------------------------------------------------

      new CustAttImp (cumShipBounds, theCoord)
         {
         };

      //------------------------------------------------------------------------

      new CustAttImp (demandName, theCoord)
         {
         void setString (Component theComp, String theValue)
            {
            theComp.asDemand ().setDemandName (theValue);
            }

         String getString (Component theComp)
            {
            return theComp.asDemand ().getDemandName ();
            }
         };

      //------------------------------------------------------------------------

      new CustAttImp (execBounds, theCoord)
         {
         };

      //------------------------------------------------------------------------

      new CustAttImp (nPeriods, theCoord)
         {
         void setInt (Component theComp, int theValue)
            {
            if (theComp.getCoordinator ().hasPartsOrOperations ())
               {
               throw
                  new StatusQuoException (
                     "   The set method was called for Attribute \"nPeriods\"\n"
                   + "   in a Problem that has one or more Parts or Operations."
                      );
               }

            theComp.getCoordinator ().getProblem ().setNPeriods (theValue);
            }

         int getInt (Component theComp)
            {
            return theComp.asProblem ().getNPeriods ();
            }
         };

      //------------------------------------------------------------------------

      new CustAttImp (operationName, theCoord)
         {
         void setString (Component theComp, String theValue)
            {
            theComp.asOperation ().setOperationName (theValue);
            }

         String getString (Component theComp)
            {
            return theComp.asOperation ().getOperationName ();
            }
         };

      //------------------------------------------------------------------------

      new CustAttImp (partName, theCoord)
         {
         void setString (Component theComp, String theValue)
            {
            theComp.asPart ().setPartName (theValue);
            }

         String getString (Component theComp)
            {
            return theComp.asPart ().getPartName ();
            }
         };

      //------------------------------------------------------------------------

      new CustAttImp (stockBounds, theCoord)
         {
         };

      //------------------------------------------------------------------------

      new CustAttImp (subIndex, theCoord)
         {
         int getInt (Component theComp)
            {
            return theComp.asSubstitute ().getSubstituteCOR ().getSubIndex ();
            }
         };

      //------------------------------------------------------------------------
      }

//==============================================================================
// Private Constructor
//==============================================================================

   private CustAttImp (Attribute <?> theAtt, Coordinator theCoord)
      {
      super (theAtt, theCoord);

      theCoord.store (this);
      }

//==============================================================================
}
@


1.17
log
@Reduced heading comments.
@
text
@d97 1
a97 2
                     "   The setValue method was called for Attribute "
                   +    "\"nPeriods\"\n"
@


1.16
log
@Cleared up some of the code that was flagged with warnings by Eclipse.
@
text
@a3 2
//
// Contains the declaration of class CustAttImp.
@


1.15
log
@Moved GlobalAspect responsibilities to class Problem.
Removed class GlobalAspect.
@
text
@d10 2
a11 5
import static com.ibm.witj.Utility    .*;
import static com.ibm.witj.Attribute  .*;
import static com.ibm.witj.CompClassID.*;

import       java.util.*;
@


1.14
log
@Implemented String StdAttImps.
@
text
@d108 1
a108 1
            theComp.asGlobalAspect ().setNPeriods (theValue);
d113 1
a113 1
            return theComp.asGlobalAspect ().getNPeriods ();
@


1.13
log
@Multi-Obj Mode
@
text
@a118 22
      new CustAttImp (objectiveListSpec, theCoord)
         {
         void setString (Component theComp, String theValue)
            {
            theComp.
               asGlobalAspect ().
                  getGlobalAspectCOR ().
                     setObjectiveListSpec (theValue);
            }

         String getString (Component theComp)
            {
            return
               theComp.
                  asGlobalAspect ().
                     getGlobalAspectCOR ().
                        getObjectiveListSpec ();
            }
         };

      //------------------------------------------------------------------------

a148 22
      new CustAttImp (solverLogFileName, theCoord)
         {
         void setString (Component theComp, String theValue)
            {
            theComp.
               asGlobalAspect ().
                  getGlobalAspectCOR ().
                     setSolverLogFileName (theValue);
            }

         String getString (Component theComp)
            {
            return
               theComp.
                  asGlobalAspect ().
                     getGlobalAspectCOR ().
                        getSolverLogFileName ();
            }
         };

      //------------------------------------------------------------------------

a163 15

      new CustAttImp (title, theCoord)
         {
         void setString (Component theComp, String theValue)
            {
            theComp.asGlobalAspect ().getGlobalAspectCOR ().setTitle (theValue);
            }

         String getString (Component theComp)
            {
            return theComp.asGlobalAspect ().getGlobalAspectCOR ().getTitle ();
            }
         };

      //------------------------------------------------------------------------
@


1.12
log
@Minor revision.
@
text
@d119 22
@


1.11
log
@Implemented class PreservedInternal and made several classes extend it
   instead of class PreservedObject.
@
text
@d40 1
d45 1
a45 35
      buildBomIndexAttImp           (theCoord);
      buildBopIndexAttImp           (theCoord);
      buildDemandNameAttImp         (theCoord);
      buildNPeriodsAttImp           (theCoord);
      buildOperationNameAttImp      (theCoord);
      buildPartNameAttImp           (theCoord);
      buildSolverLogFileNameAttImp  (theCoord);
      buildSubIndexAttImp           (theCoord);
      buildTitleAttImp              (theCoord);

      new CustAttImp (cumShipBounds, theCoord) {};
      new CustAttImp (execBounds,    theCoord) {};
      new CustAttImp (stockBounds,   theCoord) {};
      }

//==============================================================================
// Private Constructor
//==============================================================================

   private CustAttImp (Attribute <?> theAtt, Coordinator theCoord)
      {
      super (theAtt, theCoord);

      theCoord.store (this);
      }

//==============================================================================
// Private Methods
//==============================================================================

//------------------------------------------------------------------------------
// build{AttName}AttImp methods
//
// Each of these methods constructs the indicated CustAttImp.
//------------------------------------------------------------------------------
a46 2
   static void buildBomIndexAttImp (Coordinator theCoord)
      {
a53 1
      }
d55 2
a56 2
   static void buildBopIndexAttImp (Coordinator theCoord)
      {
a63 1
      }
d65 8
a72 2
   static void buildDemandNameAttImp (Coordinator theCoord)
      {
a84 1
      }
d86 8
a93 2
   static void buildNPeriodsAttImp (Coordinator theCoord)
      {
a115 1
      }
d117 2
a118 2
   static void buildOperationNameAttImp (Coordinator theCoord)
      {
a130 1
      }
d132 2
a133 2
   static void buildPartNameAttImp (Coordinator theCoord)
      {
a145 1
      }
d147 2
a148 2
   static void buildSolverLogFileNameAttImp (Coordinator theCoord)
      {
a167 1
      }
d169 8
a176 2
   static void buildSubIndexAttImp (Coordinator theCoord)
      {
a183 1
      }
d185 2
a186 2
   static void buildTitleAttImp (Coordinator theCoord)
      {
d199 13
@


1.10
log
@Removed static field staticCoordForBuild.
@
text
@d24 1
a24 1
// PreservedObject
@


1.9
log
@Replaced public accessor methods for the Attributes with piublic fields.
@
text
@d44 13
a56 17
      staticCoordForBuild = theCoord;

      buildBomIndexAttImp          ();
      buildBopIndexAttImp          ();
      buildDemandNameAttImp        ();
      buildNPeriodsAttImp          ();
      buildOperationNameAttImp     ();
      buildPartNameAttImp          ();
      buildSolverLogFileNameAttImp ();
      buildSubIndexAttImp          ();
      buildTitleAttImp             ();

      new CustAttImp (cumShipBounds) {};
      new CustAttImp (execBounds)    {};
      new CustAttImp (stockBounds)   {};

      staticCoordForBuild = null;
d63 1
a63 1
   private CustAttImp (Attribute <?> theAtt)
d65 1
a65 1
      super (theAtt, staticCoordForBuild);
d67 1
a67 1
      staticCoordForBuild.store (this);
d80 1
a80 1
   static void buildBomIndexAttImp ()
d82 1
a82 1
      new CustAttImp (bomIndex)
d91 1
a91 1
   static void buildBopIndexAttImp ()
d93 1
a93 1
      new CustAttImp (bopIndex)
d102 1
a102 1
   static void buildDemandNameAttImp ()
d104 1
a104 1
      new CustAttImp (demandName)
d118 1
a118 1
   static void buildNPeriodsAttImp ()
d120 1
a120 1
      new CustAttImp (nPeriods)
d144 1
a144 1
   static void buildOperationNameAttImp ()
d146 1
a146 1
      new CustAttImp (operationName)
d160 1
a160 1
   static void buildPartNameAttImp ()
d162 1
a162 1
      new CustAttImp (partName)
d176 1
a176 1
   static void buildSolverLogFileNameAttImp ()
d178 1
a178 1
      new CustAttImp (solverLogFileName)
d199 1
a199 1
   static void buildSubIndexAttImp ()
d201 1
a201 1
      new CustAttImp (subIndex)
d210 1
a210 1
   static void buildTitleAttImp ()
d212 1
a212 1
      new CustAttImp (title)
a226 13
// Private Fields
//==============================================================================
 
//------------------------------------------------------------------------------
// staticCoordForBuild
//
// During the execution of buildInstances (theCoord), staticCoordForBuild is the
// Coordinator with which it was called; otherwise staticCoordForBuild is null.
//------------------------------------------------------------------------------

   private static Coordinator staticCoordForBuild = null;

//==============================================================================
@


1.8
log
@Changed name of Java class RetainedObject to PreservedObject.
@
text
@d56 3
a58 3
      new CustAttImp (cumShipBounds ()) {};
      new CustAttImp (execBounds    ()) {};
      new CustAttImp (stockBounds   ()) {};
d86 1
a86 1
      new CustAttImp (bomIndex ())
d97 1
a97 1
      new CustAttImp (bopIndex ())
d108 1
a108 1
      new CustAttImp (demandName ())
d124 1
a124 1
      new CustAttImp (nPeriods ())
d150 1
a150 1
      new CustAttImp (operationName ())
d166 1
a166 1
      new CustAttImp (partName ())
d182 1
a182 1
      new CustAttImp (solverLogFileName ())
d205 1
a205 1
      new CustAttImp (subIndex ())
d216 1
a216 1
      new CustAttImp (title ())
@


1.7
log
@Made theAttribute.appliesTo (...) based on data on the Java side.
@
text
@d24 1
a24 1
// RetainedObject
@


1.6
log
@Moved the iAmModifiable field to AttID class.
@
text
@a36 9
// Overrides from class AttImp.
//------------------------------------------------------------------------------

   final boolean appliesTo (CompClassID theCompClassID)
      {
      return (theCompClassID == myCompClassID);
      }

//------------------------------------------------------------------------------
d56 3
a58 3
      new CustAttImp (DEMAND,    cumShipBounds ()) {};
      new CustAttImp (OPERATION, execBounds    ()) {};
      new CustAttImp (PART,      stockBounds   ()) {};
d67 1
a67 1
   private CustAttImp (CompClassID theCompClassID, Attribute <?> theAtt)
a70 2
      myCompClassID = theCompClassID;

d86 1
a86 1
      new CustAttImp (BOM_ENTRY, bomIndex ())
d97 1
a97 1
      new CustAttImp (BOP_ENTRY, bopIndex ())
d108 1
a108 1
      new CustAttImp (DEMAND, demandName ())
d124 1
a124 1
      new CustAttImp (GLOBAL_ASPECT, nPeriods ())
d150 1
a150 1
      new CustAttImp (OPERATION, operationName ())
d166 1
a166 1
      new CustAttImp (PART, partName ())
d182 1
a182 1
      new CustAttImp (GLOBAL_ASPECT, solverLogFileName ())
d205 1
a205 1
      new CustAttImp (SUBSTITUTE, subIndex ())
d216 1
a216 1
      new CustAttImp (GLOBAL_ASPECT, title ())
a234 9
// myCompClassID
//
// Identifies the Component class to which this CustAttImp applies.
// A CustAttImp applies to only one Component class.
//------------------------------------------------------------------------------

   private final CompClassID myCompClassID;

//------------------------------------------------------------------------------
@


1.5
log
@Added modifiable field to class CustAttImp.
@
text
@a45 7

   final boolean isModifiable ()
      {
      return modifiable;
      }

//------------------------------------------------------------------------------
d65 3
a67 3
      new CustAttImp (DEMAND,    cumShipBounds (), true) {};
      new CustAttImp (OPERATION, execBounds    (), true) {};
      new CustAttImp (PART,      stockBounds   (), true) {};
d76 1
a76 4
   private CustAttImp (
         CompClassID   theCompClassID,
         Attribute <?> theAtt,
         boolean       toBeModifiable)
a80 1
      modifiable    = toBeModifiable;
d97 1
a97 1
      new CustAttImp (BOM_ENTRY, bomIndex (), false)
d108 1
a108 1
      new CustAttImp (BOP_ENTRY, bopIndex (), false)
d119 1
a119 1
      new CustAttImp (DEMAND, demandName (), true)
d135 1
a135 1
      new CustAttImp (GLOBAL_ASPECT, nPeriods (), true)
d161 1
a161 1
      new CustAttImp (OPERATION, operationName (), true)
d177 1
a177 1
      new CustAttImp (PART, partName (), true)
d193 1
a193 1
      new CustAttImp (GLOBAL_ASPECT, solverLogFileName (), true)
d216 1
a216 1
      new CustAttImp (SUBSTITUTE, subIndex (), false)
d227 1
a227 1
      new CustAttImp (GLOBAL_ASPECT, title (), true)
a254 7
// True, iff the corresponding setValue method(s) of class Component can validly
// be invoked for this CustAttImp's Attribute.
//------------------------------------------------------------------------------

   private final boolean modifiable;

//------------------------------------------------------------------------------
@


1.4
log
@Made some methods final.
@
text
@d46 7
d72 3
a74 3
      buildBoundSetAttImp (DEMAND,    cumShipBounds ());
      buildBoundSetAttImp (OPERATION, execBounds    ());
      buildBoundSetAttImp (PART,      stockBounds   ());
d83 4
a86 1
   private CustAttImp (CompClassID theCompClassID, Attribute <?> theAtt)
d91 1
d108 1
a108 1
      new CustAttImp (BOM_ENTRY, bomIndex ())
a109 5
         boolean isModifiable ()
            {
            return false;
            }

d119 1
a119 1
      new CustAttImp (BOP_ENTRY, bopIndex ())
a120 5
         boolean isModifiable ()
            {
            return false;
            }

d130 1
a130 1
      new CustAttImp (DEMAND, demandName ())
a131 5
         boolean isModifiable ()
            {
            return true;
            }

d146 1
a146 1
      new CustAttImp (GLOBAL_ASPECT, nPeriods ())
a147 5
         boolean isModifiable ()
            {
            return true;
            }

d172 1
a172 1
      new CustAttImp (OPERATION, operationName ())
a173 5
         boolean isModifiable ()
            {
            return true;
            }

d188 1
a188 1
      new CustAttImp (PART, partName ())
a189 5
         boolean isModifiable ()
            {
            return true;
            }

d204 1
a204 1
      new CustAttImp (GLOBAL_ASPECT, solverLogFileName ())
a205 5
         boolean isModifiable ()
            {
            return true;
            }

d227 1
a227 1
      new CustAttImp (SUBSTITUTE, subIndex ())
a228 5
         boolean isModifiable ()
            {
            return false;
            }

d238 1
a238 1
      new CustAttImp (GLOBAL_ASPECT, title ())
a239 5
         boolean isModifiable ()
            {
            return true;
            }

a251 20
//------------------------------------------------------------------------------
// buildBoundSetAttImp (theCompClassID, theAtt)
//
// Constructs a CustAttImp for a Bound Set attribute specified by theAtt,
// that applies to the Component class identified by theCompClassID.
//------------------------------------------------------------------------------

   private static void buildBoundSetAttImp (
         CompClassID          theCompClassID,
         Attribute <BoundSet> theAtt)
      {
      new CustAttImp (theCompClassID, theAtt)
         {
         boolean isModifiable ()
            {
            return true;
            }
         };
      }

d266 7
@


1.3
log
@Removed setBoundSet and getBoundSet methods from classes AttImp and
   CustAttgImp.
@
text
@d40 1
a40 1
   boolean appliesTo (CompClassID theCompClassID)
@


1.2
log
@Initial implementation of theComp.queueElementValue (...).
@
text
@a302 22

         void setBoundSet (
               Component theComp,
               double[]  hardLBArr,
               double[]  softLBArr,
               double[]  hardUBArr)
            {
            theComp.
               getComponentCOR ().
                  setBoundSet (hardLBArr, softLBArr, hardUBArr);
            }

         void getBoundSet (
               Component theComp,
               double[]  hardLBArr,
               double[]  softLBArr,
               double[]  hardUBArr)
            {
            theComp.
               getComponentCOR ().
                  getBoundSet (hardLBArr, softLBArr, hardUBArr);
            }
@


1.1
log
@Changed names of AttRep classes to AttImp.
@
text
@d53 1
a53 1
      ourCoordForBuild = theCoord;
d69 1
a69 1
      ourCoordForBuild = null;
d78 1
a78 1
      super (theAtt);
d82 1
a82 1
      ourCoordForBuild.store (this);
d342 1
a342 1
// ourCoordForBuild
d344 2
a345 2
// During the execution of buildInstances (theCoord), ourCoordForBuild is the
// Coordinator with which it was called; otherwise ourCoordForBuild is null.
d348 1
a348 1
   private static Coordinator ourCoordForBuild = null;
@

