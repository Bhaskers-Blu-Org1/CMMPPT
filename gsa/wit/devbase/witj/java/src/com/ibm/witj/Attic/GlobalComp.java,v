head	1.30;
access;
symbols;
locks; strict;
comment	@# @;


1.30
date	2008.10.06.22.14.06;	author rjw;	state dead;
branches;
next	1.29;

1.29
date	2008.09.30.15.17.42;	author rjw;	state Exp;
branches;
next	1.28;

1.28
date	2008.09.26.22.21.25;	author rjw;	state Exp;
branches;
next	1.27;

1.27
date	2008.09.24.16.26.37;	author rjw;	state Exp;
branches;
next	1.26;

1.26
date	2008.09.22.15.26.56;	author rjw;	state Exp;
branches;
next	1.25;

1.25
date	2008.09.19.22.21.37;	author rjw;	state Exp;
branches;
next	1.24;

1.24
date	2008.09.19.21.59.26;	author rjw;	state Exp;
branches;
next	1.23;

1.23
date	2008.09.12.16.09.36;	author rjw;	state Exp;
branches;
next	1.22;

1.22
date	2008.09.11.22.22.46;	author rjw;	state Exp;
branches;
next	1.21;

1.21
date	2008.09.09.19.00.00;	author rjw;	state Exp;
branches;
next	1.20;

1.20
date	2008.09.09.16.27.06;	author rjw;	state Exp;
branches;
next	1.19;

1.19
date	2008.09.09.15.15.30;	author rjw;	state Exp;
branches;
next	1.18;

1.18
date	2008.09.05.22.06.51;	author rjw;	state Exp;
branches;
next	1.17;

1.17
date	2008.09.03.20.18.06;	author rjw;	state Exp;
branches;
next	1.16;

1.16
date	2008.09.03.18.03.08;	author rjw;	state Exp;
branches;
next	1.15;

1.15
date	2008.08.28.18.30.38;	author rjw;	state Exp;
branches;
next	1.14;

1.14
date	2008.08.06.18.48.22;	author rjw;	state dead;
branches;
next	1.13;

1.13
date	2008.06.30.22.02.11;	author rjw;	state Exp;
branches;
next	1.12;

1.12
date	2008.06.26.19.18.08;	author rjw;	state Exp;
branches;
next	1.11;

1.11
date	2008.06.16.20.41.02;	author rjw;	state Exp;
branches;
next	1.10;

1.10
date	2008.06.13.22.42.17;	author rjw;	state Exp;
branches;
next	1.9;

1.9
date	2008.06.13.18.09.31;	author rjw;	state Exp;
branches;
next	1.8;

1.8
date	2008.06.13.15.57.10;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2008.06.12.14.54.24;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2008.05.19.19.04.43;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2008.05.19.18.20.07;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2008.05.16.14.37.27;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2008.05.15.19.45.18;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2008.05.14.16.07.27;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2008.05.13.21.06.37;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.30
log
@Changed name of Component to Entity.
@
text
@
//==============================================================================
// WIT-J Java Source File GlobalComp.java.
//
// Contains the declaration of class GlobalComp.
//==============================================================================

package       com.ibm.witj;

import static com.ibm.witj.Utility.*;

//==============================================================================
// Class GlobalComp
//
// Responsible for working with global attributes of an implosion problem.
//
// Class Hierarchy:
//
//    RetainedObject
//       Component
//          GlobalComp
//==============================================================================

public final class GlobalComp extends Component
{
//==============================================================================
// Public Methods
//==============================================================================

//------------------------------------------------------------------------------
// toString ().
//
// Override from class Object.
//------------------------------------------------------------------------------

   public String toString ()
      {
      return "GlobalComp";
      }

//==============================================================================
// Package-Internal Constructor
//==============================================================================

   GlobalComp (CompMgr theCompMgr)
      {
      super (theCompMgr);

      nPeriods        = 26;

      myGlobalCompCOR = new GlobalCompCOR (this);

      getCompMgr ().record (this);
      }

//==============================================================================
// Package-Internal Methods
//==============================================================================

//------------------------------------------------------------------------------
// shutDown ().
//
// Override from class RetainedObject.
//------------------------------------------------------------------------------

   void shutDown ()
      {
      myGlobalCompCOR.shutDown ();
      super          .shutDown ();
      }

//------------------------------------------------------------------------------
// setNPeriods (theValue)
//
// Setter for nPeriods.
//------------------------------------------------------------------------------

   void setNPeriods (int theValue)
      {
      if (getCompMgr ().hasPartsOpns ())
         abortWmsg (
            "   The \"set\" method was called for attribute \"nPeriods\" in a\n"
          + "   Problem that has at least one Part or at least one Operation.");

      nPeriods = theValue;

      myGlobalCompCOR.setNPeriods (theValue);
      }

//------------------------------------------------------------------------------
// getNPeriods ()
//
// Accessor.
//------------------------------------------------------------------------------

   int getNPeriods ()
      {
      return nPeriods;
      }

//------------------------------------------------------------------------------
// getCompClassID ()
//
// Override from class Component.
//------------------------------------------------------------------------------

   CompClassID getCompClassID ()
      {
      return CompClassID.GLOBAL_COMP;
      }

//------------------------------------------------------------------------------
// getCompCOR ().
//
// Override from class Component.
//------------------------------------------------------------------------------

   ComponentCOR getCompCOR ()
      {
      return myGlobalCompCOR;
      }

//------------------------------------------------------------------------------
// Accessors
//------------------------------------------------------------------------------

   GlobalCompCOR getGlobalCompCOR ()
      {
      return myGlobalCompCOR;
      }

//==============================================================================
// Private Fields
//==============================================================================

//------------------------------------------------------------------------------
// nPeriods
//
// Cached copy of the value stored in WIT.
//------------------------------------------------------------------------------

   private int nPeriods;

//------------------------------------------------------------------------------
// myGlobalCompCOR.
//
// The GlobalCompCOR that belongs to this GlobalComp.
//------------------------------------------------------------------------------

   private final GlobalCompCOR myGlobalCompCOR;

//==============================================================================
}
@


1.29
log
@Call-back infrastructure.
@
text
@@


1.28
log
@Numerous class name changes.
@
text
@d52 2
@


1.27
log
@Intitial implementation of extraction of nPeriods.
@
text
@d49 1
a49 1
      nPeriods       = 26;
d51 1
a51 1
      myGlobalCompCI = new GlobalCompCI (this);
d66 2
a67 2
      myGlobalCompCI.shutDown ();
      super         .shutDown ();
d85 1
a85 1
      myGlobalCompCI.setNPeriods (theValue);
d111 1
a111 1
// getCompCI ().
d116 1
a116 1
   ComponentCI getCompCI ()
d118 1
a118 1
      return myGlobalCompCI;
d125 1
a125 1
   GlobalCompCI getGlobalCompCI ()
d127 1
a127 1
      return myGlobalCompCI;
d143 1
a143 1
// myGlobalCompCI.
d145 1
a145 1
// The GlobalCompCI that belongs to this GlobalComp.
d148 1
a148 1
   private final GlobalCompCI myGlobalCompCI;
@


1.26
log
@Continued implementation of readData.
@
text
@d49 1
a49 1
      ProblemCI theProblemCI;
d51 1
a51 5
      theProblemCI   = theCompMgr.getProblem ().getProblemCI ();

      myGlobalCompCI = new GlobalCompCI (theProblemCI);

      extractNPeriods ();
d73 1
a73 1
// Caches theValue & calls witSetNPeriods (...).
a99 9
// Sets nPeriods as stored by this GlobalComp to the value stored in WIT.
//------------------------------------------------------------------------------

   void extractNPeriods ()
      {
      nPeriods = myGlobalCompCI.getNPeriods ();
      }

//------------------------------------------------------------------------------
@


1.25
log
@Minor revision.
@
text
@d55 1
a55 1
      nPeriods       = myGlobalCompCI.getNPeriods ();
d104 9
@


1.24
log
@Began implementation of Problem.readData (...).
@
text
@d82 1
a82 1
      if (getCompMgr ().getNPeriodsFrozen ())
@


1.23
log
@Active state / shutDown method.
@
text
@d84 2
a85 2
            "   The \"set\" method was called for attribute \"nPeriods\" in\n"
          + "   a Problem that at least one Part or at least one Operation.");
@


1.22
log
@Moves C++ GlobalComp from Session to Problem.
@
text
@d63 1
a63 1
// release ().
d68 1
a68 1
   void release ()
d70 2
a71 2
      myGlobalCompCI.release ();
      super         .release ();
@


1.21
log
@Renamed Java class ProbCoordCI to SessionCI.
Renamed C++  class ProbCoord   to Session.
@
text
@d49 1
a49 1
      SessionCI theSessionCI;
d51 1
a51 1
      theSessionCI   = theCompMgr.getProblem ().getSession ().getSessionCI ();
d53 1
a53 1
      myGlobalCompCI = new GlobalCompCI (theSessionCI);
@


1.20
log
@Moved onwership of the ProbCoordCI from class Problem to class Session.
@
text
@d49 1
a49 1
      ProbCoordCI theProbCoordCI;
d51 1
a51 1
      theProbCoordCI = theCompMgr.getProblem ().getSession ().getProbCoordCI ();
d53 1
a53 1
      myGlobalCompCI = new GlobalCompCI (theProbCoordCI);
@


1.19
log
@Removed Java class ProbCoord.
@
text
@d51 1
a51 1
      theProbCoordCI = theCompMgr.getProblem ().getProbCoordCI ();
@


1.18
log
@Terminology change.
@
text
@d51 1
a51 1
      theProbCoordCI = theCompMgr.getProbCoord ().getProbCoordCI ();
@


1.17
log
@Replaced class PublicObject with class VitalObject.
@
text
@d19 1
a19 1
//    VitalObject
d63 1
a63 1
// shutDown ().
d65 1
a65 1
// Override from class VitalObject.
d68 1
a68 1
   void shutDown ()
d70 2
a71 2
      myGlobalCompCI.shutDown ();
      super         .shutDown ();
@


1.16
log
@Replaced toStringActive () with toString ().
@
text
@d19 1
a19 1
//    PublicObject
d65 1
a65 1
// Override from class PublicObject.
@


1.15
log
@Name change: Global --> GlobalComp.
@
text
@d30 11
a103 11
// toStringActive ().
//
// Override from class PublicObject.
//------------------------------------------------------------------------------

   String toStringActive ()
      {
      return "GlobalComp";
      }

//------------------------------------------------------------------------------
@


1.14
log
@Classes Global and GlobalCI.
@
text
@d8 3
a10 1
package com.ibm.witj;
d30 3
a32 5
//------------------------------------------------------------------------------
// setNPeriods ()
//
// Wrapper for witSetNPeriods (...) & caches the value.
//------------------------------------------------------------------------------
d34 1
a34 1
   public void setNPeriods (int nPeriodsVal)
d36 1
a36 1
      mustBeActive ("GlobalComp.setNPeriods");
d38 3
a40 4
      if (getCompMgr ().getNPeriodsFrozen ())
         abortWmsg (
              "   setNPeriods was called on a Problem that has at least one "
            +    "operation.");
d42 1
a42 1
      nPeriods = nPeriodsVal;
d44 1
a44 1
      myGlobalCompCI.setNPeriods (nPeriodsVal);
d47 4
d52 1
a52 1
// getNPeriods ()
d54 1
a54 1
// Returns nPeriods.
d57 1
a57 1
   public int getNPeriods ()
d59 2
a60 3
      mustBeActive ("GlobalComp.getNPeriods");

      return nPeriods;
a62 4
//==============================================================================
// Package-Internal Methods
//==============================================================================

d64 3
a66 1
// Constructor.
d69 1
a69 1
   GlobalComp (CompMgr theCompMgr)
d71 4
a74 1
      super (theCompMgr);
d76 1
a76 1
      ProbCoordCI theProbCoordCI;
d78 1
a78 5
      theProbCoordCI = theCompMgr.getProbCoord ().getProbCoordCI ();

      myGlobalCompCI = new GlobalCompCI (theProbCoordCI);

      nPeriods       = myGlobalCompCI.getNPeriods ();
d82 1
a82 1
// shutDown ().
d84 1
a84 1
// Override from class PublicObject.
d87 1
a87 1
   void shutDown ()
d89 1
a89 5
      myGlobalCompCI.shutDown ();

      myGlobalCompCI = null;

      super         .shutDown ();
d125 9
d152 1
a152 1
   private GlobalCompCI myGlobalCompCI;
@


1.13
log
@Made accessor names begin with "get".
@
text
@@


1.12
log
@Attributes.
@
text
@d38 1
a38 1
      if (myCompMgr ().nPeriodsFrozen ())
d75 1
a75 1
      theProbCoordCI = theCompMgr.myProbCoord ().myProbCoordCI ();
d109 1
a109 1
// myCompClassID ()
d114 1
a114 1
   CompClassID myCompClassID ()
d120 1
a120 1
// myCompCI ().
d125 1
a125 1
   ComponentCI myCompCI ()
@


1.11
log
@Created Java class CompMgr.
@
text
@d109 11
@


1.10
log
@Attributes.
@
text
@d38 1
a38 1
      if (myProbCoord ().nPeriodsFrozen ())
a66 3
//
// Arguments:
//    theProbCoord: The ProbCoord that will own the GlobalComp.
d69 1
a69 1
   GlobalComp (ProbCoord theProbCoord)
d71 1
a71 1
      super (theProbCoord);
d75 1
a75 1
      theProbCoordCI = theProbCoord.myProbCoordCI ();
@


1.9
log
@Removed class LTPubObject.
@
text
@d111 11
d137 1
a137 1
// The C++ GlobalComp interface that belongs to this GlobalComp.
@


1.8
log
@Added Java class LTPubObject.
@
text
@d18 2
a19 3
//       LTPubObject
//          Component
//             GlobalComp
@


1.7
log
@Comments, etc.
@
text
@d18 3
a20 2
//       Component
//          GlobalComp
@


1.6
log
@*** empty log message ***
@
text
@d1 7
@


1.5
log
@*** empty log message ***
@
text
@d87 3
d122 1
a122 1
   private final GlobalCompCI myGlobalCompCI;
@


1.4
log
@*** empty log message ***
@
text
@a21 11
// toString ().
//
// Override from class Object.
//------------------------------------------------------------------------------

   public String toString ()
      {
      return "GlobalComp";
      }

//------------------------------------------------------------------------------
d90 11
@


1.3
log
@*** empty log message ***
@
text
@d10 1
a10 1
//    ExportedObject
d92 1
a92 1
// Override from class ExportedObject.
@


1.2
log
@*** empty log message ***
@
text
@d80 1
a80 1
      ProblemCI theProblemCI;
d82 1
a82 1
      theProblemCI   = theProbCoord.myProblem ().myProblemCI ();
d84 1
a84 1
      myGlobalCompCI = new GlobalCompCI (theProblemCI);
d116 1
a116 1
// The Java interface to the C++ GlobalComp that belongs to this GlobalComp.
@


1.1
log
@*** empty log message ***
@
text
@d42 1
a42 1
      if (myCompMgr ().nPeriodsFrozen ())
d73 1
a73 1
//    theCompMgr: The CompMgr that will own the GlobalComp.
d76 1
a76 1
   GlobalComp (CompMgr theCompMgr)
d78 1
a78 1
      super (theCompMgr);
d82 1
a82 1
      theProblemCI   = theCompMgr.myProblem ().myProblemCI ();
@

