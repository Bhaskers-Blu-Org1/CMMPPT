head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2009.02.03.16.32.28;	author rjw;	state dead;
branches;
next	1.1;

1.1
date	2009.01.31.00.56.26;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Removed the Alternative classes.
@
text
@
//==============================================================================
// WIT-J Java Source File AlternativeCOR.java.
//
// Contains the declaration of class AlternativeCOR.
//==============================================================================

package       com.ibm.witj;

import static com.ibm.witj.Utility.*;

//==============================================================================
// Class AlternativeCOR
//
// "Alternative C++ Object Representation"
// A Java representation of a C++ Alternative.
//
// Class Hierarchy:
//
// RetainedObject
//    CppObjRep
//       AlternativeCOR
//==============================================================================

final class AlternativeCOR extends CppObjRep
{
//==============================================================================
// Package-Internal Constructor
// 
// Creates an AlternativeCOR that will own the C++ Alternative whose name
// matches theAltName and is to be owned by theAlt.
//==============================================================================

   AlternativeCOR (Alternative theAlt, String theAltName)
      {
      myAlternative = theAlt;

      acquireMyCppAlternative (theAltName);
      }

//==============================================================================
// Package-Internal Methods
//==============================================================================

//------------------------------------------------------------------------------
// Accessors
//------------------------------------------------------------------------------

   Alternative getAlternative ()
      {
      return myAlternative;
      }

//==============================================================================
// Private Methods
//==============================================================================

//------------------------------------------------------------------------------
// acquireMyCppAlternative (theAltName)
// 
// Takes ownership of the C++ Att whose name matches theAltName.
//------------------------------------------------------------------------------

   private native void acquireMyCppAlternative (String theAltName);

//==============================================================================
// Private Fields
//==============================================================================

//------------------------------------------------------------------------------
// myAlternative
//
// The Alternative that owns this AlternativeCOR.
//------------------------------------------------------------------------------

   private final Alternative myAlternative;

//==============================================================================
}
@


1.1
log
@Part.Category as Alternative
@
text
@@

