head	1.13;
access;
symbols;
locks; strict;
comment	@# @;


1.13
date	2008.09.26.22.21.26;	author rjw;	state dead;
branches;
next	1.12;

1.12
date	2008.09.12.14.43.24;	author rjw;	state Exp;
branches;
next	1.11;

1.11
date	2008.09.09.19.00.00;	author rjw;	state Exp;
branches;
next	1.10;

1.10
date	2008.09.05.22.06.51;	author rjw;	state Exp;
branches;
next	1.9;

1.9
date	2008.09.03.20.33.11;	author rjw;	state Exp;
branches;
next	1.8;

1.8
date	2008.08.29.18.36.43;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2008.08.29.17.19.07;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2008.08.18.22.16.58;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2008.06.30.22.02.11;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2008.06.26.19.18.08;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2008.06.12.14.54.24;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2008.05.15.19.45.19;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2008.05.13.21.06.37;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.13
log
@Numerous class name changes.
@
text
@
//==============================================================================
// WIT-J Java Source File OperationCI.java.
//
// Contains the declaration of class OperationCI.
//==============================================================================

package       com.ibm.witj;

import static com.ibm.witj.Utility.*;

//==============================================================================
// Class OperationCI
//
// "Operation C++ Interface"
// The Java interface to a C++ Operation.
//
// Class Hierarchy:
//
//    RetainedObject
//       CppInterface
//          ComponentCI
//             OperationCI
//==============================================================================

final class OperationCI extends ComponentCI
{
//==============================================================================
// Package-Internal Constructor
//==============================================================================

   OperationCI (ProblemCI theProblemCI, String theOpnName)
      {
      createMyCppOperation (theProblemCI, theOpnName);
      }

//==============================================================================
// Package-Internal Methods
//==============================================================================

//------------------------------------------------------------------------------
// setOperationName (...)
//
// Sets the OperationName of the C++ Operation.
//------------------------------------------------------------------------------

   native void setOperationName (String theOpnName);

//==============================================================================
// Private Methods
//==============================================================================

//------------------------------------------------------------------------------
// createMyCppOperation (...)
// 
// Constructs a new C++ Operation for the arguments and takes ownership of it.
//------------------------------------------------------------------------------

   private native void createMyCppOperation (
      ProblemCI theProblemCI,
      String    theOpnName);

//==============================================================================
}
@


1.12
log
@Revised the use of class CTVecRes.
@
text
@@


1.11
log
@Renamed Java class ProbCoordCI to SessionCI.
Renamed C++  class ProbCoord   to Session.
@
text
@d32 1
a32 1
   OperationCI (SessionCI theSessionCI, String theOpnName)
d34 1
a34 1
      createMyCppOperation (theSessionCI, theOpnName);
d60 1
a60 1
      SessionCI theSessionCI,
@


1.10
log
@Terminology change.
@
text
@d32 1
a32 1
   OperationCI (ProbCoordCI theProbCoordCI, String theOpnName)
d34 1
a34 1
      createMyCppOperation (theProbCoordCI, theOpnName);
d60 2
a61 2
      ProbCoordCI theProbCoordCI,
      String      theOpnName);
@


1.9
log
@Replaced class InternalObject with class VitalObject.
@
text
@d20 1
a20 1
//    VitalObject
@


1.8
log
@"demandName" attribute.
@
text
@d20 1
a20 1
//    InternalObject
@


1.7
log
@"operationName" attribute.
@
text
@d29 9
d42 3
a44 1
// Constructor.
d47 1
a47 4
   OperationCI (ProbCoordCI theProbCoordCI, String theOpnName)
      {
      createMyCppOperation (theProbCoordCI, theOpnName);
      }
a62 8
//------------------------------------------------------------------------------
// setOperationName (...)
//
// Sets the OperationName of the C++ Operation.
//------------------------------------------------------------------------------

   native void setOperationName (String theOpnName);

@


1.6
log
@Implemented Utility class.
@
text
@d36 1
a36 1
   OperationCI (ProbCoordCI theProbCoordCI, String theOperationName)
d38 1
a38 1
      createMyCppOperation (theProbCoordCI, theOperationName);
d53 9
a61 1
      String      theOperationName);
@


1.5
log
@Made accessor names begin with "get".
@
text
@d8 3
a10 1
package com.ibm.witj;
@


1.4
log
@Attributes.
@
text
@d34 1
a34 1
   OperationCI (ProbCoordCI theProbCoordCI, String operationNameVal)
d36 1
a36 1
      createMyCppOperation (theProbCoordCI, operationNameVal);
d51 1
a51 1
      String      operationNameVal);
@


1.3
log
@Comments, etc.
@
text
@a38 16
//------------------------------------------------------------------------------
// setExecCost (...)
//
// Wrapper for witSetOperationExecCostDbl (...).
//------------------------------------------------------------------------------

   native void setExecCost (double[] execCostVal);

//------------------------------------------------------------------------------
// getExecCost (...)
//
// Wrapper for witGetOperationExecCostDbl (...).
//------------------------------------------------------------------------------

   native void getExecCost (double[] execCostVal);

@


1.2
log
@*** empty log message ***
@
text
@d1 7
@


1.1
log
@*** empty log message ***
@
text
@d27 1
a27 1
   OperationCI (ProblemCI theProblemCI, String operationNameVal)
d29 1
a29 1
      createMyCppOperation (theProblemCI, operationNameVal);
d59 2
a60 2
      ProblemCI theProblemCI,
      String    operationNameVal);
@

