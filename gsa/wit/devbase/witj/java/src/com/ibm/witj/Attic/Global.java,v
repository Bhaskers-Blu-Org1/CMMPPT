head	1.6;
access;
symbols;
locks; strict;
comment	@# @;


1.6
date	2008.08.28.18.30.38;	author rjw;	state dead;
branches;
next	1.5;

1.5
date	2008.08.27.15.18.17;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2008.08.20.18.49.28;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2008.08.19.22.14.32;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2008.08.18.22.16.57;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2008.08.06.18.48.22;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Name change: Global --> GlobalComp.
@
text
@
//==============================================================================
// WIT-J Java Source File Global.java.
//
// Contains the declaration of class Global.
//==============================================================================

package       com.ibm.witj;

import static com.ibm.witj.Utility.*;

//==============================================================================
// Class Global
//
// Responsible for working with global attributes of an implosion problem.
//
// Class Hierarchy:
//
//    PublicObject
//       Component
//          Global
//==============================================================================

public final class Global extends Component
{
//==============================================================================
// Public Methods
//==============================================================================

//==============================================================================
// Package-Internal Constructor
//==============================================================================

   Global (CompMgr theCompMgr)
      {
      super (theCompMgr);

      ProbCoordCI theProbCoordCI;

      theProbCoordCI = theCompMgr.getProbCoord ().getProbCoordCI ();

      myGlobalCI     = new GlobalCI (theProbCoordCI);

      nPeriods       = myGlobalCI.getNPeriods ();
      }

//==============================================================================
// Package-Internal Methods
//==============================================================================

//------------------------------------------------------------------------------
// shutDown ().
//
// Override from class PublicObject.
//------------------------------------------------------------------------------

   void shutDown ()
      {
      myGlobalCI.shutDown ();
      super     .shutDown ();
      }

//------------------------------------------------------------------------------
// setNPeriods (theValue)
//
// Caches theValue & calls witSetNPeriods (...).
//------------------------------------------------------------------------------

   void setNPeriods (int theValue)
      {
      if (getCompMgr ().getNPeriodsFrozen ())
         abortWmsg (
            "   The \"set\" method was called for attribute \"nPeriods\" in\n"
          + "   a Problem that at least one Part or at least one Operation.");

      nPeriods = theValue;

      myGlobalCI.setNPeriods (theValue);
      }

//------------------------------------------------------------------------------
// getNPeriods ()
//
// Accessor.
//------------------------------------------------------------------------------

   int getNPeriods ()
      {
      return nPeriods;
      }

//------------------------------------------------------------------------------
// toStringActive ().
//
// Override from class PublicObject.
//------------------------------------------------------------------------------

   String toStringActive ()
      {
      return "Global";
      }

//------------------------------------------------------------------------------
// getCompClassID ()
//
// Override from class Component.
//------------------------------------------------------------------------------

   CompClassID getCompClassID ()
      {
      return CompClassID.GLOBAL;
      }

//------------------------------------------------------------------------------
// getCompCI ().
//
// Override from class Component.
//------------------------------------------------------------------------------

   ComponentCI getCompCI ()
      {
      return myGlobalCI;
      }

//------------------------------------------------------------------------------
// Accessors
//------------------------------------------------------------------------------

   GlobalCI getGlobalCI ()
      {
      return myGlobalCI;
      }

//==============================================================================
// Private Fields
//==============================================================================

//------------------------------------------------------------------------------
// nPeriods
//
// Cached copy of the value stored in WIT.
//------------------------------------------------------------------------------

   private int nPeriods;

//------------------------------------------------------------------------------
// myGlobalCI.
//
// The GlobalCI that belongs to this Global.
//------------------------------------------------------------------------------

   private final GlobalCI myGlobalCI;

//==============================================================================
}
@


1.5
log
@Attributes.
@
text
@@


1.4
log
@Customized Attributes.
@
text
@d125 9
@


1.3
log
@Revised the shut-down model.
@
text
@d30 3
a32 5
//------------------------------------------------------------------------------
// setNPeriods ()
//
// Wrapper for witSetNPeriods (...) & caches the value.
//------------------------------------------------------------------------------
d34 1
a34 1
   public void setNPeriods (int nPeriodsVal)
d36 3
a38 1
      mustBeActive ("Global.setNPeriods");
d40 1
a40 4
      if (getCompMgr ().getNPeriodsFrozen ())
         abortWmsg (
              "   setNPeriods was called on a Problem that has at least one "
            +    "operation.");
d42 1
a42 1
      nPeriods = nPeriodsVal;
d44 1
a44 1
      myGlobalCI.setNPeriods (nPeriodsVal);
d47 4
d52 1
a52 1
// getNPeriods ()
d54 1
a54 1
// Returns nPeriods.
d57 1
a57 1
   public int getNPeriods ()
d59 2
a60 3
      mustBeActive ("Global.getNPeriods");

      return nPeriods;
a62 4
//==============================================================================
// Package-Internal Methods
//==============================================================================

d64 3
a66 1
// Constructor.
d69 1
a69 1
   Global (CompMgr theCompMgr)
d71 4
a74 5
      super (theCompMgr);

      ProbCoordCI theProbCoordCI;

      theProbCoordCI = theCompMgr.getProbCoord ().getProbCoordCI ();
d76 1
a76 1
      myGlobalCI     = new GlobalCI (theProbCoordCI);
d78 1
a78 1
      nPeriods       = myGlobalCI.getNPeriods ();
d82 1
a82 1
// shutDown ().
d84 1
a84 1
// Override from class PublicObject.
d87 1
a87 1
   void shutDown ()
d89 1
a89 2
      myGlobalCI.shutDown ();
      super     .shutDown ();
@


1.2
log
@Implemented Utility class.
@
text
@a92 3

      myGlobalCI = null;

d147 1
a147 1
   private GlobalCI myGlobalCI;
@


1.1
log
@Classes Global and GlobalCI.
@
text
@d8 3
a10 1
package com.ibm.witj;
@

