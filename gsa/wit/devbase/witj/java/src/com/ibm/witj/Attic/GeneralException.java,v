head	1.4;
access;
symbols;
locks; strict;
comment	@# @;


1.4
date	2009.07.06.20.43.23;	author rjw;	state dead;
branches;
next	1.3;

1.3
date	2009.06.10.16.29.21;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2009.05.12.19.29.51;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2009.05.12.15.57.58;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Changed class name GeneralException to WitjException.
@
text
@
//==============================================================================
// WIT-J Java Source File GeneralException.java.
//
// Contains the declaration of class GeneralException.
//==============================================================================

package       com.ibm.witj;

import static com.ibm.witj.Utility.*;

//==============================================================================
// Class GeneralException
//
// An unchecked Exception thrown by WIT-J.
//
// Class Hierarchy:
//
// java.lang.RuntimeException
//    GeneralException
//       StatusQuoException
//       TerminalException
//          WitSevereErrorException
//          ReadDataException
//          BadCharacterException
//          OutOfMemoryException
//          InternalErrorException
//==============================================================================

public abstract class GeneralException extends RuntimeException
{
//==============================================================================
// Package-Internal Constructor
//==============================================================================

   GeneralException (String message)
      {
      super (message);
      }

//==============================================================================
// Package-Internal Methods
//==============================================================================

//------------------------------------------------------------------------------
// getExceptionToThrow (theThrowable)
//
// Return a GeneralException to be thrown when theThrowable was caught by WIT-J.
//------------------------------------------------------------------------------

   static GeneralException getExceptionToThrow (Throwable theThrowable)
      {
      try
         {
         throw theThrowable;
         }


      catch (GeneralException theGeneralExc)
         {
         return theGeneralExc;
         }

      catch (OutOfMemoryError theMemoryErr)
         {
         return new OutOfMemoryException (theMemoryErr);
         }

      catch (AssertionError theAssertErr)
         {
         return
            InternalErrorException.
               newInstanceForJavaAssertionError (theAssertErr);
         }

      catch (Throwable unexpThrowable)
         {
         return
            InternalErrorException.
               newInstanceForUnexpJavaThrowable (unexpThrowable);
         }
      }

//==============================================================================
// Private methods
//==============================================================================

//------------------------------------------------------------------------------
// mentionExceptionsForCpp ()
//
// This method is never called.
// The purpose of this method is to force the Exception subclasses that it
// mentions to be compiled, so that the Exceptions that they define will be
// available to be constructed and thrown from C++.
//------------------------------------------------------------------------------

   private void mentionExceptionsForCpp ()
      {
      WitSevereErrorException theWitSevereErrorExc;
      ReadDataException       theReadDataExc;
      BadCharacterException   theBadCharacterExc;
      }

//==============================================================================
}
@


1.3
log
@Modified some comments.
@
text
@@


1.2
log
@Replaced the throwExceptionFor method with getExeceptionToThrow.
@
text
@a22 2
//          OutOfMemoryException
//          InternalErrorException
d26 2
@


1.1
log
@Changed name of Java class WitjException to GeneralException.
@
text
@d46 1
a46 1
// throwExceptionFor (theThrowable)
d48 1
a48 2
// Throws a Witj Exception suitable for be caught by the application program
// when theThrowable was caught by WIT-J.
d51 1
a51 1
   static void throwExceptionFor (Throwable theThrowable)
d61 1
a61 1
         throw theGeneralExc;
d66 1
a66 1
         throw new OutOfMemoryException (theMemoryErr);
d71 1
a71 1
         throw
d78 1
a78 1
         throw
@

