head	1.28;
access;
symbols;
locks; strict;
comment	@# @;


1.28
date	2011.05.02.18.32.24;	author rjw;	state Exp;
branches;
next	1.27;

1.27
date	2011.04.15.19.12.41;	author rjw;	state Exp;
branches;
next	1.26;

1.26
date	2011.03.30.16.20.50;	author rjw;	state Exp;
branches;
next	1.25;

1.25
date	2011.03.29.23.38.56;	author rjw;	state Exp;
branches;
next	1.24;

1.24
date	2011.03.28.15.57.20;	author rjw;	state Exp;
branches;
next	1.23;

1.23
date	2011.03.25.22.49.30;	author rjw;	state Exp;
branches;
next	1.22;

1.22
date	2009.09.29.19.09.24;	author rjw;	state Exp;
branches;
next	1.21;

1.21
date	2009.06.05.15.08.23;	author rjw;	state Exp;
branches;
next	1.20;

1.20
date	2009.06.04.23.04.22;	author rjw;	state Exp;
branches;
next	1.19;

1.19
date	2009.05.05.20.17.06;	author rjw;	state Exp;
branches;
next	1.18;

1.18
date	2009.03.13.19.32.21;	author rjw;	state Exp;
branches;
next	1.17;

1.17
date	2009.02.25.16.55.19;	author rjw;	state Exp;
branches;
next	1.16;

1.16
date	2009.02.25.16.47.16;	author rjw;	state Exp;
branches;
next	1.15;

1.15
date	2009.02.21.01.00.57;	author rjw;	state Exp;
branches;
next	1.14;

1.14
date	2009.02.20.17.18.45;	author rjw;	state Exp;
branches;
next	1.13;

1.13
date	2009.02.19.17.39.21;	author rjw;	state Exp;
branches;
next	1.12;

1.12
date	2009.02.17.19.26.13;	author rjw;	state Exp;
branches;
next	1.11;

1.11
date	2009.02.14.00.51.31;	author rjw;	state Exp;
branches;
next	1.10;

1.10
date	2009.02.06.23.27.13;	author rjw;	state Exp;
branches;
next	1.9;

1.9
date	2009.02.04.21.51.54;	author rjw;	state Exp;
branches;
next	1.8;

1.8
date	2009.02.04.20.16.01;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2009.01.29.22.06.39;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2008.12.15.15.35.33;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2008.12.03.18.55.08;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2008.10.07.18.50.26;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2008.10.06.22.14.05;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2008.09.29.22.43.47;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2008.09.26.22.21.25;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.28
log
@Reduced heading comments.
@
text
@
//==============================================================================
// WIT-J Java Source File DemandCOR.java.
//==============================================================================

package       com.ibm.witj;

import static com.ibm.witj.Utility.*;

import       java.util.*;

//==============================================================================
// Class DemandCOR
//
// "Demand C++ Object Representation"
// A Java representation of a C++ Demand.
//
// Class Hierarchy:
//
// PreservedInternal
//    CppObjRep
//       ComponentCOR
//          DemandCOR
//==============================================================================

final class DemandCOR extends ComponentCOR
{
//==============================================================================
// Package-Internal Constructor
//==============================================================================

   DemandCOR (PartCOR thePartCOR, String theDemandName)
      {
      acquireNewCppObject (thePartCOR, theDemandName);
      }

//==============================================================================
// Package-Internal Methods
//==============================================================================

//------------------------------------------------------------------------------
// appendToPipSeq (theShipPer, incShipVol)
//
// Appends the shipment triple (my C++ Demand, theShipPer, incShipVol) to the
// PIP shipment sequence.
//------------------------------------------------------------------------------

   native void appendToPipSeq (int theShipPer, double incShipVol);

//------------------------------------------------------------------------------
// getPegging (thePggAttIdx, shipPer, theTripList)
//
// Retrieves the pegging of the attribute indicated by thePggAttIdx for the
// C++ Demand in shipPer, storing it in theTripList.
//------------------------------------------------------------------------------

   native <C extends Component> void getPegging (
      int                           thePggAttIdx,
      int                           shipPer,
      ArrayList <PeggingTriple <C>> theTripleList);

//------------------------------------------------------------------------------
// setDemandName
//
// Sets the DemandName of the C++ Demand.
//------------------------------------------------------------------------------

   native void setDemandName (String theDemandName);

//------------------------------------------------------------------------------
// Wrappers for WIT API Functions.
//------------------------------------------------------------------------------

   native double incHeurAlloc (int shipPeriod, double desIncVol);

//==============================================================================
// Private Native Methods
//==============================================================================

//------------------------------------------------------------------------------
// acquireNewCppObject
// 
// This method is explained in the comment for class CppObjRep.
//------------------------------------------------------------------------------

   private native void acquireNewCppObject (
      PartCOR thePartCOR,
      String  theDemandName);

//==============================================================================
}
@


1.27
log
@Java CppObjRep classes
@
text
@a3 2
//
// Contains the declaration of class DemandCOR.
@


1.26
log
@Revised CppObjRep class ctors.
@
text
@d36 1
a36 1
      createCppObject (thePartCOR, theDemandName);
d83 1
a83 1
// createCppObject
d88 1
a88 1
   private native void createCppObject (
@


1.25
log
@Replaced C++ class CORJOR with ComponentJOR.
@
text
@d34 1
a34 1
   DemandCOR (Demand theDemand)
a35 6
      PartCOR thePartCOR;
      String  theDemandName;

      thePartCOR    = theDemand.getPart       ().getPartCOR ();
      theDemandName = theDemand.getDemandName ();

@


1.24
log
@Changed name of class AllocTriple to PeggingTriple.
@
text
@a35 2
      super (theDemand);

@


1.23
log
@ArrayListJOR
@
text
@d68 3
a70 3
      int                         thePggAttIdx,
      int                         shipPer,
      ArrayList <AllocTriple <C>> theTripleList);
@


1.22
log
@Implemented class PreservedInternal and made several classes extend it
   instead of class PreservedObject.
@
text
@d12 2
d61 1
a61 1
// getPegging (thePggAttIdx, shipPer, theAllocTripleVecCOR)
d64 1
a64 1
// C++ Demand in shipPer, storing it in theAllocTripleVecCOR.
d67 4
a70 4
   native void getPegging (
      int               thePggAttIdx,
      int               shipPer,
      AllocTripleVecCOR theAllocTripleVecCOR);
@


1.21
log
@Changed the name each native method that creates a C++ object to
   createCppObject.
@
text
@d20 1
a20 1
// PreservedObject
@


1.20
log
@Changed handling of Lists of AllocTriples to avoid call-backs.
@
text
@d42 1
a42 1
      createMyCppDemand (thePartCOR, theDemandName);
d89 1
a89 1
// createMyCppDemand
d91 1
a91 1
// Constructs a new C++ Demand for the arguments and takes ownership of it.
d94 1
a94 1
   private native void createMyCppDemand (
@


1.19
log
@Changed name of Java class RetainedObject to PreservedObject.
@
text
@d59 1
a59 1
// getPegging (thePggAttIdx, shipPer, theAllocTripleListCOR)
d62 1
a62 2
// C++ Demand in shipPer, storing it in the ArrayList of AllocTriples
// corresponding to theAllocTripleListCOR.
d66 3
a68 3
      int                thePggAttIdx,
      int                shipPer,
      AllocTripleListCOR theAllocTripleListCOR);
@


1.18
log
@Changed name of Element classes in Java and C++ to Component.
@
text
@d20 1
a20 1
// RetainedObject
@


1.17
log
@Pegging
@
text
@d22 1
a22 1
//       ElementCOR
d26 1
a26 1
final class DemandCOR extends ElementCOR
@


1.16
log
@Pegging
@
text
@d59 1
a59 1
// getPegging (thePeggingAttIdx, shipPer, theAllocTripleListCOR)
d61 1
a61 1
// Retrieves the pegging of the attribute indicated by thePeggingAttIdx for the
d67 1
a67 1
      int                thePeggingAttIdx,
@


1.15
log
@PIP.
@
text
@d59 1
a59 1
// getPip (thePeggingAttIdx, shipPer, theAllocTripleListCOR)
d61 3
a63 3
// Retrieves the PIP of the attribute indicated by thePeggingAttIdx for the C++
// Demand in shipPer, storing it in the ArrayList of AllocTriples corresponding
// to theAllocTripleListCOR.
d66 1
a66 1
   native void getPip (
@


1.14
log
@Added the AllocTripleList classes.
@
text
@d59 1
a59 1
// getExecVolPip (shipPer)
d61 3
a63 2
// Retrieves the execVol PIP for the C++ Demand in shipPer, storing it in the
// ArrayList of AllocTriples corresponding to theAllocTripleListCOR.
d66 2
a67 1
   native void getExecVolPip (
@


1.13
log
@Demand.getExecVolPip
@
text
@d61 2
a62 2
// Retrieves the execVol PIP for the C++ Demand in shipPer and stores it in
// the Java Coordinator's currently held AllocTriple List.
d65 3
a67 1
   native void getExecVolPip (int shipPer);
@


1.12
log
@PIP.
@
text
@d59 9
@


1.11
log
@Implemented getPipSeq.
@
text
@d50 9
@


1.10
log
@Removed eqHeurAllocTwme
@
text
@d34 2
@


1.9
log
@Heuristic Allocation
@
text
@a60 5
   native double incHeurAllocTwme (
      int     shipPeriod,
      double  desIncVol,
      boolean asapMultiExec);

@


1.8
log
@Heuristic Allocation
@
text
@d61 5
@


1.7
log
@Implemented Java class CppGateway.
@
text
@d55 6
@


1.6
log
@Minor revision.
@
text
@d37 1
a37 2
      thePartCOR    = theDemand.getPart ().getPartCOR ();

d40 1
a40 1
      createMyCppDemand (thePartCOR, theDemandName, theDemand);
d56 1
a56 1
// Private Methods
d67 1
a67 2
      String  theDemandName,
      Demand  theDemand);
@


1.5
log
@Minor changes.
@
text
@d20 4
a23 4
//    RetainedObject
//       CppObjRep
//          ElementCOR
//             DemandCOR
@


1.4
log
@Name change.
@
text
@d49 1
a49 1
// setDemandName (...)
d61 1
a61 1
// createMyCppDemand (...)
@


1.3
log
@Changed name of Component to Entity.
@
text
@d22 1
a22 1
//          EntityCOR
d26 1
a26 1
final class DemandCOR extends EntityCOR
@


1.2
log
@Call-back infrastructure.
@
text
@d22 1
a22 1
//          ComponentCOR
d26 1
a26 1
final class DemandCOR extends ComponentCOR
@


1.1
log
@Numerous class name changes.
@
text
@d32 1
a32 1
   DemandCOR (PartCOR thePartCOR, String theDemandName)
d34 8
a41 1
      createMyCppDemand (thePartCOR, theDemandName);
d68 2
a69 1
      String  theDemandName);
@

