head	1.9;
access;
symbols;
locks; strict;
comment	@# @;


1.9
date	2008.07.01.21.18.08;	author rjw;	state dead;
branches;
next	1.8;

1.8
date	2008.06.30.22.02.11;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2008.06.13.18.09.31;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2008.06.13.15.57.09;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2008.06.12.14.54.23;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2008.05.19.18.20.07;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2008.05.16.14.37.26;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2008.05.15.19.45.18;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2008.05.13.21.06.36;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Replaced classes Material and Capacity with an enum.
@
text
@
//==============================================================================
// WIT-J Java Source File Capacity.java.
//
// Contains the declaration of class Capacity.
//==============================================================================

package com.ibm.witj;

//==============================================================================
// Class Capacity
//
// Represents a capacity part in an implosion problem.
//==============================================================================

public final class Capacity extends Part
{
//==============================================================================
// Public Methods
//
// Class Hierarchy:
//
//    PublicObject
//       Component
//          Part
//             Capacity
//==============================================================================

//------------------------------------------------------------------------------
// makeInstance (theProblem, thePartName)
//
// Factory method: Constructs and returns a new Capacity.
// Arguments:
//    theProblem:  The Problem that will own the Capacity
//    thePartName: The partName of the Capacity
//------------------------------------------------------------------------------

   public static Capacity makeInstance (
         Problem theProblem,
         String  thePartName)
      {
      mustBeNonNullActive (theProblem, "theProblem", "Capacity.makeInstance");

      return new Capacity (theProblem.getProbCoord (), thePartName);
      }

//==============================================================================
// Package-Internal Methods
//==============================================================================

//------------------------------------------------------------------------------
// toStringActive ().
//
// Override from class PublicObject.
//------------------------------------------------------------------------------

   String toStringActive ()
      {
      return "Capacity \"" + getPartName () + "\"";
      }

//==============================================================================
// Private Methods
//==============================================================================

//------------------------------------------------------------------------------
// Constructor.
//
// Arguments:
//    theProbCoord: The ProbCoord for the Capacity
//    thePartName:  The partName of the Capacity
//------------------------------------------------------------------------------

   private Capacity (ProbCoord theProbCoord, String thePartName)
      {
      super (theProbCoord, thePartName, false);
      }

//==============================================================================
}
@


1.8
log
@Made accessor names begin with "get".
@
text
@@


1.7
log
@Removed class LTPubObject.
@
text
@d30 1
a30 1
// makeInstance (theProblem, partNameVal)
d35 1
a35 1
//    partNameVal: The partName of the Capacity
d40 1
a40 1
         String  partNameVal)
d44 1
a44 1
      return new Capacity (theProblem.myProbCoord (), partNameVal);
d59 1
a59 1
      return "Capacity \"" + partName () + "\"";
d71 1
a71 1
//    partName:     The partName of the Capacity
d74 1
a74 1
   private Capacity (ProbCoord theProbCoord, String partNameVal)
d76 1
a76 1
      super (theProbCoord, partNameVal, false);
@


1.6
log
@Added Java class LTPubObject.
@
text
@d24 3
a26 4
//       LTPubObject
//          Component
//             Part
//                Capacity
@


1.5
log
@Comments, etc.
@
text
@d24 4
a27 3
//       Component
//          Part
//             Capacity
@


1.4
log
@*** empty log message ***
@
text
@d1 7
@


1.3
log
@*** empty log message ***
@
text
@d40 4
d45 1
a45 1
// toString ().
d47 1
a47 1
// Override from class Object.
d50 1
a50 1
   public String toString ()
@


1.2
log
@*** empty log message ***
@
text
@d16 1
a16 1
//    ExportedObject
@


1.1
log
@*** empty log message ***
@
text
@d37 1
a37 1
      return new Capacity (theProblem, partNameVal);
d59 2
a60 2
//    theProblem: The Problem that will own the Capacity
//    partName:   The partName of the Capacity
d63 1
a63 1
   private Capacity (Problem theProblem, String partNameVal)
d65 1
a65 1
      super (theProblem, partNameVal, false);
@

