head	1.8;
access;
symbols;
locks; strict;
comment	@# @;


1.8
date	2011.05.02.18.32.19;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2009.07.23.17.47.22;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2009.07.21.19.09.15;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2009.07.06.20.43.23;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2009.05.12.15.57.57;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2009.04.15.16.29.28;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2009.04.13.19.51.41;	author rjw;	state dead;
branches;
next	1.1;

1.1
date	2009.04.10.23.51.14;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Reduced heading comments.
@
text
@
//==============================================================================
// WIT-J Java Source File BadCharacterException.java.
//==============================================================================

package       com.ibm.witj;

import static com.ibm.witj.Utility.*;

//==============================================================================
// Class BadCharacterException
//
// One kind of unchecked Exception thrown by WIT-J.
//
// When WIT-J throws a BadCharacterException, this indicates that:
//
// * The readData method of class Problem found a string in the data file
//   containing a non-UTF-8 character.
//
// * As a result of the throw, WIT-J is now in a non-functional state.
//   No further calls to WIT-J methods should be made for the rest of the
//   program process.
//
// Class Hierarchy:
//
// RuntimeException (java.lang.RuntimeException)
//    WitjException
//       TerminalException
//          BadCharacterException
//==============================================================================

public final class BadCharacterException extends TerminalException
{
//==============================================================================
// Public Methods
//==============================================================================

//------------------------------------------------------------------------------
// Accessor
//------------------------------------------------------------------------------

   public String getOffendingString ()
      {
      return myOffendingString;
      }

//==============================================================================
// Private Constructor
//
// To be called from C++.
//==============================================================================

   private BadCharacterException (String theOffendingString)
      {
      super (
         "   The readData method of class Problem found a string in the data\n"
       + "   file containing a non-UTF-8 character.\n"
       + "\n"
       + "      Offending string (as a Java String): "
       +        theOffendingString + "\n"
       + "\n"
       + "   This indicates an error in the data file.\n");

      myOffendingString = theOffendingString;
      }

//==============================================================================
// Private Fields
//==============================================================================

//------------------------------------------------------------------------------
// myOffendingString
//
// The offending c-string that caused this BadCharacterException to be thrown,
// converted to a Java String.
//------------------------------------------------------------------------------

   final String myOffendingString;

//------------------------------------------------------------------------------
// serialVersionUID
//
// This field is required in order to avoid a compiler warning whenever an
// instance is constructed, because this class inherits from class Throwable,
// which implements the interface Serializable.
//------------------------------------------------------------------------------

   private static final long serialVersionUID = 1L;

//==============================================================================
}
@


1.7
log
@Switched two exceptions from class InternalErrorException to
   TerminalAppErrorException.
@
text
@a3 2
//
// Contains the declaration of class BadCharacterException.
@


1.6
log
@Replaced class WitSevereErrorException with class TerminalAppErrorException.
@
text
@d50 3
a52 1
// Package-Internal Constructor
d55 1
a55 1
   BadCharacterException (String theOffendingString)
@


1.5
log
@Changed class name GeneralException to WitjException.
@
text
@d50 1
a50 1
// Package-Internal Constructors
@


1.4
log
@Changed name of Java class WitjException to GeneralException.
@
text
@d29 1
a29 1
//    GeneralException
@


1.3
log
@Changed the name of Java class NonUTF8DataFileException to
   BadCharacterException.
@
text
@d29 1
a29 1
//    WitjException
@


1.2
log
@Detection of  non-UFT-8 strings.
@
text
@d19 2
a20 5
// * A data file was read by the readData method of class Problem that
//   contains a part name, operation name, or demand name that contains a
//   character does not translate properly to the Java character set, i.e., 
//   when the character is translated from C++ to Java and back to C++, the
//   result is a different character than was read from the file.
d37 13
d53 1
a53 1
   BadCharacterException (String message)
d56 2
a57 6
         "   A data file was read by the readData method of class Problem\n"
       + "   that contains a part name, operation name, or demand name that\n"
       + "   contains a character does not translate properly to the Java\n"
       + "   character set, i.e., when the character is translated from C++\n"
       + "   to Java and back to C++, the result is a different character\n"
       + "   than was read from the file.\n"
d59 2
a60 1
       + "   To see the offending string, check the WIT severe error message.\n"
d63 2
d72 9
@


1.1
log
@Bad data file character detection.
@
text
@@

