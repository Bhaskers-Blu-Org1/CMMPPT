head	1.3;
access;
symbols;
locks; strict;
comment	@# @;


1.3
date	2009.07.23.18.26.41;	author rjw;	state dead;
branches;
next	1.2;

1.2
date	2009.07.23.17.47.22;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2009.07.21.19.09.16;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Changed name of class TerminalAppErrorException to TerminalAppException.
@
text
@
//==============================================================================
// WIT-J Java Source File TerminalAppErrorException.java.
//
// Contains the declaration of class TerminalAppErrorException.
//==============================================================================

package       com.ibm.witj;

import static com.ibm.witj.Utility.*;

//==============================================================================
// Class TerminalAppErrorException
//
// One kind of unchecked Exception thrown by WIT-J.
//
// When WIT-J throws an TerminalAppErrorException, this indicates that:
//
// * The Exception seems to be due to an error in the application program.
// * As a result of the throw, WIT-J is now in a non-functional state.
//   No further calls to WIT-J methods should be made for the rest of the
//   program process.
//
// Class Hierarchy:
//
// RuntimeException (java.lang.RuntimeException)
//    WitjException
//       TerminalException
//          TerminalAppErrorException
//==============================================================================

public final class TerminalAppErrorException extends TerminalException
{
//------------------------------------------------------------------------------
// newInstanceForLoadLibraryFailure (theLinkErr)
//
// Constructs and returns a new TerminalAppErrorException to be thrown when the
// call to System.loadLibrary ("witj") threw an UnsatisfiedLinkError.
//------------------------------------------------------------------------------

   static TerminalAppErrorException newInstanceForLoadLibraryFailure (
         UnsatisfiedLinkError theLinkErr)
      {
      String                    thePath;
      TerminalAppErrorException theAppErrorExc;

      thePath = System.getProperty ("java.library.path");

      theAppErrorExc  =
         new TerminalAppErrorException (
            "   The Java portion of WIT-J was not able to load the native\n"
          + "   library \"witj\" for the C++ portion of WIT-J. This may\n"
          + "   indicate a problem with the native library path:\n"
          + "\n"
          + "      java.library.path = \"" + thePath + "\"");

      theAppErrorExc.initCause (theLinkErr);

      return theAppErrorExc;
      }

//------------------------------------------------------------------------------
// newInstanceForUnsatisfiedLink (theLinkErr)
//
// Constructs and returns a new TerminalAppErrorException to be thrown when an
// UnsatisfiedLinkError was thrown other than by System.loadLibrary.
//------------------------------------------------------------------------------

   static TerminalAppErrorException newInstanceForUnsatisfiedLink (
         UnsatisfiedLinkError theLinkErr)
      {
      String                    thePath;
      TerminalAppErrorException theAppErrorExc;

      thePath = System.getProperty ("java.library.path");

      theAppErrorExc  =
         new TerminalAppErrorException (
            "   An UnsatisfiedLinkError was thrown within the Java portion of\n"
          + "   WIT-J. This may indicate a problem linking to the native\n"
          + "   method implementations in the native library \"witj\" for the\n"
          + "   C++ portion of WIT-J.\n"
          + "\n"
          + "      java.library.path = \"" + thePath + "\"");

      theAppErrorExc.initCause (theLinkErr);

      return theAppErrorExc;
      }

//==============================================================================
// Private Constructor
//
// To be called from C++.
//==============================================================================

   private TerminalAppErrorException (String message)
      {
      super (
         message + "\n"
       + "\n"
       + "   This indicates an error in the application program.\n");
      }

//==============================================================================
// Private Fields
//==============================================================================

//------------------------------------------------------------------------------
// serialVersionUID
//
// This field is required in order to avoid a compiler warning whenever an
// instance is constructed, because this class inherits from class Throwable,
// which implements the interface Serializable.
//------------------------------------------------------------------------------

   private static final long serialVersionUID = 1L;

//==============================================================================
}
@


1.2
log
@Switched two exceptions from class InternalErrorException to
   TerminalAppErrorException.
@
text
@@


1.1
log
@Replaced class WitSevereErrorException with class TerminalAppErrorException.
@
text
@d34 57
d92 3
a94 1
// Package-Internal Constructor
d97 1
a97 1
   TerminalAppErrorException (String message)
@

