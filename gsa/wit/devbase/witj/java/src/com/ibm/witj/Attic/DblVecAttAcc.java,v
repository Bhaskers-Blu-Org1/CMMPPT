head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2008.06.19.15.05.15;	author rjw;	state dead;
branches;
next	1.1;

1.1
date	2008.06.19.13.36.45;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Changed class name DblVecAttAcc to DblVecInAttAcc.
@
text
@
//==============================================================================
// WIT-J Java Source File DblVecAttAcc.java.
//
// Contains the declaration of class DblVecAttAcc.
//==============================================================================

package com.ibm.witj;

//==============================================================================
// Class DblVecAttAcc
//
// "Double Vector Attribute Accessor"
// Provides access to all attributes of type "vector of doubles" belonging to
// all the Components of a Problem.
//
// Class Hierarchy:
//
//    PublicObject
//       AttAcc
//          DblVecAttAcc
//==============================================================================

public final class DblVecAttAcc extends AttAcc
{
//==============================================================================
// Public Methods
//==============================================================================

//------------------------------------------------------------------------------
// setValue (theDblArr)
//
// Sets the value of the associated attribute for the associated Component to
// theDblArr.
// theDblArr must be of length nPeriods.
//------------------------------------------------------------------------------

   public void setValue (double[] theDblArr)
      {
      checkVecSetValue (theDblArr.length);

      assocAttCI ().setDblVec (assocCompCI (), theDblArr);
      }

//------------------------------------------------------------------------------
// getValue (theDblArr)
//
// Returns the current value of the associated attribute for the associated
// Component.
//------------------------------------------------------------------------------

   public double[] getValue ()
      {
      double[] theDblArr;

      checkGetValue ();

      theDblArr = new double[nPeriods ()];

      assocAttCI ().getDblVec (assocCompCI (), theDblArr);

      return theDblArr;
      }

//==============================================================================
// Package-Internal Methods
//==============================================================================

//------------------------------------------------------------------------------
// Constructor.
//------------------------------------------------------------------------------

   DblVecAttAcc (AttMgr theAttMgr)
      {
      super (theAttMgr);
      }

//------------------------------------------------------------------------------
// concClassName ().
//
// Override from class AttAcc.
//------------------------------------------------------------------------------

   String concClassName ()
      {
      return "DblVecAttAcc";
      }

//==============================================================================
}
@


1.1
log
@Changed class name       AttI to       AttAcc.
Changed class name DblVecAttI to DblVecAttAcc.
@
text
@@

