head	1.21;
access;
symbols;
locks; strict;
comment	@# @;


1.21
date	2011.05.02.18.32.34;	author rjw;	state Exp;
branches;
next	1.20;

1.20
date	2009.09.30.20.45.02;	author rjw;	state Exp;
branches;
next	1.19;

1.19
date	2009.09.17.21.46.46;	author rjw;	state Exp;
branches;
next	1.18;

1.18
date	2009.07.23.18.26.41;	author rjw;	state Exp;
branches;
next	1.17;

1.17
date	2009.07.21.19.09.16;	author rjw;	state Exp;
branches;
next	1.16;

1.16
date	2009.07.06.20.43.23;	author rjw;	state Exp;
branches;
next	1.15;

1.15
date	2009.06.10.16.29.21;	author rjw;	state Exp;
branches;
next	1.14;

1.14
date	2009.05.12.19.29.52;	author rjw;	state Exp;
branches;
next	1.13;

1.13
date	2009.05.12.15.57.59;	author rjw;	state Exp;
branches;
next	1.12;

1.12
date	2009.04.15.16.29.28;	author rjw;	state Exp;
branches;
next	1.11;

1.11
date	2009.04.13.19.51.41;	author rjw;	state Exp;
branches;
next	1.10;

1.10
date	2009.04.10.23.51.14;	author rjw;	state Exp;
branches;
next	1.9;

1.9
date	2009.01.05.20.21.35;	author rjw;	state Exp;
branches;
next	1.8;

1.8
date	2009.01.02.23.49.45;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2009.01.02.23.44.19;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2008.12.24.22.59.46;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2008.12.24.00.18.56;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2008.12.22.23.15.51;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2008.12.22.22.26.42;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2008.12.18.23.48.09;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2008.12.16.23.43.04;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.21
log
@Reduced heading comments.
@
text
@
//==============================================================================
// WIT-J Java Source File TerminalException.java.
//==============================================================================

package       com.ibm.witj;

import static com.ibm.witj.Utility.*;

//==============================================================================
// Class TerminalException
//
// One kind of unchecked Exception thrown by WIT-J.
//
// When WIT-J throws a TerminalException, this indicates that:
//
// * As a result of the throw, WIT-J is now in a non-functional state.
//   No further calls to WIT-J methods should be made for the rest of the
//   program process.
//
// Class Hierarchy:
//
// RuntimeException (java.lang.RuntimeException)
//    WitjException
//       TerminalException
//          TerminalAppException
//          ReadDataException
//          BadCharacterException
//          OutOfMemoryException
//          InternalErrorException
//==============================================================================

public abstract class TerminalException extends WitjException
{
//==============================================================================
// Public Methods
//==============================================================================

//------------------------------------------------------------------------------
// Accessors.
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
// witjHasTerminated ()
//
// Returns true, iff WIT-J has terminated its functioning.
//------------------------------------------------------------------------------

   public static boolean witjHasTerminated ()
      {
      try
         {
         return terminated;
         }

      catch (Throwable theThrowable)
         {
         throw getExceptionToThrow (theThrowable);
         }
      }

//==============================================================================
// Package-Internal Constructor
//==============================================================================

   TerminalException (String message)
      {
      super (
            "\n"
       +    "\n"
       +     message
       +    "\n"
       + "   As a result of this Exception, "
       +    "WIT-J has terminated its functioning."
       +    "\n"
       + "   No further calls to WIT-J methods should be made for the rest of\n"
       + "   the program process.\n");

      terminated = true;
      }

//==============================================================================
// Package-Internal Methods
//==============================================================================

//------------------------------------------------------------------------------
// notAllowedWhenTerminated (methName)
//
// Verifies that WIT-J has not terminated its functioning.
//
// Arguments:
//    methName: The name of the method.
//------------------------------------------------------------------------------

   static void notAllowedWhenTerminated (String methName)
      {
      if (terminated)
         throw
            new StatusQuoException (
               "   A WIT-J method was called after WIT-J had terminated "
             +    "its functioning.\n"
             + "\n"
             + "      Method: " + methName);
      }

//==============================================================================
// Private Fields
//==============================================================================

//------------------------------------------------------------------------------
// terminated
//
// True, iff WIT-J has terminated its functioning.
//------------------------------------------------------------------------------

   private static boolean terminated = false;

//==============================================================================
}
@


1.20
log
@Removed restriction forbidding WIT-J to be called from more than one Thread.
@
text
@a3 2
//
// Contains the declaration of class TerminalException.
@


1.19
log
@Implemented minimal thread safety:
   All calls to WIT-J must be from the same Thread or a StatusQuoException
   will be thrown.
@
text
@a54 2
         checkThread ("TerminalException.witjHasTerminated");

a98 2
      checkThread (methName);

@


1.18
log
@Changed name of class TerminalAppErrorException to TerminalAppException.
@
text
@d55 2
d101 2
@


1.17
log
@Replaced class WitSevereErrorException with class TerminalAppErrorException.
@
text
@d28 1
a28 1
//          TerminalAppErrorException
@


1.16
log
@Changed class name GeneralException to WitjException.
@
text
@d28 1
a28 1
//          WitSevereErrorException
@


1.15
log
@Modified some comments.
@
text
@d26 1
a26 1
//    GeneralException
d35 1
a35 1
public abstract class TerminalException extends GeneralException
@


1.14
log
@Replaced the throwExceptionFor method with getExeceptionToThrow.
@
text
@a27 2
//          OutOfMemoryException
//          InternalErrorException
d31 2
@


1.13
log
@Changed name of Java class WitjException to GeneralException.
@
text
@d60 1
a60 3
         throwExceptionFor (theThrowable);

         return false;
@


1.12
log
@Changed the name of Java class NonUTF8DataFileException to
   BadCharacterException.
@
text
@d26 1
a26 1
//    WitjException
d35 1
a35 1
public abstract class TerminalException extends WitjException
d60 3
a62 1
         throw getWitjExceptionFor (theThrowable);
@


1.11
log
@Detection of  non-UFT-8 strings.
@
text
@d32 1
a32 1
//          NonUTF8DataFileException
@


1.10
log
@Bad data file character detection.
@
text
@d32 1
a32 1
//          BadCharacterException
@


1.9
log
@Added code to handle errors in the execution of readData.
@
text
@d32 1
@


1.8
log
@Revised some comments.
@
text
@d25 1
a25 1
// RuntimeException
d31 1
@


1.7
log
@Collapsed the subclasses of InternalErrorException into InternalErrorException.
@
text
@d29 1
a30 1
//          InternalErrorException
@


1.6
log
@Added code to handle severe errors from WIT.
@
text
@a30 5
//             JavaAssertionException
//             UnexpJavaThrowableException
//             CppAssertionException
//             JniExcException
//             UnexpCppExcException
@


1.5
log
@Added code to handle Java exceptions raised during the execution of JNI
   functions.
@
text
@d29 1
@


1.4
log
@Changed some Java Exception class names.
@
text
@d33 1
@


1.3
log
@Implemented Java class OutOfMemoryException.
@
text
@d30 4
a33 4
//             AssertionErrorException
//             CppAssertFailureException
//             UnexpectedCppExcException
//             UnexpectedThrowableException
@


1.2
log
@Implemented class InternalErrorException.
@
text
@d28 1
@


1.1
log
@Changed a Java class name: WitjAbortsException ==> TerminalException
@
text
@d28 5
a32 4
//          AssertionErrorException
//          CppAssertFailureException
//          UnexpectedCppExcException
//          UnexpectedThrowableException
a74 2
       + "   This indicates a programming error in WIT-J.\n"
       +    "\n"
@

