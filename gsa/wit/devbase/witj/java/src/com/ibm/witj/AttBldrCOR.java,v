head	1.17;
access;
symbols;
locks; strict;
comment	@# @;


1.17
date	2011.05.02.18.32.17;	author rjw;	state Exp;
branches;
next	1.16;

1.16
date	2011.04.15.19.12.38;	author rjw;	state Exp;
branches;
next	1.15;

1.15
date	2011.03.30.16.20.46;	author rjw;	state Exp;
branches;
next	1.14;

1.14
date	2009.09.29.19.09.23;	author rjw;	state Exp;
branches;
next	1.13;

1.13
date	2009.09.25.22.42.42;	author rjw;	state Exp;
branches;
next	1.12;

1.12
date	2009.06.05.15.08.22;	author rjw;	state Exp;
branches;
next	1.11;

1.11
date	2009.05.05.20.17.05;	author rjw;	state Exp;
branches;
next	1.10;

1.10
date	2009.01.23.19.32.24;	author rjw;	state Exp;
branches;
next	1.9;

1.9
date	2009.01.21.21.43.24;	author rjw;	state Exp;
branches;
next	1.8;

1.8
date	2009.01.16.17.03.36;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2009.01.16.16.32.02;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2008.12.15.15.35.32;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2008.12.03.18.55.07;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2008.11.25.21.58.16;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2008.10.06.14.58.26;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2008.10.01.22.59.57;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2008.09.26.22.21.23;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.17
log
@Reduced heading comments.
@
text
@
//==============================================================================
// WIT-J Java Source File AttBldrCOR.java.
//==============================================================================

package       com.ibm.witj;

import static com.ibm.witj.Utility.*;

//==============================================================================
// Class AttBldrCOR
//
// "AttBldr C++ Object Representation"
// A Java representation of a C++ AttBldr.
//
// Class Hierarchy:
//
// PreservedInternal
//    CppObjRep
//       AttBldrCOR
//==============================================================================

final class AttBldrCOR extends CppObjRep
{
//==============================================================================
// Package-Internal Constructor
//==============================================================================

   AttBldrCOR (CoordinatorCOR theCoordCOR)
      {
      acquireNewCppObject (theCoordCOR);
      }

//==============================================================================
// Package-Internal Methods
//==============================================================================

//------------------------------------------------------------------------------
// hasAttFor (scopedAttName)
//
// Returns true, iff the C++ AttBldr that belongs to this AttBldrCOR currently
// owns a C++ Att whose scoped name matches scopedAttName.
//------------------------------------------------------------------------------

   native boolean hasAttFor (String scopedAttName);

//------------------------------------------------------------------------------
// isEmpty
//
// Returns true, iff the C++ AttBldr that belongs to this AttBldrCOR currently
// owns no C++ Atts.
//------------------------------------------------------------------------------

   native boolean isEmpty ();

//------------------------------------------------------------------------------
// print
//
// Prints the contents of the C++ AttBldr that belongs to this AttBldrCOR.
//------------------------------------------------------------------------------

   native void print ();

//==============================================================================
// Private Methods
//==============================================================================

//------------------------------------------------------------------------------
// acquireNewCppObject (theCoordCOR).
// 
// This method is explained in the comment for class CppObjRep.
//------------------------------------------------------------------------------

   private native void acquireNewCppObject (CoordinatorCOR theCoordCOR);

//==============================================================================
}
@


1.16
log
@Java CppObjRep classes
@
text
@a3 2
//
// Contains the declaration of class AttBldrCOR.
@


1.15
log
@Revised CppObjRep class ctors.
@
text
@d33 1
a33 1
      createCppObject (theCoordCOR);
d71 1
a71 1
// createCppObject (theCoordCOR).
d76 1
a76 1
   private native void createCppObject (CoordinatorCOR theCoordCOR);
@


1.14
log
@Implemented class PreservedInternal and made several classes extend it
   instead of class PreservedObject.
@
text
@d31 1
a31 1
   AttBldrCOR (Coordinator theCoord)
d33 1
a33 1
      createCppObject (theCoord.getCoordinatorCOR ());
@


1.13
log
@Implemented thePreservedObject.getCoordinator ().
@
text
@d20 1
a20 1
// PreservedObject
a32 2
      super (theCoord);

@


1.12
log
@Changed the name each native method that creates a C++ object to
   createCppObject.
@
text
@d31 1
a31 1
   AttBldrCOR (CoordinatorCOR theCoordCOR)
d33 3
a35 1
      createCppObject (theCoordCOR);
@


1.11
log
@Changed name of Java class RetainedObject to PreservedObject.
@
text
@d33 1
a33 1
      createMyCppAttBldr (theCoordCOR);
d71 1
a71 1
// createMyCppAttBldr (theCoordCOR).
d73 1
a73 1
// Constructs a new C++ AttBldr for theCoordCOR and takes ownership of it.
d76 1
a76 1
   private native void createMyCppAttBldr (CoordinatorCOR theCoordCOR);
@


1.10
log
@Coordinator
@
text
@d20 1
a20 1
// RetainedObject
@


1.9
log
@Change the names of the ProbMgr classes to Coordinator, etc.
@
text
@d31 1
a31 1
   AttBldrCOR (CoordinatorCOR theCoordinatorCOR)
d33 1
a33 1
      createMyCppAttBldr (theCoordinatorCOR);
d71 1
a71 1
// createMyCppAttBldr (theCoordinatorCOR).
d73 1
a73 1
// Constructs a new C++ AttBldr for theCoordinatorCOR and takes ownership of it.
d76 1
a76 1
   private native void createMyCppAttBldr (CoordinatorCOR theCoordinatorCOR);
@


1.8
log
@Change the mname of the ProbCtr classes to ProbMgr in both Java and C++.
@
text
@d31 1
a31 1
   AttBldrCOR (ProbMgrCOR theProbMgrCOR)
d33 1
a33 1
      createMyCppAttBldr (theProbMgrCOR);
d71 1
a71 1
// createMyCppAttBldr (theProbMgrCOR).
d73 1
a73 1
// Constructs a new C++ AttBldr for theProbMgrCOR and takes ownership of it.
d76 1
a76 1
   private native void createMyCppAttBldr (ProbMgrCOR theProbMgrCOR);
@


1.7
log
@Continued implementation of the ProbCtr classes.
@
text
@d31 1
a31 1
   AttBldrCOR (ProbCtrCOR theProbCtrCOR)
d33 1
a33 1
      createMyCppAttBldr (theProbCtrCOR);
d71 1
a71 1
// createMyCppAttBldr (theProbCtrCOR).
d73 1
a73 1
// Constructs a new C++ AttBldr for theProbCtrCOR and takes ownership of it.
d76 1
a76 1
   private native void createMyCppAttBldr (ProbCtrCOR theProbCtrCOR);
@


1.6
log
@Minor revision.
@
text
@d31 1
a31 1
   AttBldrCOR (ProblemCOR theProblemCOR)
d33 1
a33 1
      createMyCppAttBldr (theProblemCOR);
d71 1
a71 1
// createMyCppAttBldr (theProblemCOR).
d73 1
a73 1
// Constructs a new C++ AttBldr for theProblemCOR and takes ownership of it.
d76 1
a76 1
   private native void createMyCppAttBldr (ProblemCOR theProblemCOR);
@


1.5
log
@Minor changes.
@
text
@d20 3
a22 3
//    RetainedObject
//       CppObjRep
//          AttBldrCOR
@


1.4
log
@Dismantling class SessionCOR.
@
text
@d50 1
a50 1
// isEmpty ()
d59 1
a59 1
// print ()
@


1.3
log
@Minor revision.
@
text
@d31 1
a31 1
   AttBldrCOR (SessionCOR theSessionCOR)
d33 1
a33 1
      createMyCppAttBldr (theSessionCOR);
d71 1
a71 1
// createMyCppAttBldr (theSessionCOR).
d73 1
a73 1
// Constructs a new C++ AttBldr for theSessionCOR and takes ownership of it.
d76 1
a76 1
   private native void createMyCppAttBldr (SessionCOR theSessionCOR);
@


1.2
log
@Minor revision.
@
text
@d50 1
a50 1
// getEmptyMode ()
d56 1
a56 1
   native boolean getEmptyMode ();
@


1.1
log
@Numerous class name changes.
@
text
@d50 1
a50 1
// isEmpty ()
d56 1
a56 1
   native boolean isEmpty ();
@

