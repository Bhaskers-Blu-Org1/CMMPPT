head	1.30;
access;
symbols;
locks; strict;
comment	@# @;


1.30
date	2008.09.03.20.33.11;	author rjw;	state dead;
branches;
next	1.29;

1.29
date	2008.08.28.18.30.38;	author rjw;	state Exp;
branches;
next	1.28;

1.28
date	2008.08.20.20.57.48;	author rjw;	state Exp;
branches;
next	1.27;

1.27
date	2008.08.20.20.45.50;	author rjw;	state Exp;
branches;
next	1.26;

1.26
date	2008.08.19.22.14.33;	author rjw;	state Exp;
branches;
next	1.25;

1.25
date	2008.08.19.20.34.46;	author rjw;	state Exp;
branches;
next	1.24;

1.24
date	2008.08.18.22.16.58;	author rjw;	state Exp;
branches;
next	1.23;

1.23
date	2008.08.09.00.18.27;	author rjw;	state Exp;
branches;
next	1.22;

1.22
date	2008.08.08.21.26.16;	author rjw;	state Exp;
branches;
next	1.21;

1.21
date	2008.08.07.18.21.07;	author rjw;	state Exp;
branches;
next	1.20;

1.20
date	2008.08.07.17.39.40;	author rjw;	state Exp;
branches;
next	1.19;

1.19
date	2008.08.07.17.28.25;	author rjw;	state Exp;
branches;
next	1.18;

1.18
date	2008.08.06.18.48.23;	author rjw;	state Exp;
branches;
next	1.17;

1.17
date	2008.08.01.16.29.33;	author rjw;	state Exp;
branches;
next	1.16;

1.16
date	2008.07.25.22.06.58;	author rjw;	state Exp;
branches;
next	1.15;

1.15
date	2008.07.10.21.44.25;	author rjw;	state Exp;
branches;
next	1.14;

1.14
date	2008.07.09.22.26.46;	author rjw;	state Exp;
branches;
next	1.13;

1.13
date	2008.07.09.15.45.40;	author rjw;	state Exp;
branches;
next	1.12;

1.12
date	2008.06.18.21.28.19;	author rjw;	state Exp;
branches;
next	1.11;

1.11
date	2008.06.17.13.38.08;	author rjw;	state Exp;
branches;
next	1.10;

1.10
date	2008.06.16.20.41.02;	author rjw;	state Exp;
branches;
next	1.9;

1.9
date	2008.06.12.15.37.20;	author rjw;	state Exp;
branches;
next	1.8;

1.8
date	2008.06.12.14.54.24;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2008.05.29.20.53.57;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2008.05.22.21.02.59;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2008.05.22.15.18.40;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2008.05.16.22.10.24;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2008.05.15.19.45.18;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2008.05.14.16.07.27;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2008.05.13.21.06.37;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.30
log
@Replaced class InternalObject with class VitalObject.
@
text
@
//==============================================================================
// WIT-J Java Source File InternalObject.java.
//
// Contains the declaration of class InternalObject.
//==============================================================================

package       com.ibm.witj;

import static com.ibm.witj.Utility.*;

//==============================================================================
// Class InternalObject
//
// The super class for all package-internal classes in WIT-J.
//
// Class Hierarchy:
//
//    InternalObject
//       ProbCoord
//       CompMgr
//       AttRepMgr
//       AttRep
//          StdAttRep
//          CustAttRep
//             [Anonymous inner classes of class CustAttRep]
//       CppInterface
//          ProblemCI
//          ProbCoordCI
//          ComponentCI
//             GlobalCompCI
//             PartCI
//             DemandCI
//             OperationCI
//             BomEntryCI
//             SubstituteCI
//             BopEntryCI
//          AttBldrCI
//          AttCI
//==============================================================================

abstract class InternalObject
{
//==============================================================================
// Protected Methods
//==============================================================================

//------------------------------------------------------------------------------
// finalize ()
//
// Override from class Object.
//------------------------------------------------------------------------------

   protected void finalize () throws Throwable
      {
      super.finalize ();

      assert (! isActive);
      }

//==============================================================================
// Package-Internal Methods
//==============================================================================

//------------------------------------------------------------------------------
// Constructor.
//------------------------------------------------------------------------------

   InternalObject ()
      {
      }

//------------------------------------------------------------------------------
// shutDown ().
//
// Puts this InternalObject into an inactive state.
//
// The following must be done when a InternalObject is shut down:
//
// * All C++  objects that it owns are deleted.
// * All Java objects that it owns are shut down.
// * All references to it from active WIT-J objects are removed.
//
// Thus, if a InternalObject is shut down, it is ready for garbage collection.
// Garbage collection of a InternalObject while it is still active results in an
// internal error.
//------------------------------------------------------------------------------

   void shutDown ()
      {
      assert (isActive);

      isActive = false;
      }

//==============================================================================
// Private Fields
//==============================================================================

//------------------------------------------------------------------------------
// isActive.
//
// True, iff this InternalObject is currently active.
//------------------------------------------------------------------------------

   private boolean isActive = true;

//==============================================================================
}
@


1.29
log
@Name change: Global --> GlobalComp.
@
text
@@


1.28
log
@Customized Attributes.
@
text
@d31 1
a31 1
//             GlobalCI
@


1.27
log
@Made class CustAttRep.NPeriods anonymous.
@
text
@d26 1
a26 1
//             [Anonymous inner classes of class AttRepMgr]
@


1.26
log
@Revised the shut-down model.
@
text
@d26 1
@


1.25
log
@Added class CustAttRep.
@
text
@d76 10
a85 1
// This method must be called before this InternalObject is garbage-collected.
@


1.24
log
@Implemented Utility class.
@
text
@d25 1
@


1.23
log
@AttReps.
@
text
@d8 3
a10 1
package com.ibm.witj;
a84 27
//------------------------------------------------------------------------------
// intAbortWmsg (errorTxt)
//
// Issues an internal error message whose content is given the errorTxt and then
// aborts the program.
//------------------------------------------------------------------------------

   static void intAbortWmsg (String errorTxt)
      {
      System.out.println (
           "\n"
         + "WIT-J Internal Error:\n"
         + "\n"
         + errorTxt
         + "\n"
         + "\n"
         + "Stack Trace:\n");

      new Throwable ().printStackTrace ();

      System.out.println (
           "\n"
         + "Application Program aborted by WIT-J.\n");
   
      System.exit (4);
      }

@


1.22
log
@AttReps.
@
text
@a22 3
//       AttOld
//          StdAttOld
//       AttCIMgr
@


1.21
log
@AttReps.
@
text
@d23 2
@


1.20
log
@AttReps.
@
text
@d22 1
@


1.19
log
@AttReps.
@
text
@d21 1
@


1.18
log
@Classes Global and GlobalCI.
@
text
@d20 1
@


1.17
log
@Attributes.
@
text
@d25 1
a25 1
//             GlobalCompCI
@


1.16
log
@Attributes.
@
text
@d81 27
@


1.15
log
@Attributes.
@
text
@d44 2
a80 27
//------------------------------------------------------------------------------
// intAbortWmsg (errorTxt)
//
// Issues an internal error message whose content is given the errorTxt and then
// aborts the program.
//------------------------------------------------------------------------------

   static void intAbortWmsg (String errorTxt)
      {
      System.out.println (
           "\n"
         + "WIT-J Internal Error:\n"
         + "\n"
         + errorTxt
         + "\n"
         + "\n"
         + "Stack Trace:\n");

      new Throwable ().printStackTrace ();

      System.out.println (
           "\n"
         + "Application Program aborted by WIT-J.\n");
   
      System.exit (4);
      }

@


1.14
log
@Attributes.
@
text
@a19 1
//       AttOldMgr
@


1.13
log
@Attributes.
@
text
@d21 1
@


1.12
log
@Attributes.
@
text
@d20 1
a20 1
//       AttMgr
@


1.11
log
@Implemented Java class AttRep.
@
text
@d79 27
@


1.10
log
@Created Java class CompMgr.
@
text
@d66 1
a66 1
// shutdown ().
@


1.9
log
@Added Java class AttMgr.
@
text
@d19 1
@


1.8
log
@Comments, etc.
@
text
@d19 1
@


1.7
log
@Attributes.
@
text
@d1 7
@


1.6
log
@*** empty log message ***
@
text
@d23 2
@


1.5
log
@*** empty log message ***
@
text
@d21 1
@


1.4
log
@*** empty log message ***
@
text
@d21 1
@


1.3
log
@*** empty log message ***
@
text
@d20 1
@


1.2
log
@*** empty log message ***
@
text
@d14 1
@


1.1
log
@*** empty log message ***
@
text
@d11 1
a11 1
//       CompMgr
@

