head	1.44;
access;
symbols;
locks; strict;
comment	@ * @;


1.44
date	2011.05.04.22.49.02;	author rjw;	state Exp;
branches;
next	1.43;

1.43
date	2011.04.15.21.02.17;	author rjw;	state Exp;
branches;
next	1.42;

1.42
date	2011.04.15.19.01.04;	author rjw;	state Exp;
branches;
next	1.41;

1.41
date	2011.04.15.15.49.02;	author rjw;	state Exp;
branches;
next	1.40;

1.40
date	2011.04.15.00.07.19;	author rjw;	state Exp;
branches;
next	1.39;

1.39
date	2011.04.14.16.11.40;	author rjw;	state Exp;
branches;
next	1.38;

1.38
date	2011.04.13.22.36.19;	author rjw;	state Exp;
branches;
next	1.37;

1.37
date	2011.04.13.21.50.33;	author rjw;	state Exp;
branches;
next	1.36;

1.36
date	2011.04.13.19.16.18;	author rjw;	state Exp;
branches;
next	1.35;

1.35
date	2011.04.13.16.00.13;	author rjw;	state Exp;
branches;
next	1.34;

1.34
date	2011.04.12.00.33.10;	author rjw;	state Exp;
branches;
next	1.33;

1.33
date	2011.04.11.18.38.16;	author rjw;	state Exp;
branches;
next	1.32;

1.32
date	2011.04.05.22.25.37;	author rjw;	state Exp;
branches;
next	1.31;

1.31
date	2011.04.01.23.24.58;	author rjw;	state Exp;
branches;
next	1.30;

1.30
date	2011.04.01.19.23.32;	author rjw;	state Exp;
branches;
next	1.29;

1.29
date	2011.03.29.23.38.42;	author rjw;	state Exp;
branches;
next	1.28;

1.28
date	2011.03.19.00.26.07;	author rjw;	state Exp;
branches;
next	1.27;

1.27
date	2011.02.16.19.08.29;	author rjw;	state Exp;
branches;
next	1.26;

1.26
date	2011.02.15.20.18.56;	author rjw;	state Exp;
branches;
next	1.25;

1.25
date	2010.04.20.20.55.06;	author rjw;	state Exp;
branches;
next	1.24;

1.24
date	2010.04.17.00.20.18;	author rjw;	state Exp;
branches;
next	1.23;

1.23
date	2010.04.13.23.10.42;	author rjw;	state Exp;
branches;
next	1.22;

1.22
date	2009.06.05.15.08.21;	author rjw;	state Exp;
branches;
next	1.21;

1.21
date	2009.03.27.20.27.58;	author rjw;	state Exp;
branches;
next	1.20;

1.20
date	2009.03.26.19.22.22;	author rjw;	state Exp;
branches;
next	1.19;

1.19
date	2009.03.23.21.51.39;	author rjw;	state Exp;
branches;
next	1.18;

1.18
date	2009.03.13.19.32.16;	author rjw;	state Exp;
branches;
next	1.17;

1.17
date	2009.02.14.00.51.27;	author rjw;	state Exp;
branches;
next	1.16;

1.16
date	2009.01.29.22.06.36;	author rjw;	state Exp;
branches;
next	1.15;

1.15
date	2008.12.22.16.29.11;	author rjw;	state Exp;
branches;
next	1.14;

1.14
date	2008.12.15.17.17.38;	author rjw;	state Exp;
branches;
next	1.13;

1.13
date	2008.12.12.23.38.30;	author rjw;	state Exp;
branches;
next	1.12;

1.12
date	2008.12.12.19.29.24;	author rjw;	state Exp;
branches;
next	1.11;

1.11
date	2008.12.03.18.28.48;	author rjw;	state Exp;
branches;
next	1.10;

1.10
date	2008.11.21.15.49.15;	author rjw;	state Exp;
branches;
next	1.9;

1.9
date	2008.10.21.20.34.03;	author rjw;	state Exp;
branches;
next	1.8;

1.8
date	2008.10.14.22.04.38;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2008.10.07.18.50.21;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2008.10.06.22.14.00;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2008.10.06.14.42.38;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2008.10.01.22.55.33;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2008.09.29.15.26.11;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2008.09.29.15.05.36;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2008.09.26.22.21.20;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.44
log
@setValue ==> set
getValue ==> get
@
text
@//------------------------------------------------------------------------------
// WIT-J C++ Source file AttCOR.C.
//
// Contains the C++ implementations of the native methods of Java class
// witj.AttCOR.
//------------------------------------------------------------------------------

#include     <NativeMacros.h>
#include <ExceptionHandler.h>
#include           <CORJOR.h>
#include              <Att.h>
#include          <AttBldr.h>
#include        <Component.h>
#include      <CTVecSupply.h>
#include         <ArrayJOR.h>
#include        <StringJOR.h>

using namespace WitJ;

//------------------------------------------------------------------------------

NATIVE_METHOD (void, AttCOR, setBool) (
      JNIEnv *   theJNIEnv,
      _jobject * theAttCORJObj,
      _jobject * theCompCORJObj,
      jboolean   theJBool)
   {
   BEGIN_TRY_BLOCK

   CORJOR <Att>       theAttCJOR  (theAttCORJObj,  theJNIEnv);
   CORJOR <Component> theCompCJOR (theCompCORJObj, theJNIEnv);
   Boolean            theBool;

   theBool = theJBool;

   theAttCJOR.getCppObject ()->set (theCompCJOR.getCppObject (), theBool);

   END_TRY_BLOCK_SIMPLE_RETURN (theJNIEnv)
   }

//------------------------------------------------------------------------------

NATIVE_METHOD (void, AttCOR, setInt) (
      JNIEnv *   theJNIEnv,
      _jobject * theAttCORJObj,
      _jobject * theCompCORJObj,
      jint       theJInt)
   {
   BEGIN_TRY_BLOCK

   CORJOR <Att>       theAttCJOR  (theAttCORJObj,  theJNIEnv);
   CORJOR <Component> theCompCJOR (theCompCORJObj, theJNIEnv);
   int          theInt;

   theInt  = theJInt;

   theAttCJOR.getCppObject ()->set (theCompCJOR.getCppObject (), theInt);

   END_TRY_BLOCK_SIMPLE_RETURN (theJNIEnv)
   }

//------------------------------------------------------------------------------

NATIVE_METHOD (void, AttCOR, setDbl) (
      JNIEnv *   theJNIEnv,
      _jobject * theAttCORJObj,
      _jobject * theCompCORJObj,
      jdouble    theJDbl)
   {
   BEGIN_TRY_BLOCK

   CORJOR <Att>       theAttCJOR  (theAttCORJObj,  theJNIEnv);
   CORJOR <Component> theCompCJOR (theCompCORJObj, theJNIEnv);
   double       theDbl;

   theDbl  = theJDbl;

   theAttCJOR.getCppObject ()->set (theCompCJOR.getCppObject (), theDbl);

   END_TRY_BLOCK_SIMPLE_RETURN (theJNIEnv)
   }

//------------------------------------------------------------------------------

NATIVE_METHOD (void, AttCOR, setString) (
      JNIEnv *   theJNIEnv,
      _jobject * theAttCORJObj,
      _jobject * theCompCORJObj,
      _jstring * theJString)
   {
   BEGIN_TRY_BLOCK

   CORJOR <Att>       theAttCJOR   (theAttCORJObj,  theJNIEnv);
   CORJOR <Component> theCompCJOR  (theCompCORJObj, theJNIEnv);
   StringJOR          theStringJOR (theJString,     theJNIEnv);

   theAttCJOR.
      getCppObject ()->
         set (
            theCompCJOR .getCppObject (),
            theStringJOR.getCString   ());

   END_TRY_BLOCK_SIMPLE_RETURN (theJNIEnv)
   }

//------------------------------------------------------------------------------

NATIVE_METHOD (void, AttCOR, setBoolVec) (
      JNIEnv *         theJNIEnv,
      _jobject *       theAttCORJObj,
      _jobject *       theCompCORJObj,
      _jbooleanArray * theJBoolArr)
   {
   BEGIN_TRY_BLOCK

   CORJOR <Att>       theAttCJOR  (theAttCORJObj,  theJNIEnv);
   CORJOR <Component> theCompCJOR (theCompCORJObj, theJNIEnv);
   BoolArrayJOR       theBoolAJOR (theJBoolArr,    theCompCJOR);

   theAttCJOR.
      getCppObject ()->
         set (
            theCompCJOR.getCppObject (),
            theBoolAJOR.getCTVec     ());

   END_TRY_BLOCK_SIMPLE_RETURN (theJNIEnv)
   }

//------------------------------------------------------------------------------

NATIVE_METHOD (void, AttCOR, setIntVec) (
      JNIEnv *     theJNIEnv,
      _jobject *   theAttCORJObj,
      _jobject *   theCompCORJObj,
      _jintArray * theJIntArr)
   {
   BEGIN_TRY_BLOCK

   CORJOR <Att>       theAttCJOR  (theAttCORJObj,  theJNIEnv);
   CORJOR <Component> theCompCJOR (theCompCORJObj, theJNIEnv);
   IntArrayJOR        theIntAJOR  (theJIntArr,     theCompCJOR);

   theAttCJOR.
      getCppObject ()->
         set (
            theCompCJOR.getCppObject (),
            theIntAJOR .getCTVec     ());

   END_TRY_BLOCK_SIMPLE_RETURN (theJNIEnv)
   }

//------------------------------------------------------------------------------

NATIVE_METHOD (void, AttCOR, setDblVec) (
      JNIEnv *        theJNIEnv,
      _jobject *      theAttCORJObj,
      _jobject *      theCompCORJObj,
      _jdoubleArray * theJDblArr)
   {
   BEGIN_TRY_BLOCK

   CORJOR <Att>       theAttCJOR  (theAttCORJObj,  theJNIEnv);
   CORJOR <Component> theCompCJOR (theCompCORJObj, theJNIEnv);
   DblArrayJOR        theDblAJOR  (theJDblArr,     theCompCJOR);

   theAttCJOR.
      getCppObject ()->
         set (
            theCompCJOR.getCppObject (),
            theDblAJOR .getCTVec     ());

   END_TRY_BLOCK_SIMPLE_RETURN (theJNIEnv)
   }

//------------------------------------------------------------------------------

NATIVE_METHOD (void, AttCOR, setBoolVecToScalar) (
      JNIEnv *   theJNIEnv,
      _jobject * theAttCORJObj,
      _jobject * theCompCORJObj,
      jboolean   theJBool)
   {
   BEGIN_TRY_BLOCK

   CORJOR <Att>       theAttCJOR  (theAttCORJObj,  theJNIEnv);
   CORJOR <Component> theCompCJOR (theCompCORJObj, theJNIEnv);
   Boolean            theBool;

   theBool = theJBool;

   theAttCJOR.
      getCppObject ()->
         setVectorToScalar (
            theCompCJOR.getCppObject (),
            theBool);

   END_TRY_BLOCK_SIMPLE_RETURN (theJNIEnv)
   }

//------------------------------------------------------------------------------

NATIVE_METHOD (void, AttCOR, setIntVecToScalar) (
      JNIEnv *   theJNIEnv,
      _jobject * theAttCORJObj,
      _jobject * theCompCORJObj,
      jint       theJInt)
   {
   BEGIN_TRY_BLOCK

   CORJOR <Att>       theAttCJOR  (theAttCORJObj,  theJNIEnv);
   CORJOR <Component> theCompCJOR (theCompCORJObj, theJNIEnv);
   int                theInt;

   theInt = theJInt;

   theAttCJOR.
      getCppObject ()->
         setVectorToScalar (
            theCompCJOR.getCppObject (),
            theInt);

   END_TRY_BLOCK_SIMPLE_RETURN (theJNIEnv)
   }

//------------------------------------------------------------------------------

NATIVE_METHOD (void, AttCOR, setDblVecToScalar) (
      JNIEnv *   theJNIEnv,
      _jobject * theAttCORJObj,
      _jobject * theCompCORJObj,
      jdouble    theJDbl)
   {
   BEGIN_TRY_BLOCK

   CORJOR <Att>       theAttCJOR  (theAttCORJObj,  theJNIEnv);
   CORJOR <Component> theCompCJOR (theCompCORJObj, theJNIEnv);
   double             theDbl;

   theDbl = theJDbl;

   theAttCJOR.
      getCppObject ()->
         setVectorToScalar (
            theCompCJOR.getCppObject (),
            theDbl);

   END_TRY_BLOCK_SIMPLE_RETURN (theJNIEnv)
   }

//------------------------------------------------------------------------------

NATIVE_METHOD (jboolean, AttCOR, getBool) (
      JNIEnv *   theJNIEnv,
      _jobject * theAttCORJObj,
      _jobject * theCompCORJObj)
   {
   BEGIN_TRY_BLOCK

   CORJOR <Att>       theAttCJOR  (theAttCORJObj,  theJNIEnv);
   CORJOR <Component> theCompCJOR (theCompCORJObj, theJNIEnv);
   Boolean            theBool;

   theAttCJOR.getCppObject ()->get (theCompCJOR.getCppObject (), theBool);

   EXCEPTION_ASSERT ((theBool == 0) || (theBool == 1));

   return theBool;

   END_TRY_BLOCK_VALUE_RETURN (theJNIEnv, false)
   }

//------------------------------------------------------------------------------

NATIVE_METHOD (jint, AttCOR, getInt) (
      JNIEnv *   theJNIEnv,
      _jobject * theAttCORJObj,
      _jobject * theCompCORJObj)
   {
   BEGIN_TRY_BLOCK

   CORJOR <Att>       theAttCJOR  (theAttCORJObj,  theJNIEnv);
   CORJOR <Component> theCompCJOR (theCompCORJObj, theJNIEnv);
   int                theInt;

   theAttCJOR.getCppObject ()->get (theCompCJOR.getCppObject (), theInt);

   return theInt;

   END_TRY_BLOCK_VALUE_RETURN (theJNIEnv, 0)
   }

//------------------------------------------------------------------------------

NATIVE_METHOD (jdouble, AttCOR, getDbl) (
      JNIEnv *   theJNIEnv,
      _jobject * theAttCORJObj,
      _jobject * theCompCORJObj)
   {
   BEGIN_TRY_BLOCK

   CORJOR <Att>       theAttCJOR  (theAttCORJObj, theJNIEnv);
   CORJOR <Component> theCompCJOR (theCompCORJObj, theJNIEnv);
   double             theDbl;

   theAttCJOR.getCppObject ()->get (theCompCJOR.getCppObject (), theDbl);

   return theDbl;

   END_TRY_BLOCK_VALUE_RETURN (theJNIEnv, 0.0)
   }

//------------------------------------------------------------------------------

NATIVE_METHOD (_jstring *, AttCOR, getString) (
      JNIEnv *   theJNIEnv,
      _jobject * theAttCORJObj,
      _jobject * theCompCORJObj)
   {
   BEGIN_TRY_BLOCK

   CORJOR <Att>       theAttCJOR  (theAttCORJObj,  theJNIEnv);
   CORJOR <Component> theCompCJOR (theCompCORJObj, theJNIEnv);
   StringJOR          theStringJOR                (theJNIEnv);

   theAttCJOR.getCppObject ()->get (theCompCJOR.getCppObject (), theStringJOR);

   return theStringJOR.getJString ();

   END_TRY_BLOCK_VALUE_RETURN (theJNIEnv, NULL)
   }

//------------------------------------------------------------------------------

NATIVE_METHOD (void, AttCOR, getBoolVec) (
      JNIEnv *         theJNIEnv,
      _jobject *       theAttCORJObj,
      _jobject *       theCompCORJObj,
      _jbooleanArray * theJBoolArr)
   {
   BEGIN_TRY_BLOCK

   CORJOR <Att>       theAttCJOR  (theAttCORJObj,  theJNIEnv);
   CORJOR <Component> theCompCJOR (theCompCORJObj, theJNIEnv);
   BoolArrayJOR       theBoolAJOR (theJBoolArr,    theCompCJOR);

   theAttCJOR.getCppObject ()->get (theCompCJOR.getCppObject (), theBoolAJOR);

   END_TRY_BLOCK_SIMPLE_RETURN (theJNIEnv)
   }

//------------------------------------------------------------------------------

NATIVE_METHOD (void, AttCOR, getIntVec) (
      JNIEnv *     theJNIEnv,
      _jobject *   theAttCORJObj,
      _jobject *   theCompCORJObj,
      _jintArray * theJIntArr)
   {
   BEGIN_TRY_BLOCK

   CORJOR <Att>       theAttCJOR  (theAttCORJObj,  theJNIEnv);
   CORJOR <Component> theCompCJOR (theCompCORJObj, theJNIEnv);
   IntArrayJOR        theIntAJOR  (theJIntArr,     theCompCJOR);

   theAttCJOR.getCppObject ()->get (theCompCJOR.getCppObject (), theIntAJOR);

   END_TRY_BLOCK_SIMPLE_RETURN (theJNIEnv)
   }

//------------------------------------------------------------------------------

NATIVE_METHOD (void, AttCOR, getDblVec) (
      JNIEnv *        theJNIEnv,
      _jobject *      theAttCORJObj,
      _jobject *      theCompCORJObj,
      _jdoubleArray * theJDblArr)
   {
   BEGIN_TRY_BLOCK

   CORJOR <Att>       theAttCJOR  (theAttCORJObj,  theJNIEnv);
   CORJOR <Component> theCompCJOR (theCompCORJObj, theJNIEnv);
   DblArrayJOR        theDblAJOR  (theJDblArr,     theCompCJOR);

   theAttCJOR.getCppObject ()->get (theCompCJOR.getCppObject (), theDblAJOR);

   END_TRY_BLOCK_SIMPLE_RETURN (theJNIEnv)
   }

//------------------------------------------------------------------------------

NATIVE_METHOD (jboolean, AttCOR, isModifiable) (
      JNIEnv *   theJNIEnv,
      _jobject * theAttCORJObj)
   {
   BEGIN_TRY_BLOCK

   CORJOR <Att> theAttCJOR (theAttCORJObj, theJNIEnv);

   return theAttCJOR.getCppObject ()->isModifiable ();

   END_TRY_BLOCK_VALUE_RETURN (theJNIEnv, false)
   }

//------------------------------------------------------------------------------

NATIVE_METHOD (jboolean, AttCOR, valueTypeMatches) (
      JNIEnv *   theJNIEnv,
      _jobject * theAttCORJObj,
      _jstring * theTypeNameJStr)
   {
   BEGIN_TRY_BLOCK

   CORJOR <Att> theAttCJOR      (theAttCORJObj,   theJNIEnv);
   StringJOR    theTypeNameSJOR (theTypeNameJStr, theJNIEnv);
   std::string  theTypeName;

   theTypeName = theTypeNameSJOR.getCString ();

   return theAttCJOR.getCppObject ()->valueTypeMatches (theTypeName);

   END_TRY_BLOCK_VALUE_RETURN (theJNIEnv, false)
   }

//------------------------------------------------------------------------------

NATIVE_METHOD (jboolean, AttCOR, appliesTo) (
      JNIEnv *   theJNIEnv,
      _jobject * theAttCORJObj,
      _jstring * theClassNameJStr)
   {
   BEGIN_TRY_BLOCK

   CORJOR <Att> theAttCJOR       (theAttCORJObj,    theJNIEnv);
   StringJOR    theClassNameSJOR (theClassNameJStr, theJNIEnv);
   const char * theClassNameCStr;

   theClassNameCStr = theClassNameSJOR.getCString ();

   return (theAttCJOR.getCppObject ()->getCompClassName () == theClassNameCStr);

   END_TRY_BLOCK_VALUE_RETURN (theJNIEnv, false)
   }

//------------------------------------------------------------------------------

NATIVE_METHOD (void, AttCOR, acquireCppObject) (
      JNIEnv *   theJNIEnv,
      _jobject * theAttCORJObj,
      _jobject * theAttBldrCORJObj,
      _jstring * scopedAttNameJStr)
   {
   BEGIN_TRY_BLOCK

   CORJOR <Att>     theAttCJOR        (theAttCORJObj,     theJNIEnv);
   CORJOR <AttBldr> theAttBldrCJOR    (theAttBldrCORJObj, theJNIEnv);
   StringJOR        scopedAttNameSJOR (scopedAttNameJStr, theJNIEnv);
   Att *            theAtt;

   theAtt =
      theAttBldrCJOR.
         getCppObject ()->
            handOverAttFor (scopedAttNameSJOR.getCString ());

   theAttCJOR.acquire (theAtt);

   END_TRY_BLOCK_SIMPLE_RETURN (theJNIEnv)
   }
@


1.43
log
@Class template ArrayJOR <E>
@
text
@d36 1
a36 5
   theAttCJOR.
      getCppObject ()->
         setValue (
            theCompCJOR.getCppObject (),
            theBool);
d57 1
a57 5
   theAttCJOR.
      getCppObject ()->
         setValue (
            theCompCJOR.getCppObject (),
            theInt);
d78 1
a78 5
   theAttCJOR.
      getCppObject ()->
         setValue (
            theCompCJOR.getCppObject (),
            theDbl);
d99 1
a99 1
         setValue (
d122 1
a122 1
         setValue (
d145 1
a145 1
         setValue (
d168 1
a168 1
         setValue (
d263 1
a263 5
   theAttCJOR.
      getCppObject ()->
         getValue (
            theCompCJOR.getCppObject (),
            theBool);
d285 1
a285 5
   theAttCJOR.
      getCppObject ()->
         getValue (
            theCompCJOR.getCppObject (),
            theInt);
d305 1
a305 5
   theAttCJOR.
      getCppObject ()->
         getValue (
            theCompCJOR.getCppObject (),
            theDbl);
d325 1
a325 5
   theAttCJOR.
      getCppObject ()->
         getValue (
            theCompCJOR.getCppObject (),
            theStringJOR);
d346 1
a346 5
   theAttCJOR.
      getCppObject ()->
         getValue (
            theCompCJOR.getCppObject (),
            theBoolAJOR);
d365 1
a365 5
   theAttCJOR.
      getCppObject ()->
         getValue (
            theCompCJOR.getCppObject (),
            theIntAJOR);
d384 1
a384 5
   theAttCJOR.
      getCppObject ()->
         getValue (
            theCompCJOR.getCppObject (),
            theDblAJOR);
@


1.42
log
@Class template CORJOR
@
text
@d130 1
a130 1
   BoolArrayJOR       theBoolAJOR (theJBoolArr,    theJNIEnv);
d136 1
a136 1
            theBoolAJOR.getCTVec     (theCompCJOR.getCppObject ()));
d151 1
a151 1
   CORJOR <Att>       theAttCJOR  (theAttCORJObj, theJNIEnv);
d153 1
a153 1
   IntArrayJOR        theIntAJOR  (theJIntArr,     theJNIEnv);
d159 1
a159 1
            theIntAJOR .getCTVec     (theCompCJOR.getCppObject ()));
d176 1
a176 1
   DblArrayJOR        theDblAJOR  (theJDblArr,     theJNIEnv);
d182 1
a182 1
            theDblAJOR .getCTVec     (theCompCJOR.getCppObject ()));
d372 1
a372 1
   BoolArrayJOR       theBoolAJOR (theJBoolArr,    theJNIEnv);
d395 1
a395 1
   IntArrayJOR        theIntAJOR  (theJIntArr,     theJNIEnv);
d416 1
a416 1
   CORJOR <Att>       theAttCJOR  (theAttCORJObj, theJNIEnv);
d418 1
a418 1
   DblArrayJOR        theDblAJOR  (theJDblArr,     theJNIEnv);
@


1.41
log
@Class StringJOR
@
text
@d36 5
a40 1
   theAttCJOR->setValue (theCompCJOR, theBool);
d61 5
a65 1
   theAttCJOR->setValue (theCompCJOR, theInt);
d86 5
a90 1
   theAttCJOR->setValue (theCompCJOR, theDbl);
d109 5
a113 1
   theAttCJOR->setValue (theCompCJOR, theStringJOR.getCString ());
d132 5
a136 1
   theAttCJOR->setValue (theCompCJOR, theBoolAJOR.getCTVec (theCompCJOR));
d155 5
a159 1
   theAttCJOR->setValue (theCompCJOR, theIntAJOR.getCTVec (theCompCJOR));
d178 5
a182 1
   theAttCJOR->setValue (theCompCJOR, theDblAJOR.getCTVec (theCompCJOR));
d199 3
d203 5
a207 1
   theAttCJOR->setVectorToScalar <Boolean> (theCompCJOR, theJBool);
d224 3
d228 5
a232 1
   theAttCJOR->setVectorToScalar <int> (theCompCJOR, theJInt);
d249 3
d253 5
a257 1
   theAttCJOR->setVectorToScalar <double> (theCompCJOR, theJDbl);
d275 5
a279 1
   theAttCJOR->getValue (theCompCJOR, theBool);
d301 5
a305 1
   theAttCJOR->getValue (theCompCJOR, theInt);
d325 5
a329 1
   theAttCJOR->getValue (theCompCJOR, theDbl);
d349 5
a353 1
   theAttCJOR->getValue (theCompCJOR, theStringJOR);
d374 5
a378 1
   theAttCJOR->getValue (theCompCJOR, theBoolAJOR);
d397 5
a401 1
   theAttCJOR->getValue (theCompCJOR, theIntAJOR);
d420 5
a424 1
   theAttCJOR->getValue (theCompCJOR, theDblAJOR);
d439 1
a439 1
   return theAttCJOR->isModifiable ();
d459 1
a459 1
   return theAttCJOR->valueTypeMatches (theTypeName);
d475 1
d477 3
a479 1
   return (theAttCJOR->getCompClassName () == theClassNameSJOR.getCString ());
d497 6
d504 1
a504 2
   theAttCJOR =
      theAttBldrCJOR->handOverAttFor (scopedAttNameSJOR.getCString ());
@


1.40
log
@Class template CORJOR
@
text
@d97 1
a97 1
   theAttCJOR->setValue (theCompCJOR, theStringJOR);
d380 1
a380 1
   theTypeName = theTypeNameSJOR;
d418 2
a419 1
   theAttCJOR = theAttBldrCJOR->handOverAttFor (scopedAttNameSJOR);
@


1.39
log
@Class StringJOR
@
text
@d10 1
d30 3
a32 6
   Att *       theAtt;
   Component * theComp;
   Boolean     theBool;

   theAtt  = getAtt       (theAttCORJObj,  theJNIEnv);
   theComp = getComponent (theCompCORJObj, theJNIEnv);
d36 1
a36 1
   theAtt->setValue (theComp, theBool);
d51 3
a53 6
   Att *       theAtt;
   Component * theComp;
   int         theInt;

   theAtt  = getAtt       (theAttCORJObj,  theJNIEnv);
   theComp = getComponent (theCompCORJObj, theJNIEnv);
d57 1
a57 1
   theAtt->setValue (theComp, theInt);
d72 3
a74 6
   Att *       theAtt;
   Component * theComp;
   double      theDbl;

   theAtt  = getAtt       (theAttCORJObj,  theJNIEnv);
   theComp = getComponent (theCompCORJObj, theJNIEnv);
d78 1
a78 1
   theAtt->setValue (theComp, theDbl);
d93 3
a95 3
   Att *       theAtt;
   Component * theComp;
   StringJOR   theStringJOR (theJString,   theJNIEnv);
d97 1
a97 4
   theAtt  = getAtt       (theAttCORJObj,  theJNIEnv);
   theComp = getComponent (theCompCORJObj, theJNIEnv);

   theAtt->setValue (theComp, theStringJOR);
d112 3
a114 6
   Att *        theAtt;
   Component *  theComp;
   BoolArrayJOR theBoolAJOR (theJBoolArr,    theJNIEnv);

   theAtt  = getAtt         (theAttCORJObj,  theJNIEnv);
   theComp = getComponent   (theCompCORJObj, theJNIEnv);
d116 1
a116 1
   theAtt->setValue (theComp, theBoolAJOR.getCTVec (theComp));
d131 3
a133 6
   Att *       theAtt;
   Component * theComp;
   IntArrayJOR theIntAJOR (theJIntArr,     theJNIEnv);

   theAtt  = getAtt       (theAttCORJObj,  theJNIEnv);
   theComp = getComponent (theCompCORJObj, theJNIEnv);
d135 1
a135 1
   theAtt->setValue (theComp, theIntAJOR.getCTVec (theComp));
d150 3
a152 3
   Att *       theAtt;
   Component * theComp;
   DblArrayJOR theDblAJOR (theJDblArr,     theJNIEnv);
d154 1
a154 4
   theAtt  = getAtt       (theAttCORJObj,  theJNIEnv);
   theComp = getComponent (theCompCORJObj, theJNIEnv);

   theAtt->setValue (theComp, theDblAJOR.getCTVec (theComp));
d169 2
a170 5
   Att *       theAtt;
   Component * theComp;

   theAtt  = getAtt       (theAttCORJObj,  theJNIEnv);
   theComp = getComponent (theCompCORJObj, theJNIEnv);
d172 1
a172 1
   theAtt->setVectorToScalar <Boolean> (theComp, theJBool);
d187 2
a188 5
   Att *       theAtt;
   Component * theComp;

   theAtt  = getAtt       (theAttCORJObj,  theJNIEnv);
   theComp = getComponent (theCompCORJObj, theJNIEnv);
d190 1
a190 1
   theAtt->setVectorToScalar <int> (theComp, theJInt);
d205 2
a206 2
   Att *       theAtt;
   Component * theComp;
d208 1
a208 4
   theAtt  = getAtt       (theAttCORJObj,  theJNIEnv);
   theComp = getComponent (theCompCORJObj, theJNIEnv);

   theAtt->setVectorToScalar <double> (theComp, theJDbl);
d222 3
a224 6
   Att *       theAtt;
   Component * theComp;
   Boolean     theBool;

   theAtt  = getAtt       (theAttCORJObj,  theJNIEnv);
   theComp = getComponent (theCompCORJObj, theJNIEnv);
d226 1
a226 1
   theAtt->getValue (theComp, theBool);
d244 3
a246 3
   Att *       theAtt;
   Component * theComp;
   int         theInt;
d248 1
a248 4
   theAtt  = getAtt       (theAttCORJObj,  theJNIEnv);
   theComp = getComponent (theCompCORJObj, theJNIEnv);

   theAtt->getValue (theComp, theInt);
d264 3
a266 6
   Att *       theAtt;
   Component * theComp;
   double      theDbl;

   theAtt  = getAtt       (theAttCORJObj,  theJNIEnv);
   theComp = getComponent (theCompCORJObj, theJNIEnv);
d268 1
a268 1
   theAtt->getValue (theComp, theDbl);
d284 3
a286 6
   Att *       theAtt;
   Component * theComp;
   StringJOR   theStringJOR               (theJNIEnv);

   theAtt  = getAtt       (theAttCORJObj,  theJNIEnv);
   theComp = getComponent (theCompCORJObj, theJNIEnv);
d288 1
a288 1
   theAtt->getValue (theComp, theStringJOR);
d305 3
a307 3
   Att *        theAtt;
   Component *  theComp;
   BoolArrayJOR theBoolAJOR (theJBoolArr,    theJNIEnv);
d309 1
a309 4
   theAtt  = getAtt         (theAttCORJObj,  theJNIEnv);
   theComp = getComponent   (theCompCORJObj, theJNIEnv);

   theAtt->getValue (theComp, theBoolAJOR);
d324 3
a326 6
   Att *       theAtt;
   Component * theComp;
   IntArrayJOR theIntAJOR (theJIntArr,     theJNIEnv);

   theAtt  = getAtt       (theAttCORJObj,  theJNIEnv);
   theComp = getComponent (theCompCORJObj, theJNIEnv);
d328 1
a328 1
   theAtt->getValue (theComp, theIntAJOR);
d343 3
a345 6
   Att *       theAtt;
   Component * theComp;
   DblArrayJOR theDblAJOR (theJDblArr,     theJNIEnv);

   theAtt  = getAtt       (theAttCORJObj,  theJNIEnv);
   theComp = getComponent (theCompCORJObj, theJNIEnv);
d347 1
a347 1
   theAtt->getValue (theComp, theDblAJOR);
d360 1
a360 1
   Att * theAtt;
d362 1
a362 3
   theAtt = getAtt (theAttCORJObj, theJNIEnv);

   return theAtt->isModifiable ();
d376 3
a378 5
   Att *       theAtt;
   StringJOR   theTypeNameSJOR (theTypeNameJStr, theJNIEnv);
   std::string theTypeName;

   theAtt      = getAtt        (theAttCORJObj,   theJNIEnv);
d382 1
a382 1
   return theAtt->valueTypeMatches (theTypeName);
d396 2
a397 4
   Att *     theAtt;
   StringJOR theClassNameSJOR (theClassNameJStr, theJNIEnv);

   theAtt = getAtt            (theAttCORJObj,    theJNIEnv);
d399 1
a399 1
   return (theAtt->getCompClassName () == theClassNameSJOR.getCString ());
d414 3
a416 7
   AttBldr * theAttBldr;
   StringJOR scopedAttNameSJOR (scopedAttNameJStr, theJNIEnv);
   Att *     theAtt;

   theAttBldr = getAttBldr     (theAttBldrCORJObj, theJNIEnv);

   theAtt     = theAttBldr->handOverAttFor (scopedAttNameSJOR);
d418 1
a418 1
   JniClient::transferTo (theAttCORJObj, theAtt, theJNIEnv);
@


1.38
log
@Removed namespace JniUtil.
@
text
@d108 1
a108 1
   theAtt->setValue (theComp, theStringJOR.getCString ());
d434 1
a434 1
   theTypeName = theTypeNameSJOR.getCString ();
d476 1
a476 1
   theAtt     = theAttBldr->handOverAttFor (scopedAttNameSJOR.getCString ());
@


1.37
log
@ArrayJOR classes
@
text
@a8 1
#include          <JniUtil.h>
a17 1
using namespace WitJ::JniUtil;
d478 1
a478 1
   transferTo (theAttCORJObj, theAtt, theJNIEnv);
@


1.36
log
@CTVecSupply
@
text
@d125 3
a127 3
   Att *       theAtt;
   Component * theComp;
   Boolean *   theBoolCVec;
d129 2
a130 4
   theAtt  = getAtt       (theAttCORJObj,  theJNIEnv);
   theComp = getComponent (theCompCORJObj, theJNIEnv);

   theComp->getCTVecSupply ()->provideCTVec (theBoolCVec);
d132 1
a132 5
   copyInto (theBoolCVec, theJBoolArr, theJNIEnv);

   theAtt->setValue (theComp, theBoolCVec);

   theComp->getCTVecSupply ()->reclaimCTVec (theBoolCVec);
d149 1
a149 1
   int *       theIntCVec;
d154 1
a154 7
   theComp->getCTVecSupply ()->provideCTVec (theIntCVec);

   copyInto (theIntCVec, theJIntArr, theJNIEnv);

   theAtt->setValue (theComp, theIntCVec);

   theComp->getCTVecSupply ()->reclaimCTVec (theIntCVec);
d171 1
a171 1
   double *    theDblCVec;
d176 1
a176 7
   theComp->getCTVecSupply ()->provideCTVec (theDblCVec);

   copyInto (theDblCVec, theJDblArr, theJNIEnv);

   theAtt->setValue (theComp, theDblCVec);

   theComp->getCTVecSupply ()->reclaimCTVec (theDblCVec);
@


1.35
log
@ArrayJOR classes
@
text
@d138 1
a138 1
   theComp->getCTVecSupply ()->reclaimCTVecs ();
d166 1
a166 1
   theComp->getCTVecSupply ()->reclaimCTVecs ();
d194 1
a194 1
   theComp->getCTVecSupply ()->reclaimCTVecs ();
@


1.34
log
@Class StringJOR
@
text
@d15 1
a15 1
#include      <WitVecOwner.h>
d366 3
a368 3
   Att *                 theAtt;
   Component *           theComp;
   WitVecOwner <Boolean> theBoolWVO;
d370 2
a371 4
   theAtt  = getAtt       (theAttCORJObj,  theJNIEnv);
   theComp = getComponent (theCompCORJObj, theJNIEnv);

   theAtt->getValue (theComp, theBoolWVO);
d373 1
a373 1
   copyInto (theJBoolArr, theBoolWVO.getWitVec (), theJNIEnv);
d388 3
a390 3
   Att *             theAtt;
   Component *       theComp;
   WitVecOwner <int> theIntWVO;
d395 1
a395 3
   theAtt->getValue (theComp, theIntWVO);

   copyInto (theJIntArr, theIntWVO.getWitVec (), theJNIEnv);
d410 3
a412 3
   Att *                theAtt;
   Component *          theComp;
   WitVecOwner <double> theDblWVO;
d417 1
a417 3
   theAtt->getValue (theComp, theDblWVO);

   copyInto (theJDblArr, theDblWVO.getWitVec (), theJNIEnv);
@


1.33
log
@Class WString
@
text
@d16 1
a16 1
#include          <WString.h>
d105 1
a105 1
   WString     theWString;
d110 1
a110 3
   copyInto (theWString, theJString, theJNIEnv);

   theAtt->setValue (theComp, theWString.getCString ());
d342 3
a344 3
   Att *          theAtt;
   Component *    theComp;
   WitStringOwner theWSO;
d349 1
a349 1
   theAtt->getValue (theComp, theWSO);
d351 1
a351 1
   return newJString (theWSO.getWitVec (), theJNIEnv);
d455 1
a455 1
   WString     theTypeNameWStr;
d458 1
a458 3
   theAtt = getAtt (theAttCORJObj, theJNIEnv);

   copyInto (theTypeNameWStr, theTypeNameJStr, theJNIEnv);
d460 1
a460 1
   theTypeName = theTypeNameWStr.getCString ();
d476 2
a477 4
   Att *   theAtt;
   WString theClassNameWStr;

   theAtt = getAtt (theAttCORJObj, theJNIEnv);
d479 1
a479 1
   copyInto (theClassNameWStr, theClassNameJStr, theJNIEnv);
d481 1
a481 1
   return (theAtt->getCompClassName () == theClassNameWStr.getCString ());
d497 1
a497 1
   WString   scopedAttNameWStr;
d500 1
a500 3
   theAttBldr = getAttBldr (theAttBldrCORJObj, theJNIEnv);

   copyInto (scopedAttNameWStr, scopedAttNameJStr, theJNIEnv);
d502 1
a502 1
   theAtt     = theAttBldr->handOverAttFor (scopedAttNameWStr.getCString ());
@


1.32
log
@Namespace JniUtil.
@
text
@d16 1
a16 1
#include           <String.h>
d105 1
a105 1
   String      theString;
d110 1
a110 1
   copyInto (theString, theJString, theJNIEnv);
d112 1
a112 1
   theAtt->setValue (theComp, theString.getCString ());
d457 1
a457 1
   String      theTypeNameStr;
d462 1
a462 1
   copyInto (theTypeNameStr, theTypeNameJStr, theJNIEnv);
d464 1
a464 1
   theTypeName = theTypeNameStr.getCString ();
d480 2
a481 2
   Att *  theAtt;
   String theClassNameStr;
d485 1
a485 1
   copyInto (theClassNameStr, theClassNameJStr, theJNIEnv);
d487 1
a487 1
   return (theAtt->getCompClassName () == theClassNameStr.getCString ());
d503 1
a503 1
   String    scopedAttNameStr;
d508 1
a508 1
   copyInto (scopedAttNameStr, scopedAttNameJStr, theJNIEnv);
d510 1
a510 1
   theAtt     = theAttBldr->handOverAttFor (scopedAttNameStr.getCString ());
@


1.31
log
@JniAsst
@
text
@d9 1
a10 1
#include          <JniAsst.h>
d19 1
d35 2
a36 2
   theAtt  = JniAsst::getAtt       (theAttCORJObj,  theJNIEnv);
   theComp = JniAsst::getComponent (theCompCORJObj, theJNIEnv);
d59 2
a60 2
   theAtt  = JniAsst::getAtt       (theAttCORJObj,  theJNIEnv);
   theComp = JniAsst::getComponent (theCompCORJObj, theJNIEnv);
d83 2
a84 2
   theAtt  = JniAsst::getAtt       (theAttCORJObj,  theJNIEnv);
   theComp = JniAsst::getComponent (theCompCORJObj, theJNIEnv);
d107 2
a108 2
   theAtt  = JniAsst::getAtt       (theAttCORJObj,  theJNIEnv);
   theComp = JniAsst::getComponent (theCompCORJObj, theJNIEnv);
d110 1
a110 1
   theAtt->getJniAsst ()->copyInto (theString, theJString);
d131 2
a132 2
   theAtt  = JniAsst::getAtt       (theAttCORJObj,  theJNIEnv);
   theComp = JniAsst::getComponent (theCompCORJObj, theJNIEnv);
d136 1
a136 1
   theAtt->getJniAsst ()->copyInto (theBoolCVec, theJBoolArr);
d159 2
a160 2
   theAtt  = JniAsst::getAtt       (theAttCORJObj,  theJNIEnv);
   theComp = JniAsst::getComponent (theCompCORJObj, theJNIEnv);
d164 1
a164 1
   theAtt->getJniAsst ()->copyInto (theIntCVec, theJIntArr);
d187 2
a188 2
   theAtt  = JniAsst::getAtt       (theAttCORJObj,  theJNIEnv);
   theComp = JniAsst::getComponent (theCompCORJObj, theJNIEnv);
d192 1
a192 1
   theAtt->getJniAsst ()->copyInto (theDblCVec, theJDblArr);
d214 2
a215 2
   theAtt  = JniAsst::getAtt       (theAttCORJObj,  theJNIEnv);
   theComp = JniAsst::getComponent (theCompCORJObj, theJNIEnv);
d235 2
a236 2
   theAtt  = JniAsst::getAtt       (theAttCORJObj,  theJNIEnv);
   theComp = JniAsst::getComponent (theCompCORJObj, theJNIEnv);
d256 2
a257 2
   theAtt  = JniAsst::getAtt       (theAttCORJObj,  theJNIEnv);
   theComp = JniAsst::getComponent (theCompCORJObj, theJNIEnv);
d277 2
a278 2
   theAtt  = JniAsst::getAtt       (theAttCORJObj,  theJNIEnv);
   theComp = JniAsst::getComponent (theCompCORJObj, theJNIEnv);
d302 2
a303 2
   theAtt  = JniAsst::getAtt       (theAttCORJObj,  theJNIEnv);
   theComp = JniAsst::getComponent (theCompCORJObj, theJNIEnv);
d325 2
a326 2
   theAtt  = JniAsst::getAtt       (theAttCORJObj,  theJNIEnv);
   theComp = JniAsst::getComponent (theCompCORJObj, theJNIEnv);
a346 1
   _jstring *     theJString;
d348 2
a349 2
   theAtt  = JniAsst::getAtt       (theAttCORJObj,  theJNIEnv);
   theComp = JniAsst::getComponent (theCompCORJObj, theJNIEnv);
d353 1
a353 3
   theJString = theAtt->getJniAsst ()->newJString (theWSO.getWitVec ());

   return theJString;
d372 2
a373 2
   theAtt  = JniAsst::getAtt       (theAttCORJObj,  theJNIEnv);
   theComp = JniAsst::getComponent (theCompCORJObj, theJNIEnv);
d377 1
a377 1
   theAtt->getJniAsst ()->copyInto (theJBoolArr, theBoolWVO.getWitVec ());
d396 2
a397 2
   theAtt  = JniAsst::getAtt       (theAttCORJObj,  theJNIEnv);
   theComp = JniAsst::getComponent (theCompCORJObj, theJNIEnv);
d401 1
a401 1
   theAtt->getJniAsst ()->copyInto (theJIntArr, theIntWVO.getWitVec ());
d420 2
a421 2
   theAtt  = JniAsst::getAtt       (theAttCORJObj,  theJNIEnv);
   theComp = JniAsst::getComponent (theCompCORJObj, theJNIEnv);
d425 1
a425 1
   theAtt->getJniAsst ()->copyInto (theJDblArr, theDblWVO.getWitVec ());
d440 1
a440 1
   theAtt = JniAsst::getAtt (theAttCORJObj, theJNIEnv);
d460 1
a460 1
   theAtt = JniAsst::getAtt (theAttCORJObj, theJNIEnv);
d462 1
a462 1
   theAtt->getJniAsst ()->copyInto (theTypeNameStr, theTypeNameJStr);
d483 1
a483 1
   theAtt = JniAsst::getAtt (theAttCORJObj, theJNIEnv);
d485 1
a485 1
   theAtt->getJniAsst ()->copyInto (theClassNameStr, theClassNameJStr);
d506 1
a506 1
   theAttBldr = JniAsst::getAttBldr (theAttBldrCORJObj, theJNIEnv);
d508 1
a508 1
   theAtt->getJniAsst ()->copyInto (scopedAttNameStr, scopedAttNameJStr);
d512 1
a512 1
   theAtt->getJniAsst ()->transferTo (theAttCORJObj, theAtt);
@


1.30
log
@Replaced newHeldCString with copyInto.
@
text
@d10 1
a10 1
#include       <NativeCall.h>
a29 1
   NativeCall  theCall (theJNIEnv);
d34 2
a35 2
   theAtt  = theCall.getJavaAccObj  (theAttCORJObj)->asAtt       ();
   theComp = theCall.getJavaAccObj (theCompCORJObj)->asComponent ();
a53 1
   NativeCall  theCall (theJNIEnv);
d58 2
a59 2
   theAtt  = theCall.getJavaAccObj  (theAttCORJObj)->asAtt       ();
   theComp = theCall.getJavaAccObj (theCompCORJObj)->asComponent ();
a77 1
   NativeCall  theCall (theJNIEnv);
d82 2
a83 2
   theAtt  = theCall.getJavaAccObj  (theAttCORJObj)->asAtt       ();
   theComp = theCall.getJavaAccObj (theCompCORJObj)->asComponent ();
a101 1
   NativeCall  theCall (theJNIEnv);
d106 2
a107 2
   theAtt  = theCall.getJavaAccObj  (theAttCORJObj) ->asAtt       ();
   theComp = theCall.getJavaAccObj  (theCompCORJObj)->asComponent ();
d109 1
a109 1
   theCall.copyInto (theString, theJString);
a125 1
   NativeCall  theCall (theJNIEnv);
d130 2
a131 2
   theAtt  = theCall.getJavaAccObj  (theAttCORJObj)->asAtt       ();
   theComp = theCall.getJavaAccObj (theCompCORJObj)->asComponent ();
d135 1
a135 1
   theCall.copyInto (theBoolCVec, theJBoolArr);
a153 1
   NativeCall  theCall (theJNIEnv);
d158 2
a159 2
   theAtt  = theCall.getJavaAccObj  (theAttCORJObj)->asAtt       ();
   theComp = theCall.getJavaAccObj (theCompCORJObj)->asComponent ();
d163 1
a163 1
   theCall.copyInto (theIntCVec, theJIntArr);
a181 1
   NativeCall  theCall (theJNIEnv);
d186 2
a187 2
   theAtt  = theCall.getJavaAccObj  (theAttCORJObj)->asAtt       ();
   theComp = theCall.getJavaAccObj (theCompCORJObj)->asComponent ();
d191 1
a191 1
   theCall.copyInto (theDblCVec, theJDblArr);
a209 1
   NativeCall  theCall (theJNIEnv);
d213 2
a214 2
   theAtt  = theCall.getJavaAccObj  (theAttCORJObj)->asAtt       ();
   theComp = theCall.getJavaAccObj (theCompCORJObj)->asComponent ();
a230 1
   NativeCall  theCall (theJNIEnv);
d234 2
a235 2
   theAtt  = theCall.getJavaAccObj  (theAttCORJObj)->asAtt       ();
   theComp = theCall.getJavaAccObj (theCompCORJObj)->asComponent ();
a251 1
   NativeCall  theCall (theJNIEnv);
d255 2
a256 2
   theAtt  = theCall.getJavaAccObj  (theAttCORJObj)->asAtt       ();
   theComp = theCall.getJavaAccObj (theCompCORJObj)->asComponent ();
a271 1
   NativeCall  theCall (theJNIEnv);
d276 2
a277 2
   theAtt  = theCall.getJavaAccObj  (theAttCORJObj)->asAtt       ();
   theComp = theCall.getJavaAccObj (theCompCORJObj)->asComponent ();
a296 1
   NativeCall  theCall (theJNIEnv);
d301 2
a302 2
   theAtt  = theCall.getJavaAccObj  (theAttCORJObj)->asAtt       ();
   theComp = theCall.getJavaAccObj (theCompCORJObj)->asComponent ();
a319 1
   NativeCall  theCall (theJNIEnv);
d324 2
a325 2
   theAtt  = theCall.getJavaAccObj  (theAttCORJObj)->asAtt       ();
   theComp = theCall.getJavaAccObj (theCompCORJObj)->asComponent ();
a342 1
   NativeCall     theCall (theJNIEnv);
d348 2
a349 2
   theAtt     = theCall.getJavaAccObj  (theAttCORJObj)->asAtt       ();
   theComp    = theCall.getJavaAccObj (theCompCORJObj)->asComponent ();
d353 1
a353 1
   theJString = theCall.newJString (theWSO.getWitVec ());
a369 1
   NativeCall            theCall (theJNIEnv);
d374 2
a375 2
   theAtt  = theCall.getJavaAccObj  (theAttCORJObj)->asAtt       ();
   theComp = theCall.getJavaAccObj (theCompCORJObj)->asComponent ();
d379 1
a379 1
   theCall.copyInto (theJBoolArr, theBoolWVO.getWitVec ());
a393 1
   NativeCall        theCall (theJNIEnv);
d398 2
a399 2
   theAtt  = theCall.getJavaAccObj  (theAttCORJObj)->asAtt       ();
   theComp = theCall.getJavaAccObj (theCompCORJObj)->asComponent ();
d403 1
a403 1
   theCall.copyInto (theJIntArr, theIntWVO.getWitVec ());
a417 1
   NativeCall           theCall (theJNIEnv);
d422 2
a423 2
   theAtt  = theCall.getJavaAccObj  (theAttCORJObj)->asAtt       ();
   theComp = theCall.getJavaAccObj (theCompCORJObj)->asComponent ();
d427 1
a427 1
   theCall.copyInto (theJDblArr, theDblWVO.getWitVec ());
d440 1
a440 2
   NativeCall theCall (theJNIEnv);
   Att *      theAtt;
d442 1
a442 1
   theAtt = theCall.getJavaAccObj (theAttCORJObj)->asAtt ();
a457 1
   NativeCall  theCall (theJNIEnv);
d462 1
a462 1
   theAtt      = theCall.getJavaAccObj (theAttCORJObj)->asAtt ();
d464 1
a464 1
   theCall.copyInto (theTypeNameStr, theTypeNameJStr);
d482 2
a483 3
   NativeCall theCall (theJNIEnv);
   Att *      theAtt;
   String     theClassNameStr;
d485 1
a485 1
   theAtt = theCall.getJavaAccObj (theAttCORJObj)->asAtt ();
d487 1
a487 1
   theCall.copyInto (theClassNameStr, theClassNameJStr);
d504 3
a506 4
   NativeCall theCall (theJNIEnv);
   AttBldr *  theAttBldr;
   String     scopedAttNameStr;
   Att *      theAtt;
d508 1
a508 1
   theAttBldr = theCall.getJavaAccObj (theAttBldrCORJObj)->asAttBldr ();
d510 1
a510 1
   theCall.copyInto (scopedAttNameStr, scopedAttNameJStr);
d514 1
a514 1
   theCall.transferTo (theAttCORJObj, theAtt);
@


1.29
log
@Replaced C++ class CORJOR with ComponentJOR.
@
text
@d16 1
d105 4
a108 8
   NativeCall   theCall (theJNIEnv);
   Att *        theAtt;
   Component *  theComp;
   const char * theCString;

   theAtt     = theCall.getJavaAccObj  (theAttCORJObj) ->asAtt       ();
   theComp    = theCall.getJavaAccObj  (theCompCORJObj)->asComponent ();
   theCString = theCall.newHeldCString (theJString);
d110 6
a115 1
   theAtt->setValue (theComp, theCString);
d478 1
d483 3
a485 1
   theTypeName = theCall.newHeldCString (theTypeNameJStr);
d501 3
a503 3
   NativeCall   theCall (theJNIEnv);
   Att *        theAtt;
   const char * theClassNameCStr;
d505 1
a505 1
   theAtt           = theCall.getJavaAccObj (theAttCORJObj)->asAtt ();
d507 1
a507 1
   theClassNameCStr = theCall.newHeldCString (theClassNameJStr);
d509 1
a509 1
   return (theAtt->getCompClassName () == theClassNameCStr);
d524 4
a527 4
   NativeCall   theCall (theJNIEnv);
   AttBldr *    theAttBldr;
   const char * scopedAttNameCStr;
   Att *        theAtt;
d529 1
a529 1
   theAttBldr        = theCall.getJavaAccObj (theAttBldrCORJObj)->asAttBldr ();
d531 1
a531 1
   scopedAttNameCStr = theCall.newHeldCString (scopedAttNameJStr);
d533 1
a533 1
   theAtt            = theAttBldr->handOverAttFor (scopedAttNameCStr);
@


1.28
log
@Revised the arguments to eqHeurAlloc.
@
text
@d530 1
a530 1
   theCall.associate (theAttCORJObj, theAtt);
@


1.27
log
@CPLEX
@
text
@d34 2
a35 2
   theAtt  = theCall.getObject  (theAttCORJObj)->asAtt       ();
   theComp = theCall.getObject (theCompCORJObj)->asComponent ();
d59 2
a60 2
   theAtt  = theCall.getObject  (theAttCORJObj)->asAtt       ();
   theComp = theCall.getObject (theCompCORJObj)->asComponent ();
d84 2
a85 2
   theAtt  = theCall.getObject  (theAttCORJObj)->asAtt       ();
   theComp = theCall.getObject (theCompCORJObj)->asComponent ();
d109 2
a110 2
   theAtt     = theCall.getObject      (theAttCORJObj) ->asAtt       ();
   theComp    = theCall.getObject      (theCompCORJObj)->asComponent ();
d133 2
a134 2
   theAtt  = theCall.getObject  (theAttCORJObj)->asAtt       ();
   theComp = theCall.getObject (theCompCORJObj)->asComponent ();
d162 2
a163 2
   theAtt  = theCall.getObject  (theAttCORJObj)->asAtt       ();
   theComp = theCall.getObject (theCompCORJObj)->asComponent ();
d191 2
a192 2
   theAtt  = theCall.getObject  (theAttCORJObj)->asAtt       ();
   theComp = theCall.getObject (theCompCORJObj)->asComponent ();
d219 2
a220 2
   theAtt  = theCall.getObject  (theAttCORJObj)->asAtt       ();
   theComp = theCall.getObject (theCompCORJObj)->asComponent ();
d241 2
a242 2
   theAtt  = theCall.getObject  (theAttCORJObj)->asAtt       ();
   theComp = theCall.getObject (theCompCORJObj)->asComponent ();
d263 2
a264 2
   theAtt  = theCall.getObject  (theAttCORJObj)->asAtt       ();
   theComp = theCall.getObject (theCompCORJObj)->asComponent ();
d285 2
a286 2
   theAtt  = theCall.getObject  (theAttCORJObj)->asAtt       ();
   theComp = theCall.getObject (theCompCORJObj)->asComponent ();
d311 2
a312 2
   theAtt  = theCall.getObject  (theAttCORJObj)->asAtt       ();
   theComp = theCall.getObject (theCompCORJObj)->asComponent ();
d335 2
a336 2
   theAtt  = theCall.getObject  (theAttCORJObj)->asAtt       ();
   theComp = theCall.getObject (theCompCORJObj)->asComponent ();
d360 2
a361 2
   theAtt     = theCall.getObject  (theAttCORJObj)->asAtt       ();
   theComp    = theCall.getObject (theCompCORJObj)->asComponent ();
d387 2
a388 2
   theAtt  = theCall.getObject  (theAttCORJObj)->asAtt       ();
   theComp = theCall.getObject (theCompCORJObj)->asComponent ();
d412 2
a413 2
   theAtt  = theCall.getObject  (theAttCORJObj)->asAtt       ();
   theComp = theCall.getObject (theCompCORJObj)->asComponent ();
d437 2
a438 2
   theAtt  = theCall.getObject  (theAttCORJObj)->asAtt       ();
   theComp = theCall.getObject (theCompCORJObj)->asComponent ();
d458 1
a458 1
   theAtt = theCall.getObject (theAttCORJObj)->asAtt ();
d478 1
a478 1
   theAtt      = theCall.getObject (theAttCORJObj)->asAtt ();
d500 1
a500 1
   theAtt           = theCall.getObject (theAttCORJObj)->asAtt ();
d524 1
a524 1
   theAttBldr        = theCall.getObject (theAttBldrCORJObj)->asAttBldr ();
@


1.26
log
@CPLEX
@
text
@d365 1
a365 1
   theJString = theCall.makeJString (theWSO.getWitVec ());
@


1.25
log
@Multi-Obj Mode
@
text
@d109 3
a111 3
   theAtt     = theCall.getObject   (theAttCORJObj) ->asAtt       ();
   theComp    = theCall.getObject   (theCompCORJObj)->asComponent ();
   theCString = theCall.makeCString (theJString);
d478 1
a478 1
   theAtt      = theCall.getObject   (theAttCORJObj)->asAtt ();
d480 1
a480 1
   theTypeName = theCall.makeCString (theTypeNameJStr);
d502 1
a502 1
   theClassNameCStr = theCall.makeCString (theClassNameJStr);
d526 1
a526 1
   scopedAttNameCStr = theCall.makeCString (scopedAttNameJStr);
@


1.24
log
@Multi-Obj Mode
@
text
@d15 1
a15 1
#include           <VecWoa.h>
d354 5
a358 5
   NativeCall    theCall (theJNIEnv);
   Att *         theAtt;
   Component *   theComp;
   VecWoa <char> theStringWoa;
   _jstring *    theJString;
d363 1
a363 1
   theAtt->getValue (theComp, theStringWoa);
d365 1
a365 1
   theJString = theCall.makeJString (theStringWoa.getCVec ());
d382 4
a385 4
   NativeCall       theCall (theJNIEnv);
   Att *            theAtt;
   Component *      theComp;
   VecWoa <Boolean> theBoolVecWoa;
d390 1
a390 1
   theAtt->getValue (theComp, theBoolVecWoa);
d392 1
a392 1
   theCall.copyInto (theJBoolArr, theBoolVecWoa.getCVec ());
d407 4
a410 4
   NativeCall   theCall (theJNIEnv);
   Att *        theAtt;
   Component *  theComp;
   VecWoa <int> theIntVecWoa;
d415 1
a415 1
   theAtt->getValue (theComp, theIntVecWoa);
d417 1
a417 1
   theCall.copyInto (theJIntArr, theIntVecWoa.getCVec ());
d432 4
a435 4
   NativeCall      theCall (theJNIEnv);
   Att *           theAtt;
   Component *     theComp;
   VecWoa <double> theDblVecWoa;
d440 1
a440 1
   theAtt->getValue (theComp, theDblVecWoa);
d442 1
a442 1
   theCall.copyInto (theJDblArr, theDblVecWoa.getCVec ());
@


1.23
log
@Implemented String StdAttImps.
@
text
@a15 1
#include        <StringWoa.h>
d354 5
a358 5
   NativeCall  theCall (theJNIEnv);
   Att *       theAtt;
   Component * theComp;
   StringWoa   theStringWoa;
   _jstring *  theJString;
d365 1
a365 1
   theJString = theCall.makeJString (theStringWoa.getCString ());
@


1.22
log
@Changed the name each native method that creates a C++ object to
   createCppObject.
@
text
@d16 1
d97 24
d348 27
@


1.21
log
@Revised the C++ implementation of the setVectorToScalar methods.
@
text
@d460 1
a460 1
NATIVE_METHOD (void, AttCOR, acquireMyCppAtt) (
@


1.20
log
@Replaced C++ classes CTVecHolder <...> and CTVecRes with CTVecSupply.
@
text
@a13 2
#include      <Coordinator.h>
#include     <GlobalAspect.h>
d109 2
a110 2
   theAtt      = theCall.getObject  (theAttCORJObj)->asAtt       ();
   theComp     = theCall.getObject (theCompCORJObj)->asComponent ();
d112 1
a112 1
   theBoolCVec = theComp->getCTVecSupply ()->provideBoolCTVec ();
d138 2
a139 2
   theAtt     = theCall.getObject  (theAttCORJObj)->asAtt       ();
   theComp    = theCall.getObject (theCompCORJObj)->asComponent ();
d141 1
a141 1
   theIntCVec = theComp->getCTVecSupply ()->provideIntCTVec ();
d167 2
a168 2
   theAtt     = theCall.getObject  (theAttCORJObj)->asAtt       ();
   theComp    = theCall.getObject (theCompCORJObj)->asComponent ();
d170 1
a170 1
   theDblCVec = theComp->getCTVecSupply ()->provideDblCTVec ();
a193 3
   Boolean *   theBoolCVec;
   int         nPers;
   int         thePer;
d195 2
a196 2
   theAtt      = theCall.getObject  (theAttCORJObj)->asAtt       ();
   theComp     = theCall.getObject (theCompCORJObj)->asComponent ();
d198 1
a198 12
   theBoolCVec = theComp->getCTVecSupply ()->provideBoolCTVec ();

   nPers       = theComp->getCoordinator ()->getGlobalAspect ()->getNPeriods ();

   for (thePer = 0; thePer < nPers; thePer ++)
      {
      theBoolCVec[thePer] = theJBool;
      }

   theAtt->setValue (theComp, theBoolCVec);

   theComp->getCTVecSupply ()->reclaimCTVecs ();
a215 3
   int *       theIntCVec;
   int         nPers;
   int         thePer;
d217 2
a218 11
   theAtt     = theCall.getObject  (theAttCORJObj)->asAtt       ();
   theComp    = theCall.getObject (theCompCORJObj)->asComponent ();

   theIntCVec = theComp->getCTVecSupply ()->provideIntCTVec ();

   nPers      = theComp->getCoordinator ()->getGlobalAspect ()->getNPeriods ();

   for (thePer = 0; thePer < nPers; thePer ++)
      {
      theIntCVec[thePer] = theJInt;
      }
d220 1
a220 3
   theAtt->setValue (theComp, theIntCVec);

   theComp->getCTVecSupply ()->reclaimCTVecs ();
a237 3
   double *    theDblCVec;
   int         nPers;
   int         thePer;
d239 2
a240 6
   theAtt     = theCall.getObject  (theAttCORJObj)->asAtt       ();
   theComp    = theCall.getObject (theCompCORJObj)->asComponent ();

   theDblCVec = theComp->getCTVecSupply ()->provideDblCTVec ();

   nPers      = theComp->getCoordinator ()->getGlobalAspect ()->getNPeriods ();
d242 1
a242 8
   for (thePer = 0; thePer < nPers; thePer ++)
      {
      theDblCVec[thePer] = theJDbl;
      }

   theAtt->setValue (theComp, theDblCVec);

   theComp->getCTVecSupply ()->reclaimCTVecs ();
@


1.19
log
@Added theComp.setValueToScalar (...) methods.
@
text
@d13 4
d106 4
a109 4
   NativeCall      theCall (theJNIEnv);
   Att *           theAtt;
   Component *     theComp;
   const Boolean * theBoolCVec;
d114 3
a116 1
   theBoolCVec = theCall.makeCTVec (theJBoolArr);
d120 2
d138 1
a138 1
   const int * theIntCVec;
d140 4
a143 2
   theAtt  = theCall.getObject  (theAttCORJObj)->asAtt       ();
   theComp = theCall.getObject (theCompCORJObj)->asComponent ();
d145 1
a145 1
   theIntCVec = theCall.makeCTVec (theJIntArr);
d149 2
d164 4
a167 4
   NativeCall     theCall (theJNIEnv);
   Att *          theAtt;
   Component *    theComp;
   const double * theDblCVec;
d172 3
a174 1
   theDblCVec = theCall.makeCTVec (theJDblArr);
d178 2
d193 6
a198 4
   NativeCall      theCall (theJNIEnv);
   Att *           theAtt;
   Component *     theComp;
   const Boolean * theBoolCVec;
d203 8
a210 1
   theBoolCVec = theCall.makeCTVecFromScalar (theJBool);
d214 2
d232 3
a234 1
   const int * theIntCVec;
d239 8
a246 1
   theIntCVec = theCall.makeCTVecFromScalar (theJInt);
d250 2
d265 6
a270 4
   NativeCall     theCall (theJNIEnv);
   Att *          theAtt;
   Component *    theComp;
   const double * theDblCVec;
d275 8
a282 1
   theDblCVec = theCall.makeCTVecFromScalar (theJDbl);
d286 2
@


1.18
log
@Changed name of Element classes in Java and C++ to Component.
@
text
@d110 1
a110 1
   theBoolCVec = theCall.makeBoolCTVec (theJBoolArr);
d135 1
a135 1
   theIntCVec = theCall.makeIntCTVec (theJIntArr);
d160 76
a235 1
   theDblCVec = theCall.makeDblCTVec (theJDblArr);
@


1.17
log
@Implemented getPipSeq.
@
text
@d22 1
a22 1
      _jobject * theElementCORJObj,
d27 4
a30 4
   NativeCall theCall (theJNIEnv);
   Att *      theAtt;
   Element *  theElement;
   Boolean    theBool;
d32 2
a33 2
   theAtt     = theCall.getObject     (theAttCORJObj)->asAtt     ();
   theElement = theCall.getObject (theElementCORJObj)->asElement ();
d35 1
a35 1
   theBool    = theJBool;
d37 1
a37 1
   theAtt->setValue (theElement, theBool);
d47 1
a47 1
      _jobject * theElementCORJObj,
d52 4
a55 4
   NativeCall theCall (theJNIEnv);
   Att *      theAtt;
   Element *  theElement;
   int        theInt;
d57 2
a58 2
   theAtt     = theCall.getObject     (theAttCORJObj)->asAtt     ();
   theElement = theCall.getObject (theElementCORJObj)->asElement ();
d60 1
a60 1
   theInt     = theJInt;
d62 1
a62 1
   theAtt->setValue (theElement, theInt);
d72 1
a72 1
      _jobject * theElementCORJObj,
d77 4
a80 4
   NativeCall theCall (theJNIEnv);
   Att *      theAtt;
   Element *  theElement;
   double     theDbl;
d82 2
a83 2
   theAtt     = theCall.getObject     (theAttCORJObj)->asAtt     ();
   theElement = theCall.getObject (theElementCORJObj)->asElement ();
d85 1
a85 1
   theDbl     = theJDbl;
d87 1
a87 1
   theAtt->setValue (theElement, theDbl);
d97 1
a97 1
      _jobject *       theElementCORJObj,
d104 1
a104 1
   Element *       theElement;
d107 2
a108 2
   theAtt      = theCall.getObject     (theAttCORJObj)->asAtt     ();
   theElement  = theCall.getObject (theElementCORJObj)->asElement ();
d112 1
a112 1
   theAtt->setValue (theElement, theBoolCVec);
d122 1
a122 1
      _jobject *   theElementCORJObj,
d129 1
a129 1
   Element *   theElement;
d132 2
a133 2
   theAtt     = theCall.getObject     (theAttCORJObj)->asAtt     ();
   theElement = theCall.getObject (theElementCORJObj)->asElement ();
d137 1
a137 1
   theAtt->setValue (theElement, theIntCVec);
d147 1
a147 1
      _jobject *      theElementCORJObj,
d154 1
a154 1
   Element *      theElement;
d157 2
a158 2
   theAtt     = theCall.getObject     (theAttCORJObj)->asAtt     ();
   theElement = theCall.getObject (theElementCORJObj)->asElement ();
d162 1
a162 1
   theAtt->setValue (theElement, theDblCVec);
d172 1
a172 1
      _jobject * theElementCORJObj)
d176 4
a179 4
   NativeCall theCall (theJNIEnv);
   Att *      theAtt;
   Element *  theElement;
   Boolean    theBool;
d181 2
a182 2
   theAtt     = theCall.getObject     (theAttCORJObj)->asAtt     ();
   theElement = theCall.getObject (theElementCORJObj)->asElement ();
d184 1
a184 1
   theAtt->getValue (theElement, theBool);
d198 1
a198 1
      _jobject * theElementCORJObj)
d202 4
a205 4
   NativeCall theCall (theJNIEnv);
   Att *      theAtt;
   Element *  theElement;
   int        theInt;
d207 2
a208 2
   theAtt     = theCall.getObject     (theAttCORJObj)->asAtt     ();
   theElement = theCall.getObject (theElementCORJObj)->asElement ();
d210 1
a210 1
   theAtt->getValue (theElement, theInt);
d222 1
a222 1
      _jobject * theElementCORJObj)
d226 4
a229 4
   NativeCall theCall (theJNIEnv);
   Att *      theAtt;
   Element *  theElement;
   double     theDbl;
d231 2
a232 2
   theAtt     = theCall.getObject     (theAttCORJObj)->asAtt     ();
   theElement = theCall.getObject (theElementCORJObj)->asElement ();
d234 1
a234 1
   theAtt->getValue (theElement, theDbl);
d246 1
a246 1
      _jobject *       theElementCORJObj,
d253 1
a253 1
   Element *        theElement;
d256 2
a257 2
   theAtt     = theCall.getObject     (theAttCORJObj)->asAtt     ();
   theElement = theCall.getObject (theElementCORJObj)->asElement ();
d259 1
a259 1
   theAtt->getValue (theElement, theBoolVecWoa);
d271 1
a271 1
      _jobject *   theElementCORJObj,
d278 1
a278 1
   Element *    theElement;
d281 2
a282 2
   theAtt     = theCall.getObject     (theAttCORJObj)->asAtt     ();
   theElement = theCall.getObject (theElementCORJObj)->asElement ();
d284 1
a284 1
   theAtt->getValue (theElement, theIntVecWoa);
d296 1
a296 1
      _jobject *      theElementCORJObj,
d303 1
a303 1
   Element *       theElement;
d306 2
a307 2
   theAtt     = theCall.getObject     (theAttCORJObj)->asAtt     ();
   theElement = theCall.getObject (theElementCORJObj)->asElement ();
d309 1
a309 1
   theAtt->getValue (theElement, theDblVecWoa);
d373 1
a373 1
   return (theAtt->getElemClassName () == theClassNameCStr);
@


1.16
log
@Implemented Java class CppGateway.
@
text
@d261 1
a261 1
   theCall.copyInto (theJBoolArr, theBoolVecWoa);
d286 1
a286 1
   theCall.copyInto (theJIntArr, theIntVecWoa);
d311 1
a311 1
   theCall.copyInto (theJDblArr, theDblVecWoa);
@


1.15
log
@Implemented EXCEPTION_ASSERT and ABORTING_ASSERT.
@
text
@a18 26
NATIVE_METHOD (void, AttCOR, acquireMyCppAtt) (
      JNIEnv *   theJNIEnv,
      _jobject * theAttCORJObj,
      _jobject * theAttBldrCORJObj,
      _jstring * scopedAttNameJStr)
   {
   BEGIN_TRY_BLOCK

   NativeCall   theCall (theJNIEnv);
   AttBldr *    theAttBldr;
   const char * scopedAttNameCStr;
   Att *        theAtt;

   theAttBldr        = theCall.getObject (theAttBldrCORJObj)->asAttBldr ();

   scopedAttNameCStr = theCall.makeCString (scopedAttNameJStr);

   theAtt            = theAttBldr->handOverAttFor (scopedAttNameCStr);

   theCall.transferTo (theAttCORJObj, theAtt);

   END_TRY_BLOCK_SIMPLE_RETURN (theJNIEnv)
   }

//------------------------------------------------------------------------------

d377 26
@


1.14
log
@Initial implementation of class ExceptionHandler.
@
text
@d212 1
a212 1
   WITJ_ASSERT ((theBool == 0) || (theBool == 1));
@


1.13
log
@Imbedded every native method implementation in a canonical try block.
@
text
@d8 6
a13 6
#include  <NativeMacros.h>
#include <WitjException.h>
#include    <NativeCall.h>
#include           <Att.h>
#include       <AttBldr.h>
#include        <VecWoa.h>
d216 1
a216 1
   END_TRY_BLOCK_RETURNING_VALUE (theJNIEnv, false)
d240 1
a240 1
   END_TRY_BLOCK_RETURNING_VALUE (theJNIEnv, 0)
d264 1
a264 1
   END_TRY_BLOCK_RETURNING_VALUE (theJNIEnv, 0.0)
d357 1
a357 1
   END_TRY_BLOCK_RETURNING_VALUE (theJNIEnv, false)
d379 1
a379 1
   END_TRY_BLOCK_RETURNING_VALUE (theJNIEnv, false)
d401 1
a401 1
   END_TRY_BLOCK_RETURNING_VALUE (theJNIEnv, false)
@


1.12
log
@Changed to all upper case for the names of macros.
@
text
@d8 6
a13 5
#include <NativeMacros.h>
#include   <NativeCall.h>
#include          <Att.h>
#include      <AttBldr.h>
#include       <VecWoa.h>
d25 2
d39 2
d51 2
d64 2
d76 2
d89 2
d101 2
d114 2
d126 2
d139 2
d151 2
d164 2
d176 2
d189 2
d200 2
d215 2
d226 2
d239 2
d250 2
d263 2
d275 2
d288 2
d300 2
d313 2
d325 2
d338 2
d348 2
d356 2
d367 2
d378 2
d389 2
d400 2
@


1.11
log
@Changed name of method Attribute.allowsSetValue to isModifiable.
@
text
@d18 1
a18 1
nativeMethod (void, AttCOR, acquireMyCppAtt) (
d40 1
a40 1
nativeMethod (void, AttCOR, setBool) (
d61 1
a61 1
nativeMethod (void, AttCOR, setInt) (
d82 1
a82 1
nativeMethod (void, AttCOR, setDbl) (
d103 1
a103 1
nativeMethod (void, AttCOR, setBoolVec) (
d124 1
a124 1
nativeMethod (void, AttCOR, setIntVec) (
d145 1
a145 1
nativeMethod (void, AttCOR, setDblVec) (
d166 1
a166 1
nativeMethod (jboolean, AttCOR, getBool) (
d181 1
a181 1
   witjAssert ((theBool == 0) || (theBool == 1));
d188 1
a188 1
nativeMethod (jint, AttCOR, getInt) (
d208 1
a208 1
nativeMethod (jdouble, AttCOR, getDbl) (
d228 1
a228 1
nativeMethod (void, AttCOR, getBoolVec) (
d249 1
a249 1
nativeMethod (void, AttCOR, getIntVec) (
d270 1
a270 1
nativeMethod (void, AttCOR, getDblVec) (
d291 1
a291 1
nativeMethod (jboolean, AttCOR, isModifiable) (
d305 1
a305 1
nativeMethod (jboolean, AttCOR, valueTypeMatches) (
d323 1
a323 1
nativeMethod (jboolean, AttCOR, appliesTo) (
@


1.10
log
@Attributes.
@
text
@d291 1
a291 1
nativeMethod (jboolean, AttCOR, allowsSetValue) (
d300 1
a300 1
   return theAtt->allowsSetValue ();
@


1.9
log
@Revised some of the calls to the overloaded member function
   theAtt->setValue (...) to disambiguate which function was being called.
@
text
@d291 1
a291 1
nativeMethod (jboolean, AttCOR, getIsInputAtt) (
d300 1
a300 1
   return theAtt->getIsInputAtt ();
@


1.8
log
@Minor Revision.
@
text
@d49 1
d54 3
a56 1
   theAtt->setValue (theElement, theJBool);
d70 1
d75 3
a77 1
   theAtt->setValue (theElement, theJInt);
d91 1
d96 3
a98 1
   theAtt->setValue (theElement, theJDbl);
@


1.7
log
@Name change.
@
text
@d282 1
a282 1
nativeMethod (jboolean, AttCOR, getInputAccess) (
d291 1
a291 3
   theAtt->getInputAccess ();

   return theAtt->getInputAccess ();
@


1.6
log
@Changed name of Component to Entity.
@
text
@d43 1
a43 1
      _jobject * theEntityCORJObj,
d48 1
a48 1
   Entity *   theEntity;
d50 2
a51 2
   theAtt    = theCall.getObject    (theAttCORJObj)->asAtt    ();
   theEntity = theCall.getObject (theEntityCORJObj)->asEntity ();
d53 1
a53 1
   theAtt->setValue (theEntity, theJBool);
d61 1
a61 1
      _jobject * theEntityCORJObj,
d66 1
a66 1
   Entity *   theEntity;
d68 2
a69 2
   theAtt    = theCall.getObject    (theAttCORJObj)->asAtt    ();
   theEntity = theCall.getObject (theEntityCORJObj)->asEntity ();
d71 1
a71 1
   theAtt->setValue (theEntity, theJInt);
d79 1
a79 1
      _jobject * theEntityCORJObj,
d84 1
a84 1
   Entity *   theEntity;
d86 2
a87 2
   theAtt    = theCall.getObject    (theAttCORJObj)->asAtt    ();
   theEntity = theCall.getObject (theEntityCORJObj)->asEntity ();
d89 1
a89 1
   theAtt->setValue (theEntity, theJDbl);
d97 1
a97 1
      _jobject *       theEntityCORJObj,
d102 1
a102 1
   Entity *        theEntity;
d105 2
a106 2
   theAtt      = theCall.getObject    (theAttCORJObj)->asAtt    ();
   theEntity   = theCall.getObject (theEntityCORJObj)->asEntity ();
d110 1
a110 1
   theAtt->setValue (theEntity, theBoolCVec);
d118 1
a118 1
      _jobject *   theEntityCORJObj,
d123 1
a123 1
   Entity *    theEntity;
d126 2
a127 2
   theAtt     = theCall.getObject    (theAttCORJObj)->asAtt    ();
   theEntity  = theCall.getObject (theEntityCORJObj)->asEntity ();
d131 1
a131 1
   theAtt->setValue (theEntity, theIntCVec);
d139 1
a139 1
      _jobject *      theEntityCORJObj,
d144 1
a144 1
   Entity *       theEntity;
d147 2
a148 2
   theAtt     = theCall.getObject    (theAttCORJObj)->asAtt    ();
   theEntity  = theCall.getObject (theEntityCORJObj)->asEntity ();
d152 1
a152 1
   theAtt->setValue (theEntity, theDblCVec);
d160 1
a160 1
      _jobject * theEntityCORJObj)
d164 1
a164 1
   Entity *   theEntity;
d167 2
a168 2
   theAtt    = theCall.getObject    (theAttCORJObj)->asAtt    ();
   theEntity = theCall.getObject (theEntityCORJObj)->asEntity ();
d170 1
a170 1
   theAtt->getValue (theEntity, theBool);
d182 1
a182 1
      _jobject * theEntityCORJObj)
d186 1
a186 1
   Entity *   theEntity;
d189 2
a190 2
   theAtt    = theCall.getObject    (theAttCORJObj)->asAtt    ();
   theEntity = theCall.getObject (theEntityCORJObj)->asEntity ();
d192 1
a192 1
   theAtt->getValue (theEntity, theInt);
d202 1
a202 1
      _jobject * theEntityCORJObj)
d206 1
a206 1
   Entity *   theEntity;
d209 2
a210 2
   theAtt    = theCall.getObject    (theAttCORJObj)->asAtt    ();
   theEntity = theCall.getObject (theEntityCORJObj)->asEntity ();
d212 1
a212 1
   theAtt->getValue (theEntity, theDbl);
d222 1
a222 1
      _jobject *       theEntityCORJObj,
d227 1
a227 1
   Entity *         theEntity;
d230 2
a231 2
   theAtt    = theCall.getObject    (theAttCORJObj)->asAtt    ();
   theEntity = theCall.getObject (theEntityCORJObj)->asEntity ();
d233 1
a233 1
   theAtt->getValue (theEntity, theBoolVecWoa);
d243 1
a243 1
      _jobject *   theEntityCORJObj,
d248 1
a248 1
   Entity *     theEntity;
d251 2
a252 2
   theAtt    = theCall.getObject    (theAttCORJObj)->asAtt    ();
   theEntity = theCall.getObject (theEntityCORJObj)->asEntity ();
d254 1
a254 1
   theAtt->getValue (theEntity, theIntVecWoa);
d264 1
a264 1
      _jobject *      theEntityCORJObj,
d269 1
a269 1
   Entity *        theEntity;
d272 2
a273 2
   theAtt    = theCall.getObject    (theAttCORJObj)->asAtt    ();
   theEntity = theCall.getObject (theEntityCORJObj)->asEntity ();
d275 1
a275 1
   theAtt->getValue (theEntity, theDblVecWoa);
d329 1
a329 1
   return (theAtt->getEntityClassName () == theClassNameCStr);
@


1.5
log
@Minor revision.
@
text
@d43 1
a43 1
      _jobject * theCompCORJObj,
d46 3
a48 3
   NativeCall  theCall (theJNIEnv);
   Att *       theAtt;
   Component * theComp;
d50 2
a51 2
   theAtt  = theCall.getObject  (theAttCORJObj)->asAtt       ();
   theComp = theCall.getObject (theCompCORJObj)->asComponent ();
d53 1
a53 1
   theAtt->setValue (theComp, theJBool);
d61 1
a61 1
      _jobject * theCompCORJObj,
d64 3
a66 3
   NativeCall  theCall (theJNIEnv);
   Att *       theAtt;
   Component * theComp;
d68 2
a69 2
   theAtt  = theCall.getObject  (theAttCORJObj)->asAtt       ();
   theComp = theCall.getObject (theCompCORJObj)->asComponent ();
d71 1
a71 1
   theAtt->setValue (theComp, theJInt);
d79 1
a79 1
      _jobject * theCompCORJObj,
d82 3
a84 3
   NativeCall  theCall (theJNIEnv);
   Att *       theAtt;
   Component * theComp;
d86 2
a87 2
   theAtt  = theCall.getObject  (theAttCORJObj)->asAtt       ();
   theComp = theCall.getObject (theCompCORJObj)->asComponent ();
d89 1
a89 1
   theAtt->setValue (theComp, theJDbl);
d97 1
a97 1
      _jobject *       theCompCORJObj,
d102 1
a102 1
   Component *     theComp;
d105 2
a106 2
   theAtt      = theCall.getObject  (theAttCORJObj)->asAtt       ();
   theComp     = theCall.getObject (theCompCORJObj)->asComponent ();
d110 1
a110 1
   theAtt->setValue (theComp, theBoolCVec);
d118 1
a118 1
      _jobject *   theCompCORJObj,
d123 1
a123 1
   Component * theComp;
d126 2
a127 2
   theAtt     = theCall.getObject  (theAttCORJObj)->asAtt       ();
   theComp    = theCall.getObject (theCompCORJObj)->asComponent ();
d131 1
a131 1
   theAtt->setValue (theComp, theIntCVec);
d139 1
a139 1
      _jobject *      theCompCORJObj,
d144 1
a144 1
   Component *    theComp;
d147 2
a148 2
   theAtt     = theCall.getObject  (theAttCORJObj)->asAtt       ();
   theComp    = theCall.getObject (theCompCORJObj)->asComponent ();
d152 1
a152 1
   theAtt->setValue (theComp, theDblCVec);
d160 1
a160 1
      _jobject * theCompCORJObj)
d162 4
a165 4
   NativeCall  theCall (theJNIEnv);
   Att *       theAtt;
   Component * theComp;
   Boolean     theBool;
d167 2
a168 2
   theAtt  = theCall.getObject  (theAttCORJObj)->asAtt       ();
   theComp = theCall.getObject (theCompCORJObj)->asComponent ();
d170 1
a170 1
   theAtt->getValue (theComp, theBool);
d182 1
a182 1
      _jobject * theCompCORJObj)
d184 4
a187 4
   NativeCall  theCall (theJNIEnv);
   Att *       theAtt;
   Component * theComp;
   int         theInt;
d189 2
a190 2
   theAtt  = theCall.getObject  (theAttCORJObj)->asAtt       ();
   theComp = theCall.getObject (theCompCORJObj)->asComponent ();
d192 1
a192 1
   theAtt->getValue (theComp, theInt);
d202 1
a202 1
      _jobject * theCompCORJObj)
d204 4
a207 4
   NativeCall  theCall (theJNIEnv);
   Att *       theAtt;
   Component * theComp;
   double      theDbl;
d209 2
a210 2
   theAtt  = theCall.getObject  (theAttCORJObj)->asAtt       ();
   theComp = theCall.getObject (theCompCORJObj)->asComponent ();
d212 1
a212 1
   theAtt->getValue (theComp, theDbl);
d222 1
a222 1
      _jobject *       theCompCORJObj,
d227 1
a227 1
   Component *      theComp;
d230 2
a231 2
   theAtt  = theCall.getObject  (theAttCORJObj)->asAtt       ();
   theComp = theCall.getObject (theCompCORJObj)->asComponent ();
d233 1
a233 1
   theAtt->getValue (theComp, theBoolVecWoa);
d243 1
a243 1
      _jobject *   theCompCORJObj,
d248 1
a248 1
   Component *  theComp;
d251 2
a252 2
   theAtt  = theCall.getObject  (theAttCORJObj)->asAtt       ();
   theComp = theCall.getObject (theCompCORJObj)->asComponent ();
d254 1
a254 1
   theAtt->getValue (theComp, theIntVecWoa);
d264 1
a264 1
      _jobject *      theCompCORJObj,
d269 1
a269 1
   Component *     theComp;
d272 2
a273 2
   theAtt  = theCall.getObject  (theAttCORJObj)->asAtt       ();
   theComp = theCall.getObject (theCompCORJObj)->asComponent ();
d275 1
a275 1
   theAtt->getValue (theComp, theDblVecWoa);
d329 1
a329 1
   return (theAtt->getCompClassName () == theClassNameCStr);
@


1.4
log
@Minor revision.
@
text
@d282 1
a282 1
nativeMethod (jboolean, AttCOR, getInputMode) (
d291 1
a291 1
   theAtt->getInputMode ();
d293 1
a293 1
   return theAtt->getInputMode ();
@


1.3
log
@Changed name of C++ class JniHandler to NativeCall.
@
text
@d282 1
a282 1
nativeMethod (jboolean, AttCOR, isAnInputAtt) (
d291 1
a291 1
   theAtt->isAnInputAtt ();
d293 1
a293 1
   return theAtt->isAnInputAtt ();
@


1.2
log
@Moved macro nativeMethod to its own header file.
@
text
@d9 1
a9 1
#include   <JniHandler.h>
d24 1
a24 1
   JniHandler   theJniHand (theJNIEnv);
d29 1
a29 1
   theAttBldr        = theJniHand.getObject (theAttBldrCORJObj)->asAttBldr ();
d31 1
a31 1
   scopedAttNameCStr = theJniHand.makeCString (scopedAttNameJStr);
d35 1
a35 1
   theJniHand.transferTo (theAttCORJObj, theAtt);
d46 1
a46 1
   JniHandler  theJniHand (theJNIEnv);
d50 2
a51 2
   theAtt  = theJniHand.getObject  (theAttCORJObj)->asAtt       ();
   theComp = theJniHand.getObject (theCompCORJObj)->asComponent ();
d64 1
a64 1
   JniHandler  theJniHand (theJNIEnv);
d68 2
a69 2
   theAtt  = theJniHand.getObject  (theAttCORJObj)->asAtt       ();
   theComp = theJniHand.getObject (theCompCORJObj)->asComponent ();
d82 1
a82 1
   JniHandler  theJniHand (theJNIEnv);
d86 2
a87 2
   theAtt  = theJniHand.getObject  (theAttCORJObj)->asAtt       ();
   theComp = theJniHand.getObject (theCompCORJObj)->asComponent ();
d100 1
a100 1
   JniHandler      theJniHand (theJNIEnv);
d105 2
a106 2
   theAtt      = theJniHand.getObject  (theAttCORJObj)->asAtt       ();
   theComp     = theJniHand.getObject (theCompCORJObj)->asComponent ();
d108 1
a108 1
   theBoolCVec = theJniHand.makeBoolCTVec (theJBoolArr);
d121 1
a121 1
   JniHandler  theJniHand (theJNIEnv);
d126 2
a127 2
   theAtt     = theJniHand.getObject  (theAttCORJObj)->asAtt       ();
   theComp    = theJniHand.getObject (theCompCORJObj)->asComponent ();
d129 1
a129 1
   theIntCVec = theJniHand.makeIntCTVec (theJIntArr);
d142 1
a142 1
   JniHandler     theJniHand (theJNIEnv);
d147 2
a148 2
   theAtt     = theJniHand.getObject  (theAttCORJObj)->asAtt       ();
   theComp    = theJniHand.getObject (theCompCORJObj)->asComponent ();
d150 1
a150 1
   theDblCVec = theJniHand.makeDblCTVec (theJDblArr);
d162 1
a162 1
   JniHandler  theJniHand (theJNIEnv);
d167 2
a168 2
   theAtt  = theJniHand.getObject  (theAttCORJObj)->asAtt       ();
   theComp = theJniHand.getObject (theCompCORJObj)->asComponent ();
d184 1
a184 1
   JniHandler  theJniHand (theJNIEnv);
d189 2
a190 2
   theAtt  = theJniHand.getObject  (theAttCORJObj)->asAtt       ();
   theComp = theJniHand.getObject (theCompCORJObj)->asComponent ();
d204 1
a204 1
   JniHandler  theJniHand (theJNIEnv);
d209 2
a210 2
   theAtt  = theJniHand.getObject  (theAttCORJObj)->asAtt       ();
   theComp = theJniHand.getObject (theCompCORJObj)->asComponent ();
d225 1
a225 1
   JniHandler       theJniHand (theJNIEnv);
d230 2
a231 2
   theAtt  = theJniHand.getObject  (theAttCORJObj)->asAtt       ();
   theComp = theJniHand.getObject (theCompCORJObj)->asComponent ();
d235 1
a235 1
   theJniHand.copyInto (theJBoolArr, theBoolVecWoa);
d246 1
a246 1
   JniHandler   theJniHand (theJNIEnv);
d251 2
a252 2
   theAtt  = theJniHand.getObject  (theAttCORJObj)->asAtt       ();
   theComp = theJniHand.getObject (theCompCORJObj)->asComponent ();
d256 1
a256 1
   theJniHand.copyInto (theJIntArr, theIntVecWoa);
d267 1
a267 1
   JniHandler      theJniHand (theJNIEnv);
d272 2
a273 2
   theAtt  = theJniHand.getObject  (theAttCORJObj)->asAtt       ();
   theComp = theJniHand.getObject (theCompCORJObj)->asComponent ();
d277 1
a277 1
   theJniHand.copyInto (theJDblArr, theDblVecWoa);
d286 1
a286 1
   JniHandler theJniHand (theJNIEnv);
d289 1
a289 1
   theAtt = theJniHand.getObject (theAttCORJObj)->asAtt ();
d303 1
a303 1
   JniHandler  theJniHand (theJNIEnv);
d307 1
a307 1
   theAtt      = theJniHand.getObject   (theAttCORJObj)->asAtt ();
d309 1
a309 1
   theTypeName = theJniHand.makeCString (theTypeNameJStr);
d321 1
a321 1
   JniHandler   theJniHand (theJNIEnv);
d325 1
a325 1
   theAtt           = theJniHand.getObject (theAttCORJObj)->asAtt ();
d327 1
a327 1
   theClassNameCStr = theJniHand.makeCString (theClassNameJStr);
@


1.1
log
@Numerous class name changes.
@
text
@d8 5
a12 4
#include <JniHandler.h>
#include        <Att.h>
#include    <AttBldr.h>
#include     <VecWoa.h>
@

