head	1.40;
access;
symbols;
locks; strict;
comment	@ * @;


1.40
date	2011.04.08.20.56.16;	author rjw;	state Exp;
branches;
next	1.39;

1.39
date	2011.03.30.16.20.35;	author rjw;	state Exp;
branches;
next	1.38;

1.38
date	2009.04.15.23.33.26;	author rjw;	state Exp;
branches;
next	1.37;

1.37
date	2009.04.15.22.14.55;	author rjw;	state Exp;
branches;
next	1.36;

1.36
date	2009.04.15.21.11.57;	author rjw;	state Exp;
branches;
next	1.35;

1.35
date	2009.03.13.19.32.16;	author rjw;	state Exp;
branches;
next	1.34;

1.34
date	2009.03.05.19.09.16;	author rjw;	state Exp;
branches;
next	1.33;

1.33
date	2009.03.05.17.21.25;	author rjw;	state Exp;
branches;
next	1.32;

1.32
date	2009.02.28.00.27.53;	author rjw;	state Exp;
branches;
next	1.31;

1.31
date	2009.02.27.23.12.29;	author rjw;	state Exp;
branches;
next	1.30;

1.30
date	2009.02.27.21.22.38;	author rjw;	state Exp;
branches;
next	1.29;

1.29
date	2009.02.27.18.44.23;	author rjw;	state Exp;
branches;
next	1.28;

1.28
date	2009.02.26.22.46.57;	author rjw;	state Exp;
branches;
next	1.27;

1.27
date	2009.01.29.22.06.36;	author rjw;	state Exp;
branches;
next	1.26;

1.26
date	2009.01.21.21.43.21;	author rjw;	state Exp;
branches;
next	1.25;

1.25
date	2009.01.16.17.30.23;	author rjw;	state Exp;
branches;
next	1.24;

1.24
date	2009.01.16.17.03.33;	author rjw;	state Exp;
branches;
next	1.23;

1.23
date	2009.01.16.16.32.01;	author rjw;	state Exp;
branches;
next	1.22;

1.22
date	2008.12.15.17.28.46;	author rjw;	state Exp;
branches;
next	1.21;

1.21
date	2008.11.26.18.33.03;	author rjw;	state Exp;
branches;
next	1.20;

1.20
date	2008.10.07.18.50.21;	author rjw;	state Exp;
branches;
next	1.19;

1.19
date	2008.10.06.22.14.00;	author rjw;	state Exp;
branches;
next	1.18;

1.18
date	2008.10.02.21.45.13;	author rjw;	state Exp;
branches;
next	1.17;

1.17
date	2008.10.02.17.34.35;	author rjw;	state Exp;
branches;
next	1.16;

1.16
date	2008.09.29.22.43.45;	author rjw;	state Exp;
branches;
next	1.15;

1.15
date	2008.09.09.18.59.57;	author rjw;	state Exp;
branches;
next	1.14;

1.14
date	2008.08.29.15.34.42;	author rjw;	state Exp;
branches;
next	1.13;

1.13
date	2008.08.28.18.50.40;	author rjw;	state Exp;
branches;
next	1.12;

1.12
date	2008.08.27.15.30.44;	author rjw;	state Exp;
branches;
next	1.11;

1.11
date	2008.07.01.17.49.13;	author rjw;	state Exp;
branches;
next	1.10;

1.10
date	2008.07.01.16.09.21;	author rjw;	state Exp;
branches;
next	1.9;

1.9
date	2008.06.10.23.21.30;	author rjw;	state Exp;
branches;
next	1.8;

1.8
date	2008.06.10.22.32.34;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2008.05.28.22.29.35;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2008.05.22.22.00.12;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2008.05.21.14.33.47;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2008.05.20.18.16.38;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2008.05.19.22.20.53;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2008.05.15.19.45.15;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2008.05.13.20.51.33;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.40
log
@copyComponentData
@
text
@//------------------------------------------------------------------------------
// WIT-J C++ Source File BomEntry.C.
//
// Contains the implementation of class BomEntry.
//------------------------------------------------------------------------------

#include    <BomEntry.h>
#include        <Part.h>
#include   <Operation.h>
#include <Coordinator.h>

#include        <wit.h>

//------------------------------------------------------------------------------

WitJ::BomEntry::BomEntry (
         Operation * theOpn, 
         int         theBomIdx,
         Part *      thePart):

      Component   (theOpn->getCoordinator ()),
      myOpn_      (theOpn),
      myBomIndex_ (theBomIdx)
   {
   if (! extractInProgress ())
      witAddBomEntry (
         getWitRun (),
         getOperationName (),
         thePart->getPartName ());

   witSetBomEntryAppData (getWitRun (), getOperationName (), myBomIndex_, this);
   }

//------------------------------------------------------------------------------

WitJ::BomEntry::~BomEntry ()
   {
   }

//------------------------------------------------------------------------------

WitJ::BomEntry * WitJ::BomEntry::asBomEntry ()
   {
   return this;
   }

//------------------------------------------------------------------------------

void WitJ::BomEntry::copyComponentData (Component * origComp)
   {
   BomEntry * origBomEnt;

   origBomEnt = origComp->asBomEntry ();

   witCopyBomEntryData (
                  getWitRun        (),
                  getOperationName (),
                  myBomIndex_,
      origBomEnt->getWitRun        (),
      origBomEnt->getOperationName (),
      origBomEnt->myBomIndex_);
   }

//------------------------------------------------------------------------------

const char * WitJ::BomEntry::getOperationName ()
   {
   return myOpn_->getOperationName ();
   }

//------------------------------------------------------------------------------

void WitJ::BomEntry::setBomIndex (int theBomIdx)
   {
   myBomIndex_ = theBomIdx;
   }
@


1.39
log
@Revised CppObjRep class ctors.
@
text
@d49 17
@


1.38
log
@Moved findInstsnce functions into class Component.
@
text
@d18 1
a18 1
         int         theBomIndex,
d23 1
a23 1
      myBomIndex_ (theBomIndex)
d56 1
a56 1
void WitJ::BomEntry::setBomIndex (int theBomIndex)
d58 1
a58 1
   myBomIndex_ = theBomIndex;
@


1.37
log
@Moved restoreInstance functions from the Component classes to class
   Coordinator.
@
text
@a10 2
#include   <StringWoa.h>
#include  <JavaObjRep.h>
a55 18
WitJ::BomEntry * WitJ::BomEntry::findInstance (
      Coordinator * theCoord,
      const char *  theOpnName,
      int           theBomIndex)
   {
   void * theAppData;

   witGetBomEntryAppData (
      theCoord->getWitRun (),
      theOpnName,
      theBomIndex,
    & theAppData);

   return static_cast <BomEntry *> (theAppData);
   }

//------------------------------------------------------------------------------

@


1.36
log
@Moved Component extraction functions to class Coordinator.
Removed debugging output code from createMyCppCoordinator implementation.
@
text
@a57 21
void WitJ::BomEntry::restoreInstance (Coordinator * theCoord)
   {
   StringWoa  theOpnNameWoa;
   int        theBomIndex;
   BomEntry * theBomEnt;

   witGetObjItrBomEntry (
      theCoord    ->getWitRun   (),
      theOpnNameWoa.getCStrAddr (),
    & theBomIndex);

   theBomEnt =
      findInstance (theCoord, theOpnNameWoa.getCString (), theBomIndex);

   theBomEnt->myBomIndex_ = theBomIndex;

   theBomEnt->setWasDeletedInWit (false);
   }

//------------------------------------------------------------------------------

d73 7
@


1.35
log
@Changed name of Element classes in Java and C++ to Component.
@
text
@a57 27
void WitJ::BomEntry::extractInstance (Coordinator * theCoord)
   {
   StringWoa   theOpnNameWoa;
   int         theBomIndex;
   StringWoa   thePartNameWoa;
   Operation * theOpn;
   Part *      thePart;

   witGetObjItrBomEntry (
      theCoord    ->getWitRun   (),
      theOpnNameWoa.getCStrAddr (),
    & theBomIndex);

   witGetBomEntryConsumedPart (
      theCoord     ->getWitRun   (),
      theOpnNameWoa .getCString  (),
      theBomIndex,
      thePartNameWoa.getCStrAddr ());

   theOpn  = Operation::findInstance (theCoord, theOpnNameWoa .getCString ());
   thePart = Part     ::findInstance (theCoord, thePartNameWoa.getCString ());

   JavaObjRep::makeBomEntry (theOpn, thePart);
   }

//------------------------------------------------------------------------------

@


1.34
log
@purgeData
@
text
@d23 1
a23 1
      Element     (theOpn->getCoordinator ()),
@


1.33
log
@purgeData
@
text
@d85 1
a85 1
void WitJ::BomEntry::preserveInstance (Coordinator * theCoord)
@


1.32
log
@purgeData
@
text
@d101 1
a101 1
   theBomEnt->setToBeShutDown (false);
@


1.31
log
@purgeData
@
text
@d11 1
a11 1
#include      <VecWoa.h>
d68 1
a68 1
      theOpnNameWoa.getCVecAddr (),
d73 1
a73 1
      theOpnNameWoa .getCVec     (),
d75 1
a75 1
      thePartNameWoa.getCVecAddr ());
d77 2
a78 2
   theOpn  = Operation::findInstance (theCoord, theOpnNameWoa .getCVec ());
   thePart = Part     ::findInstance (theCoord, thePartNameWoa.getCVec ());
d93 1
a93 1
      theOpnNameWoa.getCVecAddr (),
d96 2
a97 1
   theBomEnt = findInstance (theCoord, theOpnNameWoa.getCVec (), theBomIndex);
@


1.30
log
@purgeData
@
text
@d77 2
a78 2
   theOpn  = theCoord->findOperation (theOpnNameWoa .getCVec ());
   thePart = theCoord->findPart      (thePartNameWoa.getCVec ());
d96 1
a96 1
   theBomEnt = theCoord->findBomEntry (theOpnNameWoa.getCVec (), theBomIndex);
d102 18
@


1.29
log
@purgeData
@
text
@d82 20
@


1.28
log
@Removed C++ class Extractor.
@
text
@d7 6
a12 3
#include  <BomEntry.h>
#include      <Part.h>
#include <Operation.h>
d14 1
a14 1
#include       <wit.h>
d55 27
@


1.27
log
@Implemented Java class CppGateway.
@
text
@d24 1
a24 1
   if (! getExtractMode ())
@


1.26
log
@Change the names of the ProbMgr classes to Coordinator, etc.
@
text
@d16 3
a18 4
         Operation *  theOpn, 
         int          theBomIndex,
         Part *       thePart,
         JavaObjRep * theBomEntJOR):
d20 1
a20 1
      Element     (theOpn->getCoordinator (), theBomEntJOR),
@


1.25
log
@ProbMgr classes.
@
text
@d21 1
a21 1
      Element     (theOpn->getProbMgr (), theBomEntJOR),
@


1.24
log
@Change the mname of the ProbCtr classes to ProbMgr in both Java and C++.
@
text
@a14 2
#include <Problem.h>

d21 1
a21 1
      Element     (theOpn->getProblem ()->getProbMgr (), theBomEntJOR),
@


1.23
log
@Continued implementation of the ProbCtr classes.
@
text
@d23 1
a23 1
      Element     (theOpn->getProblem ()->getProbCtr (), theBomEntJOR),
@


1.22
log
@Updated some comments.
@
text
@d15 2
d23 1
a23 1
      Element     (theOpn->getProblem (), theBomEntJOR),
@


1.21
log
@Removed C++ class Session.
@
text
@d4 1
a4 1
// Contains the definition of class BomEntry.
@


1.20
log
@Name change.
@
text
@d21 1
a21 1
      Element     (theOpn->getSession (), theBomEntJOR),
@


1.19
log
@Changed name of Component to Entity.
@
text
@d21 1
a21 1
      Entity      (theOpn->getSession (), theBomEntJOR),
@


1.18
log
@Implemented extraction of BOM entries.
@
text
@d21 1
a21 1
      Component   (theOpn->getSession (), theBomEntJOR),
@


1.17
log
@Call-back infrastructure.
Implemented extraction of Demands.
@
text
@d17 1
d21 3
a23 2
      Component (theOpn->getSession (), theBomEntJOR),
      myOpn_    (theOpn)
d25 5
a29 9
   witGetOperationNBomEntries (
      getWitRun (),
      getOperationName (),
    & myBomIndex_);

   witAddBomEntry (
      getWitRun (),
      getOperationName (),
      thePart->getPartName ());
@


1.16
log
@Call-back infrastructure.
@
text
@d32 2
@


1.15
log
@Renamed Java class ProbCoordCI to SessionCI.
Renamed C++  class ProbCoord   to Session.
@
text
@d16 3
a18 2
         Operation * theOpn, 
         Part *      thePart):
d20 1
a20 1
      Component (theOpn->getSession ()),
@


1.14
log
@Attributes.
@
text
@d19 1
a19 1
      Component (theOpn->getProbCoord ()),
@


1.13
log
@Removed some debugging output.
@
text
@d24 1
a24 1
      getOperationCName (),
d29 2
a30 2
      getOperationCName (),
      thePart->getPartCName ());
d48 1
a48 1
const char * WitJ::BomEntry::getOperationCName ()
d50 1
a50 1
   return myOpn_->getOperationCName ();
@


1.12
log
@Attributes.
@
text
@a12 2
#include  <iostream>

a36 7
   std::cout
      << "\n"
      << "Destroying BomEntry #\""
      << myBomIndex_
      << "\" for Operation \""
      << getOperationCName ()
      << "\".\n";
@


1.11
log
@Accessor names.
@
text
@d50 1
a50 1
WitJ::BomEntry * WitJ::BomEntry::thisBomEntry ()
@


1.10
log
@Changed the names of access functions beginning with "my"
to begin with "get".
@
text
@d21 2
a22 2
      Component     (theOpn->getProbCoord ()),
      consumingOpn_ (theOpn)
d26 2
a27 2
      consumingOpnCName (),
    & bomIndex_);
d31 2
a32 2
      consumingOpnCName (),
      thePart->partCName ());
d42 1
a42 1
      << bomIndex_
d44 1
a44 1
      << consumingOpnCName ()
d57 1
a57 1
const char * WitJ::BomEntry::consumingOpnCName ()
d59 1
a59 1
   return consumingOpn_->operationCName ();
@


1.9
log
@Strings.
@
text
@d21 1
a21 1
      Component     (theOpn->myProbCoord ()),
d25 1
a25 1
      myWitRun (),
d30 1
a30 1
      myWitRun (),
@


1.8
log
@Replaced class WitJ::String with class std::string.
@
text
@d26 1
a26 1
      consumingOpnName ().c_str (),
d31 2
a32 2
      consumingOpnName ().c_str (),
      thePart->partName ().c_str ());
d44 1
a44 1
      << consumingOpnName ()
d57 1
a57 1
const std::string & WitJ::BomEntry::consumingOpnName ()
d59 1
a59 1
   return consumingOpn_->operationName ();
@


1.7
log
@Added myName_ to class Att.
@
text
@d26 1
a26 1
      consumingOpnName (),
d31 2
a32 2
      consumingOpnName (),
      thePart->partName ());
d57 1
a57 1
const WitJ::String & WitJ::BomEntry::consumingOpnName ()
@


1.6
log
@*** empty log message ***
@
text
@d41 1
a41 1
      << "Destroying WitJ::BomEntry #\""
@


1.5
log
@*** empty log message ***
@
text
@d27 1
a27 1
    & bomEntIdx_);
d42 1
a42 1
      << bomEntIdx_
@


1.4
log
@*** empty log message ***
@
text
@a49 7
void WitJ::BomEntry::getDerivedInstance (BomEntry * & theBomEntry)
   {
   theBomEntry = this;
   }

//------------------------------------------------------------------------------

@


1.3
log
@*** empty log message ***
@
text
@d57 1
a57 1
WitJ::BomEntry * WitJ::BomEntry::thisBomEnt ()
@


1.2
log
@*** empty log message ***
@
text
@d57 7
@


1.1
log
@*** empty log message ***
@
text
@a7 1
#include     <CIJia.h>
d18 2
a19 2
         const CIJia <Operation> & theOpnJia,
         const CIJia <Part> &      thePartJia):
d21 2
a22 2
      Component     (theOpnJia.myDerJAccObject ()->myProblem ()),
      consumingOpn_ (theOpnJia.myDerJAccObject ())
d32 1
a32 1
      thePartJia.myDerJAccObject ()->partName ());
@

