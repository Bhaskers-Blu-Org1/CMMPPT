head	1.1;
access;
symbols;
locks; strict;
comment	@ * @;


1.1
date	2010.04.15.21.33.56;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Multi-Obj Mode
@
text
@//------------------------------------------------------------------------------
// WIT-J C++ Source File StringVec.C.
//
// Contains the implementation of class StringVec.
//------------------------------------------------------------------------------

#include <StringVec.h>

//------------------------------------------------------------------------------
// Definition of class StringVec.
//------------------------------------------------------------------------------

WitJ::StringVec::StringVec ():

      myCStringVec_ ()
   {
   }

//------------------------------------------------------------------------------

WitJ::StringVec::~StringVec ()
   {
   clear ();
   }

//------------------------------------------------------------------------------

void WitJ::StringVec::resize (int theLength)
   {
   int theIdx;

   EXCEPTION_ASSERT (theLength >= 0);

   clear ();

   myCStringVec_.resize (theLength);

   for (theIdx = 0; theIdx < theLength; theIdx ++)
      {
      myCStringVec_[theIdx]    = new char[1];

      myCStringVec_[theIdx][0] = '\0';
      }
   }

//------------------------------------------------------------------------------

void WitJ::StringVec::resizeAt (int theIdx, int theLength)
   {
   delete[] myCStringVec_.at (theIdx);

   myCStringVec_[theIdx]    = new char[theLength + 1];

   myCStringVec_[theIdx][0] = '\0';
   }

//------------------------------------------------------------------------------

char * WitJ::StringVec::operator[] (int theIdx)
   {
   return myCStringVec_.at (theIdx);
   }

//------------------------------------------------------------------------------

const char * const * WitJ::StringVec::getCStringCVec () const
   {
   return & myCStringVec_[0];
   }

//------------------------------------------------------------------------------

int WitJ::StringVec::getLength () const
   {
   return myCStringVec_.size ();
   }

//------------------------------------------------------------------------------

void WitJ::StringVec::clear ()
   {
   int theIdx;

   for (theIdx = 0; theIdx < myCStringVec_.size (); theIdx ++)
      {
      delete[] myCStringVec_[theIdx];

      myCStringVec_[theIdx] = NULL;
      }

   myCStringVec_.clear ();
   }
@
