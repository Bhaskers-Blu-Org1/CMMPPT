head	1.21;
access;
symbols;
locks; strict;
comment	@ * @;


1.21
date	2011.04.15.19.12.31;	author rjw;	state Exp;
branches;
next	1.20;

1.20
date	2011.04.15.19.01.06;	author rjw;	state Exp;
branches;
next	1.19;

1.19
date	2011.04.15.00.07.23;	author rjw;	state Exp;
branches;
next	1.18;

1.18
date	2011.04.13.22.36.21;	author rjw;	state Exp;
branches;
next	1.17;

1.17
date	2011.04.05.22.25.39;	author rjw;	state Exp;
branches;
next	1.16;

1.16
date	2011.04.01.23.25.00;	author rjw;	state Exp;
branches;
next	1.15;

1.15
date	2011.03.29.23.38.45;	author rjw;	state Exp;
branches;
next	1.14;

1.14
date	2011.03.19.00.26.09;	author rjw;	state Exp;
branches;
next	1.13;

1.13
date	2009.06.05.15.08.21;	author rjw;	state Exp;
branches;
next	1.12;

1.12
date	2009.05.29.17.59.38;	author rjw;	state Exp;
branches;
next	1.11;

1.11
date	2009.04.16.21.08.38;	author rjw;	state Exp;
branches;
next	1.10;

1.10
date	2009.04.15.21.11.57;	author rjw;	state Exp;
branches;
next	1.9;

1.9
date	2009.04.15.19.56.49;	author rjw;	state Exp;
branches;
next	1.8;

1.8
date	2009.03.05.19.09.17;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2009.02.27.15.41.53;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2009.02.03.16.51.23;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2009.01.31.00.56.25;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2009.01.29.22.06.37;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2009.01.23.19.32.22;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2009.01.23.18.46.53;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2009.01.21.21.43.21;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.21
log
@Java CppObjRep classes
@
text
@//------------------------------------------------------------------------------
// WIT-J C++ Source File CoordinatorCOR.C.
//------------------------------------------------------------------------------

#include     <NativeMacros.h>
#include <ExceptionHandler.h>
#include           <CORJOR.h>
#include      <Coordinator.h>

using namespace WitJ;

//------------------------------------------------------------------------------

NATIVE_METHOD (void, CoordinatorCOR, restoreAfterPurge) (
      JNIEnv *   theJNIEnv,
      _jobject * theCoordCORJObj)
   {
   BEGIN_TRY_BLOCK

   CORJOR <Coordinator> theCoordCJOR (theCoordCORJObj, theJNIEnv);

   theCoordCJOR.getCppObject ()->restoreAfterPurge ();

   END_TRY_BLOCK_SIMPLE_RETURN (theJNIEnv)
   }

//------------------------------------------------------------------------------

NATIVE_METHOD (void, CoordinatorCOR, clearData) (
      JNIEnv *   theJNIEnv,
      _jobject * theCoordCORJObj)
   {
   BEGIN_TRY_BLOCK

   CORJOR <Coordinator> theCoordCJOR (theCoordCORJObj, theJNIEnv);

   theCoordCJOR.getCppObject ()->clearData ();

   END_TRY_BLOCK_SIMPLE_RETURN (theJNIEnv)
   }

//------------------------------------------------------------------------------

NATIVE_METHOD (void, CoordinatorCOR, acquireNewCppObject) (
      JNIEnv *   theJNIEnv,
      _jobject * theCoordCORJObj)
   {
   BEGIN_TRY_BLOCK

   CORJOR <Coordinator> theCoordCJOR (theCoordCORJObj, theJNIEnv);
   Coordinator *        theCoord;

   theCoord = new Coordinator;

   theCoordCJOR.acquire (theCoord);

   END_TRY_BLOCK_SIMPLE_RETURN (theJNIEnv)
   }
@


1.20
log
@Class template CORJOR
@
text
@d44 1
a44 1
NATIVE_METHOD (void, CoordinatorCOR, createCppObject) (
@


1.19
log
@Class template CORJOR
@
text
@d22 1
a22 1
   theCoordCJOR->restoreAfterPurge ();
d37 1
a37 1
   theCoordCJOR->clearData ();
d51 1
d53 3
a55 1
   theCoordCJOR = new Coordinator;
@


1.18
log
@Removed namespace JniUtil.
@
text
@d7 1
d20 1
a20 1
   Coordinator * theCoord;
d22 1
a22 3
   theCoord = getCoordinator (theCoordCORJObj, theJNIEnv);

   theCoord->restoreAfterPurge ();
d35 1
a35 3
   Coordinator * theCoord;

   theCoord = getCoordinator (theCoordCORJObj, theJNIEnv);
d37 1
a37 1
   theCoord->clearData ();
d50 1
a50 3
   Coordinator * theCoord;

   theCoord = new Coordinator;
d52 1
a52 1
   JniClient::transferTo (theCoordCORJObj, theCoord, theJNIEnv);
@


1.17
log
@Namespace JniUtil.
@
text
@a5 1
#include          <JniUtil.h>
a9 1
using namespace WitJ::JniUtil;
d57 1
a57 1
   transferTo (theCoordCORJObj, theCoord, theJNIEnv);
@


1.16
log
@JniAsst
@
text
@d6 1
a7 1
#include          <JniAsst.h>
d11 1
d23 1
a23 1
   theCoord = JniAsst::getCoordinator (theCoordCORJObj, theJNIEnv);
d40 1
a40 1
   theCoord = JniAsst::getCoordinator (theCoordCORJObj, theJNIEnv);
a54 1
   JniAsst *     theJniAsst;
d57 1
a57 1
   theJniAsst = new JniAsst (theJNIEnv);
d59 1
a59 3
   theCoord   = new Coordinator (theJniAsst);

   theJniAsst->transferTo (theCoordCORJObj, theCoord);
@


1.15
log
@Replaced C++ class CORJOR with ComponentJOR.
@
text
@d7 1
a7 1
#include       <NativeCall.h>
a19 1
   NativeCall    theCall (theJNIEnv);
d22 1
a22 1
   theCoord = theCall.getJavaAccObj (theCoordCORJObj)->asCoordinator ();
a36 1
   NativeCall    theCall (theJNIEnv);
d39 1
a39 1
   theCoord = theCall.getJavaAccObj (theCoordCORJObj)->asCoordinator ();
d54 1
a54 1
   NativeCall    theCall (theJNIEnv);
d57 1
a57 1
   theCoord = new Coordinator;
d59 3
a61 1
   theCall.transferTo (theCoordCORJObj, theCoord);
@


1.14
log
@Revised the arguments to eqHeurAlloc.
@
text
@d61 1
a61 1
   theCall.associate (theCoordCORJObj, theCoord);
@


1.13
log
@Changed the name each native method that creates a C++ object to
   createCppObject.
@
text
@d23 1
a23 1
   theCoord = theCall.getObject (theCoordCORJObj)->asCoordinator ();
d41 1
a41 1
   theCoord = theCall.getObject (theCoordCORJObj)->asCoordinator ();
@


1.12
log
@Changed name of clear methods to clearData.
@
text
@d50 1
a50 1
NATIVE_METHOD (void, CoordinatorCOR, createMyCppCoordinator) (
@


1.11
log
@theProblem.clear ().
@
text
@d32 1
a32 1
NATIVE_METHOD (void, CoordinatorCOR, clear) (
d43 1
a43 1
   theCoord->clear ();
@


1.10
log
@Moved Component extraction functions to class Coordinator.
Removed debugging output code from createMyCppCoordinator implementation.
@
text
@d32 18
@


1.9
log
@Added temporary debugging output statements to the implementation of
   createMyCppCoordinator.
@
text
@a31 2
#include <iostream>

a37 6
   std::cout
      << "\n"
      << "Entering createMyCppCoordinator.\n";

   std::cout.flush ();

a44 6
   std::cout
      << "Leaving  createMyCppCoordinator.\n"
      << "\n";

   std::cout.flush ();

@


1.8
log
@purgeData
@
text
@d32 2
d40 6
d53 6
@


1.7
log
@purgeData
@
text
@d14 1
a14 1
NATIVE_METHOD (void, CoordinatorCOR, purgeData) (
d25 1
a25 1
   theCoord->purgeData ();
@


1.6
log
@Simplified the static instance logic.
@
text
@d14 18
@


1.5
log
@Part.Category as Alternative
@
text
@d16 1
a16 2
      _jobject * theCoordCORJObj,
      jboolean   forStaticInst)
d23 1
a23 1
   theCoord = new Coordinator (forStaticInst);
@


1.4
log
@Implemented Java class CppGateway.
@
text
@d16 2
a17 1
      _jobject * theCoordCORJObj)
d24 1
a24 1
   theCoord = new Coordinator;
@


1.3
log
@Coordinator
@
text
@a7 1
#include       <JavaObjRep.h>
d16 1
a16 2
      _jobject * theCoordCORJObj,
      _jobject * theCoordJObj)
a20 1
   JavaObjRep *  theCoordJOR;
d23 1
a23 1
   theCoordJOR = new JavaObjRep (theCall, theCoordJObj);
d25 1
a25 3
   theCoord    = new Coordinator (theCoordJOR);

   theCall.transferTo (theCoordCORJObj, theCoord);
@


1.2
log
@Coordinator
@
text
@d17 2
a18 2
      _jobject * theCoordinatorCORJObj,
      _jobject * theCoordinatorJObj)
d23 2
a24 2
   JavaObjRep *  theCoordinatorJOR;
   Coordinator * theCoordinator;
d26 1
a26 1
   theCoordinatorJOR = new JavaObjRep (theCall, theCoordinatorJObj);
d28 1
a28 1
   theCoordinator    = new Coordinator (theCoordinatorJOR);
d30 1
a30 1
   theCall.transferTo (theCoordinatorCORJObj, theCoordinator);
@


1.1
log
@Change the names of the ProbMgr classes to Coordinator, etc.
@
text
@d8 2
a9 1
#include          <Coordinator.h>
d17 2
a18 1
      _jobject * theCoordinatorCORJObj)
d23 1
d26 3
a28 1
   theCoordinator = new Coordinator;
@

