head	1.16;
access;
symbols;
locks; strict;
comment	@ * @;


1.16
date	2011.04.12.00.33.12;	author rjw;	state Exp;
branches;
next	1.15;

1.15
date	2010.04.20.20.55.07;	author rjw;	state Exp;
branches;
next	1.14;

1.14
date	2010.04.17.00.20.19;	author rjw;	state Exp;
branches;
next	1.13;

1.13
date	2009.06.09.18.52.51;	author rjw;	state Exp;
branches;
next	1.12;

1.12
date	2009.06.08.22.04.09;	author rjw;	state Exp;
branches;
next	1.11;

1.11
date	2009.02.03.19.01.03;	author rjw;	state Exp;
branches;
next	1.10;

1.10
date	2009.01.21.21.43.22;	author rjw;	state Exp;
branches;
next	1.9;

1.9
date	2009.01.16.17.30.24;	author rjw;	state Exp;
branches;
next	1.8;

1.8
date	2009.01.14.22.24.34;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2008.12.15.17.28.48;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2008.12.15.17.17.39;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2008.11.26.20.10.59;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2008.11.25.21.58.16;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2008.10.01.22.10.10;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2008.09.26.22.50.17;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2008.09.19.16.29.50;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.16
log
@Class StringJOR
@
text
@//------------------------------------------------------------------------------
// WIT-J C++ Header File MessageMgr.h.
//
// Contains the declaration of class MessageMgr.
//------------------------------------------------------------------------------

#ifndef MessageMgr_h
#define MessageMgr_h

#include <JavaAccObj.h>

//------------------------------------------------------------------------------
// Class MessageMgr
//
// "Message Manager"
// Provides an interface WIT's message functions for a Problem.
//
// Class Hierarchy:
//
// JavaAccObj
//    MessageMgr
//------------------------------------------------------------------------------

namespace WitJ
{
class MessageMgr: public JavaAccObj
   {
   //---------------------------------------------------------------------------
   // Public member functions.
   //---------------------------------------------------------------------------

   public:

   explicit MessageMgr (Coordinator *);
      //
      // Constructor.

   ~MessageMgr ();
      //
      // Destructor.
   
   virtual MessageMgr * asMessageMgr ();
      //
      // Override from class JavaAccObj.

   void flushFile ();
      //
      // Flushes WIT's message file.

   void setQuiet (bool quietVal);
      //
      // Setter.

   bool isQuiet ();
      //
      // Accessor.

   //---------------------------------------------------------------------------
   // Wrappers for WIT API Functions.
   //---------------------------------------------------------------------------

   void setMesgFileAccessMode    (const char * theCStr);
   void getMesgFileAccessMode    (StringJOR &  theStringJOR);
   void setMesgFileName          (const char * theCStr);
   void getMesgFileName          (StringJOR &  theStringJOR);

   void setMesgTimesPrint        (int theMsgNo,       int   theCount);

   void setMesgTimesPrintByGroup (
         const char * theGroupNameCStr,
         int          theCount);

   void getMesgTimesPrint        (int theMsgNo,       int & theCount);

   //---------------------------------------------------------------------------
   // Private member functions.
   //---------------------------------------------------------------------------

   private:

   MessageMgr              (const MessageMgr &);
   MessageMgr & operator = (const MessageMgr &);
      //
      // Not implemented; prevents accidental copying and assignment.

   //---------------------------------------------------------------------------
   // Private member data.
   //---------------------------------------------------------------------------

   bool quiet_;
      //
      // True, iff WIT informational messages are to be suppressed when
      // executing "set" methods.
   };
};
//
// End of namespace WitJ.

#endif
@


1.15
log
@Multi-Obj Mode
@
text
@d62 4
a65 4
   void setMesgFileAccessMode    (const char *     theCStr);
   void getMesgFileAccessMode    (WitStringOwner & theWSO);
   void setMesgFileName          (const char *     theCStr);
   void getMesgFileName          (WitStringOwner & theWSO);
@


1.14
log
@Multi-Obj Mode
@
text
@d62 4
a65 4
   void setMesgFileAccessMode    (const char *    theCStr);
   void getMesgFileAccessMode    (VecWoa <char> & theStringWoa);
   void setMesgFileName          (const char *    theCStr);
   void getMesgFileName          (VecWoa <char> & theStringWoa);
@


1.13
log
@Implemented file name of "stdout" for stdout.
@
text
@d62 4
a65 4
   void setMesgFileAccessMode    (const char * theCStr);
   void getMesgFileAccessMode    (StringWoa &  theStringWoa);
   void setMesgFileName          (const char * theCStr);
   void getMesgFileName          (StringWoa &  theStringWoa);
@


1.12
log
@Initial code for stdout files.
@
text
@a57 4
   static const char * asAnOutFileName (const char * fileName);
      //
      // Returns fileName, replaced with witSTDOUT, if it's the null string.

@


1.11
log
@Message Group by group name.
@
text
@d58 4
@


1.10
log
@Change the names of the ProbMgr classes to Coordinator, etc.
@
text
@d62 10
a71 4
   void setMesgFileAccessMode (const char * theCStr);
   void getMesgFileAccessMode (StringWoa &  theStringWoa);
   void setMesgFileName       (const char * theCStr);
   void getMesgFileName       (StringWoa &  theStringWoa);
d73 1
a73 2
   void setMesgTimesPrint (int theMsgNo, int   theInt);
   void getMesgTimesPrint (int theMsgNo, int & theInt);
@


1.9
log
@ProbMgr classes.
@
text
@d34 1
a34 1
   explicit MessageMgr (ProbMgr *);
@


1.8
log
@Initial implementation of C++ class ProbCtr.
@
text
@d34 1
a34 1
   explicit MessageMgr (Problem *);
@


1.7
log
@Updated some comments.
@
text
@d16 1
a16 1
// Provides an interface WIT's message functions for a Session.
@


1.6
log
@Initial implementation of class ExceptionHandler.
@
text
@d79 1
a79 1
      // Not defined; prevents accidental copying and assignment.
@


1.5
log
@Changed the default value of quite mode from false to true.
Changed MessageMgr method names:
   setQuietMode ==> setQuiet
   getQuietMode ==> isQuiet
@
text
@d20 2
a21 2
//    JavaAccObj
//       MessageMgr
@


1.4
log
@Dismantling class SessionCOR.
@
text
@d50 1
a50 1
   void setQuietMode (bool theQuietMode);
d52 1
a52 1
      // Sets quiet mode to theQuietMode.
d54 1
a54 1
   bool getQuietMode ();
d56 1
a56 1
      // Returns the value of quiet mode.
d85 1
a85 1
   bool myQuietMode_;
@


1.3
log
@Extraction.
@
text
@d34 1
a34 1
   explicit MessageMgr (Session *);
@


1.2
log
@Changed name of C++ class JAccObject to JavaAccObj.
@
text
@d50 1
a50 1
   void setQuiet (bool isQuietVal);
d52 1
a52 1
      // Sets quiet mode to isQuietVal.
d54 1
a54 1
   bool isQuiet ();
d85 1
a85 1
   bool iAmQuiet_;
@


1.1
log
@Class name change.
@
text
@d10 1
a10 1
#include <JAccObject.h>
d20 1
a20 1
//    JAccObject
d26 1
a26 1
class MessageMgr: public JAccObject
d44 1
a44 1
      // Override from class JAccObject.
@

