head	1.39;
access;
symbols;
locks; strict;
comment	@ * @;


1.39
date	2011.04.15.00.07.24;	author rjw;	state Exp;
branches;
next	1.38;

1.38
date	2011.04.05.22.25.41;	author rjw;	state Exp;
branches;
next	1.37;

1.37
date	2011.04.01.23.25.01;	author rjw;	state Exp;
branches;
next	1.36;

1.36
date	2011.03.29.23.38.46;	author rjw;	state Exp;
branches;
next	1.35;

1.35
date	2011.03.25.22.49.14;	author rjw;	state Exp;
branches;
next	1.34;

1.34
date	2011.03.15.20.56.41;	author rjw;	state Exp;
branches;
next	1.33;

1.33
date	2011.02.25.16.06.49;	author rjw;	state Exp;
branches;
next	1.32;

1.32
date	2009.06.04.23.04.21;	author rjw;	state Exp;
branches;
next	1.31;

1.31
date	2009.03.26.19.22.23;	author rjw;	state Exp;
branches;
next	1.30;

1.30
date	2009.03.13.19.32.18;	author rjw;	state Exp;
branches;
next	1.29;

1.29
date	2009.03.13.16.36.07;	author rjw;	state Exp;
branches;
next	1.28;

1.28
date	2009.03.12.22.45.18;	author rjw;	state Exp;
branches;
next	1.27;

1.27
date	2009.02.26.22.46.58;	author rjw;	state Exp;
branches;
next	1.26;

1.26
date	2009.02.20.17.18.44;	author rjw;	state Exp;
branches;
next	1.25;

1.25
date	2009.02.17.23.46.01;	author rjw;	state Exp;
branches;
next	1.24;

1.24
date	2009.02.10.23.19.29;	author rjw;	state Exp;
branches;
next	1.23;

1.23
date	2009.02.06.22.40.58;	author rjw;	state Exp;
branches;
next	1.22;

1.22
date	2009.02.03.16.32.27;	author rjw;	state Exp;
branches;
next	1.21;

1.21
date	2009.01.29.22.06.37;	author rjw;	state Exp;
branches;
next	1.20;

1.20
date	2009.01.23.23.57.55;	author rjw;	state Exp;
branches;
next	1.19;

1.19
date	2009.01.23.19.32.23;	author rjw;	state Exp;
branches;
next	1.18;

1.18
date	2009.01.23.18.46.53;	author rjw;	state Exp;
branches;
next	1.17;

1.17
date	2009.01.21.21.43.22;	author rjw;	state Exp;
branches;
next	1.16;

1.16
date	2009.01.16.21.33.31;	author rjw;	state Exp;
branches;
next	1.15;

1.15
date	2009.01.16.19.42.43;	author rjw;	state Exp;
branches;
next	1.14;

1.14
date	2009.01.16.17.03.34;	author rjw;	state Exp;
branches;
next	1.13;

1.13
date	2009.01.15.22.50.31;	author rjw;	state Exp;
branches;
next	1.12;

1.12
date	2009.01.15.20.46.51;	author rjw;	state Exp;
branches;
next	1.11;

1.11
date	2009.01.14.22.24.34;	author rjw;	state Exp;
branches;
next	1.10;

1.10
date	2008.12.22.16.29.11;	author rjw;	state Exp;
branches;
next	1.9;

1.9
date	2008.12.15.17.28.47;	author rjw;	state Exp;
branches;
next	1.8;

1.8
date	2008.12.12.19.29.25;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2008.11.26.18.33.04;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2008.11.26.14.48.18;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2008.10.07.18.50.23;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2008.10.06.22.14.02;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2008.09.29.18.44.09;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2008.09.27.00.37.57;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2008.09.26.22.50.16;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.39
log
@Class template CORJOR
@
text
@//------------------------------------------------------------------------------
// WIT-J C++ Source File JavaAccObj.C.
//
// Contains the implementation of class JavaAccObj.
//------------------------------------------------------------------------------

#include <Coordinator.h>

//------------------------------------------------------------------------------

const int WitJ::JavaAccObj::validMark_ = 1234567890;

//------------------------------------------------------------------------------

WitJ::JavaAccObj::~JavaAccObj ()
   {
   validityMarker_ = 0;
   }

//------------------------------------------------------------------------------

void WitJ::JavaAccObj::getDerived (JavaAccObj * & theJavaAccObj)
   {
   theJavaAccObj = this;
   }

//------------------------------------------------------------------------------

void WitJ::JavaAccObj::getDerived (Coordinator * & theCoordinator)
   {
   theCoordinator = asCoordinator ();
   }

//------------------------------------------------------------------------------

void WitJ::JavaAccObj::getDerived (Problem * & theProblem)
   {
   theProblem = asProblem ();
   }

//------------------------------------------------------------------------------

void WitJ::JavaAccObj::getDerived (AttBldr * & theAttBldr)
   {
   theAttBldr = asAttBldr ();
   }

//------------------------------------------------------------------------------

void WitJ::JavaAccObj::getDerived (Att * & theAtt)
   {
   theAtt = asAtt ();
   }

//------------------------------------------------------------------------------

void WitJ::JavaAccObj::getDerived (MessageMgr * & theMessageMgr)
   {
   theMessageMgr = asMessageMgr ();
   }

//------------------------------------------------------------------------------

void WitJ::JavaAccObj::getDerived (Component * & theComponent)
   {
   theComponent = asComponent ();
   }

//------------------------------------------------------------------------------

void WitJ::JavaAccObj::getDerived (Part * & thePart)
   {
   thePart = asPart ();
   }

//------------------------------------------------------------------------------

void WitJ::JavaAccObj::getDerived (Demand * & theDemand)
   {
   theDemand = asDemand ();
   }

//------------------------------------------------------------------------------

void WitJ::JavaAccObj::getDerived (Operation * & theOperation)
   {
   theOperation = asOperation ();
   }

//------------------------------------------------------------------------------

void WitJ::JavaAccObj::getDerived (BomEntry * & theBomEntry)
   {
   theBomEntry = asBomEntry ();
   }

//------------------------------------------------------------------------------

void WitJ::JavaAccObj::getDerived (Substitute * & theSubstitute)
   {
   theSubstitute = asSubstitute ();
   }

//------------------------------------------------------------------------------

void WitJ::JavaAccObj::getDerived (BopEntry * & theBopEntry)
   {
   theBopEntry = asBopEntry ();
   }

//------------------------------------------------------------------------------

WitJ::Coordinator * WitJ::JavaAccObj::asCoordinator ()
   {
   EXCEPTION_ASSERT (false);

   return NULL;
   }

//------------------------------------------------------------------------------

WitJ::Problem * WitJ::JavaAccObj::asProblem ()
   {
   EXCEPTION_ASSERT (false);

   return NULL;
   }

//------------------------------------------------------------------------------

WitJ::AttBldr * WitJ::JavaAccObj::asAttBldr ()
   {
   EXCEPTION_ASSERT (false);

   return NULL;
   }

//------------------------------------------------------------------------------

WitJ::Att * WitJ::JavaAccObj::asAtt ()
   {
   EXCEPTION_ASSERT (false);

   return NULL;
   }

//------------------------------------------------------------------------------

WitJ::MessageMgr * WitJ::JavaAccObj::asMessageMgr ()
   {
   EXCEPTION_ASSERT (false);

   return NULL;
   }

//------------------------------------------------------------------------------

WitJ::Component * WitJ::JavaAccObj::asComponent ()
   {
   EXCEPTION_ASSERT (false);

   return NULL;
   }

//------------------------------------------------------------------------------

WitJ::Part * WitJ::JavaAccObj::asPart ()
   {
   EXCEPTION_ASSERT (false);

   return NULL;
   }

//------------------------------------------------------------------------------

WitJ::Demand * WitJ::JavaAccObj::asDemand ()
   {
   EXCEPTION_ASSERT (false);

   return NULL;
   }

//------------------------------------------------------------------------------

WitJ::Operation * WitJ::JavaAccObj::asOperation ()
   {
   EXCEPTION_ASSERT (false);

   return NULL;
   }

//------------------------------------------------------------------------------

WitJ::BomEntry * WitJ::JavaAccObj::asBomEntry ()
   {
   EXCEPTION_ASSERT (false);

   return NULL;
   }

//------------------------------------------------------------------------------

WitJ::Substitute * WitJ::JavaAccObj::asSubstitute ()
   {
   EXCEPTION_ASSERT (false);

   return NULL;
   }

//------------------------------------------------------------------------------

WitJ::BopEntry * WitJ::JavaAccObj::asBopEntry ()
   {
   EXCEPTION_ASSERT (false);

   return NULL;
   }

//------------------------------------------------------------------------------

WitRun * WitJ::JavaAccObj::getWitRun ()
   {
   return myCoordinator_->getWitRun ();
   }

//------------------------------------------------------------------------------

WitJ::CTVecSupply * WitJ::JavaAccObj::getCTVecSupply ()
   {
   return myCoordinator_->getCTVecSupply ();
   }

//------------------------------------------------------------------------------

bool WitJ::JavaAccObj::extractInProgress ()
   {
   return getCoordinator ()->extractInProgress ();
   }

//------------------------------------------------------------------------------

WitJ::JavaAccObj::JavaAccObj (Coordinator * theCoord):

      myCoordinator_  (theCoord),
      validityMarker_ (validMark_)
   {
   EXCEPTION_ASSERT (theCoord != NULL);
   }
@


1.38
log
@Namespace JniUtil.
@
text
@d22 91
@


1.37
log
@JniAsst
@
text
@a129 7
WitJ::JniAsst * WitJ::JavaAccObj::getJniAsst ()
   {
   return myCoordinator_->getJniAsst ();
   }

//------------------------------------------------------------------------------

@


1.36
log
@Replaced C++ class CORJOR with ComponentJOR.
@
text
@d130 7
@


1.35
log
@ArrayListJOR
@
text
@a6 1
#include      <CORJOR.h>
a17 12

   delete myCORJOR_;
   }

//------------------------------------------------------------------------------

void WitJ::JavaAccObj::acquire (CORJOR * theCORJOR)
   {
   EXCEPTION_ASSERT (theCORJOR  != NULL);
   EXCEPTION_ASSERT ( myCORJOR_ == NULL);

   myCORJOR_ = theCORJOR;
a152 1
      myCORJOR_       (NULL),
@


1.34
log
@Renamed JavaObjRep to CORJOR.
@
text
@a142 9
WitJ::AllocTripleVec * WitJ::JavaAccObj::asAllocTripleVec ()
   {
   EXCEPTION_ASSERT (false);

   return NULL;
   }

//------------------------------------------------------------------------------

@


1.33
log
@Moved GlobalAspect responsibilities to class Problem.
Removed class GlobalAspect.
@
text
@d7 1
a7 1
#include  <JavaObjRep.h>
d20 1
a20 1
   delete myJavaObjRep_;
d25 1
a25 1
void WitJ::JavaAccObj::acquire (JavaObjRep * theJavaObjRep)
d27 2
a28 2
   EXCEPTION_ASSERT (theJavaObjRep  != NULL);
   EXCEPTION_ASSERT ( myJavaObjRep_ == NULL);
d30 1
a30 1
   myJavaObjRep_ = theJavaObjRep;
d175 1
a175 1
      myJavaObjRep_   (NULL),
@


1.32
log
@Changed handling of Lists of AllocTriples to avoid call-backs.
@
text
@a88 9
WitJ::GlobalAspect * WitJ::JavaAccObj::asGlobalAspect ()
   {
   EXCEPTION_ASSERT (false);

   return NULL;
   }

//------------------------------------------------------------------------------

@


1.31
log
@Replaced C++ classes CTVecHolder <...> and CTVecRes with CTVecSupply.
@
text
@d152 1
a152 1
WitJ::AllocTripleList * WitJ::JavaAccObj::asAllocTripleList ()
d188 1
@


1.30
log
@Changed name of Element classes in Java and C++ to Component.
@
text
@d168 7
@


1.29
log
@Changed name of GlobalComponent classes to GlobalAspect.
@
text
@d80 1
a80 1
WitJ::Element * WitJ::JavaAccObj::asElement ()
@


1.28
log
@Changed name of GlobalElement classes to GlobalComponent.
@
text
@d89 1
a89 1
WitJ::GlobalComponent * WitJ::JavaAccObj::asGlobalComponent ()
@


1.27
log
@Removed C++ class Extractor.
@
text
@d89 1
a89 1
WitJ::GlobalElement * WitJ::JavaAccObj::asGlobalElement ()
@


1.26
log
@Added the AllocTripleList classes.
@
text
@a8 1
#include   <Extractor.h>
d168 1
a168 1
bool WitJ::JavaAccObj::getExtractMode ()
d170 1
a170 1
   return getCoordinator ()->getExtractor ()->getExtractMode ();
@


1.25
log
@Removed the ShipTriple classes.
@
text
@d153 9
@


1.24
log
@Replaced the AllocTarget classes with ShipTriple classes.
@
text
@a152 9
WitJ::ShipTriple * WitJ::JavaAccObj::asShipTriple ()
   {
   EXCEPTION_ASSERT (false);

   return NULL;
   }

//------------------------------------------------------------------------------

@


1.23
log
@Problem.eqHeurAlloc.
@
text
@d153 1
a153 1
WitJ::AllocTarget * WitJ::JavaAccObj::asAllocTarget ()
@


1.22
log
@Removed the Alternative classes.
@
text
@d153 9
@


1.21
log
@Implemented Java class CppGateway.
@
text
@a152 9
WitJ::Alternative * WitJ::JavaAccObj::asAlternative ()
   {
   EXCEPTION_ASSERT (false);

   return NULL;
   }

//------------------------------------------------------------------------------

@


1.20
log
@Alternative classes.
@
text
@d7 1
d20 12
d178 1
@


1.19
log
@Coordinator
@
text
@d140 9
@


1.18
log
@Coordinator
@
text
@d154 1
a154 1
WitJ::JavaAccObj::JavaAccObj (Coordinator * theCoordinator):
d156 1
a156 1
      myCoordinator_  (theCoordinator),
@


1.17
log
@Change the names of the ProbMgr classes to Coordinator, etc.
@
text
@a6 1
#include     <Problem.h>
@


1.16
log
@ProbMgr classes.
@
text
@d7 3
a9 3
#include   <Problem.h>
#include   <ProbMgr.h>
#include <Extractor.h>
d24 1
a24 1
WitJ::ProbMgr * WitJ::JavaAccObj::asProbMgr ()
d143 1
a143 1
   return myProbMgr_->getWitRun ();
d150 1
a150 1
   return getProbMgr ()->getExtractor ()->getExtractMode ();
d155 1
a155 1
WitJ::JavaAccObj::JavaAccObj (ProbMgr * theProbMgr):
d157 1
a157 1
      myProbMgr_      (theProbMgr),
@


1.15
log
@ProbMgr classes.
@
text
@a140 7
WitJ::Problem * WitJ::JavaAccObj::getProblem ()
   {
   return myProbMgr_->getProblem ();
   }

//------------------------------------------------------------------------------

@


1.14
log
@Change the mname of the ProbCtr classes to ProbMgr in both Java and C++.
@
text
@d157 1
a157 1
   return getProblem ()->getExtractor ()->getExtractMode ();
@


1.13
log
@Continued implementation of ProbCtr classes.
@
text
@d8 1
a8 1
#include   <ProbCtr.h>
d24 1
a24 1
WitJ::ProbCtr * WitJ::JavaAccObj::asProbCtr ()
d143 1
a143 1
   return myProbCtr_->getProblem ();
d150 1
a150 1
   return myProbCtr_->getWitRun ();
d162 1
a162 1
WitJ::JavaAccObj::JavaAccObj (ProbCtr * theProbCtr):
d164 1
a164 1
      myProbCtr_      (theProbCtr),
@


1.12
log
@Continued implementation of the ProbCtr classes.
@
text
@d24 9
@


1.11
log
@Initial implementation of C++ class ProbCtr.
@
text
@d8 1
d132 7
d141 1
a141 1
   return myProblem_->getWitRun ();
d148 1
a148 1
   return myProblem_->getExtractor ()->getExtractMode ();
d153 1
a153 1
WitJ::JavaAccObj::JavaAccObj (Problem * theProblem):
d155 1
a155 2
      myProblem_      (theProblem),
      myProbCtr_      (theProblem->getProbCtr ()),
@


1.10
log
@Implemented EXCEPTION_ASSERT and ABORTING_ASSERT.
@
text
@d148 1
@


1.9
log
@Updated some comments.
@
text
@d25 1
a25 1
   WITJ_ASSERT (false);
d34 1
a34 1
   WITJ_ASSERT (false);
d43 1
a43 1
   WITJ_ASSERT (false);
d52 1
a52 1
   WITJ_ASSERT (false);
d61 1
a61 1
   WITJ_ASSERT (false);
d70 1
a70 1
   WITJ_ASSERT (false);
d79 1
a79 1
   WITJ_ASSERT (false);
d88 1
a88 1
   WITJ_ASSERT (false);
d97 1
a97 1
   WITJ_ASSERT (false);
d106 1
a106 1
   WITJ_ASSERT (false);
d115 1
a115 1
   WITJ_ASSERT (false);
d124 1
a124 1
   WITJ_ASSERT (false);
@


1.8
log
@Changed to all upper case for the names of macros.
@
text
@d4 1
a4 1
// Contains the definition of class JavaAccObj.
@


1.7
log
@Removed C++ class Session.
@
text
@d25 1
a25 1
   witjAssert (false);
d34 1
a34 1
   witjAssert (false);
d43 1
a43 1
   witjAssert (false);
d52 1
a52 1
   witjAssert (false);
d61 1
a61 1
   witjAssert (false);
d70 1
a70 1
   witjAssert (false);
d79 1
a79 1
   witjAssert (false);
d88 1
a88 1
   witjAssert (false);
d97 1
a97 1
   witjAssert (false);
d106 1
a106 1
   witjAssert (false);
d115 1
a115 1
   witjAssert (false);
d124 1
a124 1
   witjAssert (false);
@


1.6
log
@Removed Java class SessionCOR.
@
text
@a6 1
#include   <Session.h>
d23 10
a32 1
WitJ::Session * WitJ::JavaAccObj::asSession ()
d41 1
a41 1
WitJ::MessageMgr * WitJ::JavaAccObj::asMessageMgr ()
d50 1
a50 1
WitJ::Problem * WitJ::JavaAccObj::asProblem ()
a130 18
WitJ::AttBldr * WitJ::JavaAccObj::asAttBldr ()
   {
   witjAssert (false);

   return NULL;
   }

//------------------------------------------------------------------------------

WitJ::Att * WitJ::JavaAccObj::asAtt ()
   {
   witjAssert (false);

   return NULL;
   }

//------------------------------------------------------------------------------

d133 1
a133 1
   return mySession_->getWitRun ();
d140 1
a140 12
   return
      mySession_->
         getProblem ()->
            getExtractor ()->
               getExtractMode ();
   }

//------------------------------------------------------------------------------

bool WitJ::JavaAccObj::isProblem ()
   {
   return false;
d145 1
a145 1
WitJ::JavaAccObj::JavaAccObj (Session * theSession):
d147 1
a147 1
      mySession_      (theSession),
@


1.5
log
@Name change.
@
text
@d159 7
@


1.4
log
@Changed name of Component to Entity.
@
text
@d51 1
a51 1
WitJ::Entity * WitJ::JavaAccObj::asEntity ()
d60 1
a60 1
WitJ::GlobalEntity * WitJ::JavaAccObj::asGlobalEntity ()
@


1.3
log
@Call-back infrastructure.
@
text
@d51 1
a51 1
WitJ::Component * WitJ::JavaAccObj::asComponent ()
d60 1
a60 1
WitJ::GlobalComp * WitJ::JavaAccObj::asGlobalComp ()
@


1.2
log
@Extraction.
@
text
@d7 3
a9 4
#include    <Session.h>
#include    <Problem.h>
#include <JavaObjRep.h>
#include  <Extractor.h>
a19 2

   delete myJavaObjRep_;
a161 11
      myJavaObjRep_   (NULL),
      validityMarker_ (validMark_)
   {
   }

//------------------------------------------------------------------------------

WitJ::JavaAccObj::JavaAccObj (Session * theSession, JavaObjRep * theJavaObjRep):

      mySession_      (theSession),
      myJavaObjRep_   (theJavaObjRep),
@


1.1
log
@Changed name of C++ class JAccObject to JavaAccObj.
@
text
@a143 9
void  WitJ::JavaAccObj::attach (JavaObjRep * theJavaObjRep)
   {
   witjAssert (myJavaObjRep_ == NULL);

   myJavaObjRep_ = theJavaObjRep;
   }

//------------------------------------------------------------------------------

d164 1
d166 8
d175 1
@

