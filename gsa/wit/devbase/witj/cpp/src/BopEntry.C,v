head	1.38;
access;
symbols;
locks; strict;
comment	@ * @;


1.38
date	2011.04.08.20.56.16;	author rjw;	state Exp;
branches;
next	1.37;

1.37
date	2011.03.30.16.20.36;	author rjw;	state Exp;
branches;
next	1.36;

1.36
date	2009.04.15.23.33.26;	author rjw;	state Exp;
branches;
next	1.35;

1.35
date	2009.04.15.22.14.55;	author rjw;	state Exp;
branches;
next	1.34;

1.34
date	2009.04.15.21.11.57;	author rjw;	state Exp;
branches;
next	1.33;

1.33
date	2009.03.13.19.32.17;	author rjw;	state Exp;
branches;
next	1.32;

1.32
date	2009.03.05.19.09.16;	author rjw;	state Exp;
branches;
next	1.31;

1.31
date	2009.03.05.17.21.25;	author rjw;	state Exp;
branches;
next	1.30;

1.30
date	2009.02.28.00.27.53;	author rjw;	state Exp;
branches;
next	1.29;

1.29
date	2009.02.27.23.12.29;	author rjw;	state Exp;
branches;
next	1.28;

1.28
date	2009.02.27.21.22.39;	author rjw;	state Exp;
branches;
next	1.27;

1.27
date	2009.02.27.18.44.24;	author rjw;	state Exp;
branches;
next	1.26;

1.26
date	2009.02.26.22.46.57;	author rjw;	state Exp;
branches;
next	1.25;

1.25
date	2009.01.29.22.06.36;	author rjw;	state Exp;
branches;
next	1.24;

1.24
date	2009.01.21.21.43.21;	author rjw;	state Exp;
branches;
next	1.23;

1.23
date	2009.01.16.17.30.24;	author rjw;	state Exp;
branches;
next	1.22;

1.22
date	2009.01.16.17.03.33;	author rjw;	state Exp;
branches;
next	1.21;

1.21
date	2009.01.16.16.32.01;	author rjw;	state Exp;
branches;
next	1.20;

1.20
date	2008.12.15.17.28.46;	author rjw;	state Exp;
branches;
next	1.19;

1.19
date	2008.11.26.18.33.04;	author rjw;	state Exp;
branches;
next	1.18;

1.18
date	2008.10.07.18.50.22;	author rjw;	state Exp;
branches;
next	1.17;

1.17
date	2008.10.06.22.14.00;	author rjw;	state Exp;
branches;
next	1.16;

1.16
date	2008.10.03.20.35.52;	author rjw;	state Exp;
branches;
next	1.15;

1.15
date	2008.10.02.17.34.35;	author rjw;	state Exp;
branches;
next	1.14;

1.14
date	2008.09.29.22.43.46;	author rjw;	state Exp;
branches;
next	1.13;

1.13
date	2008.09.09.18.59.57;	author rjw;	state Exp;
branches;
next	1.12;

1.12
date	2008.08.29.15.34.42;	author rjw;	state Exp;
branches;
next	1.11;

1.11
date	2008.08.28.18.50.40;	author rjw;	state Exp;
branches;
next	1.10;

1.10
date	2008.08.27.15.30.44;	author rjw;	state Exp;
branches;
next	1.9;

1.9
date	2008.07.11.23.02.51;	author rjw;	state Exp;
branches;
next	1.8;

1.8
date	2008.07.01.17.49.15;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2008.07.01.16.09.21;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2008.06.10.23.21.32;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2008.06.10.22.32.34;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2008.05.28.22.29.35;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2008.05.22.22.00.12;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2008.05.22.15.18.39;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2008.05.22.14.19.16;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.38
log
@copyComponentData
@
text
@//------------------------------------------------------------------------------
// WIT-J C++ Source File BopEntry.C.
//
// Contains the implementation of class BopEntry.
//------------------------------------------------------------------------------

#include    <BopEntry.h>
#include        <Part.h>
#include   <Operation.h>
#include <Coordinator.h>

#include         <wit.h>

//------------------------------------------------------------------------------

WitJ::BopEntry::BopEntry (
         Operation * theOpn, 
         int         theBopIdx,
         Part *      thePart):

      Component   (theOpn->getCoordinator ()),
      myOpn_      (theOpn),
      myBopIndex_ (theBopIdx)
   {
   if (! extractInProgress ())
      witAddBopEntry (
         getWitRun (),
         getOperationName (),
         thePart->getPartName ());

   witSetBopEntryAppData (getWitRun (), getOperationName (), myBopIndex_, this);
   }

//------------------------------------------------------------------------------

WitJ::BopEntry::~BopEntry ()
   {
   }

//------------------------------------------------------------------------------

WitJ::BopEntry * WitJ::BopEntry::asBopEntry ()
   {
   return this;
   }

//------------------------------------------------------------------------------

void WitJ::BopEntry::copyComponentData (Component * origComp)
   {
   BopEntry * origBopEnt;

   origBopEnt = origComp->asBopEntry ();

   witCopyBopEntryData (
                  getWitRun        (),
                  getOperationName (),
                  myBopIndex_,
      origBopEnt->getWitRun        (),
      origBopEnt->getOperationName (),
      origBopEnt->myBopIndex_);
   }

//------------------------------------------------------------------------------

const char * WitJ::BopEntry::getOperationName ()
   {
   return myOpn_->getOperationName ();
   }

//------------------------------------------------------------------------------

void WitJ::BopEntry::setBopIndex (int theBopIdx)
   {
   myBopIndex_ = theBopIdx;
   }
@


1.37
log
@Revised CppObjRep class ctors.
@
text
@d49 17
@


1.36
log
@Moved findInstsnce functions into class Component.
@
text
@d18 1
a18 1
         int         theBopIndex,
d23 1
a23 1
      myBopIndex_ (theBopIndex)
d56 1
a56 1
void WitJ::BopEntry::setBopIndex (int theBopIndex)
d58 1
a58 1
   myBopIndex_ = theBopIndex;
@


1.35
log
@Moved restoreInstance functions from the Component classes to class
   Coordinator.
@
text
@a10 2
#include   <StringWoa.h>
#include  <JavaObjRep.h>
a55 18
WitJ::BopEntry * WitJ::BopEntry::findInstance (
      Coordinator * theCoord,
      const char *  theOpnName,
      int           theBopIndex)
   {
   void * theAppData;

   witGetBopEntryAppData (
      theCoord->getWitRun (),
      theOpnName,
      theBopIndex,
    & theAppData);

   return static_cast <BopEntry *> (theAppData);
   }

//------------------------------------------------------------------------------

@


1.34
log
@Moved Component extraction functions to class Coordinator.
Removed debugging output code from createMyCppCoordinator implementation.
@
text
@a57 21
void WitJ::BopEntry::restoreInstance (Coordinator * theCoord)
   {
   StringWoa  theOpnNameWoa;
   int        theBopIndex;
   BopEntry * theBopEnt;

   witGetObjItrBopEntry (
      theCoord    ->getWitRun   (),
      theOpnNameWoa.getCStrAddr (),
    & theBopIndex);

   theBopEnt =
      findInstance (theCoord, theOpnNameWoa.getCString (), theBopIndex);

   theBopEnt->myBopIndex_ = theBopIndex;

   theBopEnt->setWasDeletedInWit (false);
   }

//------------------------------------------------------------------------------

d73 7
@


1.33
log
@Changed name of Element classes in Java and C++ to Component.
@
text
@a57 27
void WitJ::BopEntry::extractInstance (Coordinator * theCoord)
   {
   StringWoa   theOpnNameWoa;
   int         theBopIndex;
   StringWoa   thePartNameWoa;
   Operation * theOpn;
   Part *      thePart;

   witGetObjItrBopEntry (
      theCoord    ->getWitRun   (),
      theOpnNameWoa.getCStrAddr (),
    & theBopIndex);

   witGetBopEntryProducedPart (
      theCoord     ->getWitRun   (),
      theOpnNameWoa .getCString  (),
      theBopIndex,
      thePartNameWoa.getCStrAddr ());

   theOpn  = Operation::findInstance (theCoord, theOpnNameWoa .getCString ());
   thePart = Part     ::findInstance (theCoord, thePartNameWoa.getCString ());

   JavaObjRep::makeBopEntry (theOpn, thePart);
   }

//------------------------------------------------------------------------------

@


1.32
log
@purgeData
@
text
@d23 1
a23 1
      Element     (theOpn->getCoordinator ()),
@


1.31
log
@purgeData
@
text
@d85 1
a85 1
void WitJ::BopEntry::preserveInstance (Coordinator * theCoord)
@


1.30
log
@purgeData
@
text
@d101 1
a101 1
   theBopEnt->setToBeShutDown (false);
@


1.29
log
@purgeData
@
text
@d11 1
a11 1
#include      <VecWoa.h>
d68 1
a68 1
      theOpnNameWoa.getCVecAddr (),
d73 1
a73 1
      theOpnNameWoa .getCVec     (),
d75 1
a75 1
      thePartNameWoa.getCVecAddr ());
d77 2
a78 2
   theOpn  = Operation::findInstance (theCoord, theOpnNameWoa .getCVec ());
   thePart = Part     ::findInstance (theCoord, thePartNameWoa.getCVec ());
d93 1
a93 1
      theOpnNameWoa.getCVecAddr (),
d96 2
a97 1
   theBopEnt = findInstance (theCoord, theOpnNameWoa.getCVec (), theBopIndex);
@


1.28
log
@purgeData
@
text
@d77 2
a78 2
   theOpn  = theCoord->findOperation (theOpnNameWoa .getCVec ());
   thePart = theCoord->findPart      (thePartNameWoa.getCVec ());
d96 1
a96 1
   theBopEnt = theCoord->findBopEntry (theOpnNameWoa.getCVec (), theBopIndex);
d102 18
@


1.27
log
@purgeData
@
text
@d82 20
@


1.26
log
@Removed C++ class Extractor.
@
text
@d7 6
a12 3
#include  <BopEntry.h>
#include      <Part.h>
#include <Operation.h>
d14 1
a14 1
#include       <wit.h>
d55 27
@


1.25
log
@Implemented Java class CppGateway.
@
text
@d24 1
a24 1
   if (! getExtractMode ())
@


1.24
log
@Change the names of the ProbMgr classes to Coordinator, etc.
@
text
@d16 3
a18 4
         Operation *  theOpn, 
         int          theBopIndex,
         Part *       thePart,
         JavaObjRep * theBopEntJOR):
d20 1
a20 1
      Element     (theOpn->getCoordinator (), theBopEntJOR),
@


1.23
log
@ProbMgr classes.
@
text
@d21 1
a21 1
      Element     (theOpn->getProbMgr (), theBopEntJOR),
@


1.22
log
@Change the mname of the ProbCtr classes to ProbMgr in both Java and C++.
@
text
@a14 2
#include <Problem.h>

d21 1
a21 1
      Element     (theOpn->getProblem ()->getProbMgr (), theBopEntJOR),
@


1.21
log
@Continued implementation of the ProbCtr classes.
@
text
@d23 1
a23 1
      Element     (theOpn->getProblem ()->getProbCtr (), theBopEntJOR),
@


1.20
log
@Updated some comments.
@
text
@d15 2
d23 1
a23 1
      Element     (theOpn->getProblem (), theBopEntJOR),
@


1.19
log
@Removed C++ class Session.
@
text
@d4 1
a4 1
// Contains the definition of class BopEntry.
@


1.18
log
@Name change.
@
text
@d21 1
a21 1
      Element     (theOpn->getSession (), theBopEntJOR),
@


1.17
log
@Changed name of Component to Entity.
@
text
@d21 1
a21 1
      Entity      (theOpn->getSession (), theBopEntJOR),
@


1.16
log
@Implemented extraction of BOP entries.
@
text
@d21 1
a21 1
      Component   (theOpn->getSession (), theBopEntJOR),
@


1.15
log
@Call-back infrastructure.
Implemented extraction of Demands.
@
text
@d17 1
d21 3
a23 2
      Component (theOpn->getSession (), theBopEntJOR),
      myOpn_    (theOpn)
d25 5
a29 9
   witGetOperationNBopEntries (
      getWitRun (),
      getOperationName (),
    & myBopIndex_);

   witAddBopEntry (
      getWitRun (),
      getOperationName (),
      thePart->getPartName ());
@


1.14
log
@Call-back infrastructure.
@
text
@d32 2
@


1.13
log
@Renamed Java class ProbCoordCI to SessionCI.
Renamed C++  class ProbCoord   to Session.
@
text
@d16 3
a18 2
         Operation * theOpn, 
         Part *      thePart):
d20 1
a20 1
      Component (theOpn->getSession ()),
@


1.12
log
@Attributes.
@
text
@d19 1
a19 1
      Component (theOpn->getProbCoord ()),
@


1.11
log
@Removed some debugging output.
@
text
@d24 1
a24 1
      getOperationCName (),
d29 2
a30 2
      getOperationCName (),
      thePart->getPartCName ());
d48 1
a48 1
const char * WitJ::BopEntry::getOperationCName ()
d50 1
a50 1
   return myOpn_->getOperationCName ();
@


1.10
log
@Attributes.
@
text
@a12 2
#include  <iostream>

a36 7
   std::cout
      << "\n"
      << "Destroying BopEntry #\""
      << myBopIndex_
      << "\" for Operation \""
      << getOperationCName ()
      << "\".\n";
@


1.9
log
@Attribute.
@
text
@d50 1
a50 1
WitJ::BopEntry * WitJ::BopEntry::thisBopEntry ()
@


1.8
log
@Accessor names.
@
text
@d26 1
a26 1
      getOperationName (),
d31 1
a31 1
      getOperationName (),
d44 1
a44 1
      << getOperationName ()
d57 1
a57 1
const char * WitJ::BopEntry::getOperationName ()
@


1.7
log
@Changed the names of access functions beginning with "my"
to begin with "get".
@
text
@d21 2
a22 2
      Component     (theOpn->getProbCoord ()),
      producingOpn_ (theOpn)
d26 2
a27 2
      producingOpnCName (),
    & bopIndex_);
d31 2
a32 2
      producingOpnCName (),
      thePart->partCName ());
d42 1
a42 1
      << bopIndex_
d44 1
a44 1
      << producingOpnCName ()
d57 1
a57 1
const char * WitJ::BopEntry::producingOpnCName ()
d59 1
a59 1
   return producingOpn_->operationCName ();
@


1.6
log
@Strings.
@
text
@d21 1
a21 1
      Component     (theOpn->myProbCoord ()),
d25 1
a25 1
      myWitRun (),
d30 1
a30 1
      myWitRun (),
@


1.5
log
@Replaced class WitJ::String with class std::string.
@
text
@d26 1
a26 1
      producingOpnName ().c_str (),
d31 2
a32 2
      producingOpnName ().c_str (),
      thePart->partName ().c_str ());
d44 1
a44 1
      << producingOpnName ()
d57 1
a57 1
const std::string & WitJ::BopEntry::producingOpnName ()
d59 1
a59 1
   return producingOpn_->operationName ();
@


1.4
log
@Added myName_ to class Att.
@
text
@d26 1
a26 1
      producingOpnName (),
d31 2
a32 2
      producingOpnName (),
      thePart->partName ());
d57 1
a57 1
const WitJ::String & WitJ::BopEntry::producingOpnName ()
@


1.3
log
@*** empty log message ***
@
text
@d41 1
a41 1
      << "Destroying WitJ::BopEntry #\""
@


1.2
log
@*** empty log message ***
@
text
@d27 1
a27 1
    & bopEntIdx_);
d42 1
a42 1
      << bopEntIdx_
@


1.1
log
@*** empty log message ***
@
text
@d24 1
a24 1
   witGetOperationNBomEntries (
@

