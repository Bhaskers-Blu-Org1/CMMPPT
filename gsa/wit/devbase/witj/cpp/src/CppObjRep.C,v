head	1.29;
access;
symbols;
locks; strict;
comment	@ * @;


1.29
date	2011.04.15.19.12.31;	author rjw;	state Exp;
branches;
next	1.28;

1.28
date	2011.04.15.19.01.06;	author rjw;	state Exp;
branches;
next	1.27;

1.27
date	2011.04.15.00.07.23;	author rjw;	state Exp;
branches;
next	1.26;

1.26
date	2011.04.13.22.36.21;	author rjw;	state Exp;
branches;
next	1.25;

1.25
date	2011.04.06.16.29.03;	author rjw;	state Exp;
branches;
next	1.24;

1.24
date	2011.04.06.15.18.18;	author rjw;	state Exp;
branches;
next	1.23;

1.23
date	2011.04.05.22.25.40;	author rjw;	state Exp;
branches;
next	1.22;

1.22
date	2011.04.01.23.25.00;	author rjw;	state Exp;
branches;
next	1.21;

1.21
date	2011.03.30.19.49.51;	author rjw;	state Exp;
branches;
next	1.20;

1.20
date	2011.03.29.23.38.46;	author rjw;	state Exp;
branches;
next	1.19;

1.19
date	2011.03.19.00.26.09;	author rjw;	state Exp;
branches;
next	1.18;

1.18
date	2011.03.15.23.02.47;	author rjw;	state Exp;
branches;
next	1.17;

1.17
date	2011.03.15.20.56.40;	author rjw;	state Exp;
branches;
next	1.16;

1.16
date	2011.03.11.23.49.21;	author rjw;	state Exp;
branches;
next	1.15;

1.15
date	2011.02.25.16.06.47;	author rjw;	state Exp;
branches;
next	1.14;

1.14
date	2011.02.14.21.13.46;	author rjw;	state Exp;
branches;
next	1.13;

1.13
date	2011.02.14.19.59.08;	author rjw;	state Exp;
branches;
next	1.12;

1.12
date	2009.09.18.21.13.21;	author rjw;	state Exp;
branches;
next	1.11;

1.11
date	2009.09.18.18.35.07;	author rjw;	state Exp;
branches;
next	1.10;

1.10
date	2009.07.21.22.33.02;	author rjw;	state Exp;
branches;
next	1.9;

1.9
date	2009.01.31.00.56.25;	author rjw;	state Exp;
branches;
next	1.8;

1.8
date	2008.12.15.17.17.38;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2008.12.12.23.38.30;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2008.12.12.19.29.24;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2008.10.01.15.12.09;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2008.09.29.15.26.11;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2008.09.29.15.05.36;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2008.09.26.22.50.16;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2008.09.26.22.21.21;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.29
log
@Java CppObjRep classes
@
text
@//------------------------------------------------------------------------------
// WIT-J C++ Source file CppObjRep.C.
//
// Contains the C++ implementations of the native methods of Java class
// witj.CppObjRep.
//------------------------------------------------------------------------------

#include     <NativeMacros.h>
#include <ExceptionHandler.h>
#include           <CORJOR.h>
#include     <ComponentJOR.h>
#include       <JavaAccObj.h>
#include     <ArrayListJOR.h>

using namespace WitJ;

//------------------------------------------------------------------------------
// setUpJni ()
//
// This function is to be called only from within the execution of the Java
// method CppObjRep.setUpCppPortion (), which is statically synchronized.
//------------------------------------------------------------------------------

NATIVE_METHOD (void, CppObjRep, setUpJni) (
      JNIEnv * theJNIEnv,
      _jclass *)
   {
   BEGIN_TRY_BLOCK

   JniClient         ::setUpJni (theJNIEnv);
   CppObjRepJOR      ::setUpJni (theJNIEnv);
   ComponentJOR      ::setUpJni (theJNIEnv);
   DemandALJOR       ::setUpJni (theJNIEnv);
   ArrayListJOR      ::setUpJni (theJNIEnv);
   IntALJOR          ::setUpJni (theJNIEnv);
   DblALJOR          ::setUpJni (theJNIEnv);
   PeggingTripleALJOR::setUpJni (theJNIEnv);

   END_TRY_BLOCK_SIMPLE_RETURN (theJNIEnv)
   }

//------------------------------------------------------------------------------

NATIVE_METHOD (void, CppObjRep, deleteCppObject) (
      JNIEnv *   theJNIEnv,
      _jobject * theCppObjRepJObj)
   {
   BEGIN_TRY_BLOCK

   CORJOR <JavaAccObj> theJavaAccObjCJOR (theCppObjRepJObj, theJNIEnv);
   JavaAccObj *        theJavaAccObj;

   theJavaAccObj     = theJavaAccObjCJOR.getCppObject ();

   theJavaAccObjCJOR.acquire (NULL);

   delete theJavaAccObj;

   END_TRY_BLOCK_SIMPLE_RETURN (theJNIEnv)
   }
@


1.28
log
@Class template CORJOR
@
text
@d44 1
a44 1
NATIVE_METHOD (void, CppObjRep, deleteMyCppJavaAccObj) (
@


1.27
log
@Class template CORJOR
@
text
@d53 1
a53 1
   theJavaAccObj     = theJavaAccObjCJOR;
d55 1
a55 1
   theJavaAccObjCJOR = NULL;
@


1.26
log
@Removed namespace JniUtil.
@
text
@d10 1
d31 1
d50 2
a51 1
   JavaAccObj * theJavaAccObj;
d53 1
a53 2
   theJavaAccObj =
      JniClient::getJavaAccObj       (theCppObjRepJObj, theJNIEnv);
d55 1
a55 1
   JniClient::   nullifyCppObjectPtr (theCppObjRepJObj, theJNIEnv);
@


1.25
log
@intValue and doubleValue.
@
text
@a8 1
#include          <JniUtil.h>
a14 1
using namespace WitJ::JniUtil;
d50 2
a51 1
   theJavaAccObj = getJavaAccObj  (theCppObjRepJObj, theJNIEnv);
d53 1
a53 1
   nullifyCppObjectPtr            (theCppObjRepJObj, theJNIEnv);
@


1.24
log
@JniUtil
@
text
@d35 2
@


1.23
log
@Namespace JniUtil.
@
text
@d52 1
a52 1
   JniClient::nullifyCppObjectPtr (theCppObjRepJObj, theJNIEnv);
@


1.22
log
@JniAsst
@
text
@d9 1
a10 1
#include          <JniAsst.h>
d16 1
a31 1
   JniAsst           ::setUpJni (theJNIEnv);
d50 1
a50 1
   theJavaAccObj = JniAsst::getJavaAccObj (theCppObjRepJObj, theJNIEnv);
d52 1
a52 1
   theJavaAccObj->getJniAsst ()->nullifyCppObjectPtr (theCppObjRepJObj);
@


1.21
log
@C++ class JavaObjRep.
@
text
@d10 1
a10 1
#include       <NativeCall.h>
d31 1
d50 1
a50 2
      {
      NativeCall theCall (theJNIEnv);
d52 1
a52 4
      theJavaAccObj = theCall.getJavaAccObj (theCppObjRepJObj);

      theCall.nullifyCppObjectPtr (theCppObjRepJObj);
      }
@


1.20
log
@Replaced C++ class CORJOR with ComponentJOR.
@
text
@d30 5
a34 3
   JniClient   ::setUpJni (theJNIEnv);
   ComponentJOR::setUpJni (theJNIEnv);
   ArrayListJOR::setUpJni (theJNIEnv);
@


1.19
log
@Revised the arguments to eqHeurAlloc.
@
text
@d11 1
a11 1
#include           <CORJOR.h>
d31 1
a31 1
   CORJOR      ::setUpJni (theJNIEnv);
@


1.18
log
@Name changes.
@
text
@d25 2
a26 2
      JNIEnv *  theJNIEnv,
      _jclass * theJClassForCppObjRep)
a30 1
   NativeCall  ::setUpJni (theJNIEnv, theJClassForCppObjRep);
d50 1
a50 1
      theJavaAccObj = theCall.getObject (theCppObjRepJObj);
@


1.17
log
@Renamed JavaObjRep to CORJOR.
@
text
@d13 1
a13 1
#include       <JArrayList.h>
d30 4
a33 4
   JniClient ::setUpJni (theJNIEnv);
   NativeCall::setUpJni (theJNIEnv, theJClassForCppObjRep);
   CORJOR    ::setUpJni (theJNIEnv);
   JArrayList::setUpJni (theJNIEnv);
@


1.16
log
@Problem.getCriticalList ()
@
text
@d11 1
a11 1
#include       <JavaObjRep.h>
d32 1
a32 1
   JavaObjRep::setUpJni (theJNIEnv);
@


1.15
log
@Moved GlobalAspect responsibilities to class Problem.
Removed class GlobalAspect.
@
text
@d13 1
d33 1
@


1.14
log
@CPLEX
@
text
@d12 1
d40 1
a40 1
      _jobject * theCORJObj)
d44 11
a54 1
   NativeCall::deleteObject (theJNIEnv, theCORJObj);
@


1.13
log
@CPLEX
@
text
@d28 3
a30 6
   NativeCall theCall (theJNIEnv);

   theCall.setUpJni (theJClassForCppObjRep);

   JniClient:: setUpJni (theCall);
   JavaObjRep::setUpJni (theCall);
@


1.12
log
@Revised some comments.
@
text
@d32 1
@


1.11
log
@Implemented synchronized WIT-J/C++/JNI set-up.
@
text
@d16 5
@


1.10
log
@Made WIT-J throw a TerminalAppErrorException when the C++ library could not
be loaded.
@
text
@d11 1
d23 5
a27 1
   NativeCall::findJFieldIDs (theJNIEnv, theJClassForCppObjRep);
@


1.9
log
@Part.Category as Alternative
@
text
@d16 1
a16 1
NATIVE_METHOD (void, CppObjRep, initTimeSetUp) (
@


1.8
log
@Initial implementation of class ExceptionHandler.
@
text
@d22 1
a22 1
   NativeCall::findJFieldIDs  (theJNIEnv, theJClassForCppObjRep);
@


1.7
log
@Imbedded every native method implementation in a canonical try block.
@
text
@d8 3
a10 3
#include  <NativeMacros.h>
#include <WitjException.h>
#include    <NativeCall.h>
@


1.6
log
@Changed to all upper case for the names of macros.
@
text
@d8 3
a10 2
#include <NativeMacros.h>
#include   <NativeCall.h>
d20 2
d23 2
d33 2
d36 2
@


1.5
log
@Call-back infrastructure.
@
text
@d15 1
a15 1
nativeMethod (void, CppObjRep, initTimeSetUp) (
d24 1
a24 1
nativeMethod (void, CppObjRep, deleteMyCppJavaAccObj) (
@


1.4
log
@Changed name of C++ class JniHandler to NativeCall.
@
text
@a9 1
#include   <JavaObjRep.h>
a19 1
   JavaObjRep::findJMethodIDs (theJNIEnv);
@


1.3
log
@Moved macro nativeMethod to its own header file.
@
text
@d9 1
a9 1
#include   <JniHandler.h>
d20 1
a20 1
   JniHandler::findJFieldIDs  (theJNIEnv, theJClassForCppObjRep);
d30 1
a30 1
   JniHandler::deleteObject (theJNIEnv, theCORJObj);
@


1.2
log
@Changed name of C++ class JAccObject to JavaAccObj.
@
text
@d8 3
a10 2
#include <JniHandler.h>
#include <JavaObjRep.h>
@


1.1
log
@Numerous class name changes.
@
text
@d25 1
a25 1
nativeMethod (void, CppObjRep, deleteMyCppJAccObject) (
@

