head	1.73;
access;
symbols;
locks; strict;
comment	@ * @;


1.73
date	2011.08.25.23.19.51;	author rjw;	state Exp;
branches;
next	1.72;

1.72
date	2011.02.25.16.06.44;	author rjw;	state Exp;
branches;
next	1.71;

1.71
date	2011.02.16.17.34.48;	author rjw;	state Exp;
branches;
next	1.70;

1.70
date	2011.02.14.19.59.07;	author rjw;	state Exp;
branches;
next	1.69;

1.69
date	2011.02.11.17.06.39;	author rjw;	state Exp;
branches;
next	1.68;

1.68
date	2010.10.14.20.04.10;	author rjw;	state Exp;
branches;
next	1.67;

1.67
date	2010.10.01.14.47.18;	author rjw;	state Exp;
branches;
next	1.66;

1.66
date	2010.08.13.22.38.24;	author rjw;	state Exp;
branches;
next	1.65;

1.65
date	2010.08.06.17.50.38;	author rjw;	state Exp;
branches;
next	1.64;

1.64
date	2010.04.26.22.06.21;	author rjw;	state Exp;
branches;
next	1.63;

1.63
date	2010.04.26.21.09.29;	author rjw;	state Exp;
branches;
next	1.62;

1.62
date	2010.04.26.19.32.47;	author rjw;	state Exp;
branches;
next	1.61;

1.61
date	2010.04.13.23.10.42;	author rjw;	state Exp;
branches;
next	1.60;

1.60
date	2010.04.12.19.30.29;	author rjw;	state Exp;
branches;
next	1.59;

1.59
date	2009.03.13.19.32.16;	author rjw;	state Exp;
branches;
next	1.58;

1.58
date	2009.01.23.19.32.22;	author rjw;	state Exp;
branches;
next	1.57;

1.57
date	2009.01.21.21.43.21;	author rjw;	state Exp;
branches;
next	1.56;

1.56
date	2009.01.16.17.03.33;	author rjw;	state Exp;
branches;
next	1.55;

1.55
date	2009.01.16.16.32.01;	author rjw;	state Exp;
branches;
next	1.54;

1.54
date	2009.01.15.20.46.51;	author rjw;	state Exp;
branches;
next	1.53;

1.53
date	2009.01.08.21.13.51;	author rjw;	state Exp;
branches;
next	1.52;

1.52
date	2009.01.07.18.21.28;	author rjw;	state Exp;
branches;
next	1.51;

1.51
date	2009.01.06.23.45.59;	author rjw;	state Exp;
branches;
next	1.50;

1.50
date	2008.12.22.16.29.11;	author rjw;	state Exp;
branches;
next	1.49;

1.49
date	2008.12.15.17.28.46;	author rjw;	state Exp;
branches;
next	1.48;

1.48
date	2008.12.12.19.29.24;	author rjw;	state Exp;
branches;
next	1.47;

1.47
date	2008.11.26.18.33.03;	author rjw;	state Exp;
branches;
next	1.46;

1.46
date	2008.11.25.21.58.16;	author rjw;	state Exp;
branches;
next	1.45;

1.45
date	2008.11.12.20.05.57;	author rjw;	state Exp;
branches;
next	1.44;

1.44
date	2008.11.07.21.41.09;	author rjw;	state Exp;
branches;
next	1.43;

1.43
date	2008.10.07.18.50.21;	author rjw;	state Exp;
branches;
next	1.42;

1.42
date	2008.10.06.22.13.59;	author rjw;	state Exp;
branches;
next	1.41;

1.41
date	2008.10.06.14.58.25;	author rjw;	state Exp;
branches;
next	1.40;

1.40
date	2008.10.01.22.59.56;	author rjw;	state Exp;
branches;
next	1.39;

1.39
date	2008.09.26.22.50.15;	author rjw;	state Exp;
branches;
next	1.38;

1.38
date	2008.09.09.18.59.57;	author rjw;	state Exp;
branches;
next	1.37;

1.37
date	2008.08.28.18.50.40;	author rjw;	state Exp;
branches;
next	1.36;

1.36
date	2008.08.27.15.30.44;	author rjw;	state Exp;
branches;
next	1.35;

1.35
date	2008.08.26.16.17.20;	author rjw;	state Exp;
branches;
next	1.34;

1.34
date	2008.08.26.15.38.58;	author rjw;	state Exp;
branches;
next	1.33;

1.33
date	2008.08.04.19.01.02;	author rjw;	state Exp;
branches;
next	1.32;

1.32
date	2008.07.31.15.51.58;	author rjw;	state Exp;
branches;
next	1.31;

1.31
date	2008.07.29.22.14.04;	author rjw;	state Exp;
branches;
next	1.30;

1.30
date	2008.07.29.20.22.53;	author rjw;	state Exp;
branches;
next	1.29;

1.29
date	2008.07.29.19.04.45;	author rjw;	state Exp;
branches;
next	1.28;

1.28
date	2008.07.28.22.03.06;	author rjw;	state Exp;
branches;
next	1.27;

1.27
date	2008.07.23.21.45.52;	author rjw;	state Exp;
branches;
next	1.26;

1.26
date	2008.07.23.20.30.23;	author rjw;	state Exp;
branches;
next	1.25;

1.25
date	2008.07.23.17.47.43;	author rjw;	state Exp;
branches;
next	1.24;

1.24
date	2008.07.22.21.08.58;	author rjw;	state Exp;
branches;
next	1.23;

1.23
date	2008.07.15.18.40.59;	author rjw;	state Exp;
branches;
next	1.22;

1.22
date	2008.07.14.22.08.53;	author rjw;	state Exp;
branches;
next	1.21;

1.21
date	2008.07.14.21.14.18;	author rjw;	state Exp;
branches;
next	1.20;

1.20
date	2008.07.09.22.26.43;	author rjw;	state Exp;
branches;
next	1.19;

1.19
date	2008.07.08.18.25.57;	author rjw;	state Exp;
branches;
next	1.18;

1.18
date	2008.07.07.22.59.30;	author rjw;	state Exp;
branches;
next	1.17;

1.17
date	2008.07.07.18.41.48;	author rjw;	state Exp;
branches;
next	1.16;

1.16
date	2008.07.03.14.42.43;	author rjw;	state Exp;
branches;
next	1.15;

1.15
date	2008.07.01.16.09.21;	author rjw;	state Exp;
branches;
next	1.14;

1.14
date	2008.06.26.19.18.06;	author rjw;	state Exp;
branches;
next	1.13;

1.13
date	2008.06.25.21.43.47;	author rjw;	state Exp;
branches;
next	1.12;

1.12
date	2008.06.25.14.46.32;	author rjw;	state Exp;
branches;
next	1.11;

1.11
date	2008.06.19.22.16.54;	author rjw;	state Exp;
branches;
next	1.10;

1.10
date	2008.06.19.20.57.28;	author rjw;	state Exp;
branches;
next	1.9;

1.9
date	2008.06.19.20.15.06;	author rjw;	state Exp;
branches;
next	1.8;

1.8
date	2008.06.18.21.28.16;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2008.06.12.14.54.22;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2008.06.11.19.59.53;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2008.06.11.19.27.15;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2008.06.10.20.40.26;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2008.05.30.21.07.23;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2008.05.29.20.53.56;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2008.05.29.15.51.16;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.73
log
@Revisions for the removal of COIN from WIT.
@
text
@//------------------------------------------------------------------------------
// WIT-J C++ Source File AttBldr.C.
//
// Contains the implementation of class AttBldr.
//------------------------------------------------------------------------------

#include     <AttBldr.h>
#include <AttBldrMacs.h>
#include  <ScalarAtts.h>
#include  <VectorAtts.h>

#include    <iostream>

#include      <stdlib.h>

//------------------------------------------------------------------------------

WitJ::AttBldr::AttBldr (Coordinator * theCoord):

      JavaAccObj     (theCoord),
      mostRecentAtt_ (NULL)
   {
   scopedAttName_.reserve (100);

   buildAtts ();
   }

//------------------------------------------------------------------------------

WitJ::AttBldr::~AttBldr ()
   {
   while (! myAttMap_.empty ())
      {
      delete myAttMap_.begin ()->second;

      myAttMap_.erase (myAttMap_.begin ());
      }
   }

//------------------------------------------------------------------------------

WitJ::AttBldr * WitJ::AttBldr::asAttBldr ()
   {
   return this;
   }

//------------------------------------------------------------------------------

void WitJ::AttBldr::acquireAtt (Att * theAtt)
   {
   scopedAttName_  = theAtt->getCompClassName ();

   scopedAttName_ += ".";

   scopedAttName_ += theAtt->getAttName ();

   if (myAttMap_.count (scopedAttName_) > 0)
      dupAttError (theAtt);

   myAttMap_[scopedAttName_] = theAtt;

   if (mostRecentAtt_ != NULL)
      if (theAtt->getAttName () < mostRecentAtt_->getAttName ())
         {
         outOfOrderError (theAtt);
         }

   mostRecentAtt_ = theAtt;
   }

//------------------------------------------------------------------------------

void WitJ::AttBldr::dupAttError (Att * theAtt)
   {
   std::cout
      << "\n"
      << "WIT-J Internal Error:\n"
      << "\n"
      << "   Two or more C++ Atts have the same scoped name:\n"
      << "\n"
      << "      " << theAtt->getCompClassName () << "."
                  << theAtt->getAttName       () << "\n"
      << "\n"
      << "Application Program aborted by WIT-J.\n";

   EXCEPTION_ASSERT (false);
   }

//------------------------------------------------------------------------------

void WitJ::AttBldr::outOfOrderError (Att * theAtt)
   {
   std::cout
      << "\n"
      << "WIT-J Internal Error:\n"
      << "\n"
      << "   C++ Atts entered out-of-order:\n"
      << "\n"
      << "      " << mostRecentAtt_->getAttName () << "\n"
      << "      " << theAtt        ->getAttName () << "\n"
      << "\n"
      << "Application Program aborted by WIT-J.\n";

   EXCEPTION_ASSERT (false);
   }

//------------------------------------------------------------------------------

bool WitJ::AttBldr::hasAttFor (const char * scopedAttNameCStr)
   {
   return (myAttMap_.count (scopedAttNameCStr) != 0);
   }

//------------------------------------------------------------------------------

WitJ::Att * WitJ::AttBldr::handOverAttFor (const char * scopedAttNameCStr)
   {
   std::map <std::string, Att *>::iterator theItr;
   Att *                                   theAtt;

   scopedAttName_ = scopedAttNameCStr;

   theItr = myAttMap_.find (scopedAttName_);

   EXCEPTION_ASSERT (theItr != myAttMap_.end ());

   theAtt = theItr->second;

   myAttMap_.erase (theItr);

   return theAtt;
   }

//------------------------------------------------------------------------------

bool WitJ::AttBldr::isEmpty ()
   {
   return myAttMap_.empty ();
   }

//------------------------------------------------------------------------------

void WitJ::AttBldr::print ()
   {
   std::map <std::string, Att *>::iterator theItr;

   std::cout
      << "\n"
      << "The following C++ Atts did not match any Java StdAttImp:\n"
      << "\n";

   for (theItr  = myAttMap_.begin ();
        theItr != myAttMap_.end ();
        theItr ++)
      {
      std::cout << "   " << theItr->first << "\n";
      }
   }

//------------------------------------------------------------------------------

void WitJ::AttBldr::buildAtts ()
   {
   MAKE_ATT (AccAfterOptImp,      Problem,    Boolean, Scalar, Input);
   MAKE_ATT (AccAfterSoftLB,      Problem,    Boolean, Scalar, Input);
   MAKE_ATT (Accelerated,         Problem,    Boolean, Scalar, Output);
   MAKE_ATT (AsapPipOrder,        Part,       Boolean, Scalar, Input);
   MAKE_ATT (AutoPriority,        Problem,    Boolean, Scalar, Input);
   MAKE_ATT (BoundedLeadTimes,    Part,       Boolean, Scalar, Input);
   MAKE_ATT (BoundsValue,         Problem,    Double,  Scalar, Output);
   MAKE_ATT (BuildAheadUB,        Part,       Integer, Vector, Input);
   MAKE_ATT (BuildAsap,           Part,       Boolean, Scalar, Input);
   MAKE_ATT (BuildNstn,           Part,       Boolean, Scalar, Input);
   MAKE_ATT (CompPrices,          Problem,    Boolean, Scalar, Input);
   MAKE_ATT (ComputeCriticalList, Problem,    Boolean, Scalar, Input);
   MAKE_ATT (ConsRate,            BomEntry,   Double,  Vector, Input);
   MAKE_ATT (ConsRate,            Substitute, Double,  Vector, Input);
   MAKE_ATT (ConsVol,             Part,       Double,  Vector, Output);
   MAKE_ATT (CplexEmbedded,       Problem,    Boolean, Scalar, Output);
   MAKE_ATT (CplexMipBound,       Problem,    Double,  Scalar, Output);
   MAKE_ATT (CplexMipRelGap,      Problem,    Double,  Scalar, Output);
   MAKE_ATT (CplexParSpecDblVal,  Problem,    Double,  Scalar, Input);
   MAKE_ATT (CplexParSpecIntVal,  Problem,    Integer, Scalar, Input);
   MAKE_ATT (CplexParSpecName,    Problem,    String,  Scalar, Input);
   MAKE_ATT (CplexStatusCode,     Problem,    Integer, Scalar, Output);
   MAKE_ATT (CplexStatusText,     Problem,    String,  Scalar, Output);
   MAKE_ATT (CumShipReward,       Demand,     Double,  Vector, Input);
   MAKE_ATT (CurrentObjective,    Problem,    String,  Scalar, Input);
   MAKE_ATT (CurrentScenario,     Problem,    Integer, Scalar, Input);
   MAKE_ATT (DemandVol,           Demand,     Double,  Vector, Input);
   MAKE_ATT (EarliestPeriod,      BomEntry,   Integer, Scalar, Input);
   MAKE_ATT (EarliestPeriod,      BopEntry,   Integer, Scalar, Input);
   MAKE_ATT (EarliestPeriod,      Substitute, Integer, Scalar, Input);
   MAKE_ATT (Equitability,        Problem,    Integer, Scalar, Input);
   MAKE_ATT (ExcessVol,           Part,       Double,  Vector, Output);
   MAKE_ATT (ExecCost,            Operation,  Double,  Vector, Input);
   MAKE_ATT (ExecEmptyBom,        Problem,    Boolean, Scalar, Input);
   MAKE_ATT (ExecPenalty,         BomEntry,   Double,  Scalar, Input);
   MAKE_ATT (ExecPenalty,         Operation,  Double,  Scalar, Input);
   MAKE_ATT (ExecPenalty,         Substitute, Double,  Scalar, Input);
   MAKE_ATT (ExecVol,             Operation,  Double,  Vector, Input);
   MAKE_ATT (Executable,          Operation,  Boolean, Vector, Output);
   MAKE_ATT (ExpAllowed,          BopEntry,   Boolean, Scalar, Input);
   MAKE_ATT (ExpAllowed,          Substitute, Boolean, Scalar, Input);
   MAKE_ATT (ExpAversion,         BopEntry,   Double,  Scalar, Input);
   MAKE_ATT (ExpCutoff,           Problem,    Double,  Scalar, Input);
   MAKE_ATT (ExpNetAversion,      Substitute, Double,  Scalar, Input);
   MAKE_ATT (ExtOptActive,        Problem,    Boolean, Scalar, Output);
   MAKE_ATT (FalloutRate,         BomEntry,   Double,  Scalar, Input);
   MAKE_ATT (FalloutRate,         Substitute, Double,  Scalar, Input);
   MAKE_ATT (Feasible,            Problem,    Boolean, Scalar, Output);
   MAKE_ATT (FocusHorizon,        Demand,     Integer, Scalar, Input);
   MAKE_ATT (FocusShortageVol,    Part,       Double,  Vector, Output);
   MAKE_ATT (ForcedMultiEq,       Problem,    Boolean, Scalar, Input);
   MAKE_ATT (FssExecVol,          Operation,  Double,  Vector, Output);
   MAKE_ATT (FssShipVol,          Demand,     Double,  Vector, Input);
   MAKE_ATT (FssSubVol,           Substitute, Double,  Vector, Output);
   MAKE_ATT (HeurAllocActive,     Problem,    Boolean, Scalar, Output);
   MAKE_ATT (HighPrecisionWD,     Problem,    Boolean, Scalar, Input);
   MAKE_ATT (ImpactPeriod,        BomEntry,   Integer, Vector, Output);
   MAKE_ATT (ImpactPeriod,        BopEntry,   Integer, Vector, Output);
   MAKE_ATT (ImpactPeriod,        Substitute, Integer, Vector, Output);
   MAKE_ATT (IncLotSize,          Operation,  Double,  Vector, Input);
   MAKE_ATT (IncLotSize2,         Operation,  Double,  Vector, Input);
   MAKE_ATT (IndependentOffsets,  Problem,    Boolean, Scalar, Input);
   MAKE_ATT (IntExecVols,         Operation,  Boolean, Scalar, Input);
   MAKE_ATT (IntShipVols,         Demand,     Boolean, Scalar, Input);
   MAKE_ATT (IntSubVols,          Substitute, Boolean, Scalar, Input);
   MAKE_ATT (LatestPeriod,        BomEntry,   Integer, Scalar, Input);
   MAKE_ATT (LatestPeriod,        BopEntry,   Integer, Scalar, Input);
   MAKE_ATT (LatestPeriod,        Substitute, Integer, Scalar, Input);
   MAKE_ATT (LeadTimeUB,          Demand,     Integer, Vector, Input);
   MAKE_ATT (LotSize2Thresh,      Operation,  Double,  Vector, Input);
   MAKE_ATT (LotSizeTol,          Problem,    Double,  Scalar, Input);
   MAKE_ATT (MandEC,              BomEntry,   Boolean, Scalar, Input);
   MAKE_ATT (MinLotSize,          Operation,  Double,  Vector, Input);
   MAKE_ATT (MinLotSize2,         Operation,  Double,  Vector, Input);
   MAKE_ATT (MinimalExcess,       Problem,    Boolean, Scalar, Input);
   MAKE_ATT (MipMode,             Problem,    Boolean, Scalar, Input);
   MAKE_ATT (ModHeurAlloc,        Problem,    Boolean, Scalar, Input);
   MAKE_ATT (MrpConsVol,          Part,       Double,  Vector, Output);
   MAKE_ATT (MrpExcessVol,        Part,       Double,  Vector, Output);
   MAKE_ATT (MrpExecVol,          Operation,  Double,  Vector, Output);
   MAKE_ATT (MrpNetAllowed,       Substitute, Boolean, Scalar, Input);
   MAKE_ATT (MrpResidualVol,      Part,       Double,  Vector, Output);
   MAKE_ATT (MrpSubVol,           Substitute, Double,  Vector, Output);
   MAKE_ATT (MultiExec,           Problem,    Boolean, Scalar, Input);
   MAKE_ATT (MultiObjMode,        Problem,    Boolean, Scalar, Input);
   MAKE_ATT (MultiObjTol,         Problem,    Double,  Scalar, Input);
   MAKE_ATT (MultiRoute,          Problem,    Boolean, Scalar, Input);
   MAKE_ATT (NScenarios,          Problem,    Integer, Scalar, Input);
   MAKE_ATT (NetAllowed,          Substitute, Boolean, Scalar, Input);
   MAKE_ATT (NstnResidual,        Problem,    Boolean, Scalar, Input);
   MAKE_ATT (ObjValue,            Problem,    Double,  Scalar, Output);
   MAKE_ATT (ObjectStage,         Operation,  Integer, Scalar, Input);
   MAKE_ATT (ObjectStage,         Part,       Integer, Scalar, Input);
   MAKE_ATT (ObjectiveListSpec,   Problem,    String,  Scalar, Input);
   MAKE_ATT (ObjectiveRank,       Problem,    Integer, Scalar, Input);
   MAKE_ATT (Offset,              BomEntry,   Double,  Vector, Input);
   MAKE_ATT (Offset,              BopEntry,   Double,  Vector, Input);
   MAKE_ATT (Offset,              Substitute, Double,  Vector, Input);
   MAKE_ATT (PenExec,             Problem,    Boolean, Scalar, Input);
   MAKE_ATT (PerfPegging,         Problem,    Boolean, Scalar, Input);
   MAKE_ATT (PeriodStage,         Problem,    Integer, Vector, Input);
   MAKE_ATT (PgdCritListMode,     Problem,    Boolean, Scalar, Input);
   MAKE_ATT (PipExists,           Problem,    Boolean, Scalar, Output);
   MAKE_ATT (PipSeqFromHeur,      Problem,    Boolean, Scalar, Input);
   MAKE_ATT (Postprocessed,       Problem,    Boolean, Scalar, Output);
   MAKE_ATT (PrefHighStockSLBs,   Problem,    Boolean, Scalar, Input);
   MAKE_ATT (Preprocessed,        Problem,    Boolean, Scalar, Output);
   MAKE_ATT (Priority,            Demand,     Integer, Vector, Input);
   MAKE_ATT (Probability,         Problem,    Double,  Scalar, Input);
   MAKE_ATT (ProdVol,             Part,       Double,  Vector, Output);
   MAKE_ATT (ProductRate,         BopEntry,   Double,  Vector, Input);
   MAKE_ATT (PropRtg,             BomEntry,   Boolean, Vector, Input);
   MAKE_ATT (PropRtg,             Part,       Boolean, Vector, Input);
   MAKE_ATT (ReqVol,              Part,       Double,  Vector, Output);
   MAKE_ATT (ResidualVol,         Part,       Double,  Vector, Output);
   MAKE_ATT (RespectStockSLBs,    Problem,    Boolean, Scalar, Input);
   MAKE_ATT (RoundReqVols,        Problem,    Boolean, Scalar, Input);
   MAKE_ATT (RoutingShare,        BomEntry,   Double,  Vector, Input);
   MAKE_ATT (RoutingShare,        BopEntry,   Double,  Vector, Input);
   MAKE_ATT (RoutingShare,        Substitute, Double,  Vector, Input);
   MAKE_ATT (ScrapAllowed,        Part,       Boolean, Scalar, Input);
   MAKE_ATT (ScrapCost,           Part,       Double,  Vector, Input);
   MAKE_ATT (ScrapVol,            Part,       Double,  Vector, Output);
   MAKE_ATT (SearchInc,           Demand,     Double,  Scalar, Input);
   MAKE_ATT (SelForDel,           BomEntry,   Boolean, Scalar, Input);
   MAKE_ATT (SelForDel,           BopEntry,   Boolean, Scalar, Input);
   MAKE_ATT (SelForDel,           Demand,     Boolean, Scalar, Input);
   MAKE_ATT (SelForDel,           Operation,  Boolean, Scalar, Input);
   MAKE_ATT (SelForDel,           Part,       Boolean, Scalar, Input);
   MAKE_ATT (SelForDel,           Substitute, Boolean, Scalar, Input);
   MAKE_ATT (SelSplit,            Problem,    Boolean, Scalar, Input);
   MAKE_ATT (SelectionRecovery,   Problem,    Boolean, Scalar, Input);
   MAKE_ATT (ShadowPrice,         Part,       Double,  Vector, Output);
   MAKE_ATT (ShipLateAllowed,     Demand,     Boolean, Scalar, Input);
   MAKE_ATT (ShipLateUB,          Demand,     Integer, Vector, Input);
   MAKE_ATT (ShipReward,          Demand,     Double,  Vector, Input);
   MAKE_ATT (ShipVol,             Demand,     Double,  Vector, Input);
   MAKE_ATT (SingleSource,        BomEntry,   Boolean, Scalar, Input);
   MAKE_ATT (SingleSource,        Part,       Boolean, Scalar, Input);
   MAKE_ATT (SkipFailures,        Problem,    Boolean, Scalar, Input);
   MAKE_ATT (SolverLogFileName,   Problem,    String,  Scalar, Input);
   MAKE_ATT (StageByObject,       Problem,    Boolean, Scalar, Input);
   MAKE_ATT (StochMode,           Problem,    Boolean, Scalar, Input);
   MAKE_ATT (StochSolnMode,       Problem,    Boolean, Scalar, Output);
   MAKE_ATT (StockCost,           Part,       Double,  Vector, Input);
   MAKE_ATT (StockReallocation,   Problem,    Boolean, Scalar, Input);
   MAKE_ATT (StockVol,            Part,       Double,  Vector, Output);
   MAKE_ATT (SubCost,             Substitute, Double,  Vector, Input);
   MAKE_ATT (SubVol,              Substitute, Double,  Vector, Input);
   MAKE_ATT (SupplyVol,           Part,       Double,  Vector, Input);
   MAKE_ATT (TieBreakPropRt,      Problem,    Boolean, Scalar, Input);
   MAKE_ATT (Title,               Problem,    String,  Scalar, Input);
   MAKE_ATT (TruncOffsets,        Problem,    Boolean, Scalar, Input);
   MAKE_ATT (TwoLevelLotSizes,    Operation,  Boolean, Scalar, Input);
   MAKE_ATT (TwoWayMultiExec,     Problem,    Boolean, Scalar, Input);
   MAKE_ATT (UseFocusHorizons,    Problem,    Boolean, Scalar, Input);
   MAKE_ATT (UserHeurStart,       Problem,    Boolean, Scalar, Input);
   MAKE_ATT (Wbounds,             Problem,    Double,  Scalar, Input);
   MAKE_ATT (YieldRate,           Operation,  Double,  Vector, Input);

   mostRecentAtt_ = NULL;
   }

//------------------------------------------------------------------------------
@


1.72
log
@Moved GlobalAspect responsibilities to class Problem.
Removed class GlobalAspect.
@
text
@a173 2
   MAKE_ATT (CoinEmbedded,        Problem,    Boolean, Scalar, Output);
   MAKE_ATT (CoinSelected,        Problem,    Boolean, Scalar, Input);
a184 1
   MAKE_ATT (CplexSelected,       Problem,    Boolean, Scalar, Input);
@


1.71
log
@CPLEX
@
text
@d164 3
a166 3
   MAKE_ATT (AccAfterOptImp,      Global,     Boolean, Scalar, Input);
   MAKE_ATT (AccAfterSoftLB,      Global,     Boolean, Scalar, Input);
   MAKE_ATT (Accelerated,         Global,     Boolean, Scalar, Output);
d168 1
a168 1
   MAKE_ATT (AutoPriority,        Global,     Boolean, Scalar, Input);
d170 1
a170 1
   MAKE_ATT (BoundsValue,         Global,     Double,  Scalar, Output);
d174 4
a177 4
   MAKE_ATT (CoinEmbedded,        Global,     Boolean, Scalar, Output);
   MAKE_ATT (CoinSelected,        Global,     Boolean, Scalar, Input);
   MAKE_ATT (CompPrices,          Global,     Boolean, Scalar, Input);
   MAKE_ATT (ComputeCriticalList, Global,     Boolean, Scalar, Input);
d181 9
a189 9
   MAKE_ATT (CplexEmbedded,       Global,     Boolean, Scalar, Output);
   MAKE_ATT (CplexMipBound,       Global,     Double,  Scalar, Output);
   MAKE_ATT (CplexMipRelGap,      Global,     Double,  Scalar, Output);
   MAKE_ATT (CplexParSpecDblVal,  Global,     Double,  Scalar, Input);
   MAKE_ATT (CplexParSpecIntVal,  Global,     Integer, Scalar, Input);
   MAKE_ATT (CplexParSpecName,    Global,     String,  Scalar, Input);
   MAKE_ATT (CplexSelected,       Global,     Boolean, Scalar, Input);
   MAKE_ATT (CplexStatusCode,     Global,     Integer, Scalar, Output);
   MAKE_ATT (CplexStatusText,     Global,     String,  Scalar, Output);
d191 2
a192 2
   MAKE_ATT (CurrentObjective,    Global,     String,  Scalar, Input);
   MAKE_ATT (CurrentScenario,     Global,     Integer, Scalar, Input);
d197 1
a197 1
   MAKE_ATT (Equitability,        Global,     Integer, Scalar, Input);
d200 1
a200 1
   MAKE_ATT (ExecEmptyBom,        Global,     Boolean, Scalar, Input);
d209 1
a209 1
   MAKE_ATT (ExpCutoff,           Global,     Double,  Scalar, Input);
d211 1
a211 1
   MAKE_ATT (ExtOptActive,        Global,     Boolean, Scalar, Output);
d214 1
a214 1
   MAKE_ATT (Feasible,            Global,     Boolean, Scalar, Output);
d217 1
a217 1
   MAKE_ATT (ForcedMultiEq,       Global,     Boolean, Scalar, Input);
d221 2
a222 2
   MAKE_ATT (HeurAllocActive,     Global,     Boolean, Scalar, Output);
   MAKE_ATT (HighPrecisionWD,     Global,     Boolean, Scalar, Input);
d228 1
a228 1
   MAKE_ATT (IndependentOffsets,  Global,     Boolean, Scalar, Input);
d237 1
a237 1
   MAKE_ATT (LotSizeTol,          Global,     Double,  Scalar, Input);
d241 3
a243 3
   MAKE_ATT (MinimalExcess,       Global,     Boolean, Scalar, Input);
   MAKE_ATT (MipMode,             Global,     Boolean, Scalar, Input);
   MAKE_ATT (ModHeurAlloc,        Global,     Boolean, Scalar, Input);
d250 5
a254 5
   MAKE_ATT (MultiExec,           Global,     Boolean, Scalar, Input);
   MAKE_ATT (MultiObjMode,        Global,     Boolean, Scalar, Input);
   MAKE_ATT (MultiObjTol,         Global,     Double,  Scalar, Input);
   MAKE_ATT (MultiRoute,          Global,     Boolean, Scalar, Input);
   MAKE_ATT (NScenarios,          Global,     Integer, Scalar, Input);
d256 2
a257 2
   MAKE_ATT (NstnResidual,        Global,     Boolean, Scalar, Input);
   MAKE_ATT (ObjValue,            Global,     Double,  Scalar, Output);
d260 2
a261 2
   MAKE_ATT (ObjectiveListSpec,   Global,     String,  Scalar, Input);
   MAKE_ATT (ObjectiveRank,       Global,     Integer, Scalar, Input);
d265 9
a273 9
   MAKE_ATT (PenExec,             Global,     Boolean, Scalar, Input);
   MAKE_ATT (PerfPegging,         Global,     Boolean, Scalar, Input);
   MAKE_ATT (PeriodStage,         Global,     Integer, Vector, Input);
   MAKE_ATT (PgdCritListMode,     Global,     Boolean, Scalar, Input);
   MAKE_ATT (PipExists,           Global,     Boolean, Scalar, Output);
   MAKE_ATT (PipSeqFromHeur,      Global,     Boolean, Scalar, Input);
   MAKE_ATT (Postprocessed,       Global,     Boolean, Scalar, Output);
   MAKE_ATT (PrefHighStockSLBs,   Global,     Boolean, Scalar, Input);
   MAKE_ATT (Preprocessed,        Global,     Boolean, Scalar, Output);
d275 1
a275 1
   MAKE_ATT (Probability,         Global,     Double,  Scalar, Input);
d282 2
a283 2
   MAKE_ATT (RespectStockSLBs,    Global,     Boolean, Scalar, Input);
   MAKE_ATT (RoundReqVols,        Global,     Boolean, Scalar, Input);
d297 2
a298 2
   MAKE_ATT (SelSplit,            Global,     Boolean, Scalar, Input);
   MAKE_ATT (SelectionRecovery,   Global,     Boolean, Scalar, Input);
d306 5
a310 5
   MAKE_ATT (SkipFailures,        Global,     Boolean, Scalar, Input);
   MAKE_ATT (SolverLogFileName,   Global,     String,  Scalar, Input);
   MAKE_ATT (StageByObject,       Global,     Boolean, Scalar, Input);
   MAKE_ATT (StochMode,           Global,     Boolean, Scalar, Input);
   MAKE_ATT (StochSolnMode,       Global,     Boolean, Scalar, Output);
d312 1
a312 1
   MAKE_ATT (StockReallocation,   Global,     Boolean, Scalar, Input);
d317 3
a319 3
   MAKE_ATT (TieBreakPropRt,      Global,     Boolean, Scalar, Input);
   MAKE_ATT (Title,               Global,     String,  Scalar, Input);
   MAKE_ATT (TruncOffsets,        Global,     Boolean, Scalar, Input);
d321 4
a324 4
   MAKE_ATT (TwoWayMultiExec,     Global,     Boolean, Scalar, Input);
   MAKE_ATT (UseFocusHorizons,    Global,     Boolean, Scalar, Input);
   MAKE_ATT (UserHeurStart,       Global,     Boolean, Scalar, Input);
   MAKE_ATT (Wbounds,             Global,     Double,  Scalar, Input);
@


1.70
log
@CPLEX
@
text
@d182 2
a183 1
   MAKE_ATT (CplexObjBound,       Global,     Double,  Scalar, Output);
@


1.69
log
@CPLEX
@
text
@d32 1
a32 1
   while (not myAttMap_.empty ())
@


1.68
log
@CPLEX
@
text
@d182 4
d187 2
@


1.67
log
@Modifiable Heuristic Allocation
@
text
@d174 2
d181 2
@


1.66
log
@Lead Time Bounds
@
text
@d232 1
@


1.65
log
@Selection Recovery
@
text
@d169 1
d224 1
@


1.64
log
@Multi-Obj Mode
@
text
@d284 1
@


1.63
log
@Multi-Obj Mode
@
text
@d238 1
@


1.62
log
@Multi-Obj Mode
@
text
@d246 1
@


1.61
log
@Implemented String StdAttImps.
@
text
@d179 1
@


1.60
log
@Multi-Obj Mode.
@
text
@d149 1
a149 1
      << "The following C++ Atts did not match any Java AttID:\n"
d244 1
d289 1
d300 1
@


1.59
log
@Changed name of Element classes in Java and C++ to Component.
@
text
@d236 1
@


1.58
log
@Coordinator
@
text
@d51 1
a51 1
   scopedAttName_  = theAtt->getElemClassName ();
d81 1
a81 1
      << "      " << theAtt->getElemClassName () << "."
@


1.57
log
@Change the names of the ProbMgr classes to Coordinator, etc.
@
text
@d18 1
a18 1
WitJ::AttBldr::AttBldr (Coordinator * theCoordinator):
d20 1
a20 1
      JavaAccObj     (theCoordinator),
@


1.56
log
@Change the mname of the ProbCtr classes to ProbMgr in both Java and C++.
@
text
@d18 1
a18 1
WitJ::AttBldr::AttBldr (ProbMgr * theProbMgr):
d20 1
a20 1
      JavaAccObj     (theProbMgr),
@


1.55
log
@Continued implementation of the ProbCtr classes.
@
text
@d18 1
a18 1
WitJ::AttBldr::AttBldr (ProbCtr * theProbCtr):
d20 1
a20 1
      JavaAccObj     (theProbCtr),
@


1.54
log
@Continued implementation of the ProbCtr classes.
@
text
@d18 1
a18 1
#include <Problem.h>
d20 1
a20 3
WitJ::AttBldr::AttBldr (Problem * theProblem):

      JavaAccObj     (theProblem->getProbCtr ()),
@


1.53
log
@Implemented SimpleWitFuncs and used them for 4 methods.
@
text
@d18 2
d22 1
a22 1
      JavaAccObj     (theProblem),
@


1.52
log
@Removed Attribute wit34Compatible.
@
text
@d86 1
a86 1
   exit (4);
d104 1
a104 1
   exit (4);
@


1.51
log
@Added Attribute wit34Compatible.
@
text
@a302 1
   MAKE_ATT (Wit34Compatible,     Global,     Boolean, Scalar, Input);
@


1.50
log
@Implemented EXCEPTION_ASSERT and ABORTING_ASSERT.
@
text
@d303 1
@


1.49
log
@Updated some comments.
@
text
@d125 1
a125 1
   WITJ_ASSERT (theItr != myAttMap_.end ());
@


1.48
log
@Changed to all upper case for the names of macros.
@
text
@d4 1
a4 1
// Contains the definition of class AttBldr.
@


1.47
log
@Removed C++ class Session.
@
text
@d125 1
a125 1
   witjAssert (theItr != myAttMap_.end ());
d164 140
a303 140
   makeAtt (AccAfterOptImp,      Global,     Boolean, Scalar, Input);
   makeAtt (AccAfterSoftLB,      Global,     Boolean, Scalar, Input);
   makeAtt (Accelerated,         Global,     Boolean, Scalar, Output);
   makeAtt (AsapPipOrder,        Part,       Boolean, Scalar, Input);
   makeAtt (AutoPriority,        Global,     Boolean, Scalar, Input);
   makeAtt (BoundsValue,         Global,     Double,  Scalar, Output);
   makeAtt (BuildAheadUB,        Part,       Integer, Vector, Input);
   makeAtt (BuildAsap,           Part,       Boolean, Scalar, Input);
   makeAtt (BuildNstn,           Part,       Boolean, Scalar, Input);
   makeAtt (CompPrices,          Global,     Boolean, Scalar, Input);
   makeAtt (ComputeCriticalList, Global,     Boolean, Scalar, Input);
   makeAtt (ConsRate,            BomEntry,   Double,  Vector, Input);
   makeAtt (ConsRate,            Substitute, Double,  Vector, Input);
   makeAtt (ConsVol,             Part,       Double,  Vector, Output);
   makeAtt (CumShipReward,       Demand,     Double,  Vector, Input);
   makeAtt (CurrentScenario,     Global,     Integer, Scalar, Input);
   makeAtt (DemandVol,           Demand,     Double,  Vector, Input);
   makeAtt (EarliestPeriod,      BomEntry,   Integer, Scalar, Input);
   makeAtt (EarliestPeriod,      BopEntry,   Integer, Scalar, Input);
   makeAtt (EarliestPeriod,      Substitute, Integer, Scalar, Input);
   makeAtt (Equitability,        Global,     Integer, Scalar, Input);
   makeAtt (ExcessVol,           Part,       Double,  Vector, Output);
   makeAtt (ExecCost,            Operation,  Double,  Vector, Input);
   makeAtt (ExecEmptyBom,        Global,     Boolean, Scalar, Input);
   makeAtt (ExecPenalty,         BomEntry,   Double,  Scalar, Input);
   makeAtt (ExecPenalty,         Operation,  Double,  Scalar, Input);
   makeAtt (ExecPenalty,         Substitute, Double,  Scalar, Input);
   makeAtt (ExecVol,             Operation,  Double,  Vector, Input);
   makeAtt (Executable,          Operation,  Boolean, Vector, Output);
   makeAtt (ExpAllowed,          BopEntry,   Boolean, Scalar, Input);
   makeAtt (ExpAllowed,          Substitute, Boolean, Scalar, Input);
   makeAtt (ExpAversion,         BopEntry,   Double,  Scalar, Input);
   makeAtt (ExpCutoff,           Global,     Double,  Scalar, Input);
   makeAtt (ExpNetAversion,      Substitute, Double,  Scalar, Input);
   makeAtt (ExtOptActive,        Global,     Boolean, Scalar, Output);
   makeAtt (FalloutRate,         BomEntry,   Double,  Scalar, Input);
   makeAtt (FalloutRate,         Substitute, Double,  Scalar, Input);
   makeAtt (Feasible,            Global,     Boolean, Scalar, Output);
   makeAtt (FocusHorizon,        Demand,     Integer, Scalar, Input);
   makeAtt (FocusShortageVol,    Part,       Double,  Vector, Output);
   makeAtt (ForcedMultiEq,       Global,     Boolean, Scalar, Input);
   makeAtt (FssExecVol,          Operation,  Double,  Vector, Output);
   makeAtt (FssShipVol,          Demand,     Double,  Vector, Input);
   makeAtt (FssSubVol,           Substitute, Double,  Vector, Output);
   makeAtt (HeurAllocActive,     Global,     Boolean, Scalar, Output);
   makeAtt (HighPrecisionWD,     Global,     Boolean, Scalar, Input);
   makeAtt (ImpactPeriod,        BomEntry,   Integer, Vector, Output);
   makeAtt (ImpactPeriod,        BopEntry,   Integer, Vector, Output);
   makeAtt (ImpactPeriod,        Substitute, Integer, Vector, Output);
   makeAtt (IncLotSize,          Operation,  Double,  Vector, Input);
   makeAtt (IncLotSize2,         Operation,  Double,  Vector, Input);
   makeAtt (IndependentOffsets,  Global,     Boolean, Scalar, Input);
   makeAtt (IntExecVols,         Operation,  Boolean, Scalar, Input);
   makeAtt (IntShipVols,         Demand,     Boolean, Scalar, Input);
   makeAtt (IntSubVols,          Substitute, Boolean, Scalar, Input);
   makeAtt (LatestPeriod,        BomEntry,   Integer, Scalar, Input);
   makeAtt (LatestPeriod,        BopEntry,   Integer, Scalar, Input);
   makeAtt (LatestPeriod,        Substitute, Integer, Scalar, Input);
   makeAtt (LotSize2Thresh,      Operation,  Double,  Vector, Input);
   makeAtt (LotSizeTol,          Global,     Double,  Scalar, Input);
   makeAtt (MandEC,              BomEntry,   Boolean, Scalar, Input);
   makeAtt (MinLotSize,          Operation,  Double,  Vector, Input);
   makeAtt (MinLotSize2,         Operation,  Double,  Vector, Input);
   makeAtt (MinimalExcess,       Global,     Boolean, Scalar, Input);
   makeAtt (MipMode,             Global,     Boolean, Scalar, Input);
   makeAtt (MrpConsVol,          Part,       Double,  Vector, Output);
   makeAtt (MrpExcessVol,        Part,       Double,  Vector, Output);
   makeAtt (MrpExecVol,          Operation,  Double,  Vector, Output);
   makeAtt (MrpNetAllowed,       Substitute, Boolean, Scalar, Input);
   makeAtt (MrpResidualVol,      Part,       Double,  Vector, Output);
   makeAtt (MrpSubVol,           Substitute, Double,  Vector, Output);
   makeAtt (MultiExec,           Global,     Boolean, Scalar, Input);
   makeAtt (MultiRoute,          Global,     Boolean, Scalar, Input);
   makeAtt (NScenarios,          Global,     Integer, Scalar, Input);
   makeAtt (NetAllowed,          Substitute, Boolean, Scalar, Input);
   makeAtt (NstnResidual,        Global,     Boolean, Scalar, Input);
   makeAtt (ObjValue,            Global,     Double,  Scalar, Output);
   makeAtt (ObjectStage,         Operation,  Integer, Scalar, Input);
   makeAtt (ObjectStage,         Part,       Integer, Scalar, Input);
   makeAtt (Offset,              BomEntry,   Double,  Vector, Input);
   makeAtt (Offset,              BopEntry,   Double,  Vector, Input);
   makeAtt (Offset,              Substitute, Double,  Vector, Input);
   makeAtt (PenExec,             Global,     Boolean, Scalar, Input);
   makeAtt (PerfPegging,         Global,     Boolean, Scalar, Input);
   makeAtt (PeriodStage,         Global,     Integer, Vector, Input);
   makeAtt (PgdCritListMode,     Global,     Boolean, Scalar, Input);
   makeAtt (PipExists,           Global,     Boolean, Scalar, Output);
   makeAtt (PipSeqFromHeur,      Global,     Boolean, Scalar, Input);
   makeAtt (Postprocessed,       Global,     Boolean, Scalar, Output);
   makeAtt (PrefHighStockSLBs,   Global,     Boolean, Scalar, Input);
   makeAtt (Preprocessed,        Global,     Boolean, Scalar, Output);
   makeAtt (Priority,            Demand,     Integer, Vector, Input);
   makeAtt (Probability,         Global,     Double,  Scalar, Input);
   makeAtt (ProdVol,             Part,       Double,  Vector, Output);
   makeAtt (ProductRate,         BopEntry,   Double,  Vector, Input);
   makeAtt (PropRtg,             BomEntry,   Boolean, Vector, Input);
   makeAtt (PropRtg,             Part,       Boolean, Vector, Input);
   makeAtt (ReqVol,              Part,       Double,  Vector, Output);
   makeAtt (ResidualVol,         Part,       Double,  Vector, Output);
   makeAtt (RespectStockSLBs,    Global,     Boolean, Scalar, Input);
   makeAtt (RoundReqVols,        Global,     Boolean, Scalar, Input);
   makeAtt (RoutingShare,        BomEntry,   Double,  Vector, Input);
   makeAtt (RoutingShare,        BopEntry,   Double,  Vector, Input);
   makeAtt (RoutingShare,        Substitute, Double,  Vector, Input);
   makeAtt (ScrapAllowed,        Part,       Boolean, Scalar, Input);
   makeAtt (ScrapCost,           Part,       Double,  Vector, Input);
   makeAtt (ScrapVol,            Part,       Double,  Vector, Output);
   makeAtt (SearchInc,           Demand,     Double,  Scalar, Input);
   makeAtt (SelForDel,           BomEntry,   Boolean, Scalar, Input);
   makeAtt (SelForDel,           BopEntry,   Boolean, Scalar, Input);
   makeAtt (SelForDel,           Demand,     Boolean, Scalar, Input);
   makeAtt (SelForDel,           Operation,  Boolean, Scalar, Input);
   makeAtt (SelForDel,           Part,       Boolean, Scalar, Input);
   makeAtt (SelForDel,           Substitute, Boolean, Scalar, Input);
   makeAtt (SelSplit,            Global,     Boolean, Scalar, Input);
   makeAtt (ShadowPrice,         Part,       Double,  Vector, Output);
   makeAtt (ShipLateAllowed,     Demand,     Boolean, Scalar, Input);
   makeAtt (ShipLateUB,          Demand,     Integer, Vector, Input);
   makeAtt (ShipReward,          Demand,     Double,  Vector, Input);
   makeAtt (ShipVol,             Demand,     Double,  Vector, Input);
   makeAtt (SingleSource,        BomEntry,   Boolean, Scalar, Input);
   makeAtt (SingleSource,        Part,       Boolean, Scalar, Input);
   makeAtt (SkipFailures,        Global,     Boolean, Scalar, Input);
   makeAtt (StageByObject,       Global,     Boolean, Scalar, Input);
   makeAtt (StochMode,           Global,     Boolean, Scalar, Input);
   makeAtt (StochSolnMode,       Global,     Boolean, Scalar, Output);
   makeAtt (StockCost,           Part,       Double,  Vector, Input);
   makeAtt (StockReallocation,   Global,     Boolean, Scalar, Input);
   makeAtt (StockVol,            Part,       Double,  Vector, Output);
   makeAtt (SubCost,             Substitute, Double,  Vector, Input);
   makeAtt (SubVol,              Substitute, Double,  Vector, Input);
   makeAtt (SupplyVol,           Part,       Double,  Vector, Input);
   makeAtt (TieBreakPropRt,      Global,     Boolean, Scalar, Input);
   makeAtt (TruncOffsets,        Global,     Boolean, Scalar, Input);
   makeAtt (TwoLevelLotSizes,    Operation,  Boolean, Scalar, Input);
   makeAtt (TwoWayMultiExec,     Global,     Boolean, Scalar, Input);
   makeAtt (UseFocusHorizons,    Global,     Boolean, Scalar, Input);
   makeAtt (UserHeurStart,       Global,     Boolean, Scalar, Input);
   makeAtt (Wbounds,             Global,     Double,  Scalar, Input);
   makeAtt (YieldRate,           Operation,  Double,  Vector, Input);
@


1.46
log
@Dismantling class SessionCOR.
@
text
@a11 4
#include     <Problem.h>
   //
   // Temporary

d20 1
a20 1
      JavaAccObj     (theProblem->getSession ()),
@


1.45
log
@Revisions to allow compilation with GCC 4.3.2.
@
text
@d12 4
d22 1
a22 1
WitJ::AttBldr::AttBldr (Session * theSession):
d24 1
a24 1
      JavaAccObj     (theSession),
@


1.44
log
@Added Attribute fssShipVol.
@
text
@d14 2
@


1.43
log
@Name change.
@
text
@d204 1
@


1.42
log
@Changed name of Component to Entity.
@
text
@d49 1
a49 1
   scopedAttName_  = theAtt->getEntityClassName ();
d79 2
a80 2
      << "      " << theAtt->getEntityClassName () << "."
                  << theAtt->getAttName         () << "\n"
@


1.41
log
@Minor revision.
@
text
@d49 1
a49 1
   scopedAttName_  = theAtt->getCompClassName ();
d79 2
a80 2
      << "      " << theAtt->getCompClassName () << "."
                  << theAtt->getAttName       () << "\n"
@


1.40
log
@Minor revision.
@
text
@d134 1
a134 1
bool WitJ::AttBldr::getEmptyMode ()
@


1.39
log
@Changed name of C++ class JAccObject to JavaAccObj.
@
text
@d134 1
a134 1
bool WitJ::AttBldr::isEmpty ()
@


1.38
log
@Renamed Java class ProbCoordCI to SessionCI.
Renamed C++  class ProbCoord   to Session.
@
text
@d18 1
a18 1
      JAccObject     (theSession),
@


1.37
log
@Removed some debugging output.
@
text
@d16 1
a16 1
WitJ::AttBldr::AttBldr (ProbCoord * theProbCoord):
d18 1
a18 1
      JAccObject     (theProbCoord),
@


1.36
log
@Attributes.
@
text
@a29 5
   std::cout
      << std::endl
      << "Destroying an AttBldr."
      << std::endl;

@


1.35
log
@Attributes.
@
text
@d45 1
a45 1
WitJ::AttBldr * WitJ::AttBldr::thisAttBldr ()
@


1.34
log
@Added attributes:
   objValue
   bpundsValue
@
text
@d167 139
a305 139
   makeAtt (AccAfterOptImp,      Global,     Input,  Boolean, Scalar);
   makeAtt (AccAfterSoftLB,      Global,     Input,  Boolean, Scalar);
   makeAtt (Accelerated,         Global,     Output, Boolean, Scalar);
   makeAtt (AsapPipOrder,        Part,       Input,  Boolean, Scalar);
   makeAtt (AutoPriority,        Global,     Input,  Boolean, Scalar);
   makeAtt (BoundsValue,         Global,     Output, Double,  Scalar);
   makeAtt (BuildAheadUB,        Part,       Input,  Integer, Vector);
   makeAtt (BuildAsap,           Part,       Input,  Boolean, Scalar);
   makeAtt (BuildNstn,           Part,       Input,  Boolean, Scalar);
   makeAtt (CompPrices,          Global,     Input,  Boolean, Scalar);
   makeAtt (ComputeCriticalList, Global,     Input,  Boolean, Scalar);
   makeAtt (ConsRate,            BomEntry,   Input,  Double,  Vector);
   makeAtt (ConsRate,            Substitute, Input,  Double,  Vector);
   makeAtt (ConsVol,             Part,       Output, Double,  Vector);
   makeAtt (CumShipReward,       Demand,     Input,  Double,  Vector);
   makeAtt (CurrentScenario,     Global,     Input,  Integer, Scalar);
   makeAtt (DemandVol,           Demand,     Input,  Double,  Vector);
   makeAtt (EarliestPeriod,      BomEntry,   Input,  Integer, Scalar);
   makeAtt (EarliestPeriod,      BopEntry,   Input,  Integer, Scalar);
   makeAtt (EarliestPeriod,      Substitute, Input,  Integer, Scalar);
   makeAtt (Equitability,        Global,     Input,  Integer, Scalar);
   makeAtt (ExcessVol,           Part,       Output, Double,  Vector);
   makeAtt (ExecCost,            Operation,  Input,  Double,  Vector);
   makeAtt (ExecEmptyBom,        Global,     Input,  Boolean, Scalar);
   makeAtt (ExecPenalty,         BomEntry,   Input,  Double,  Scalar);
   makeAtt (ExecPenalty,         Operation,  Input,  Double,  Scalar);
   makeAtt (ExecPenalty,         Substitute, Input,  Double,  Scalar);
   makeAtt (ExecVol,             Operation,  Input,  Double,  Vector);
   makeAtt (Executable,          Operation,  Output, Boolean, Vector);
   makeAtt (ExpAllowed,          BopEntry,   Input,  Boolean, Scalar);
   makeAtt (ExpAllowed,          Substitute, Input,  Boolean, Scalar);
   makeAtt (ExpAversion,         BopEntry,   Input,  Double,  Scalar);
   makeAtt (ExpCutoff,           Global,     Input,  Double,  Scalar);
   makeAtt (ExpNetAversion,      Substitute, Input,  Double,  Scalar);
   makeAtt (ExtOptActive,        Global,     Output, Boolean, Scalar);
   makeAtt (FalloutRate,         BomEntry,   Input,  Double,  Scalar);
   makeAtt (FalloutRate,         Substitute, Input,  Double,  Scalar);
   makeAtt (Feasible,            Global,     Output, Boolean, Scalar);
   makeAtt (FocusHorizon,        Demand,     Input,  Integer, Scalar);
   makeAtt (FocusShortageVol,    Part,       Output, Double,  Vector);
   makeAtt (ForcedMultiEq,       Global,     Input,  Boolean, Scalar);
   makeAtt (FssExecVol,          Operation,  Output, Double,  Vector);
   makeAtt (FssSubVol,           Substitute, Output, Double,  Vector);
   makeAtt (HeurAllocActive,     Global,     Output, Boolean, Scalar);
   makeAtt (HighPrecisionWD,     Global,     Input,  Boolean, Scalar);
   makeAtt (ImpactPeriod,        BomEntry,   Output, Integer, Vector);
   makeAtt (ImpactPeriod,        BopEntry,   Output, Integer, Vector);
   makeAtt (ImpactPeriod,        Substitute, Output, Integer, Vector);
   makeAtt (IncLotSize,          Operation,  Input,  Double,  Vector);
   makeAtt (IncLotSize2,         Operation,  Input,  Double,  Vector);
   makeAtt (IndependentOffsets,  Global,     Input,  Boolean, Scalar);
   makeAtt (IntExecVols,         Operation,  Input,  Boolean, Scalar);
   makeAtt (IntShipVols,         Demand,     Input,  Boolean, Scalar);
   makeAtt (IntSubVols,          Substitute, Input,  Boolean, Scalar);
   makeAtt (LatestPeriod,        BomEntry,   Input,  Integer, Scalar);
   makeAtt (LatestPeriod,        BopEntry,   Input,  Integer, Scalar);
   makeAtt (LatestPeriod,        Substitute, Input,  Integer, Scalar);
   makeAtt (LotSize2Thresh,      Operation,  Input,  Double,  Vector);
   makeAtt (LotSizeTol,          Global,     Input,  Double,  Scalar);
   makeAtt (MandEC,              BomEntry,   Input,  Boolean, Scalar);
   makeAtt (MinLotSize,          Operation,  Input,  Double,  Vector);
   makeAtt (MinLotSize2,         Operation,  Input,  Double,  Vector);
   makeAtt (MinimalExcess,       Global,     Input,  Boolean, Scalar);
   makeAtt (MipMode,             Global,     Input,  Boolean, Scalar);
   makeAtt (MrpConsVol,          Part,       Output, Double,  Vector);
   makeAtt (MrpExcessVol,        Part,       Output, Double,  Vector);
   makeAtt (MrpExecVol,          Operation,  Output, Double,  Vector);
   makeAtt (MrpNetAllowed,       Substitute, Input,  Boolean, Scalar);
   makeAtt (MrpResidualVol,      Part,       Output, Double,  Vector);
   makeAtt (MrpSubVol,           Substitute, Output, Double,  Vector);
   makeAtt (MultiExec,           Global,     Input,  Boolean, Scalar);
   makeAtt (MultiRoute,          Global,     Input,  Boolean, Scalar);
   makeAtt (NScenarios,          Global,     Input,  Integer, Scalar);
   makeAtt (NetAllowed,          Substitute, Input,  Boolean, Scalar);
   makeAtt (NstnResidual,        Global,     Input,  Boolean, Scalar);
   makeAtt (ObjValue,            Global,     Output, Double,  Scalar);
   makeAtt (ObjectStage,         Operation,  Input,  Integer, Scalar);
   makeAtt (ObjectStage,         Part,       Input,  Integer, Scalar);
   makeAtt (Offset,              BomEntry,   Input,  Double,  Vector);
   makeAtt (Offset,              BopEntry,   Input,  Double,  Vector);
   makeAtt (Offset,              Substitute, Input,  Double,  Vector);
   makeAtt (PenExec,             Global,     Input,  Boolean, Scalar);
   makeAtt (PerfPegging,         Global,     Input,  Boolean, Scalar);
   makeAtt (PeriodStage,         Global,     Input,  Integer, Vector);
   makeAtt (PgdCritListMode,     Global,     Input,  Boolean, Scalar);
   makeAtt (PipExists,           Global,     Output, Boolean, Scalar);
   makeAtt (PipSeqFromHeur,      Global,     Input,  Boolean, Scalar);
   makeAtt (Postprocessed,       Global,     Output, Boolean, Scalar);
   makeAtt (PrefHighStockSLBs,   Global,     Input,  Boolean, Scalar);
   makeAtt (Preprocessed,        Global,     Output, Boolean, Scalar);
   makeAtt (Priority,            Demand,     Input,  Integer, Vector);
   makeAtt (Probability,         Global,     Input,  Double,  Scalar);
   makeAtt (ProdVol,             Part,       Output, Double,  Vector);
   makeAtt (ProductRate,         BopEntry,   Input,  Double,  Vector);
   makeAtt (PropRtg,             BomEntry,   Input,  Boolean, Vector);
   makeAtt (PropRtg,             Part,       Input,  Boolean, Vector);
   makeAtt (ReqVol,              Part,       Output, Double,  Vector);
   makeAtt (ResidualVol,         Part,       Output, Double,  Vector);
   makeAtt (RespectStockSLBs,    Global,     Input,  Boolean, Scalar);
   makeAtt (RoundReqVols,        Global,     Input,  Boolean, Scalar);
   makeAtt (RoutingShare,        BomEntry,   Input,  Double,  Vector);
   makeAtt (RoutingShare,        BopEntry,   Input,  Double,  Vector);
   makeAtt (RoutingShare,        Substitute, Input,  Double,  Vector);
   makeAtt (ScrapAllowed,        Part,       Input,  Boolean, Scalar);
   makeAtt (ScrapCost,           Part,       Input,  Double,  Vector);
   makeAtt (ScrapVol,            Part,       Output, Double,  Vector);
   makeAtt (SearchInc,           Demand,     Input,  Double,  Scalar);
   makeAtt (SelForDel,           BomEntry,   Input,  Boolean, Scalar);
   makeAtt (SelForDel,           BopEntry,   Input,  Boolean, Scalar);
   makeAtt (SelForDel,           Demand,     Input,  Boolean, Scalar);
   makeAtt (SelForDel,           Operation,  Input,  Boolean, Scalar);
   makeAtt (SelForDel,           Part,       Input,  Boolean, Scalar);
   makeAtt (SelForDel,           Substitute, Input,  Boolean, Scalar);
   makeAtt (SelSplit,            Global,     Input,  Boolean, Scalar);
   makeAtt (ShadowPrice,         Part,       Output, Double,  Vector);
   makeAtt (ShipLateAllowed,     Demand,     Input,  Boolean, Scalar);
   makeAtt (ShipLateUB,          Demand,     Input,  Integer, Vector);
   makeAtt (ShipReward,          Demand,     Input,  Double,  Vector);
   makeAtt (ShipVol,             Demand,     Input,  Double,  Vector);
   makeAtt (SingleSource,        BomEntry,   Input,  Boolean, Scalar);
   makeAtt (SingleSource,        Part,       Input,  Boolean, Scalar);
   makeAtt (SkipFailures,        Global,     Input,  Boolean, Scalar);
   makeAtt (StageByObject,       Global,     Input,  Boolean, Scalar);
   makeAtt (StochMode,           Global,     Input,  Boolean, Scalar);
   makeAtt (StochSolnMode,       Global,     Output, Boolean, Scalar);
   makeAtt (StockCost,           Part,       Input,  Double,  Vector);
   makeAtt (StockReallocation,   Global,     Input,  Boolean, Scalar);
   makeAtt (StockVol,            Part,       Output, Double,  Vector);
   makeAtt (SubCost,             Substitute, Input,  Double,  Vector);
   makeAtt (SubVol,              Substitute, Input,  Double,  Vector);
   makeAtt (SupplyVol,           Part,       Input,  Double,  Vector);
   makeAtt (TieBreakPropRt,      Global,     Input,  Boolean, Scalar);
   makeAtt (TruncOffsets,        Global,     Input,  Boolean, Scalar);
   makeAtt (TwoLevelLotSizes,    Operation,  Input,  Boolean, Scalar);
   makeAtt (TwoWayMultiExec,     Global,     Input,  Boolean, Scalar);
   makeAtt (UseFocusHorizons,    Global,     Input,  Boolean, Scalar);
   makeAtt (UserHeurStart,       Global,     Input,  Boolean, Scalar);
   makeAtt (Wbounds,             Global,     Input,  Double,  Scalar);
   makeAtt (YieldRate,           Operation,  Input,  Double,  Vector);
@


1.33
log
@Attributes.
@
text
@d172 1
d242 1
@


1.32
log
@Attributes.
@
text
@d167 3
a169 3
   makeAtt (AccAfterOptImp,      GlobalComp, Input,  Boolean, Scalar);
   makeAtt (AccAfterSoftLB,      GlobalComp, Input,  Boolean, Scalar);
   makeAtt (Accelerated,         GlobalComp, Output, Boolean, Scalar);
d171 1
a171 1
   makeAtt (AutoPriority,        GlobalComp, Input,  Boolean, Scalar);
d175 2
a176 2
   makeAtt (CompPrices,          GlobalComp, Input,  Boolean, Scalar);
   makeAtt (ComputeCriticalList, GlobalComp, Input,  Boolean, Scalar);
d181 1
a181 1
   makeAtt (CurrentScenario,     GlobalComp, Input,  Integer, Scalar);
d186 1
a186 1
   makeAtt (Equitability,        GlobalComp, Input,  Integer, Scalar);
d189 1
a189 1
   makeAtt (ExecEmptyBom,        GlobalComp, Input,  Boolean, Scalar);
d198 1
a198 1
   makeAtt (ExpCutoff,           GlobalComp, Input,  Double,  Scalar);
d200 1
a200 1
   makeAtt (ExtOptActive,        GlobalComp, Output, Boolean, Scalar);
d203 1
a203 1
   makeAtt (Feasible,            GlobalComp, Output, Boolean, Scalar);
d206 1
a206 1
   makeAtt (ForcedMultiEq,       GlobalComp, Input,  Boolean, Scalar);
d209 2
a210 2
   makeAtt (HeurAllocActive,     GlobalComp, Output, Boolean, Scalar);
   makeAtt (HighPrecisionWD,     GlobalComp, Input,  Boolean, Scalar);
d216 1
a216 1
   makeAtt (IndependentOffsets,  GlobalComp, Input,  Boolean, Scalar);
d224 1
a224 1
   makeAtt (LotSizeTol,          GlobalComp, Input,  Double,  Scalar);
d228 2
a229 2
   makeAtt (MinimalExcess,       GlobalComp, Input,  Boolean, Scalar);
   makeAtt (MipMode,             GlobalComp, Input,  Boolean, Scalar);
d236 3
a238 3
   makeAtt (MultiExec,           GlobalComp, Input,  Boolean, Scalar);
   makeAtt (MultiRoute,          GlobalComp, Input,  Boolean, Scalar);
   makeAtt (NScenarios,          GlobalComp, Input,  Integer, Scalar);
d240 1
a240 1
   makeAtt (NstnResidual,        GlobalComp, Input,  Boolean, Scalar);
d246 9
a254 9
   makeAtt (PenExec,             GlobalComp, Input,  Boolean, Scalar);
   makeAtt (PerfPegging,         GlobalComp, Input,  Boolean, Scalar);
   makeAtt (PeriodStage,         GlobalComp, Input,  Integer, Vector);
   makeAtt (PgdCritListMode,     GlobalComp, Input,  Boolean, Scalar);
   makeAtt (PipExists,           GlobalComp, Output, Boolean, Scalar);
   makeAtt (PipSeqFromHeur,      GlobalComp, Input,  Boolean, Scalar);
   makeAtt (Postprocessed,       GlobalComp, Output, Boolean, Scalar);
   makeAtt (PrefHighStockSLBs,   GlobalComp, Input,  Boolean, Scalar);
   makeAtt (Preprocessed,        GlobalComp, Output, Boolean, Scalar);
d256 1
a256 1
   makeAtt (Probability,         GlobalComp, Input,  Double,  Scalar);
d263 2
a264 2
   makeAtt (RespectStockSLBs,    GlobalComp, Input,  Boolean, Scalar);
   makeAtt (RoundReqVols,        GlobalComp, Input,  Boolean, Scalar);
d278 1
a278 1
   makeAtt (SelSplit,            GlobalComp, Input,  Boolean, Scalar);
d286 4
a289 4
   makeAtt (SkipFailures,        GlobalComp, Input,  Boolean, Scalar);
   makeAtt (StageByObject,       GlobalComp, Input,  Boolean, Scalar);
   makeAtt (StochMode,           GlobalComp, Input,  Boolean, Scalar);
   makeAtt (StochSolnMode,       GlobalComp, Output, Boolean, Scalar);
d291 1
a291 1
   makeAtt (StockReallocation,   GlobalComp, Input,  Boolean, Scalar);
d296 2
a297 2
   makeAtt (TieBreakPropRt,      GlobalComp, Input,  Boolean, Scalar);
   makeAtt (TruncOffsets,        GlobalComp, Input,  Boolean, Scalar);
d299 4
a302 4
   makeAtt (TwoWayMultiExec,     GlobalComp, Input,  Boolean, Scalar);
   makeAtt (UseFocusHorizons,    GlobalComp, Input,  Boolean, Scalar);
   makeAtt (UserHeurStart,       GlobalComp, Input,  Boolean, Scalar);
   makeAtt (Wbounds,             GlobalComp, Input,  Double,  Scalar);
@


1.31
log
@Attributes.
@
text
@d152 1
a152 1
      << "Attributes remaining in the C++ Attribute Mapping:\n"
d159 1
a159 4
      std::cout
         << "   \"" << theItr->first << "\" maps to Attribute "
         << theItr->second->getAttName () << " of class "
         << theItr->second->getCompClassName () << ".\n";
@


1.30
log
@Attributes.
@
text
@d60 2
a61 1
   witjAssert (myAttMap_.count (scopedAttName_) == 0);
d68 1
a68 12
         std::cout
            << "\n"
            << "WIT-J Internal Error:\n"
            << "\n"
            << "   C++ Atts entered out-of-order:\n"
            << "\n"
            << "      " << mostRecentAtt_->getAttName () << "\n"
            << "      " << theAtt        ->getAttName () << "\n"
            << "\n"
            << "Application Program aborted by WIT-J.\n";

         exit (4);
d76 36
d172 1
d182 1
d187 1
a188 1
   makeAtt (EarliestPeriod,      BopEntry,   Input,  Integer, Scalar);
d190 1
d193 1
a194 1
   makeAtt (ExecPenalty,         BomEntry,   Input,  Double,  Scalar);
d197 2
a199 1
   makeAtt (ExpAllowed,          BopEntry,   Input,  Boolean, Scalar);
d203 1
d206 1
d208 1
d210 3
d214 3
d224 1
a225 1
   makeAtt (LatestPeriod,        BopEntry,   Input,  Integer, Scalar);
d233 3
d237 2
a240 1
   makeAtt (MultiThread,         GlobalComp, Input,  Boolean, Scalar);
d244 1
a245 1
   makeAtt (ObjectStage,         Operation,  Input,  Integer, Scalar);
d247 1
a248 1
   makeAtt (Offset,              BopEntry,   Input,  Double,  Vector);
d253 1
d255 1
d257 1
d260 1
d262 1
d264 2
a265 1
   makeAtt (PropRtg,             BomEntry,   Input,  Boolean, Vector);
d269 1
a270 1
   makeAtt (RoutingShare,        BopEntry,   Input,  Double,  Vector);
d275 2
a276 1
   makeAtt (SelForDel,           Part,       Input,  Boolean, Scalar);
d279 1
a279 1
   makeAtt (SelForDel,           BomEntry,   Input,  Boolean, Scalar);
a280 1
   makeAtt (SelForDel,           BopEntry,   Input,  Boolean, Scalar);
d282 1
d287 1
a288 1
   makeAtt (SingleSource,        BomEntry,   Input,  Boolean, Scalar);
d292 1
d295 1
@


1.29
log
@Attributes.
@
text
@d65 15
a79 1
      witjAssert (theAtt->getAttName () >= mostRecentAtt_->getAttName ());
d144 111
a254 6
   makeAtt (DemandVol,     Demand,     Input,  Double,  Vector);
   makeAtt (ExpAllowed,    Substitute, Input,  Boolean, Scalar);
   makeAtt (ExpAllowed,    BopEntry,   Input,  Boolean, Scalar);
   makeAtt (MrpNetAllowed, Substitute, Input,  Boolean, Scalar);
   makeAtt (ScrapVol,      Part,       Output, Double,  Vector);
   makeAtt (SupplyVol,     Part,       Input,  Double,  Vector);
@


1.28
log
@Attributes.
@
text
@d112 1
a112 1
      << "C++ Attribute Mapping:\n"
d120 1
a120 1
         << theItr->first << " maps to Attribute "
a123 5

   std::cout
      << "\n"
      << "End of C++ Attribute Mapping:\n"
      << "\n";
@


1.27
log
@Attributes.
@
text
@d135 6
a140 6
   makeAtt (Input,  Double,  Vector, Demand,     DemandVol);
   makeAtt (Input,  Boolean, Scalar, Substitute, ExpAllowed);
   makeAtt (Input,  Boolean, Scalar, BopEntry,   ExpAllowed);
   makeAtt (Input,  Boolean, Scalar, Substitute, MrpNetAllowed);
   makeAtt (Output, Double,  Vector, Part,       ScrapVol);
   makeAtt (Input,  Double,  Vector, Part,       SupplyVol);
@


1.26
log
@Attributes.
@
text
@d18 2
a19 1
      JAccObject (theProbCoord)
d63 5
d141 2
@


1.25
log
@Attributes.
@
text
@d7 4
a10 3
#include    <AttBldr.h>
#include <ScalarAtts.h>
#include <VectorAtts.h>
d12 1
a12 1
#include <iostream>
d129 6
a134 35
   new DemandVectorAtt <double> (
      this,
      "DemandVol",
      witSetDemandDemandVolDbl,
      witGetDemandDemandVolDbl);

   new SubScalarAtt <witBoolean> (
      this,
      "ExpAllowed",
      witSetSubsBomEntryExpAllowed,
      witGetSubsBomEntryExpAllowed);

   new BopEntScalarAtt <witBoolean> (
      this,
      "ExpAllowed",
      witSetBopEntryExpAllowed,
      witGetBopEntryExpAllowed);

   new SubScalarAtt <witBoolean> (
      this,
      "MrpNetAllowed",
      witSetSubsBomEntryMrpNetAllowed,
      witGetSubsBomEntryMrpNetAllowed);

   new PartVectorAtt <double> (
      this,
      "ScrapVol",
      NULL,
      witGetPartScrapVolDbl);

   new PartVectorAtt <double> (
      this,
      "SupplyVol",
      witSetPartSupplyVolDbl,
      witGetPartSupplyVolDbl);
@


1.24
log
@Attributes.
@
text
@d130 1
a130 1
      "demandVol",
d136 1
a136 1
      "expAllowed",
d142 1
a142 1
      "expAllowed",
d148 1
a148 1
      "mrpNetAllowed",
d154 1
a154 1
      "scrapVol",
d160 1
a160 1
      "supplyVol",
@


1.23
log
@Attributes.
@
text
@d7 3
a9 3
#include  <AttBldr.h>
#include <ScalAtts.h>
#include  <VecAtts.h>
d128 1
a128 1
   new DemandVecAtt <double> (
d134 1
a134 1
   new SubScalAtt <witBoolean> (
d140 1
a140 1
   new BopEntScalAtt <witBoolean> (
d146 1
a146 1
   new SubScalAtt <witBoolean> (
d152 1
a152 1
   new PartVecAtt <double> (
d158 1
a158 1
   new PartVecAtt <double> (
@


1.22
log
@Attributes.
@
text
@d7 3
a9 3
#include    <AttBldr.h>
#include <ScalAtts-D.h>
#include  <VecAtts-D.h>
d11 1
a11 1
#include   <iostream>
@


1.21
log
@Attributes.
@
text
@d113 1
a113 1
         << theItr->first << " maps to Attribute: "
@


1.20
log
@Attributes.
@
text
@d128 1
a128 1
   new PartVecAtt <double> (
d130 3
a132 3
      "supplyVol",
      witSetPartSupplyVolDbl,
      witGetPartSupplyVolDbl);
d134 1
a134 1
   new PartVecAtt <double> (
d136 3
a138 3
      "scrapVol",
      NULL,
      witGetPartScrapVolDbl);
d140 1
a140 1
   new DemandVecAtt <double> (
d142 3
a144 3
      "demandVol",
      witSetDemandDemandVolDbl,
      witGetDemandDemandVolDbl);
d151 12
@


1.19
log
@Attributes.
@
text
@d65 8
a72 1
WitJ::Att * WitJ::AttBldr::handOverAtt (const char * scopedAttNameCStr)
@


1.18
log
@Attributes.
@
text
@d123 1
a123 1
      "SUPPLY_VOL",
d129 1
a129 1
      "SCRAP_VOL",
d135 1
a135 1
      "DEMAND_VOL",
d141 1
a141 1
      "MRP_NET_ALLOWED",
@


1.17
log
@Implemented and use class AppAtt.
@
text
@a11 1
#include     <string.h>
d19 2
d52 9
a60 1
   myAttMap_.insert (make_pair (theAtt->getName (), theAtt));
d65 1
a65 3
WitJ::Att * WitJ::AttBldr::handOverAtt (
      const char * theAttName,
      const char * theClassName)
d67 2
a68 3
   std::multimap <std::string, Att *>::iterator theItr;
   std::string                                  theClassString;
   Att *                                        theAtt;
d70 1
a70 1
   theClassString = theClassName;
d72 1
a72 1
   theItr = myAttMap_.find (theAttName);
d74 1
a74 7
   while (true)
      {
      witjAssert (theItr != myAttMap_.end ());

      witjAssert (theItr->first == theAttName);

      theAtt = theItr->second;
d76 1
a76 5
      if (theClassString == theAtt->getCompClassName ())
         break;

      theItr ++;
      }
d94 1
a94 1
   std::multimap <std::string, Att *>::iterator theItr;
d101 3
a103 1
   for (theItr = myAttMap_.begin (); theItr != myAttMap_.end (); theItr ++)
d107 2
a108 1
         << theItr->second->getName () << ".\n";
@


1.16
log
@Atttributes.
@
text
@d96 24
@


1.15
log
@Changed the names of access functions beginning with "my"
to begin with "get".
@
text
@d51 1
a51 5
   witjAssert (theAtt != NULL);

   witjAssert (myAttMap_.count (theAtt->getName ()) == 0);

   myAttMap_[theAtt->getName ()] = theAtt;
d56 3
a58 1
WitJ::Att * WitJ::AttBldr::handOverAtt (const char * theName)
d60 13
a72 2
   std::map <std::string, Att *>::iterator theItr;
   Att *                                   theAtt;
d74 1
a74 1
   theItr = myAttMap_.find (theName);
d76 2
a77 1
   witjAssert (theItr != myAttMap_.end ());
d79 2
a80 1
   theAtt = theItr->second;
@


1.14
log
@Attributes.
@
text
@d53 1
a53 1
   witjAssert (myAttMap_.count (theAtt->myName ()) == 0);
d55 1
a55 1
   myAttMap_[theAtt->myName ()] = theAtt;
@


1.13
log
@Attributes.
@
text
@d51 1
a51 1
   assert (theAtt != NULL);
d53 1
a53 1
   assert (myAttMap_.count (theAtt->myName ()) == 0);
d67 1
a67 1
   assert (theItr != myAttMap_.end ());
@


1.12
log
@Attributes
@
text
@d89 1
a89 1
               "supplyVol",
d95 1
a95 1
               "scrapVol",
d101 1
a101 1
                 "demandVol",
d107 1
a107 1
                       "mrpNetAllowed",
@


1.11
log
@Implemented of class DblVecOutAttAcc.
@
text
@d95 1
a95 1
               "stockVol",
d97 1
a97 1
      witGetPartStockVolDbl);
@


1.10
log
@Attributes.
@
text
@d92 7
a98 1
     
@


1.9
log
@Implemented the demandVol attribute.
@
text
@a52 7
   std::cout
      << std::endl
      << "The AttBldr is acquiring attribute \""
      << theAtt->myName ()
      << "\"."
      << std::endl;

a64 7
   std::cout
      << std::endl
      << "The AttBldr is handing over attribute \""
      << theName
      << "\" to its client."
      << std::endl;

d92 1
a92 1

@


1.8
log
@Attributes.
@
text
@d107 6
@


1.7
log
@Comments, etc.
@
text
@d7 3
a9 2
#include   <AttBldr.h>
#include <VecAtts-D.h>
d11 2
a12 2
#include  <iostream>
#include    <string.h>
d101 1
a101 1
   new PartVecAtt <double>::PartVecAtt (
d106 6
d113 2
@


1.6
log
@Attributes
@
text
@d66 1
a66 1
WitJ::Att * WitJ::AttBldr::relinquishAtt (const char * theName)
d73 1
a73 1
      << "The AttBldr is relinquishing attribute \""
d75 1
a75 1
      << "\"."
@


1.5
log
@Attributes.
@
text
@d54 1
a54 1
      << "The AttBldr is acquiring ownership of attribute \""
d66 1
a66 1
WitJ::Att * WitJ::AttBldr::cedeAttFor (const char * theName)
d73 1
a73 1
      << "The AttBldr is ceding ownership of attribute \""
d91 7
@


1.4
log
@Attributes
@
text
@d17 1
a17 2
      JAccObject (theProbCoord),
      supplyVol_ (NULL)
d31 6
a36 1
   delete supplyVol_;
d48 1
a48 1
WitJ::Att * WitJ::AttBldr::releaseAtt (const char * theName)
d50 10
a59 1
   Att * theAtt;
d61 4
a64 1
   assert (strcmp (theName, "supplyVol") == 0);
d66 4
a69 1
   assert (supplyVol_ != NULL);
d73 3
a75 1
      << "Transferring ownership of attribute \"supplyVol\"."
d78 5
a82 1
   theAtt     = supplyVol_;
d84 1
a84 1
   supplyVol_ = NULL;
d93 5
a97 6
   supplyVol_ =
      new PartVecAtt <double>::PartVecAtt (
         myProbCoord (),
                  "supplyVol",
         witSetPartSupplyVolDbl,
         witGetPartSupplyVolDbl);
@


1.3
log
@File name change.
@
text
@d44 1
a44 1
WitJ::Att * WitJ::AttBldr::transferAttFor (const char * theName)
@


1.2
log
@Attributes.
@
text
@d7 2
a8 2
#include     <AttBldr.h>
#include <VecAtts-Def.h>
d10 2
a11 2
#include    <iostream>
#include      <string.h>
@


1.1
log
@Initial implementation of class AttBldr.
@
text
@d52 5
@

