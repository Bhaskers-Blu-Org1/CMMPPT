head	1.36;
access;
symbols;
locks; strict;
comment	@ * @;


1.36
date	2011.04.15.19.12.32;	author rjw;	state Exp;
branches;
next	1.35;

1.35
date	2011.04.15.19.01.07;	author rjw;	state Exp;
branches;
next	1.34;

1.34
date	2011.04.15.15.49.04;	author rjw;	state Exp;
branches;
next	1.33;

1.33
date	2011.04.15.00.07.25;	author rjw;	state Exp;
branches;
next	1.32;

1.32
date	2011.04.14.16.11.41;	author rjw;	state Exp;
branches;
next	1.31;

1.31
date	2011.04.13.22.36.24;	author rjw;	state Exp;
branches;
next	1.30;

1.30
date	2011.04.13.16.00.16;	author rjw;	state Exp;
branches;
next	1.29;

1.29
date	2011.04.12.00.33.12;	author rjw;	state Exp;
branches;
next	1.28;

1.28
date	2011.04.11.18.38.18;	author rjw;	state Exp;
branches;
next	1.27;

1.27
date	2011.04.05.22.25.44;	author rjw;	state Exp;
branches;
next	1.26;

1.26
date	2011.04.01.23.25.02;	author rjw;	state Exp;
branches;
next	1.25;

1.25
date	2011.04.01.19.23.34;	author rjw;	state Exp;
branches;
next	1.24;

1.24
date	2011.03.29.23.38.47;	author rjw;	state Exp;
branches;
next	1.23;

1.23
date	2011.03.19.00.26.10;	author rjw;	state Exp;
branches;
next	1.22;

1.22
date	2011.02.16.19.08.30;	author rjw;	state Exp;
branches;
next	1.21;

1.21
date	2011.02.15.20.18.58;	author rjw;	state Exp;
branches;
next	1.20;

1.20
date	2010.04.20.20.55.07;	author rjw;	state Exp;
branches;
next	1.19;

1.19
date	2010.04.17.00.20.19;	author rjw;	state Exp;
branches;
next	1.18;

1.18
date	2009.06.05.15.08.21;	author rjw;	state Exp;
branches;
next	1.17;

1.17
date	2009.02.28.00.27.54;	author rjw;	state Exp;
branches;
next	1.16;

1.16
date	2009.02.14.00.51.29;	author rjw;	state Exp;
branches;
next	1.15;

1.15
date	2009.02.03.19.01.03;	author rjw;	state Exp;
branches;
next	1.14;

1.14
date	2009.01.29.22.06.38;	author rjw;	state Exp;
branches;
next	1.13;

1.13
date	2009.01.23.19.32.23;	author rjw;	state Exp;
branches;
next	1.12;

1.12
date	2009.01.21.21.43.22;	author rjw;	state Exp;
branches;
next	1.11;

1.11
date	2009.01.16.17.30.24;	author rjw;	state Exp;
branches;
next	1.10;

1.10
date	2008.12.15.17.17.39;	author rjw;	state Exp;
branches;
next	1.9;

1.9
date	2008.12.12.23.38.31;	author rjw;	state Exp;
branches;
next	1.8;

1.8
date	2008.12.12.19.29.25;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2008.11.26.20.10.59;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2008.11.25.21.58.16;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2008.10.03.19.43.27;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2008.10.01.22.10.10;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2008.09.29.15.26.12;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2008.09.29.15.05.36;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2008.09.26.22.21.22;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.36
log
@Java CppObjRep classes
@
text
@//------------------------------------------------------------------------------
// WIT-J C++ Source file MessageMgrCOR.C.
//
// Contains the C++ implementations of the native methods of Java class
// witj.MessageMgrCOR.
//------------------------------------------------------------------------------

#include     <NativeMacros.h>
#include <ExceptionHandler.h>
#include           <CORJOR.h>
#include       <MessageMgr.h>
#include        <StringJOR.h>

using namespace WitJ;

//------------------------------------------------------------------------------

NATIVE_METHOD (void, MessageMgrCOR, flushFile) (
      JNIEnv *   theJNIEnv,
      _jobject * theMsgMgrCORJObj)
   {
   BEGIN_TRY_BLOCK

   CORJOR <MessageMgr> theMsgMgrCJOR (theMsgMgrCORJObj, theJNIEnv);

   theMsgMgrCJOR.getCppObject ()->flushFile ();

   END_TRY_BLOCK_SIMPLE_RETURN (theJNIEnv)
   }

//------------------------------------------------------------------------------

NATIVE_METHOD (void, MessageMgrCOR, setQuiet) (
      JNIEnv *   theJNIEnv,
      _jobject * theMsgMgrCORJObj,
      jboolean   quietVal)
   {
   BEGIN_TRY_BLOCK

   CORJOR <MessageMgr> theMsgMgrCJOR (theMsgMgrCORJObj, theJNIEnv);

   theMsgMgrCJOR.getCppObject ()->setQuiet (quietVal);

   END_TRY_BLOCK_SIMPLE_RETURN (theJNIEnv)
   }

//------------------------------------------------------------------------------

NATIVE_METHOD (jboolean, MessageMgrCOR, isQuiet) (
      JNIEnv *   theJNIEnv,
      _jobject * theMsgMgrCORJObj)
   {
   BEGIN_TRY_BLOCK

   CORJOR <MessageMgr> theMsgMgrCJOR (theMsgMgrCORJObj, theJNIEnv);

   return theMsgMgrCJOR.getCppObject ()->isQuiet ();

   END_TRY_BLOCK_VALUE_RETURN (theJNIEnv, false)
   }

//------------------------------------------------------------------------------

NATIVE_METHOD (void, MessageMgrCOR, setMesgFileAccessMode) (
      JNIEnv *   theJNIEnv,
      _jobject * theMsgMgrCORJObj,
      _jstring * theAccModeJStr)
   {
   BEGIN_TRY_BLOCK

   CORJOR <MessageMgr> theMsgMgrCJOR  (theMsgMgrCORJObj, theJNIEnv);
   StringJOR           theAccModeSJOR (theAccModeJStr,   theJNIEnv);

   theMsgMgrCJOR.
      getCppObject ()->
         setMesgFileAccessMode (theAccModeSJOR.getCString ());

   END_TRY_BLOCK_SIMPLE_RETURN (theJNIEnv)
   }

//------------------------------------------------------------------------------

NATIVE_METHOD (_jstring *, MessageMgrCOR, getMesgFileAccessMode) (
      JNIEnv *   theJNIEnv,
      _jobject * theMsgMgrCORJObj)
   {
   BEGIN_TRY_BLOCK

   CORJOR <MessageMgr> theMsgMgrCJOR (theMsgMgrCORJObj, theJNIEnv);
   StringJOR           theAccModeSJOR                  (theJNIEnv);

   theMsgMgrCJOR.getCppObject ()->getMesgFileAccessMode (theAccModeSJOR);

   return theAccModeSJOR.getJString ();

   END_TRY_BLOCK_VALUE_RETURN (theJNIEnv, NULL)
   }

//------------------------------------------------------------------------------

NATIVE_METHOD (void, MessageMgrCOR, setMesgFileName) (
      JNIEnv *   theJNIEnv,
      _jobject * theMsgMgrCORJObj,
      _jstring * theNameJStr)
   {
   BEGIN_TRY_BLOCK

   CORJOR <MessageMgr> theMsgMgrCJOR (theMsgMgrCORJObj, theJNIEnv);
   StringJOR           theNameSJOR   (theNameJStr,      theJNIEnv);

   theMsgMgrCJOR.
      getCppObject ()->
         setMesgFileName (
            theNameSJOR.getCString ());

   END_TRY_BLOCK_SIMPLE_RETURN (theJNIEnv)
   }

//------------------------------------------------------------------------------

NATIVE_METHOD (_jstring *, MessageMgrCOR, getMesgFileName) (
      JNIEnv *   theJNIEnv,
      _jobject * theMsgMgrCORJObj)
   {
   BEGIN_TRY_BLOCK

   CORJOR <MessageMgr> theMsgMgrCJOR (theMsgMgrCORJObj, theJNIEnv);
   StringJOR           theNameSJOR                     (theJNIEnv);

   theMsgMgrCJOR.getCppObject ()->getMesgFileName (theNameSJOR);

   return theNameSJOR.getJString ();

   END_TRY_BLOCK_VALUE_RETURN (theJNIEnv, NULL)
   }

//------------------------------------------------------------------------------

NATIVE_METHOD (void, MessageMgrCOR, setMesgTimesPrint) (
      JNIEnv *   theJNIEnv,
      _jobject * theMsgMgrCORJObj,
      jint       theMsgNo,
      jint       theCount)
   {
   BEGIN_TRY_BLOCK

   CORJOR <MessageMgr> theMsgMgrCJOR (theMsgMgrCORJObj, theJNIEnv);

   theMsgMgrCJOR.getCppObject ()->setMesgTimesPrint (theMsgNo, theCount);

   END_TRY_BLOCK_SIMPLE_RETURN (theJNIEnv)
   }

//------------------------------------------------------------------------------

NATIVE_METHOD (void, MessageMgrCOR, setMesgTimesPrintByGroup) (
      JNIEnv *   theJNIEnv,
      _jobject * theMsgMgrCORJObj,
      _jstring * theGroupNameJStr,
      jint       theCount)
   {
   BEGIN_TRY_BLOCK

   CORJOR <MessageMgr> theMsgMgrCJOR    (theMsgMgrCORJObj, theJNIEnv);
   StringJOR           theGroupNameSJOR (theGroupNameJStr, theJNIEnv);

   theMsgMgrCJOR.
      getCppObject ()->
         setMesgTimesPrintByGroup (
            theGroupNameSJOR.getCString (),
            theCount);

   END_TRY_BLOCK_SIMPLE_RETURN (theJNIEnv)
   }

//------------------------------------------------------------------------------

NATIVE_METHOD (jint, MessageMgrCOR, getMesgTimesPrint) (
      JNIEnv *   theJNIEnv,
      _jobject * theMsgMgrCORJObj,
      jint       theMsgNo)
   {
   BEGIN_TRY_BLOCK

   CORJOR <MessageMgr> theMsgMgrCJOR (theMsgMgrCORJObj, theJNIEnv);
   int                 theCount;

   theMsgMgrCJOR.getCppObject ()->getMesgTimesPrint (theMsgNo, theCount);

   return theCount;

   END_TRY_BLOCK_VALUE_RETURN (theJNIEnv, 0)
   }

//------------------------------------------------------------------------------

NATIVE_METHOD (void, MessageMgrCOR, acquireNewCppObject) (
      JNIEnv *   theJNIEnv,
      _jobject * theMsgMgrCORJObj,
      _jobject * theCoordCORJObj)
   {
   BEGIN_TRY_BLOCK

   CORJOR <MessageMgr>  theMsgMgrCJOR (theMsgMgrCORJObj, theJNIEnv);
   CORJOR <Coordinator> theCoordCJOR  (theCoordCORJObj,  theJNIEnv);
   MessageMgr *         theMsgMgr;

   theMsgMgr = new MessageMgr (theCoordCJOR.getCppObject ());

   theMsgMgrCJOR.acquire (theMsgMgr);

   END_TRY_BLOCK_SIMPLE_RETURN (theJNIEnv)
   }
@


1.35
log
@Class template CORJOR
@
text
@d197 1
a197 1
NATIVE_METHOD (void, MessageMgrCOR, createCppObject) (
@


1.34
log
@Class StringJOR
@
text
@d26 1
a26 1
   theMsgMgrCJOR->flushFile ();
d42 1
a42 1
   theMsgMgrCJOR->setQuiet (quietVal);
d57 1
a57 1
   return theMsgMgrCJOR->isQuiet ();
d74 3
a76 1
   theMsgMgrCJOR->setMesgFileAccessMode (theAccModeSJOR.getCString ());
d92 1
a92 1
   theMsgMgrCJOR->getMesgFileAccessMode (theAccModeSJOR);
d111 4
a114 1
   theMsgMgrCJOR->setMesgFileName (theNameSJOR.getCString ());
d130 1
a130 1
   theMsgMgrCJOR->getMesgFileName (theNameSJOR);
d149 1
a149 1
   theMsgMgrCJOR->setMesgTimesPrint (theMsgNo, theCount);
d167 5
a171 4
   theMsgMgrCJOR->
      setMesgTimesPrintByGroup (
         theGroupNameSJOR.getCString (),
         theCount);
d188 1
a188 1
   theMsgMgrCJOR->getMesgTimesPrint (theMsgNo, theCount);
d206 1
d208 3
a210 1
   theMsgMgrCJOR = new MessageMgr (theCoordCJOR);
@


1.33
log
@Class template CORJOR
@
text
@d74 1
a74 1
   theMsgMgrCJOR->setMesgFileAccessMode (theAccModeSJOR);
d109 1
a109 1
   theMsgMgrCJOR->setMesgFileName (theNameSJOR);
d162 4
a165 1
   theMsgMgrCJOR->setMesgTimesPrintByGroup (theGroupNameSJOR, theCount);
@


1.32
log
@Class StringJOR
@
text
@d10 1
d20 1
a20 1
      _jobject * theMessageMgrCORJObj)
d24 1
a24 1
   MessageMgr * theMessageMgr;
d26 1
a26 3
   theMessageMgr = getMessageMgr (theMessageMgrCORJObj, theJNIEnv);

   theMessageMgr->flushFile ();
d35 1
a35 1
      _jobject * theMessageMgrCORJObj,
d40 1
a40 3
   MessageMgr * theMessageMgr;

   theMessageMgr = getMessageMgr (theMessageMgrCORJObj, theJNIEnv);
d42 1
a42 1
   theMessageMgr->setQuiet (quietVal);
d51 1
a51 1
      _jobject * theMessageMgrCORJObj)
d55 1
a55 3
   MessageMgr * theMessageMgr;

   theMessageMgr = getMessageMgr (theMessageMgrCORJObj, theJNIEnv);
d57 1
a57 1
   return theMessageMgr->isQuiet ();
d66 1
a66 1
      _jobject * theMessageMgrCORJObj,
d71 2
a72 2
   MessageMgr * theMessageMgr;
   StringJOR    theAccModeSJOR   (theAccModeJStr,       theJNIEnv);
d74 1
a74 3
   theMessageMgr = getMessageMgr (theMessageMgrCORJObj, theJNIEnv);

   theMessageMgr->setMesgFileAccessMode (theAccModeSJOR);
d83 1
a83 1
      _jobject * theMessageMgrCORJObj)
d87 2
a88 4
   MessageMgr * theMessageMgr;
   StringJOR    theAccModeSJOR (theJNIEnv);

   theMessageMgr = getMessageMgr (theMessageMgrCORJObj, theJNIEnv);
d90 1
a90 1
   theMessageMgr->getMesgFileAccessMode (theAccModeSJOR);
d101 1
a101 1
      _jobject * theMessageMgrCORJObj,
d106 2
a107 4
   MessageMgr * theMessageMgr;
   StringJOR    theNameSJOR      (theNameJStr,          theJNIEnv);

   theMessageMgr = getMessageMgr (theMessageMgrCORJObj, theJNIEnv);
d109 1
a109 1
   theMessageMgr->setMesgFileName (theNameSJOR);
d118 1
a118 1
      _jobject * theMessageMgrCORJObj)
d122 2
a123 2
   MessageMgr * theMessageMgr;
   StringJOR    theNameSJOR (theJNIEnv);
d125 1
a125 3
   theMessageMgr = getMessageMgr (theMessageMgrCORJObj, theJNIEnv);

   theMessageMgr->getMesgFileName (theNameSJOR);
d136 1
a136 1
      _jobject * theMessageMgrCORJObj,
d142 1
a142 3
   MessageMgr * theMessageMgr;

   theMessageMgr = getMessageMgr (theMessageMgrCORJObj, theJNIEnv);
d144 1
a144 1
   theMessageMgr->setMesgTimesPrint (theMsgNo, theCount);
d153 1
a153 1
      _jobject * theMessageMgrCORJObj,
d159 2
a160 4
   MessageMgr * theMessageMgr;
   StringJOR    theGroupNameSJOR (theGroupNameJStr,     theJNIEnv);

   theMessageMgr = getMessageMgr (theMessageMgrCORJObj, theJNIEnv);
d162 1
a162 1
   theMessageMgr->setMesgTimesPrintByGroup (theGroupNameSJOR, theCount);
d171 1
a171 1
      _jobject * theMessageMgrCORJObj,
d176 2
a177 2
   MessageMgr * theMessageMgr;
   int          theCount;
d179 1
a179 3
   theMessageMgr = getMessageMgr (theMessageMgrCORJObj, theJNIEnv);

   theMessageMgr->getMesgTimesPrint (theMsgNo, theCount);
d190 1
a190 1
      _jobject * theMessageMgrCORJObj,
d195 2
a196 6
   Coordinator * theCoord;
   MessageMgr *  theMessageMgr;

   theCoord      = getCoordinator (theCoordCORJObj, theJNIEnv);

   theMessageMgr = new MessageMgr (theCoord);
d198 1
a198 1
   JniClient::transferTo (theMessageMgrCORJObj, theMessageMgr, theJNIEnv);
@


1.31
log
@Removed namespace JniUtil.
@
text
@d81 1
a81 1
   theMessageMgr->setMesgFileAccessMode (theAccModeSJOR.getCString ());
d120 1
a120 1
   theMessageMgr->setMesgFileName (theNameSJOR.getCString ());
d179 1
a179 2
   theMessageMgr->
      setMesgTimesPrintByGroup (theGroupNameSJOR.getCString (), theCount);
@


1.30
log
@ArrayJOR classes
@
text
@a8 1
#include          <JniUtil.h>
a13 1
using namespace WitJ::JniUtil;
d222 1
a222 1
   transferTo (theMessageMgrCORJObj, theMessageMgr, theJNIEnv);
@


1.29
log
@Class StringJOR
@
text
@a11 1
#include      <WitVecOwner.h>
@


1.28
log
@Class WString
@
text
@d13 1
a13 1
#include          <WString.h>
d80 1
a80 1
   WString      theAccModeWStr;
d84 1
a84 3
   copyInto (theAccModeWStr, theAccModeJStr, theJNIEnv);

   theMessageMgr->setMesgFileAccessMode (theAccModeWStr.getCString ());
d97 2
a98 2
   MessageMgr *   theMessageMgr;
   WitStringOwner theAccModeWSO;
d102 1
a102 1
   theMessageMgr->getMesgFileAccessMode (theAccModeWSO);
d104 1
a104 1
   return newJString (theAccModeWSO.getWitVec (), theJNIEnv);
d119 1
a119 1
   WString      theNameWStr;
d123 1
a123 3
   copyInto (theNameWStr, theNameJStr, theJNIEnv);

   theMessageMgr->setMesgFileName (theNameWStr.getCString ());
d136 2
a137 2
   MessageMgr *   theMessageMgr;
   WitStringOwner theNameWSO;
d141 1
a141 1
   theMessageMgr->getMesgFileName (theNameWSO);
d143 1
a143 1
   return newJString (theNameWSO.getWitVec (), theJNIEnv);
d178 1
a178 1
   WString      theGroupNameWStr;
a181 2
   copyInto (theGroupNameWStr, theGroupNameJStr, theJNIEnv);

d183 1
a183 1
      setMesgTimesPrintByGroup (theGroupNameWStr.getCString (), theCount);
@


1.27
log
@Namespace JniUtil.
@
text
@d13 1
a13 1
#include           <String.h>
d80 1
a80 1
   String       theAccModeStr;
d84 1
a84 1
   copyInto (theAccModeStr, theAccModeJStr, theJNIEnv);
d86 1
a86 1
   theMessageMgr->setMesgFileAccessMode (theAccModeStr.getCString ());
d121 1
a121 1
   String       theNameStr;
d125 1
a125 1
   copyInto (theNameStr, theNameJStr, theJNIEnv);
d127 1
a127 1
   theMessageMgr->setMesgFileName (theNameStr.getCString ());
d182 1
a182 1
   String       theGroupNameStr;
d186 1
a186 1
   copyInto (theGroupNameStr, theGroupNameJStr, theJNIEnv);
d189 1
a189 1
      setMesgTimesPrintByGroup (theGroupNameStr.getCString (), theCount);
@


1.26
log
@JniAsst
@
text
@d9 1
a10 1
#include          <JniAsst.h>
d16 1
d28 1
a28 1
   theMessageMgr = JniAsst::getMessageMgr (theMessageMgrCORJObj, theJNIEnv);
d46 1
a46 1
   theMessageMgr = JniAsst::getMessageMgr (theMessageMgrCORJObj, theJNIEnv);
d63 1
a63 1
   theMessageMgr = JniAsst::getMessageMgr (theMessageMgrCORJObj, theJNIEnv);
d82 1
a82 1
   theMessageMgr = JniAsst::getMessageMgr (theMessageMgrCORJObj, theJNIEnv);
d84 1
a84 1
   theMessageMgr->getJniAsst ()->copyInto (theAccModeStr, theAccModeJStr);
d102 1
a102 1
   theMessageMgr = JniAsst::getMessageMgr (theMessageMgrCORJObj, theJNIEnv);
d106 1
a106 1
   return theMessageMgr->getJniAsst ()->newJString (theAccModeWSO.getWitVec ());
d123 1
a123 1
   theMessageMgr = JniAsst::getMessageMgr (theMessageMgrCORJObj, theJNIEnv);
d125 1
a125 1
   theMessageMgr->getJniAsst ()->copyInto (theNameStr, theNameJStr);
d143 1
a143 1
   theMessageMgr = JniAsst::getMessageMgr (theMessageMgrCORJObj, theJNIEnv);
d147 1
a147 1
   return theMessageMgr->getJniAsst ()->newJString (theNameWSO.getWitVec ());
d164 1
a164 1
   theMessageMgr = JniAsst::getMessageMgr (theMessageMgrCORJObj, theJNIEnv);
d184 1
a184 1
   theMessageMgr = JniAsst::getMessageMgr (theMessageMgrCORJObj, theJNIEnv);
d186 1
a186 1
   theMessageMgr->getJniAsst ()->copyInto (theGroupNameStr, theGroupNameJStr);
d206 1
a206 1
   theMessageMgr = JniAsst::getMessageMgr (theMessageMgrCORJObj, theJNIEnv);
d227 1
a227 1
   theCoord      = JniAsst::getCoordinator (theCoordCORJObj, theJNIEnv);
d231 1
a231 3
   theMessageMgr->
      getJniAsst ()->
         transferTo (theMessageMgrCORJObj, theMessageMgr);
@


1.25
log
@Replaced newHeldCString with copyInto.
@
text
@d10 1
a10 1
#include       <NativeCall.h>
a24 1
   NativeCall   theCall (theJNIEnv);
d27 1
a27 2
   theMessageMgr =
      theCall.getJavaAccObj (theMessageMgrCORJObj)->asMessageMgr ();
a42 1
   NativeCall   theCall (theJNIEnv);
d45 1
a45 2
   theMessageMgr =
      theCall.getJavaAccObj (theMessageMgrCORJObj)->asMessageMgr ();
a59 1
   NativeCall   theCall (theJNIEnv);
d62 1
a62 2
   theMessageMgr =
      theCall.getJavaAccObj (theMessageMgrCORJObj)->asMessageMgr ();
a77 1
   NativeCall   theCall (theJNIEnv);
d81 1
a81 2
   theMessageMgr =
      theCall.getJavaAccObj (theMessageMgrCORJObj)->asMessageMgr ();
d83 1
a83 1
   theCall.copyInto (theAccModeStr, theAccModeJStr);
a97 1
   NativeCall     theCall (theJNIEnv);
d101 1
a101 2
   theMessageMgr =
      theCall.getJavaAccObj (theMessageMgrCORJObj)->asMessageMgr ();
d105 1
a105 1
   return theCall.newJString (theAccModeWSO.getWitVec ());
a118 1
   NativeCall   theCall (theJNIEnv);
d122 1
a122 2
   theMessageMgr =
      theCall.getJavaAccObj (theMessageMgrCORJObj)->asMessageMgr ();
d124 1
a124 1
   theCall.copyInto (theNameStr, theNameJStr);
a138 1
   NativeCall     theCall (theJNIEnv);
d142 1
a142 2
   theMessageMgr =
      theCall.getJavaAccObj (theMessageMgrCORJObj)->asMessageMgr ();
d146 1
a146 1
   return theCall.newJString (theNameWSO.getWitVec ());
a160 1
   NativeCall   theCall (theJNIEnv);
d163 1
a163 2
   theMessageMgr =
      theCall.getJavaAccObj (theMessageMgrCORJObj)->asMessageMgr ();
a179 1
   NativeCall   theCall (theJNIEnv);
d183 1
a183 2
   theMessageMgr =
      theCall.getJavaAccObj (theMessageMgrCORJObj)->asMessageMgr ();
d185 1
a185 1
   theCall.copyInto (theGroupNameStr, theGroupNameJStr);
a201 1
   NativeCall   theCall (theJNIEnv);
d205 1
a205 2
   theMessageMgr =
      theCall.getJavaAccObj (theMessageMgrCORJObj)->asMessageMgr ();
a222 1
   NativeCall    theCall (theJNIEnv);
d226 1
a226 1
   theCoord      = theCall.getJavaAccObj (theCoordCORJObj)->asCoordinator ();
d230 3
a232 1
   theCall.transferTo (theMessageMgrCORJObj, theMessageMgr);
@


1.24
log
@Replaced C++ class CORJOR with ComponentJOR.
@
text
@d13 1
d86 1
a86 1
   const char * theAccModeCStr;
d91 1
a91 1
   theAccModeCStr = theCall.newHeldCString (theAccModeJStr);
d93 1
a93 1
   theMessageMgr->setMesgFileAccessMode (theAccModeCStr);
d131 1
a131 1
   const char * theNameCStr;
d136 1
a136 1
   theNameCStr   = theCall.newHeldCString (theNameJStr);
d138 1
a138 1
   theMessageMgr->setMesgFileName (theNameCStr);
d198 1
a198 1
   const char * theGroupNameCStr;
d203 1
a203 1
   theGroupNameCStr = theCall.newHeldCString (theGroupNameJStr);
d205 2
a206 1
   theMessageMgr->setMesgTimesPrintByGroup (theGroupNameCStr, theCount);
@


1.23
log
@Revised the arguments to eqHeurAlloc.
@
text
@d249 1
a249 1
   theCall.associate (theMessageMgrCORJObj, theMessageMgr);
@


1.22
log
@CPLEX
@
text
@d27 2
a28 1
   theMessageMgr = theCall.getObject (theMessageMgrCORJObj)->asMessageMgr ();
d47 2
a48 1
   theMessageMgr = theCall.getObject (theMessageMgrCORJObj)->asMessageMgr ();
d66 2
a67 1
   theMessageMgr = theCall.getObject (theMessageMgrCORJObj)->asMessageMgr ();
d87 2
a88 1
   theMessageMgr = theCall.getObject (theMessageMgrCORJObj)->asMessageMgr ();
d109 2
a110 1
   theMessageMgr = theCall.getObject (theMessageMgrCORJObj)->asMessageMgr ();
d132 2
a133 1
   theMessageMgr = theCall.getObject (theMessageMgrCORJObj)->asMessageMgr ();
d154 2
a155 1
   theMessageMgr = theCall.getObject (theMessageMgrCORJObj)->asMessageMgr ();
d177 2
a178 1
   theMessageMgr = theCall.getObject (theMessageMgrCORJObj)->asMessageMgr ();
d199 2
a200 1
   theMessageMgr    = theCall.getObject (theMessageMgrCORJObj)->asMessageMgr ();
d222 2
a223 1
   theMessageMgr = theCall.getObject (theMessageMgrCORJObj)->asMessageMgr ();
d245 1
a245 1
   theCoord      = theCall.getObject (theCoordCORJObj)->asCoordinator ();
@


1.21
log
@CPLEX
@
text
@a103 1
   _jstring *     theAccModeJStr;
d109 1
a109 3
   theAccModeJStr = theCall.makeJString (theAccModeWSO.getWitVec ());

   return theAccModeJStr;
a146 1
   _jstring *     theNameJStr;
d152 1
a152 3
   theNameJStr   = theCall.makeJString (theNameWSO.getWitVec ());

   return theNameJStr;
@


1.20
log
@Multi-Obj Mode
@
text
@d86 1
a86 1
   theAccModeCStr = theCall.makeCString (theAccModeJStr);
d132 1
a132 1
   theNameCStr   = theCall.makeCString (theNameJStr);
d199 1
a199 1
   theGroupNameCStr = theCall.makeCString (theGroupNameJStr);
@


1.19
log
@Multi-Obj Mode
@
text
@d12 1
a12 1
#include           <VecWoa.h>
d101 4
a104 4
   NativeCall    theCall (theJNIEnv);
   MessageMgr *  theMessageMgr;
   VecWoa <char> theAccModeWoa;
   _jstring *    theAccModeJStr;
d108 1
a108 1
   theMessageMgr->getMesgFileAccessMode (theAccModeWoa);
d110 1
a110 1
   theAccModeJStr = theCall.makeJString (theAccModeWoa.getCVec ());
d147 4
a150 4
   NativeCall    theCall (theJNIEnv);
   MessageMgr *  theMessageMgr;
   VecWoa <char> theNameWoa;
   _jstring *    theNameJStr;
d154 1
a154 1
   theMessageMgr->getMesgFileName (theNameWoa);
d156 1
a156 1
   theNameJStr   = theCall.makeJString (theNameWoa.getCVec ());
@


1.18
log
@Changed the name each native method that creates a C++ object to
   createCppObject.
@
text
@d12 1
a12 1
#include        <StringWoa.h>
d101 4
a104 4
   NativeCall   theCall (theJNIEnv);
   MessageMgr * theMessageMgr;
   StringWoa    theAccModeWoa;
   _jstring *   theAccModeJStr;
d110 1
a110 1
   theAccModeJStr = theCall.makeJString (theAccModeWoa.getCString ());
d147 4
a150 4
   NativeCall   theCall (theJNIEnv);
   MessageMgr * theMessageMgr;
   StringWoa    theNameWoa;
   _jstring *   theNameJStr;
d156 1
a156 1
   theNameJStr   = theCall.makeJString (theNameWoa.getCString ());
@


1.17
log
@purgeData
@
text
@d230 1
a230 1
NATIVE_METHOD (void, MessageMgrCOR, createMyCppMessageMgr) (
@


1.16
log
@Implemented getPipSeq.
@
text
@d12 1
a12 1
#include           <VecWoa.h>
d110 1
a110 1
   theAccModeJStr = theCall.makeJString (theAccModeWoa.getCVec ());
d156 1
a156 1
   theNameJStr   = theCall.makeJString (theNameWoa.getCVec ());
@


1.15
log
@Message Group by group name.
@
text
@d110 1
a110 1
   theAccModeJStr = theCall.makeJString (theAccModeWoa);
d156 1
a156 1
   theNameJStr   = theCall.makeJString (theNameWoa);
@


1.14
log
@Implemented Java class CppGateway.
@
text
@d169 1
a169 1
      jint       theTimesJInt)
d178 24
a201 1
   theMessageMgr->setMesgTimesPrint (theMsgNo, theTimesJInt);
d217 1
a217 1
   int          theTimesJInt;
d221 1
a221 1
   theMessageMgr->getMesgTimesPrint (theMsgNo, theTimesJInt);
d223 1
a223 1
   return theTimesJInt;
@


1.13
log
@Coordinator
@
text
@a17 22
NATIVE_METHOD (void, MessageMgrCOR, createMyCppMessageMgr) (
      JNIEnv *   theJNIEnv,
      _jobject * theMessageMgrCORJObj,
      _jobject * theCoordCORJObj)
   {
   BEGIN_TRY_BLOCK

   NativeCall    theCall (theJNIEnv);
   Coordinator * theCoord;
   MessageMgr *  theMessageMgr;

   theCoord      = theCall.getObject (theCoordCORJObj)->asCoordinator ();

   theMessageMgr = new MessageMgr (theCoord);

   theCall.transferTo (theMessageMgrCORJObj, theMessageMgr);

   END_TRY_BLOCK_SIMPLE_RETURN (theJNIEnv)
   }

//------------------------------------------------------------------------------

d204 22
@


1.12
log
@Change the names of the ProbMgr classes to Coordinator, etc.
@
text
@d21 1
a21 1
      _jobject * theCoordinatorCORJObj)
d26 1
a26 1
   Coordinator * theCoordinator;
d29 1
a29 1
   theCoordinator = theCall.getObject (theCoordinatorCORJObj)->asCoordinator ();
d31 1
a31 1
   theMessageMgr  = new MessageMgr (theCoordinator);
@


1.11
log
@ProbMgr classes.
@
text
@d21 1
a21 1
      _jobject * theProbMgrCORJObj)
d25 3
a27 3
   NativeCall   theCall (theJNIEnv);
   ProbMgr *    theProbMgr;
   MessageMgr * theMessageMgr;
d29 1
a29 1
   theProbMgr    = theCall.getObject (theProbMgrCORJObj)->asProbMgr ();
d31 1
a31 1
   theMessageMgr = new MessageMgr (theProbMgr);
@


1.10
log
@Initial implementation of class ExceptionHandler.
@
text
@d21 1
a21 1
      _jobject * theProblemCORJObj)
d26 1
a26 1
   Problem *    theProblem;
d29 1
a29 1
   theProblem    = theCall.getObject (theProblemCORJObj)->asProblem ();
d31 1
a31 1
   theMessageMgr = new MessageMgr (theProblem);
@


1.9
log
@Imbedded every native method implementation in a canonical try block.
@
text
@d8 5
a12 5
#include  <NativeMacros.h>
#include <WitjException.h>
#include    <NativeCall.h>
#include    <MessageMgr.h>
#include        <VecWoa.h>
d90 1
a90 1
   END_TRY_BLOCK_RETURNING_VALUE (theJNIEnv, false)
d136 1
a136 1
   END_TRY_BLOCK_RETURNING_VALUE (theJNIEnv, NULL)
d182 1
a182 1
   END_TRY_BLOCK_RETURNING_VALUE (theJNIEnv, NULL)
d224 1
a224 1
   END_TRY_BLOCK_RETURNING_VALUE (theJNIEnv, 0)
@


1.8
log
@Changed to all upper case for the names of macros.
@
text
@d8 5
a12 4
#include <NativeMacros.h>
#include   <NativeCall.h>
#include   <MessageMgr.h>
#include       <VecWoa.h>
d23 2
d34 2
d44 2
d52 2
d63 2
d71 2
d81 2
d89 2
d100 2
d111 2
d121 2
d135 2
d146 2
d157 2
d167 2
d181 2
d193 2
d201 2
d212 2
d223 2
@


1.7
log
@Changed the default value of quite mode from false to true.
Changed MessageMgr method names:
   setQuietMode ==> setQuiet
   getQuietMode ==> isQuiet
@
text
@d17 1
a17 1
nativeMethod (void, MessageMgrCOR, createMyCppMessageMgr) (
d35 1
a35 1
nativeMethod (void, MessageMgrCOR, flushFile) (
d49 1
a49 1
nativeMethod (void, MessageMgrCOR, setQuiet) (
d64 1
a64 1
nativeMethod (jboolean, MessageMgrCOR, isQuiet) (
d78 1
a78 1
nativeMethod (void, MessageMgrCOR, setMesgFileAccessMode) (
d96 1
a96 1
nativeMethod (_jstring *, MessageMgrCOR, getMesgFileAccessMode) (
d116 1
a116 1
nativeMethod (void, MessageMgrCOR, setMesgFileName) (
d134 1
a134 1
nativeMethod (_jstring *, MessageMgrCOR, getMesgFileName) (
d154 1
a154 1
nativeMethod (void, MessageMgrCOR, setMesgTimesPrint) (
d170 1
a170 1
nativeMethod (jint, MessageMgrCOR, getMesgTimesPrint) (
@


1.6
log
@Dismantling class SessionCOR.
@
text
@d49 1
a49 1
nativeMethod (void, MessageMgrCOR, setQuietMode) (
d52 1
a52 1
      jboolean   theQuietMode)
d59 1
a59 1
   theMessageMgr->setQuietMode (theQuietMode);
d64 1
a64 1
nativeMethod (jboolean, MessageMgrCOR, getQuietMode) (
d73 1
a73 1
   return theMessageMgr->getQuietMode ();
@


1.5
log
@Replaced C++ class StringWoa with a typedef for VecWoa <char>.
@
text
@d20 1
a20 1
      _jobject * theSessionCORJObj)
d23 1
a23 1
   Session *    theSession;
d26 1
a26 1
   theSession    = theCall.getObject (theSessionCORJObj)->asSession ();
d28 1
a28 1
   theMessageMgr = new MessageMgr (theSession);
@


1.4
log
@Extraction.
@
text
@d11 1
a11 1
#include    <StringWoa.h>
@


1.3
log
@Changed name of C++ class JniHandler to NativeCall.
@
text
@d49 1
a49 1
nativeMethod (void, MessageMgrCOR, setQuiet) (
d52 1
a52 1
      jboolean   isQuietVal)
d59 1
a59 1
   theMessageMgr->setQuiet (isQuietVal);
d64 1
a64 1
nativeMethod (jboolean, MessageMgrCOR, isQuiet) (
d73 1
a73 1
   return theMessageMgr->isQuiet ();
@


1.2
log
@Moved macro nativeMethod to its own header file.
@
text
@d9 1
a9 1
#include   <JniHandler.h>
d22 1
a22 1
   JniHandler   theJniHand (theJNIEnv);
d26 1
a26 1
   theSession    = theJniHand.getObject (theSessionCORJObj)->asSession ();
d30 1
a30 1
   theJniHand.transferTo (theMessageMgrCORJObj, theMessageMgr);
d39 1
a39 1
   JniHandler   theJniHand (theJNIEnv);
d42 1
a42 1
   theMessageMgr = theJniHand.getObject (theMessageMgrCORJObj)->asMessageMgr ();
d54 1
a54 1
   JniHandler   theJniHand (theJNIEnv);
d57 1
a57 1
   theMessageMgr = theJniHand.getObject (theMessageMgrCORJObj)->asMessageMgr ();
d68 1
a68 1
   JniHandler   theJniHand (theJNIEnv);
d71 1
a71 1
   theMessageMgr = theJniHand.getObject (theMessageMgrCORJObj)->asMessageMgr ();
d83 1
a83 1
   JniHandler   theJniHand (theJNIEnv);
d87 1
a87 1
   theMessageMgr = theJniHand.getObject (theMessageMgrCORJObj)->asMessageMgr ();
d89 1
a89 1
   theAccModeCStr = theJniHand.makeCString (theAccModeJStr);
d100 1
a100 1
   JniHandler   theJniHand (theJNIEnv);
d105 1
a105 1
   theMessageMgr = theJniHand.getObject (theMessageMgrCORJObj)->asMessageMgr ();
d109 1
a109 1
   theAccModeJStr = theJniHand.makeJString (theAccModeWoa);
d121 1
a121 1
   JniHandler   theJniHand (theJNIEnv);
d125 1
a125 1
   theMessageMgr = theJniHand.getObject (theMessageMgrCORJObj)->asMessageMgr ();
d127 1
a127 1
   theNameCStr   = theJniHand.makeCString (theNameJStr);
d138 1
a138 1
   JniHandler   theJniHand (theJNIEnv);
d143 1
a143 1
   theMessageMgr = theJniHand.getObject (theMessageMgrCORJObj)->asMessageMgr ();
d147 1
a147 1
   theNameJStr   = theJniHand.makeJString (theNameWoa);
d160 1
a160 1
   JniHandler   theJniHand (theJNIEnv);
d163 1
a163 1
   theMessageMgr = theJniHand.getObject (theMessageMgrCORJObj)->asMessageMgr ();
d175 1
a175 1
   JniHandler   theJniHand (theJNIEnv);
d179 1
a179 1
   theMessageMgr = theJniHand.getObject (theMessageMgrCORJObj)->asMessageMgr ();
@


1.1
log
@Numerous class name changes.
@
text
@d8 4
a11 3
#include <JniHandler.h>
#include <MessageMgr.h>
#include  <StringWoa.h>
@

