head	1.3;
access;
symbols;
locks; strict;
comment	@ * @;


1.3
date	2011.04.13.19.16.18;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2009.03.27.20.27.58;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2009.03.26.19.22.22;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.3
log
@CTVecSupply
@
text
@//------------------------------------------------------------------------------
// WIT-J C++ Header File CTVecSupply.h.
//
// Contains the declaration of class CTVecSupply.
//------------------------------------------------------------------------------

#ifndef CTVecSupply_h
#define CTVecSupply_h

#include <Includes.h>

#include     <list>

//------------------------------------------------------------------------------
// Class CTVecSupply
//
// "C Time-Vector Supply"
// A source of supply of C time vectors to be used with a given Problem.
//------------------------------------------------------------------------------

namespace WitJ
{
class CTVecSupply
   {
   //---------------------------------------------------------------------------
   // Public member functions.
   //---------------------------------------------------------------------------

   public:

   explicit CTVecSupply (int nPeriodsVal);
      //
      // Constructor.
      // nPeriodsVal is the # periods for the Problem associated with the
      // CTVecSupply being constructed.

   ~CTVecSupply ();
      //
      // Destructor.

   void provideCTVec (int    * &);
   void provideCTVec (double * &);
      //
      // Each of these functions:
      //    Sets its argument to a c-vector of length nPeriods.
      //    Transfers ownership of the c-vector to the caller.

   void reclaimCTVec (int    * &);
   void reclaimCTVec (double * &);
      //
      // Each of these functions:
      //    Requires its argument to be a c-vector of length nPeriods.
      //    Transfers ownership of the c-vector to this CTVecSupply.
      //    Sets its argument to NULL.

   //---------------------------------------------------------------------------
   // Private member functions.
   //---------------------------------------------------------------------------

   private:

   CTVecSupply              (const CTVecSupply &);
   CTVecSupply & operator = (const CTVecSupply &);
      //
      // Not implemented; prevents accidental copying and assignment.

   //---------------------------------------------------------------------------
   // Private member data.
   //---------------------------------------------------------------------------

   const int nPeriods_;
      //
      // The nPeriods value to which all the C time vectors will be allocated.

   std::list <int *>    myIntCTVecs_;
   std::list <double *> myDblCTVecs_;
      //
      // The C time vectors owned by this CTVecSupply.
   };
};
//
// End of namespace WitJ.

#endif
@


1.2
log
@Revised the C++ implementation of the setVectorToScalar methods.
@
text
@d12 2
d41 2
a42 2
   void provideCTVec (int    * & theIntCTVec);
   void provideCTVec (double * & theDblCTVec);
d45 10
a54 22
      // * Is allowed only if this CTVecSupply is currently not in a reserved
      //   state.
      // * Sets the argument to a C time vector of specified type to be used by
      //   the caller.
      // * Puts this CTVecSupply into a reserved state.

   void provideBoundCTVecs (
         double * & theHardLBCTVec,
         double * & theSoftLBCTVec,
         double * & theHardUBCTVec);
      //
      // * Sets the arguments to be the 3 C time vectors for a BoundSet .
      // * Allowed only if this CTVecSupply is currently not in a reserved 
      //   state.
      // * Puts this CTVecSupply into a reserved state.

   void reclaimCTVecs ();
      //
      // Allowed only if this CTVecSupply is currently in a reserved state.
      // Puts this CTVecSupply into an unreserved state.
      // After this function is called, the vectors that had been returned by
      // the provide functions should no longer be accessed by the caller.
d71 1
a71 1
   bool reserved_;
d73 4
a76 9
      // True, iff this CTVecSupply is currently in a reserved state.
      // This is true, iff a provide function has been called and the
      // reclaimCTVecs function has not been called since.

   int    * myIntCTVec_;
   double * myDblCTVec_;
   double * myHardLBCTVec_;
   double * mySoftLBCTVec_;
   double * myHardUBCTVec_;
d78 1
a78 1
      // The C time vectors that belong to this CTVecSupply.
@


1.1
log
@Replaced C++ classes CTVecHolder <...> and CTVecRes with CTVecSupply.
@
text
@d39 2
a40 3
   Boolean * provideBoolCTVec ();
   int     * provideIntCTVec  ();
   double  * provideDblCTVec  ();
a42 1
      // * Returns a C time vector of indicated type to be used by the caller.
d45 2
d87 5
a91 6
   Boolean * myBoolCTVec_;
   int     * myIntCTVec_;
   double  * myDblCTVec_;
   double  * myHardLBCTVec_;
   double  * mySoftLBCTVec_;
   double  * myHardUBCTVec_;
@

