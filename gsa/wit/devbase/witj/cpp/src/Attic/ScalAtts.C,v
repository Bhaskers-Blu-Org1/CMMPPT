head	1.5;
access;
symbols;
locks; strict;
comment	@ * @;


1.5
date	2008.07.22.21.08.59;	author rjw;	state dead;
branches;
next	1.4;

1.4
date	2008.07.22.20.38.22;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2008.07.22.13.54.48;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2008.07.21.20.58.06;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2008.07.15.18.40.59;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Attributes.
@
text
@//------------------------------------------------------------------------------
// WIT-J C++ Source file ScalAtts.C.
//
// Contains the definitions of the following class templates:
//
//    GlobalScalAtt <Value>
//      PartScalAtt <Value>
//    DemandScalAtt <Value>
//       OpnScalAtt <Value>
//    BomEntScalAtt <Value>
//       SubScalAtt <Value>
//    BopEntScalAtt <Value>
//
// Contains the explicit instantiation of each of these class templates.
//------------------------------------------------------------------------------

#include   <ScalAtts.h>
#include <GlobalComp.h>
#include       <Part.h>
#include     <Demand.h>
#include  <Operation.h>
#include   <BomEntry.h>
#include <Substitute.h>
#include   <BopEntry.h>

//------------------------------------------------------------------------------
// Definition of class template GlobalScalAtt.
//------------------------------------------------------------------------------

template <typename Value>
      WitJ::GlobalScalAtt <Value>::GlobalScalAtt (
            AttBldr *    theAttBldr,
            const char * theName,
            SetFuncPtr   theSetFuncPtr,
            GetFuncPtr   theGetFuncPtr):

         Att           (theAttBldr, theName, "GlobalComp"),
         mySetFuncPtr_ (theSetFuncPtr),
         myGetFuncPtr_ (theGetFuncPtr)
   {
   witjAssert (theGetFuncPtr != NULL);
   }

//------------------------------------------------------------------------------

template <typename Value>
      WitJ::GlobalScalAtt <Value>::~GlobalScalAtt ()
   {
   }

//------------------------------------------------------------------------------

template <typename Value>
      void WitJ::GlobalScalAtt <Value>::setValue (
         Component * theComp,
         Value       theValue)
   {
   witjAssert (mySetFuncPtr_ != NULL);

   mySetFuncPtr_ (
      getWitRun (),
      theValue);
   }

//------------------------------------------------------------------------------

template <typename Value>
      void WitJ::GlobalScalAtt <Value>::getValue (
         Component * theComp,
         Value &     theValue)
   {
   myGetFuncPtr_ (
      getWitRun (),
    & theValue);
   }

//------------------------------------------------------------------------------

template <typename Value>
      bool WitJ::GlobalScalAtt <Value>::isAnInputAtt ()
   {
   return (mySetFuncPtr_ != NULL);
   }

//------------------------------------------------------------------------------
// Definition of class template PartScalAtt.
//------------------------------------------------------------------------------

template <typename Value>
      WitJ::PartScalAtt <Value>::PartScalAtt (
            AttBldr *    theAttBldr,
            const char * theName,
            SetFuncPtr   theSetFuncPtr,
            GetFuncPtr   theGetFuncPtr):

         Att           (theAttBldr, theName, "Part"),
         mySetFuncPtr_ (theSetFuncPtr),
         myGetFuncPtr_ (theGetFuncPtr)
   {
   witjAssert (theGetFuncPtr != NULL);
   }

//------------------------------------------------------------------------------

template <typename Value>
      WitJ::PartScalAtt <Value>::~PartScalAtt ()
   {
   }

//------------------------------------------------------------------------------

template <typename Value>
      void WitJ::PartScalAtt <Value>::setValue (
         Component * theComp,
         Value       theValue)
   {
   Part * thePart;

   thePart = theComp->thisPart ();

   witjAssert (mySetFuncPtr_ != NULL);

   mySetFuncPtr_ (
      getWitRun             (),
      thePart->getPartCName (),
      theValue);
   }

//------------------------------------------------------------------------------

template <typename Value>
      void WitJ::PartScalAtt <Value>::getValue (
         Component * theComp,
         Value &     theValue)
   {
   Part * thePart;

   thePart = theComp->thisPart ();

   myGetFuncPtr_ (
      getWitRun             (),
      thePart->getPartCName (),
    & theValue);
   }

//------------------------------------------------------------------------------

template <typename Value>
      bool WitJ::PartScalAtt <Value>::isAnInputAtt ()
   {
   return (mySetFuncPtr_ != NULL);
   }

//------------------------------------------------------------------------------
// Definition of class template DemandScalAtt.
//------------------------------------------------------------------------------

template <typename Value>
      WitJ::DemandScalAtt <Value>::DemandScalAtt (
            AttBldr *    theAttBldr,
            const char * theName,
            SetFuncPtr   theSetFuncPtr,
            GetFuncPtr   theGetFuncPtr):

         Att           (theAttBldr, theName, "Demand"),
         mySetFuncPtr_ (theSetFuncPtr),
         myGetFuncPtr_ (theGetFuncPtr)
   {
   witjAssert (theGetFuncPtr != NULL);
   }

//------------------------------------------------------------------------------

template <typename Value>
      WitJ::DemandScalAtt <Value>::~DemandScalAtt ()
   {
   }

//------------------------------------------------------------------------------

template <typename Value>
      void WitJ::DemandScalAtt <Value>::setValue (
         Component * theComp,
         Value       theValue)
   {
   Demand * theDemand;

   theDemand = theComp->thisDemand ();

   witjAssert (mySetFuncPtr_ != NULL);

   mySetFuncPtr_ (
      getWitRun                 (),
      theDemand->getPartCName   (),
      theDemand->getDemandCName (),
      theValue);
   }

//------------------------------------------------------------------------------

template <typename Value>
      void WitJ::DemandScalAtt <Value>::getValue (
         Component * theComp,
         Value &     theValue)
   {
   Demand * theDemand;

   theDemand = theComp->thisDemand ();

   myGetFuncPtr_ (
      getWitRun                 (),
      theDemand->getPartCName   (),
      theDemand->getDemandCName (),
    & theValue);
   }

//------------------------------------------------------------------------------

template <typename Value>
      bool WitJ::DemandScalAtt <Value>::isAnInputAtt ()
   {
   return (mySetFuncPtr_ != NULL);
   }

//------------------------------------------------------------------------------
// Definition of class template OpnScalAtt.
//------------------------------------------------------------------------------

template <typename Value>
      WitJ::OpnScalAtt <Value>::OpnScalAtt (
            AttBldr *    theAttBldr,
            const char * theName,
            SetFuncPtr   theSetFuncPtr,
            GetFuncPtr   theGetFuncPtr):

         Att           (theAttBldr, theName, "Operation"),
         mySetFuncPtr_ (theSetFuncPtr),
         myGetFuncPtr_ (theGetFuncPtr)
   {
   witjAssert (theGetFuncPtr != NULL);
   }

//------------------------------------------------------------------------------

template <typename Value>
      WitJ::OpnScalAtt <Value>::~OpnScalAtt ()
   {
   }

//------------------------------------------------------------------------------

template <typename Value>
      void WitJ::OpnScalAtt <Value>::setValue (
         Component * theComp,
         Value       theValue)
   {
   Operation * theOpn;

   theOpn = theComp->thisOperation ();

   witjAssert (mySetFuncPtr_ != NULL);

   mySetFuncPtr_ (
      getWitRun                 (),
      theOpn->getOperationCName (),
      theValue);
   }

//------------------------------------------------------------------------------

template <typename Value>
      void WitJ::OpnScalAtt <Value>::getValue (
         Component * theComp,
         Value &     theValue)
   {
   Operation * theOpn;

   theOpn = theComp->thisOperation ();

   myGetFuncPtr_ (
      getWitRun                 (),
      theOpn->getOperationCName (),
    & theValue);
   }

//------------------------------------------------------------------------------

template <typename Value>
      bool WitJ::OpnScalAtt <Value>::isAnInputAtt ()
   {
   return (mySetFuncPtr_ != NULL);
   }

//------------------------------------------------------------------------------
// Definition of class template BomEntScalAtt.
//------------------------------------------------------------------------------

template <typename Value>
      WitJ::BomEntScalAtt <Value>::BomEntScalAtt (
            AttBldr *    theAttBldr,
            const char * theName,
            SetFuncPtr   theSetFuncPtr,
            GetFuncPtr   theGetFuncPtr):

         Att           (theAttBldr, theName, "BomEntry"),
         mySetFuncPtr_ (theSetFuncPtr),
         myGetFuncPtr_ (theGetFuncPtr)
   {
   witjAssert (theGetFuncPtr != NULL);
   }

//------------------------------------------------------------------------------

template <typename Value>
      WitJ::BomEntScalAtt <Value>::~BomEntScalAtt ()
   {
   }

//------------------------------------------------------------------------------

template <typename Value>
      void WitJ::BomEntScalAtt <Value>::setValue (
         Component * theComp,
         Value       theValue)
   {
   BomEntry * theBomEnt;

   theBomEnt = theComp->thisBomEntry ();

   witjAssert (mySetFuncPtr_ != NULL);

   mySetFuncPtr_ (
      getWitRun                 (),
      theBomEnt->getOperationCName (),
      theBomEnt->getBomIndex       (),
      theValue);
   }

//------------------------------------------------------------------------------

template <typename Value>
      void WitJ::BomEntScalAtt <Value>::getValue (
         Component * theComp,
         Value &     theValue)
   {
   BomEntry * theBomEnt;

   theBomEnt = theComp->thisBomEntry ();

   myGetFuncPtr_ (
      getWitRun                 (),
      theBomEnt->getOperationCName (),
      theBomEnt->getBomIndex       (),
    & theValue);
   }

//------------------------------------------------------------------------------

template <typename Value>
      bool WitJ::BomEntScalAtt <Value>::isAnInputAtt ()
   {
   return (mySetFuncPtr_ != NULL);
   }

//------------------------------------------------------------------------------
// Definition of class template SubScalAtt.
//------------------------------------------------------------------------------

template <typename Value>
      WitJ::SubScalAtt <Value>::SubScalAtt (
            AttBldr *    theAttBldr,
            const char * theName,
            SetFuncPtr   theSetFuncPtr,
            GetFuncPtr   theGetFuncPtr):

         Att           (theAttBldr, theName, "Substitute"),
         mySetFuncPtr_ (theSetFuncPtr),
         myGetFuncPtr_ (theGetFuncPtr)
   {
   witjAssert (theGetFuncPtr != NULL);
   }

//------------------------------------------------------------------------------

template <typename Value>
      WitJ::SubScalAtt <Value>::~SubScalAtt ()
   {
   }

//------------------------------------------------------------------------------

template <typename Value>
      void WitJ::SubScalAtt <Value>::setValue (
         Component * theComp,
         Value       theValue)
   {
   Substitute * theSub;

   theSub = theComp->thisSubstitute ();

   witjAssert (mySetFuncPtr_ != NULL);

   mySetFuncPtr_ (
      getWitRun                 (),
      theSub->getOperationCName (),
      theSub->getBomIndex       (),
      theSub->getSubIndex       (),
      theValue);
   }

//------------------------------------------------------------------------------

template <typename Value>
      void WitJ::SubScalAtt <Value>::getValue (
         Component * theComp,
         Value &     theValue)
   {
   Substitute * theSub;

   theSub = theComp->thisSubstitute ();

   myGetFuncPtr_ (
      getWitRun                 (),
      theSub->getOperationCName (),
      theSub->getBomIndex       (),
      theSub->getSubIndex       (),
    & theValue);
   }

//------------------------------------------------------------------------------

template <typename Value>
      bool WitJ::SubScalAtt <Value>::isAnInputAtt ()
   {
   return (mySetFuncPtr_ != NULL);
   }

//------------------------------------------------------------------------------
// Definition of class template BopEntScalAtt.
//------------------------------------------------------------------------------

template <typename Value>
      WitJ::BopEntScalAtt <Value>::BopEntScalAtt (
            AttBldr *    theAttBldr,
            const char * theName,
            SetFuncPtr   theSetFuncPtr,
            GetFuncPtr   theGetFuncPtr):

         Att           (theAttBldr, theName, "BopEntry"),
         mySetFuncPtr_ (theSetFuncPtr),
         myGetFuncPtr_ (theGetFuncPtr)
   {
   witjAssert (theGetFuncPtr != NULL);
   }

//------------------------------------------------------------------------------

template <typename Value>
      WitJ::BopEntScalAtt <Value>::~BopEntScalAtt ()
   {
   }

//------------------------------------------------------------------------------

template <typename Value>
      void WitJ::BopEntScalAtt <Value>::setValue (
         Component * theComp,
         Value       theValue)
   {
   BopEntry * theBopEnt;

   theBopEnt = theComp->thisBopEntry ();

   witjAssert (mySetFuncPtr_ != NULL);

   mySetFuncPtr_ (
      getWitRun                 (),
      theBopEnt->getOperationCName (),
      theBopEnt->getBopIndex       (),
      theValue);
   }

//------------------------------------------------------------------------------

template <typename Value>
      void WitJ::BopEntScalAtt <Value>::getValue (
         Component * theComp,
         Value &     theValue)
   {
   BopEntry * theBopEnt;

   theBopEnt = theComp->thisBopEntry ();

   myGetFuncPtr_ (
      getWitRun                 (),
      theBopEnt->getOperationCName (),
      theBopEnt->getBopIndex       (),
    & theValue);
   }

//------------------------------------------------------------------------------

template <typename Value>
      bool WitJ::BopEntScalAtt <Value>::isAnInputAtt ()
   {
   return (mySetFuncPtr_ != NULL);
   }

//------------------------------------------------------------------------------
// Explicit instantiation of the class templates defined in this file.
//------------------------------------------------------------------------------

template class WitJ::GlobalScalAtt <int>;
template class WitJ::  PartScalAtt <int>;
template class WitJ::DemandScalAtt <int>;
template class WitJ::   OpnScalAtt <int>;
template class WitJ::BomEntScalAtt <int>;
template class WitJ::   SubScalAtt <int>;
template class WitJ::BopEntScalAtt <int>;

template class WitJ::GlobalScalAtt <double>;
template class WitJ::  PartScalAtt <double>;
template class WitJ::DemandScalAtt <double>;
template class WitJ::   OpnScalAtt <double>;
template class WitJ::BomEntScalAtt <double>;
template class WitJ::   SubScalAtt <double>;
template class WitJ::BopEntScalAtt <double>;
@


1.4
log
@Attributes.
@
text
@@


1.3
log
@Attributes.
@
text
@d32 4
a35 4
            AttBldr *     theAttBldr,
            const char *  theName,
            WitSetFuncPtr theSetFuncPtr,
            WitGetFuncPtr theGetFuncPtr):
d91 4
a94 4
            AttBldr *     theAttBldr,
            const char *  theName,
            WitSetFuncPtr theSetFuncPtr,
            WitGetFuncPtr theGetFuncPtr):
d160 4
a163 4
            AttBldr *     theAttBldr,
            const char *  theName,
            WitSetFuncPtr theSetFuncPtr,
            WitGetFuncPtr theGetFuncPtr):
d231 4
a234 4
            AttBldr *     theAttBldr,
            const char *  theName,
            WitSetFuncPtr theSetFuncPtr,
            WitGetFuncPtr theGetFuncPtr):
d300 4
a303 4
            AttBldr *     theAttBldr,
            const char *  theName,
            WitSetFuncPtr theSetFuncPtr,
            WitGetFuncPtr theGetFuncPtr):
d371 4
a374 4
            AttBldr *     theAttBldr,
            const char *  theName,
            WitSetFuncPtr theSetFuncPtr,
            WitGetFuncPtr theGetFuncPtr):
d444 4
a447 4
            AttBldr *     theAttBldr,
            const char *  theName,
            WitSetFuncPtr theSetFuncPtr,
            WitGetFuncPtr theGetFuncPtr):
@


1.2
log
@Attributes.
@
text
@d4 1
a4 2
// Contains the definitions of the following class templates, with explicit
// instantiation:
d13 2
a508 2
//==============================================================================

d510 1
a510 1
// Explicit instantiation of class template SubScalAtt <Value>.
d513 7
a519 1
template class WitJ::SubScalAtt <int>;
d521 7
a527 5
//------------------------------------------------------------------------------
// Explicit instantiation of class template BopEntScalAtt <Value>.
//------------------------------------------------------------------------------

template class WitJ::BopEntScalAtt <int>;
@


1.1
log
@Attributes.
@
text
@d7 5
d17 5
d26 339
d508 2
@

