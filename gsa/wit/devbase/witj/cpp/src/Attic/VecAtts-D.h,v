head	1.15;
access;
symbols;
locks; strict;
comment	@ * @;


1.15
date	2008.07.15.18.40.59;	author rjw;	state dead;
branches;
next	1.14;

1.14
date	2008.07.07.22.59.31;	author rjw;	state Exp;
branches;
next	1.13;

1.13
date	2008.07.01.17.49.16;	author rjw;	state Exp;
branches;
next	1.12;

1.12
date	2008.07.01.16.09.22;	author rjw;	state Exp;
branches;
next	1.11;

1.11
date	2008.06.27.21.43.23;	author rjw;	state Exp;
branches;
next	1.10;

1.10
date	2008.06.27.16.34.06;	author rjw;	state Exp;
branches;
next	1.9;

1.9
date	2008.06.26.19.18.07;	author rjw;	state Exp;
branches;
next	1.8;

1.8
date	2008.06.19.22.16.54;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2008.06.19.20.57.28;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2008.06.19.20.15.06;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2008.06.18.21.28.18;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2008.06.11.19.27.16;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2008.06.10.23.21.38;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2008.06.10.22.32.36;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2008.05.30.21.07.23;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.15
log
@Attributes.
@
text
@//------------------------------------------------------------------------------
// WIT-J C++ Header File VecAtts-D.h.
//
// Contains the definition of class template   PartVecAtt.
// Contains the definition of class template DemandVecAtt.
//------------------------------------------------------------------------------

#ifndef VecAtts_D_h
#define VecAtts_D_h

#include <VecAtts.h>
#include    <Part.h>
#include  <Demand.h>
#include  <VecWoa.h>

//------------------------------------------------------------------------------
// Definition of class template PartVecAtt.
//------------------------------------------------------------------------------

template <typename Elem>
      WitJ::PartVecAtt <Elem>::PartVecAtt (
            AttBldr *     theAttBldr,
            const char *  theName,
            WitSetFuncPtr theSetFuncPtr,
            WitGetFuncPtr theGetFuncPtr):

         Att           (theAttBldr, theName, "Part"),
         mySetFuncPtr_ (theSetFuncPtr),
         myGetFuncPtr_ (theGetFuncPtr)
   {
   witjAssert (theGetFuncPtr != NULL);
   }

//------------------------------------------------------------------------------

template <typename Elem>
      WitJ::PartVecAtt <Elem>::~PartVecAtt ()
   {
   }

//------------------------------------------------------------------------------

template <typename Elem>
      void WitJ::PartVecAtt <Elem>::setValue (
         Component *  theComp,
         const Elem * theCVec)
   {
   Part * thePart;

   thePart = theComp->thisPart ();

   witjAssert (mySetFuncPtr_ != NULL);

   mySetFuncPtr_ (
      getWitRun (),
      thePart->getPartCName (),
      theCVec);
   }

//------------------------------------------------------------------------------

template <typename Elem>
      void WitJ::PartVecAtt <Elem>::getValue (
         Component *     theComp,
         VecWoa <Elem> & theDblVecWoa)
   {
   Part * thePart;

   thePart = theComp->thisPart ();

   myGetFuncPtr_ (
      getWitRun (),
      thePart->getPartCName (),
      theDblVecWoa.getCVecAddr ());
   }

//------------------------------------------------------------------------------

template <typename Elem>
      bool WitJ::PartVecAtt <Elem>::isAnInputAtt ()
   {
   return (mySetFuncPtr_ != NULL);
   }

//------------------------------------------------------------------------------
// Definition of class template DemandVecAtt.
//------------------------------------------------------------------------------

template <typename Elem>
      WitJ::DemandVecAtt <Elem>::DemandVecAtt (
            AttBldr *     theAttBldr,
            const char *  theName,
            WitSetFuncPtr theSetFuncPtr,
            WitGetFuncPtr theGetFuncPtr):

         Att           (theAttBldr, theName, "Demand"),
         mySetFuncPtr_ (theSetFuncPtr),
         myGetFuncPtr_ (theGetFuncPtr)
   {
   witjAssert (theGetFuncPtr != NULL);
   }

//------------------------------------------------------------------------------

template <typename Elem>
      WitJ::DemandVecAtt <Elem>::~DemandVecAtt ()
   {
   }

//------------------------------------------------------------------------------

template <typename Elem>
      void WitJ::DemandVecAtt <Elem>::setValue (
         Component *  theComp,
         const Elem * theCVec)
   {
   Demand * theDemand;

   theDemand = theComp->thisDemand ();

   witjAssert (mySetFuncPtr_ != NULL);

   mySetFuncPtr_ (
      getWitRun (),
      theDemand->getPartCName (),
      theDemand->getDemandCName (),
      theCVec);
   }

//------------------------------------------------------------------------------

template <typename Elem>
      void WitJ::DemandVecAtt <Elem>::getValue (
         Component *     theComp,
         VecWoa <Elem> & theDblVecWoa)
   {
   Demand * theDemand;

   theDemand = theComp->thisDemand ();

   myGetFuncPtr_ (
      getWitRun (),
      theDemand->getPartCName (),
      theDemand->getDemandCName (),
      theDblVecWoa.getCVecAddr ());
   }

//------------------------------------------------------------------------------

template <typename Elem>
      bool WitJ::DemandVecAtt <Elem>::isAnInputAtt ()
   {
   return (mySetFuncPtr_ != NULL);
   }

#endif
@


1.14
log
@Attributes.
@
text
@@


1.13
log
@Accessor names.
@
text
@d27 1
a27 1
         Att           (theAttBldr, theName),
a85 8

template <typename Elem>
      const char * WitJ::PartVecAtt <Elem>::getCompClassName ()
   {
   return "Part";
   }

//------------------------------------------------------------------------------
d96 1
a96 1
         Att           (theAttBldr, theName),
a155 8
//------------------------------------------------------------------------------

template <typename Elem>
      const char * WitJ::DemandVecAtt <Elem>::getCompClassName ()
   {
   return "Demand";
   }

@


1.12
log
@Changed the names of access functions beginning with "my"
to begin with "get".
@
text
@d56 1
a56 1
      thePart->partCName (),
d73 1
a73 1
      thePart->partCName (),
d134 1
a134 1
      theDemand->demandCName (),
d152 1
a152 1
      theDemand->demandCName (),
@


1.11
log
@Self-Test.
@
text
@d55 1
a55 1
      myWitRun (),
d72 1
a72 1
      myWitRun (),
d74 1
a74 1
      theDblVecWoa.myCVecAddr ());
d88 1
a88 1
      const char * WitJ::PartVecAtt <Elem>::myCompClassName ()
d132 2
a133 2
      myWitRun (),
      theDemand->myPartCName (),
d150 2
a151 2
      myWitRun (),
      theDemand->myPartCName (),
d153 1
a153 1
      theDblVecWoa.myCVecAddr ());
d167 1
a167 1
      const char * WitJ::DemandVecAtt <Elem>::myCompClassName ()
@


1.10
log
@Initial implementation of self-test.
@
text
@d86 8
d164 8
@


1.9
log
@Attributes.
@
text
@d78 8
d148 8
@


1.8
log
@Implemented of class DblVecOutAttAcc.
@
text
@d31 1
a31 1
   assert (theGetFuncPtr != NULL);
d52 1
a52 1
   assert (mySetFuncPtr_ != NULL);
d92 1
a92 1
   assert (theGetFuncPtr != NULL);
d113 1
a113 1
   assert (mySetFuncPtr_ != NULL);
@


1.7
log
@Attributes.
@
text
@d31 1
d52 2
d92 1
d113 2
@


1.6
log
@Implemented the demandVol attribute.
@
text
@d11 4
a14 6
#include  <VecAtts.h>
#include     <Part.h>
#include   <Demand.h>
#include   <VecWoa.h>

#include <iostream>
a37 4
   std::cout
      << std::endl
      << "Destroying a PartVecAtt."
      << std::endl;
a95 4
   std::cout
      << std::endl
      << "Destroying a DemandVecAtt."
      << std::endl;
@


1.5
log
@Attributes.
@
text
@d4 2
a5 1
// Contains the definition of class template PartVecAtt.
d13 1
d80 64
@


1.4
log
@Attributes.
@
text
@d7 2
a8 2
#ifndef VecAttsDH
#define VecAttsDH
@


1.3
log
@Strings.
@
text
@d22 1
a22 1
            ProbCoord *   theProbCoord,
d27 1
a27 1
         Att           (theProbCoord, theName),
@


1.2
log
@Replaced class WitJ::String with class std::string.
@
text
@d57 1
a57 1
      thePart->partName ().c_str (),
d74 1
a74 1
      thePart->partName ().c_str (),
@


1.1
log
@File name change.
@
text
@d57 1
a57 1
      thePart->partName (),
d74 1
a74 1
      thePart->partName (),
@

