head	1.4;
access;
symbols;
locks; strict;
comment	@ * @;


1.4
date	2009.02.03.16.32.26;	author rjw;	state dead;
branches;
next	1.3;

1.3
date	2009.01.31.00.56.25;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2009.01.29.22.06.36;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2009.01.23.23.57.54;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Removed the Alternative classes.
@
text
@//------------------------------------------------------------------------------
// WIT-J C++ Source File AlternativeCOR.C.
//------------------------------------------------------------------------------

#include     <NativeMacros.h>
#include <ExceptionHandler.h>
#include       <NativeCall.h>
#include      <Alternative.h>

using namespace WitJ;

//------------------------------------------------------------------------------

NATIVE_METHOD (void, AlternativeCOR, acquireMyCppAlternative) (
      JNIEnv *   theJNIEnv,
      _jobject * theAltCORJObj,
      _jstring * theAltNameJStr)
   { 
   BEGIN_TRY_BLOCK

   NativeCall    theCall (theJNIEnv);
   const char *  theAltNameCStr;
   Alternative * theAlt;

   theAltNameCStr = theCall.makeCString (theAltNameJStr);

   theAlt         = Alternative::findInstanceFor (theAltNameCStr);

   theCall.associate (theAltCORJObj, theAlt);

   END_TRY_BLOCK_SIMPLE_RETURN (theJNIEnv)
   }
@


1.3
log
@Part.Category as Alternative
@
text
@@


1.2
log
@Implemented Java class CppGateway.
@
text
@d14 1
a14 1
NATIVE_METHOD (void, AlternativeCOR, createMyCppAlternative) (
a16 1
      _jobject * theCoordCORJObj,
a21 1
   Coordinator * theCoord;
a24 2
   theCoord       = theCall.getObject (theCoordCORJObj)->asCoordinator ();

d27 1
a27 1
   theAlt         = new Alternative (theCoord, theAltNameCStr);
@


1.1
log
@Alternative classes.
@
text
@d33 1
a33 1
   theCall.transferTo (theAltCORJObj, theAlt);
@

