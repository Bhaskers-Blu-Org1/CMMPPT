head	1.6;
access;
symbols;
locks; strict;
comment	@ * @;


1.6
date	2008.09.19.16.29.50;	author rjw;	state dead;
branches;
next	1.5;

1.5
date	2008.09.19.15.52.56;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2008.09.16.19.26.23;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2008.09.16.18.57.29;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2008.09.15.21.24.56;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2008.09.15.16.20.39;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Class name change.
@
text
@//------------------------------------------------------------------------------
// WIT-J C++ Source file MsgMgrCI.C.
//
// Contains the C++ implementations of the native methods of Java class
// witj.MsgMgrCI.
//------------------------------------------------------------------------------

#include <JniHandler.h>
#include     <MsgMgr.h>
#include  <StringWoa.h>

using namespace WitJ;

//------------------------------------------------------------------------------

nativeMethod (void, MsgMgrCI, createMyCppMsgMgr) (
      JNIEnv *   theJNIEnv,
      _jobject * theMsgMgrCIJObj,
      _jobject * theSessionCIJObj)
   {
   JniHandler theJniHand (theJNIEnv);
   Session *  theSession;
   MsgMgr *   theMsgMgr;

   theSession = theJniHand.getObject (theSessionCIJObj)->asSession ();

   theMsgMgr  = new MsgMgr (theSession);

   theJniHand.transferTo (theMsgMgrCIJObj, theMsgMgr);
   }

//------------------------------------------------------------------------------

nativeMethod (void, MsgMgrCI, flushFile) (
      JNIEnv *   theJNIEnv,
      _jobject * theMsgMgrCIJObj)
   {
   JniHandler theJniHand (theJNIEnv);
   MsgMgr *   theMsgMgr;

   theMsgMgr = theJniHand.getObject (theMsgMgrCIJObj)->asMsgMgr ();

   theMsgMgr->flushFile ();
   }

//------------------------------------------------------------------------------

nativeMethod (void, MsgMgrCI, setQuiet) (
      JNIEnv *   theJNIEnv,
      _jobject * theMsgMgrCIJObj,
      jboolean   isQuietVal)
   {
   JniHandler theJniHand (theJNIEnv);
   MsgMgr *   theMsgMgr;

   theMsgMgr = theJniHand.getObject (theMsgMgrCIJObj)->asMsgMgr ();

   theMsgMgr->setQuiet (isQuietVal);
   }

//------------------------------------------------------------------------------

nativeMethod (jboolean, MsgMgrCI, isQuiet) (
      JNIEnv *   theJNIEnv,
      _jobject * theMsgMgrCIJObj)
   {
   JniHandler theJniHand (theJNIEnv);
   MsgMgr *   theMsgMgr;

   theMsgMgr = theJniHand.getObject (theMsgMgrCIJObj)->asMsgMgr ();

   return theMsgMgr->isQuiet ();
   }

//------------------------------------------------------------------------------

nativeMethod (void, MsgMgrCI, setMesgFileAccessMode) (
      JNIEnv *   theJNIEnv,
      _jobject * theMsgMgrCIJObj,
      _jstring * theAccModeJStr)
   {
   JniHandler   theJniHand (theJNIEnv);
   MsgMgr *     theMsgMgr;
   const char * theAccModeCStr;

   theMsgMgr      = theJniHand.getObject (theMsgMgrCIJObj)->asMsgMgr ();

   theAccModeCStr = theJniHand.makeCString (theAccModeJStr);

   theMsgMgr->setMesgFileAccessMode (theAccModeCStr);
   }

//------------------------------------------------------------------------------

nativeMethod (_jstring *, MsgMgrCI, getMesgFileAccessMode) (
      JNIEnv *   theJNIEnv,
      _jobject * theMsgMgrCIJObj)
   {
   JniHandler theJniHand (theJNIEnv);
   MsgMgr *   theMsgMgr;
   StringWoa  theAccModeWoa;
   _jstring * theAccModeJStr;

   theMsgMgr      = theJniHand.getObject (theMsgMgrCIJObj)->asMsgMgr ();

   theMsgMgr->getMesgFileAccessMode (theAccModeWoa);

   theAccModeJStr = theJniHand.makeJString (theAccModeWoa);

   return theAccModeJStr;
   }

//------------------------------------------------------------------------------

nativeMethod (void, MsgMgrCI, setMesgFileName) (
      JNIEnv *   theJNIEnv,
      _jobject * theMsgMgrCIJObj,
      _jstring * theNameJStr)
   {
   JniHandler   theJniHand (theJNIEnv);
   MsgMgr *     theMsgMgr;
   const char * theNameCStr;

   theMsgMgr   = theJniHand.getObject (theMsgMgrCIJObj)->asMsgMgr ();

   theNameCStr = theJniHand.makeCString (theNameJStr);

   theMsgMgr->setMesgFileName (theNameCStr);
   }

//------------------------------------------------------------------------------

nativeMethod (_jstring *, MsgMgrCI, getMesgFileName) (
      JNIEnv *   theJNIEnv,
      _jobject * theMsgMgrCIJObj)
   {
   JniHandler theJniHand (theJNIEnv);
   MsgMgr *   theMsgMgr;
   StringWoa  theNameWoa;
   _jstring * theNameJStr;

   theMsgMgr   = theJniHand.getObject (theMsgMgrCIJObj)->asMsgMgr ();

   theMsgMgr->getMesgFileName (theNameWoa);

   theNameJStr = theJniHand.makeJString (theNameWoa);

   return theNameJStr;
   }

//------------------------------------------------------------------------------

nativeMethod (void, MsgMgrCI, setMesgTimesPrint) (
      JNIEnv *   theJNIEnv,
      _jobject * theMsgMgrCIJObj,
      jint       theMsgNo,
      jint       theTimesJInt)
   {
   JniHandler theJniHand (theJNIEnv);
   MsgMgr *   theMsgMgr;

   theMsgMgr = theJniHand.getObject (theMsgMgrCIJObj)->asMsgMgr ();

   theMsgMgr->setMesgTimesPrint (theMsgNo, theTimesJInt);
   }

//------------------------------------------------------------------------------

nativeMethod (jint, MsgMgrCI, getMesgTimesPrint) (
      JNIEnv *   theJNIEnv,
      _jobject * theMsgMgrCIJObj,
      jint       theMsgNo)
   {
   JniHandler theJniHand (theJNIEnv);
   MsgMgr *   theMsgMgr;
   int        theTimesJInt;

   theMsgMgr = theJniHand.getObject (theMsgMgrCIJObj)->asMsgMgr ();

   theMsgMgr->getMesgTimesPrint (theMsgNo, theTimesJInt);

   return theTimesJInt;
   }
@


1.5
log
@Minor revision.
@
text
@@


1.4
log
@Minor revision.
@
text
@d48 1
a48 1
nativeMethod (void, MsgMgrCI, setQuietMode) (
d51 1
a51 1
      jboolean   quietMode)
d58 1
a58 1
   theMsgMgr->setQuietMode (quietMode);
d63 1
a63 1
nativeMethod (jboolean, MsgMgrCI, getQuietMode) (
d72 1
a72 1
   return theMsgMgr->getQuietMode ();
@


1.3
log
@Implemented the mesgTimesPrint attribute.
@
text
@d80 1
a80 1
      _jstring * mesgFileAccessModeJStr)
d84 1
a84 1
   const char * mesgFileAccessModeCStr;
d86 1
a86 1
   theMsgMgr              = theJniHand.getObject (theMsgMgrCIJObj)->asMsgMgr ();
d88 1
a88 1
   mesgFileAccessModeCStr = theJniHand.makeCString (mesgFileAccessModeJStr);
d90 1
a90 1
   theMsgMgr->setMesgFileAccessMode (mesgFileAccessModeCStr);
d101 2
a102 2
   StringWoa  mesgFileAccessModeWoa;
   _jstring * mesgFileAccessModeJStr;
d104 1
a104 1
   theMsgMgr              = theJniHand.getObject (theMsgMgrCIJObj)->asMsgMgr ();
d106 1
a106 1
   theMsgMgr->getMesgFileAccessMode (mesgFileAccessModeWoa);
d108 1
a108 1
   mesgFileAccessModeJStr = theJniHand.makeJString (mesgFileAccessModeWoa);
d110 1
a110 1
   return mesgFileAccessModeJStr;
d118 1
a118 1
      _jstring * mesgFileNameJStr)
d122 1
a122 1
   const char * mesgFileNameCStr;
d124 1
a124 1
   theMsgMgr        = theJniHand.getObject (theMsgMgrCIJObj)->asMsgMgr ();
d126 1
a126 1
   mesgFileNameCStr = theJniHand.makeCString (mesgFileNameJStr);
d128 1
a128 1
   theMsgMgr->setMesgFileName (mesgFileNameCStr);
d139 2
a140 2
   StringWoa  mesgFileNameWoa;
   _jstring * mesgFileNameJStr;
d142 1
a142 1
   theMsgMgr        = theJniHand.getObject (theMsgMgrCIJObj)->asMsgMgr ();
d144 1
a144 1
   theMsgMgr->getMesgFileName (mesgFileNameWoa);
d146 1
a146 1
   mesgFileNameJStr = theJniHand.makeJString (mesgFileNameWoa);
d148 1
a148 1
   return mesgFileNameJStr;
d157 1
a157 1
      jint       mesgTimesPrintJInt)
d164 1
a164 1
   theMsgMgr->setMesgTimesPrint (theMsgNo, mesgTimesPrintJInt);
d176 1
a176 1
   int        mesgTimesPrintJInt;
d180 1
a180 1
   theMsgMgr->getMesgTimesPrint (theMsgNo, mesgTimesPrintJInt);
d182 1
a182 1
   return mesgTimesPrintJInt;
@


1.2
log
@Added the fileName msg attribute.
@
text
@d77 1
a77 1
nativeMethod (void, MsgMgrCI, setFileAccessMode) (
d80 1
a80 1
      _jstring * fileAccessModeJStr)
d84 1
a84 1
   const char * fileAccessModeCStr;
d86 1
a86 1
   theMsgMgr          = theJniHand.getObject (theMsgMgrCIJObj)->asMsgMgr ();
d88 1
a88 1
   fileAccessModeCStr = theJniHand.makeCString (fileAccessModeJStr);
d90 1
a90 1
   theMsgMgr->setFileAccessMode (fileAccessModeCStr);
d95 1
a95 1
nativeMethod (_jstring *, MsgMgrCI, getFileAccessMode) (
d101 2
a102 2
   StringWoa  fileAccessModeWoa;
   _jstring * fileAccessModeJStr;
d104 1
a104 1
   theMsgMgr          = theJniHand.getObject (theMsgMgrCIJObj)->asMsgMgr ();
d106 1
a106 1
   theMsgMgr->getFileAccessMode (fileAccessModeWoa);
d108 1
a108 1
   fileAccessModeJStr = theJniHand.makeJString (fileAccessModeWoa);
d110 1
a110 1
   return fileAccessModeJStr;
d115 1
a115 1
nativeMethod (void, MsgMgrCI, setFileName) (
d118 1
a118 1
      _jstring * fileNameJStr)
d122 1
a122 1
   const char * fileNameCStr;
d124 1
a124 1
   theMsgMgr    = theJniHand.getObject (theMsgMgrCIJObj)->asMsgMgr ();
d126 1
a126 1
   fileNameCStr = theJniHand.makeCString (fileNameJStr);
d128 1
a128 1
   theMsgMgr->setFileName (fileNameCStr);
d133 1
a133 1
nativeMethod (_jstring *, MsgMgrCI, getFileName) (
d139 2
a140 2
   StringWoa  fileNameWoa;
   _jstring * fileNameJStr;
d142 1
a142 1
   theMsgMgr    = theJniHand.getObject (theMsgMgrCIJObj)->asMsgMgr ();
d144 1
a144 1
   theMsgMgr->getFileName (fileNameWoa);
d146 1
a146 1
   fileNameJStr = theJniHand.makeJString (fileNameWoa);
d148 35
a182 1
   return fileNameJStr;
@


1.1
log
@Class name changes.
@
text
@d112 38
@

