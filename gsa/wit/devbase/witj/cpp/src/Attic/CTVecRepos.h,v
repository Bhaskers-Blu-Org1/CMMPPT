head	1.5;
access;
symbols;
locks; strict;
comment	@ * @;


1.5
date	2008.07.18.15.49.40;	author rjw;	state dead;
branches;
next	1.4;

1.4
date	2008.07.15.19.39.54;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2008.06.18.21.28.17;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2008.05.30.15.52.19;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2008.05.22.14.03.18;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Attributes.
@
text
@//------------------------------------------------------------------------------
// WIT-J C++ Header File CTVecRepos.h.
//
// Contains the declaration of class template CTVecRepos <Elem>.
//------------------------------------------------------------------------------

#ifndef CTVecRepos_h
#define CTVecRepos_h

#include <Includes.h>

#include   <vector>

//------------------------------------------------------------------------------
// Class template CTVecRepos <Elem>
//
// A repository to store the C time vectors of Elems that are to be used by
// the JniHandlers associated with a given ProbCoord.
//------------------------------------------------------------------------------

namespace WitJ
{
template <typename Elem>
      class CTVecRepos
   {
   friend class JniHandler;

   //---------------------------------------------------------------------------
   // Public member functions.
   //---------------------------------------------------------------------------

   public:

   explicit CTVecRepos (ProbCoord * theProbCoord);
      //
      // Constructor.
      // theProbCoord: the ProbCoord that owns this CTVecRepos.

   ~CTVecRepos ();
      //
      // Destructor.

   //---------------------------------------------------------------------------
   // Private member functions.
   //---------------------------------------------------------------------------

   private:

   Elem * provideCTVec ();
      //
      // Returns a c-vector of length nPeriods, to be used by the caller.

   void reclaimCTVecs ();
      //
      // Takes all the c-vectors that were returned by provideCTVec () since
      // the previous call to reclaimCTVecs () and makes them available for
      // future calls to provideCTVec ().

   CTVecRepos              (const CTVecRepos &);
   CTVecRepos & operator = (const CTVecRepos &);
      //
      // Not defined; prevents accidental copying and assignment.

   //---------------------------------------------------------------------------
   // Private member data.
   //---------------------------------------------------------------------------

   ProbCoord * const myProbCoord_;
      //
      // The ProbCoord that owns this CTVecRepos.

   int nPeriods_;
      //
      // nPeriods for the Problem that associated with this CTVecRepos.

   std::vector <Elem *> availCTVecs_;
      //
      // The collection of c-vectors of length nPeriods owned by this
      // CTVecRepos that are available for use.

   std::vector <Elem *> inUseCTVecs_;
      //
      // The collection of c-vectors of length nPeriods owned by this
      // CTVecRepos that are currently in-use.
   };
};
//
// End of namespace WitJ.

#endif
@


1.4
log
@Attributes.
@
text
@@


1.3
log
@Attributes.
@
text
@d4 1
a4 1
// Contains the declaration of class DblCTVecRepos.
d15 1
a15 1
// Class DblCTVecRepos
d17 1
a17 1
// A repository to store the C time vectors of doubles that are to be used by
d23 2
a24 1
class DblCTVecRepos
d34 1
a34 1
   explicit DblCTVecRepos (ProbCoord * theProbCoord);
d37 1
a37 1
      // theProbCoord: the ProbCoord that owns this DblCTVecRepos.
d39 1
a39 1
   ~DblCTVecRepos ();
d49 1
a49 1
   double * provideCTVec ();
a52 6
   double * provideCTVec (int nPeriodsVal);
      //
      // Returns a c-vector of length nPeriodsVal, to be used by the caller.
      // nPeriodsVal must have the same value every time this function is
      // called for a given DblCTVecRepos.

d59 2
a60 2
   DblCTVecRepos              (const DblCTVecRepos &);
   DblCTVecRepos & operator = (const DblCTVecRepos &);
d70 1
a70 1
      // The ProbCoord that owns this DblCTVecRepos.
d74 1
a74 1
      // nPeriods for the Problem that associated with this DblCTVecRepos.
d76 1
a76 1
   std::vector <double *> availCTVecs_;
d79 1
a79 1
      // DblCTVecRepos that are available for use.
d81 1
a81 1
   std::vector <double *> inUseCTVecs_;
d84 1
a84 1
      // DblCTVecRepos that are currently in-use.
@


1.2
log
@JniHandler
@
text
@d7 2
a8 2
#ifndef CTVecReposH
#define CTVecReposH
@


1.1
log
@*** empty log message ***
@
text
@d52 6
d73 4
@

