head	1.3;
access;
symbols;
locks; strict;
comment	@ * @;


1.3
date	2009.01.16.17.03.35;	author rjw;	state dead;
branches;
next	1.2;

1.2
date	2009.01.15.22.50.31;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2009.01.15.17.03.29;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Change the mname of the ProbCtr classes to ProbMgr in both Java and C++.
@
text
@//------------------------------------------------------------------------------
// WIT-J C++ Source File ProbCtrCOR.C.
//------------------------------------------------------------------------------

#include     <NativeMacros.h>
#include <ExceptionHandler.h>
#include       <NativeCall.h>
#include          <ProbCtr.h>

using namespace WitJ;

//------------------------------------------------------------------------------

NATIVE_METHOD (void, ProbCtrCOR, createMyCppProbCtr) (
      JNIEnv *   theJNIEnv,
      _jobject * theProbCtrCORJObj)
   {
   BEGIN_TRY_BLOCK

   NativeCall theCall (theJNIEnv);
   ProbCtr *  theProbCtr;

   theProbCtr = new ProbCtr;

   theCall.transferTo (theProbCtrCORJObj, theProbCtr);

   END_TRY_BLOCK_SIMPLE_RETURN (theJNIEnv)
   }
@


1.2
log
@Continued implementation of ProbCtr classes.
@
text
@@


1.1
log
@Initial implementation of Java classes ProbCtrCOR ProbCtr.
@
text
@a8 1
#include          <Problem.h>
d14 1
a14 1
NATIVE_METHOD (void, ProbCtrCOR, acquireMyCppProbCtr) (
d16 1
a16 2
      _jobject * theProbCtrCORJObj,
      _jobject * theProblemCORJObj)
a20 1
   Problem *  theProblem;
d23 1
a23 5
   theProblem = theCall.getObject (theProblemCORJObj)->asProblem ();

   theProbCtr = theProblem->getProbCtr ();

   theProblem->relinquishProbCtr ();
@

