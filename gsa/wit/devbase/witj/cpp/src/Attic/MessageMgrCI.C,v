head	1.2;
access;
symbols;
locks; strict;
comment	@ * @;


1.2
date	2008.09.26.22.21.22;	author rjw;	state dead;
branches;
next	1.1;

1.1
date	2008.09.19.16.29.50;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Numerous class name changes.
@
text
@//------------------------------------------------------------------------------
// WIT-J C++ Source file MessageMgrCI.C.
//
// Contains the C++ implementations of the native methods of Java class
// witj.MessageMgrCI.
//------------------------------------------------------------------------------

#include <JniHandler.h>
#include <MessageMgr.h>
#include  <StringWoa.h>

using namespace WitJ;

//------------------------------------------------------------------------------

nativeMethod (void, MessageMgrCI, createMyCppMessageMgr) (
      JNIEnv *   theJNIEnv,
      _jobject * theMessageMgrCIJObj,
      _jobject * theSessionCIJObj)
   {
   JniHandler   theJniHand (theJNIEnv);
   Session *    theSession;
   MessageMgr * theMessageMgr;

   theSession    = theJniHand.getObject (theSessionCIJObj)->asSession ();

   theMessageMgr = new MessageMgr (theSession);

   theJniHand.transferTo (theMessageMgrCIJObj, theMessageMgr);
   }

//------------------------------------------------------------------------------

nativeMethod (void, MessageMgrCI, flushFile) (
      JNIEnv *   theJNIEnv,
      _jobject * theMessageMgrCIJObj)
   {
   JniHandler   theJniHand (theJNIEnv);
   MessageMgr * theMessageMgr;

   theMessageMgr = theJniHand.getObject (theMessageMgrCIJObj)->asMessageMgr ();

   theMessageMgr->flushFile ();
   }

//------------------------------------------------------------------------------

nativeMethod (void, MessageMgrCI, setQuiet) (
      JNIEnv *   theJNIEnv,
      _jobject * theMessageMgrCIJObj,
      jboolean   isQuietVal)
   {
   JniHandler   theJniHand (theJNIEnv);
   MessageMgr * theMessageMgr;

   theMessageMgr = theJniHand.getObject (theMessageMgrCIJObj)->asMessageMgr ();

   theMessageMgr->setQuiet (isQuietVal);
   }

//------------------------------------------------------------------------------

nativeMethod (jboolean, MessageMgrCI, isQuiet) (
      JNIEnv *   theJNIEnv,
      _jobject * theMessageMgrCIJObj)
   {
   JniHandler   theJniHand (theJNIEnv);
   MessageMgr * theMessageMgr;

   theMessageMgr = theJniHand.getObject (theMessageMgrCIJObj)->asMessageMgr ();

   return theMessageMgr->isQuiet ();
   }

//------------------------------------------------------------------------------

nativeMethod (void, MessageMgrCI, setMesgFileAccessMode) (
      JNIEnv *   theJNIEnv,
      _jobject * theMessageMgrCIJObj,
      _jstring * theAccModeJStr)
   {
   JniHandler   theJniHand (theJNIEnv);
   MessageMgr * theMessageMgr;
   const char * theAccModeCStr;

   theMessageMgr  = theJniHand.getObject (theMessageMgrCIJObj)->asMessageMgr ();

   theAccModeCStr = theJniHand.makeCString (theAccModeJStr);

   theMessageMgr->setMesgFileAccessMode (theAccModeCStr);
   }

//------------------------------------------------------------------------------

nativeMethod (_jstring *, MessageMgrCI, getMesgFileAccessMode) (
      JNIEnv *   theJNIEnv,
      _jobject * theMessageMgrCIJObj)
   {
   JniHandler   theJniHand (theJNIEnv);
   MessageMgr * theMessageMgr;
   StringWoa    theAccModeWoa;
   _jstring *   theAccModeJStr;

   theMessageMgr  = theJniHand.getObject (theMessageMgrCIJObj)->asMessageMgr ();

   theMessageMgr->getMesgFileAccessMode (theAccModeWoa);

   theAccModeJStr = theJniHand.makeJString (theAccModeWoa);

   return theAccModeJStr;
   }

//------------------------------------------------------------------------------

nativeMethod (void, MessageMgrCI, setMesgFileName) (
      JNIEnv *   theJNIEnv,
      _jobject * theMessageMgrCIJObj,
      _jstring * theNameJStr)
   {
   JniHandler   theJniHand (theJNIEnv);
   MessageMgr * theMessageMgr;
   const char * theNameCStr;

   theMessageMgr = theJniHand.getObject (theMessageMgrCIJObj)->asMessageMgr ();

   theNameCStr   = theJniHand.makeCString (theNameJStr);

   theMessageMgr->setMesgFileName (theNameCStr);
   }

//------------------------------------------------------------------------------

nativeMethod (_jstring *, MessageMgrCI, getMesgFileName) (
      JNIEnv *   theJNIEnv,
      _jobject * theMessageMgrCIJObj)
   {
   JniHandler   theJniHand (theJNIEnv);
   MessageMgr * theMessageMgr;
   StringWoa    theNameWoa;
   _jstring *   theNameJStr;

   theMessageMgr = theJniHand.getObject (theMessageMgrCIJObj)->asMessageMgr ();

   theMessageMgr->getMesgFileName (theNameWoa);

   theNameJStr   = theJniHand.makeJString (theNameWoa);

   return theNameJStr;
   }

//------------------------------------------------------------------------------

nativeMethod (void, MessageMgrCI, setMesgTimesPrint) (
      JNIEnv *   theJNIEnv,
      _jobject * theMessageMgrCIJObj,
      jint       theMsgNo,
      jint       theTimesJInt)
   {
   JniHandler   theJniHand (theJNIEnv);
   MessageMgr * theMessageMgr;

   theMessageMgr = theJniHand.getObject (theMessageMgrCIJObj)->asMessageMgr ();

   theMessageMgr->setMesgTimesPrint (theMsgNo, theTimesJInt);
   }

//------------------------------------------------------------------------------

nativeMethod (jint, MessageMgrCI, getMesgTimesPrint) (
      JNIEnv *   theJNIEnv,
      _jobject * theMessageMgrCIJObj,
      jint       theMsgNo)
   {
   JniHandler   theJniHand (theJNIEnv);
   MessageMgr * theMessageMgr;
   int          theTimesJInt;

   theMessageMgr = theJniHand.getObject (theMessageMgrCIJObj)->asMessageMgr ();

   theMessageMgr->getMesgTimesPrint (theMsgNo, theTimesJInt);

   return theTimesJInt;
   }
@


1.1
log
@Class name change.
@
text
@@

