head	1.6;
access;
symbols;
locks; strict;
comment	@ * @;


1.6
date	2008.09.26.22.21.23;	author rjw;	state dead;
branches;
next	1.5;

1.5
date	2008.09.11.15.20.53;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2008.09.10.21.32.34;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2008.09.09.18.59.59;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2008.09.09.15.38.19;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2008.09.08.19.45.34;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Numerous class name changes.
@
text
@//------------------------------------------------------------------------------
// WIT-J C++ Source File SessionCI.C.
//
// Contains the C++ implementations of the native methods of Java class
// witj.SessionCI.
//------------------------------------------------------------------------------

#include <JniHandler.h>
#include    <Session.h>

using namespace WitJ;

//------------------------------------------------------------------------------

nativeMethod (void, SessionCI, createMyCppSession) (
      JNIEnv *   theJNIEnv,
      _jobject * theSessionCIJObj)
   {
   JniHandler theJniHand (theJNIEnv);

   theJniHand.transferTo (theSessionCIJObj, new Session);
   }
@


1.5
log
@Disallowed creating a Problem for a Session that already has one.
@
text
@@


1.4
log
@Initial implementation of creating a Session without a Problem.
@
text
@a22 14

//------------------------------------------------------------------------------

nativeMethod (void, SessionCI, clearProblem) (
      JNIEnv *   theJNIEnv,
      _jobject * theSessionCIJObj)
   {
   JniHandler theJniHand (theJNIEnv);
   Session *  theSession;

   theSession = theJniHand.getObject (theSessionCIJObj)->asSession ();

   theSession->clearProblem ();
   }
@


1.3
log
@Renamed Java class ProbCoordCI to SessionCI.
Renamed C++  class ProbCoord   to Session.
@
text
@d23 14
@


1.2
log
@Removed Java class SessionCI.
Removed C++  class Session.
Kept the empty source files.
@
text
@d3 3
d7 16
@


1.1
log
@Initial implementation of the Session classes.
@
text
@a2 3
//
// Contains the C++ implementations of the native methods of Java class
// witj.SessionCI.
a3 23

#include <JniHandler.h>
#include    <Session.h>

using namespace WitJ;

//------------------------------------------------------------------------------

nativeMethod (void, SessionCI, createMyCppSession) (
      JNIEnv *   theJNIEnv,
      _jobject * theSessionCIJObj,
      _jobject * theProbCoordCIJObj)
   {
   JniHandler  theJniHand (theJNIEnv);
   ProbCoord * theProbCoord;
   Session *   theSession;

   theProbCoord = theJniHand.getObject (theProbCoordCIJObj)->asProbCoord ();

   theSession   = new Session (theProbCoord);

   theJniHand.transferTo (theSessionCIJObj, theSession);
   }
@

