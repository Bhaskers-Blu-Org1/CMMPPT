head	1.5;
access;
symbols;
locks; strict;
comment	@ * @;


1.5
date	2008.09.15.16.20.39;	author rjw;	state dead;
branches;
next	1.4;

1.4
date	2008.09.12.23.00.34;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2008.09.12.21.54.16;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2008.09.12.19.44.33;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2008.09.12.18.57.24;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Class name changes.
@
text
@//------------------------------------------------------------------------------
// WIT-J C++ Source file MsgHandlerCI.C.
//
// Contains the C++ implementations of the native methods of Java class
// witj.MsgHandlerCI.
//------------------------------------------------------------------------------

#include <JniHandler.h>
#include <MsgHandler.h>
#include  <StringWoa.h>

using namespace WitJ;

//------------------------------------------------------------------------------

nativeMethod (void, MsgHandlerCI, createMyCppMsgHandler) (
      JNIEnv *   theJNIEnv,
      _jobject * theMsgHandlerCIJObj,
      _jobject * theSessionCIJObj)
   {
   JniHandler   theJniHand (theJNIEnv);
   Session *    theSession;
   MsgHandler * theMsgHandler;

   theSession    = theJniHand.getObject (theSessionCIJObj)->asSession ();

   theMsgHandler = new MsgHandler (theSession);

   theJniHand.transferTo (theMsgHandlerCIJObj, theMsgHandler);
   }

//------------------------------------------------------------------------------

nativeMethod (void, MsgHandlerCI, flushFile) (
      JNIEnv *   theJNIEnv,
      _jobject * theMsgHandlerCIJObj)
   {
   JniHandler   theJniHand (theJNIEnv);
   MsgHandler * theMsgHandler;

   theMsgHandler = theJniHand.getObject (theMsgHandlerCIJObj)->asMsgHandler ();

   theMsgHandler->flushFile ();
   }

//------------------------------------------------------------------------------

nativeMethod (void, MsgHandlerCI, setQuietMode) (
      JNIEnv *   theJNIEnv,
      _jobject * theMsgHandlerCIJObj,
      jboolean   quietMode)
   {
   JniHandler   theJniHand (theJNIEnv);
   MsgHandler * theMsgHandler;

   theMsgHandler = theJniHand.getObject (theMsgHandlerCIJObj)->asMsgHandler ();

   theMsgHandler->setQuietMode (quietMode);
   }

//------------------------------------------------------------------------------

nativeMethod (jboolean, MsgHandlerCI, getQuietMode) (
      JNIEnv *   theJNIEnv,
      _jobject * theMsgHandlerCIJObj)
   {
   JniHandler   theJniHand (theJNIEnv);
   MsgHandler * theMsgHandler;

   theMsgHandler = theJniHand.getObject (theMsgHandlerCIJObj)->asMsgHandler ();

   return theMsgHandler->getQuietMode ();
   }

//------------------------------------------------------------------------------

nativeMethod (void, MsgHandlerCI, setFileAccessMode) (
      JNIEnv *   theJNIEnv,
      _jobject * theMsgHandlerCIJObj,
      _jstring * fileAccessModeJStr)
   {
   JniHandler   theJniHand (theJNIEnv);
   MsgHandler * theMsgHandler;
   const char * fileAccessModeCStr;

   theMsgHandler = theJniHand.getObject (theMsgHandlerCIJObj)->asMsgHandler ();

   fileAccessModeCStr = theJniHand.makeCString (fileAccessModeJStr);

   theMsgHandler->setFileAccessMode (fileAccessModeCStr);
   }

//------------------------------------------------------------------------------

nativeMethod (_jstring *, MsgHandlerCI, getFileAccessMode) (
      JNIEnv *   theJNIEnv,
      _jobject * theMsgHandlerCIJObj)
   {
   JniHandler   theJniHand (theJNIEnv);
   MsgHandler * theMsgHandler;
   StringWoa    fileAccessModeWoa;
   _jstring *   fileAccessModeJStr;

   theMsgHandler = theJniHand.getObject (theMsgHandlerCIJObj)->asMsgHandler ();

   theMsgHandler->getFileAccessMode (fileAccessModeWoa);

   fileAccessModeJStr = theJniHand.makeJString (fileAccessModeWoa);

   return fileAccessModeJStr;
   }
@


1.4
log
@Implemented msg attribute fileAccessMode.
@
text
@@


1.3
log
@Implemented theMsgHandler.quiteMode.
@
text
@d10 1
d74 38
@


1.2
log
@Implemented theMsgHandler.flushFile ().
@
text
@d44 29
@


1.1
log
@Initial implementation of MsgHandler classes.
@
text
@d30 14
@

