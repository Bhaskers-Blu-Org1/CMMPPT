head	1.12;
access;
symbols;
locks; strict;
comment	@ * @;


1.12
date	2011.02.25.16.06.49;	author rjw;	state dead;
branches;
next	1.11;

1.11
date	2011.02.16.19.08.29;	author rjw;	state Exp;
branches;
next	1.10;

1.10
date	2011.02.15.20.18.57;	author rjw;	state Exp;
branches;
next	1.9;

1.9
date	2010.04.23.22.41.22;	author rjw;	state Exp;
branches;
next	1.8;

1.8
date	2010.04.20.20.55.07;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2010.04.17.00.20.18;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2010.04.15.21.33.55;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2010.04.13.23.10.42;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2010.04.12.22.28.18;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2009.06.05.15.08.21;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2009.06.04.23.04.21;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2009.03.13.16.36.07;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.12
log
@Moved GlobalAspect responsibilities to class Problem.
Removed class GlobalAspect.
@
text
@//------------------------------------------------------------------------------
// WIT-J C++ Source file GlobalAspectCOR.C.
//
// Contains the C++ implementations of the native methods of Java class
// witj.GlobalAspectCOR.
//------------------------------------------------------------------------------

#include     <NativeMacros.h>
#include <ExceptionHandler.h>
#include       <NativeCall.h>
#include     <GlobalAspect.h>
#include      <WitVecOwner.h>
#include        <StringVec.h>
#include   <WitStrVecOwner.h>

using namespace WitJ;

//------------------------------------------------------------------------------

NATIVE_METHOD (void, GlobalAspectCOR, setNPeriods) (
      JNIEnv *   theJNIEnv,
      _jobject * theGlobalAspectCORJObj,
      jint       theNPeriodsJInt)
   {
   BEGIN_TRY_BLOCK

   NativeCall     theCall (theJNIEnv);
   GlobalAspect * theGlobalAspect;

   theGlobalAspect =
      theCall.getObject (theGlobalAspectCORJObj)->asGlobalAspect ();

   theGlobalAspect->setNPeriods (theNPeriodsJInt);

   END_TRY_BLOCK_SIMPLE_RETURN (theJNIEnv)
   }

//------------------------------------------------------------------------------

NATIVE_METHOD (void, GlobalAspectCOR, getPipSeq) (
      JNIEnv *   theJNIEnv,
      _jobject * theGlobalAspectCORJObj,
      _jobject * theAllocTripleVecCORJObj)
   {
   BEGIN_TRY_BLOCK

   NativeCall       theCall (theJNIEnv);
   GlobalAspect *   theGlobalAspect;
   AllocTripleVec * theAllocTripleVec;

   theGlobalAspect =
      theCall.getObject (theGlobalAspectCORJObj)  ->asGlobalAspect ();

   theAllocTripleVec =
      theCall.getObject (theAllocTripleVecCORJObj)->asAllocTripleVec ();

   theGlobalAspect->getPipSeq (theAllocTripleVec);

   END_TRY_BLOCK_SIMPLE_RETURN (theJNIEnv)
   }

//------------------------------------------------------------------------------

NATIVE_METHOD (void, GlobalAspectCOR, setOptInitMethod) (
      JNIEnv *   theJNIEnv,
      _jobject * theGlobalAspectCORJObj,
      _jstring * theMethodNameJStr)
   {
   BEGIN_TRY_BLOCK

   NativeCall     theCall (theJNIEnv);
   GlobalAspect * theGlobalAspect;
   const char *   theMethodNameCStr;

   theGlobalAspect =
      theCall.getObject (theGlobalAspectCORJObj)->asGlobalAspect ();

   theMethodNameCStr = theCall.newHeldCString (theMethodNameJStr);

   theGlobalAspect->setOptInitMethod (theMethodNameCStr);

   END_TRY_BLOCK_SIMPLE_RETURN (theJNIEnv)
   }

//------------------------------------------------------------------------------

NATIVE_METHOD (_jstring *, GlobalAspectCOR, getOptInitMethod) (
      JNIEnv *   theJNIEnv,
      _jobject * theGlobalAspectCORJObj)
   {
   BEGIN_TRY_BLOCK

   NativeCall     theCall (theJNIEnv);
   GlobalAspect * theGlobalAspect;
   const char *   theMethodNameCStr;
   _jstring *     theMethodNameJStr;

   theGlobalAspect =
      theCall.getObject (theGlobalAspectCORJObj)->asGlobalAspect ();

   theMethodNameCStr = theGlobalAspect->getOptInitMethod ();

   theMethodNameJStr = theCall.newJString (theMethodNameCStr);

   return theMethodNameJStr;

   END_TRY_BLOCK_VALUE_RETURN (theJNIEnv, NULL)
   }

//------------------------------------------------------------------------------

NATIVE_METHOD (void, GlobalAspectCOR, setObjectiveList) (
      JNIEnv *        theJNIEnv,
      _jobject *      theGlobalAspectCORJObj,
      _jobjectArray * theObjNameJObjArr)
   {
   BEGIN_TRY_BLOCK

   NativeCall     theCall (theJNIEnv);
   GlobalAspect * theGlobalAspect;
   StringVec      theObjNameStringVec;

   theGlobalAspect =
      theCall.getObject (theGlobalAspectCORJObj)->asGlobalAspect ();

   theCall.copyInto (theObjNameStringVec, theObjNameJObjArr);

   theGlobalAspect->setObjectiveList (theObjNameStringVec);

   END_TRY_BLOCK_SIMPLE_RETURN (theJNIEnv)
   }

//------------------------------------------------------------------------------

NATIVE_METHOD (_jobjectArray *, GlobalAspectCOR, getObjectiveList) (
      JNIEnv *   theJNIEnv,
      _jobject * theGlobalAspectCORJObj)
   {
   BEGIN_TRY_BLOCK

   NativeCall      theCall (theJNIEnv);
   GlobalAspect *  theGlobalAspect;
   WitStrVecOwner  theObjNameWSVO;
   _jobjectArray * theObjNameJStrArr;

   theGlobalAspect =
      theCall.getObject (theGlobalAspectCORJObj)->asGlobalAspect ();

   theGlobalAspect->getObjectiveList (theObjNameWSVO);

   theObjNameJStrArr =
      theCall.
         newJStrArray (
            theObjNameWSVO.getWitStrVec (),
            theObjNameWSVO.getLength    ());

   return theObjNameJStrArr;

   END_TRY_BLOCK_VALUE_RETURN (theJNIEnv, NULL)
   }

//------------------------------------------------------------------------------

NATIVE_METHOD (void, GlobalAspectCOR, createCppObject) (
      JNIEnv *   theJNIEnv,
      _jobject * theGlobalAspectCORJObj,
      _jobject * theCoordCORJObj)
   {
   BEGIN_TRY_BLOCK

   NativeCall     theCall (theJNIEnv);
   Coordinator *  theCoord;
   GlobalAspect * theGlobalAspect;

   theCoord         = theCall.getObject (theCoordCORJObj)->asCoordinator ();

   theGlobalAspect = new GlobalAspect (theCoord);

   theCall.associate (theGlobalAspectCORJObj, theGlobalAspect);

   END_TRY_BLOCK_SIMPLE_RETURN (theJNIEnv)
   }
@


1.11
log
@CPLEX
@
text
@@


1.10
log
@CPLEX
@
text
@d103 1
a103 1
   theMethodNameJStr = theCall.makeJString (theMethodNameCStr);
d153 1
a153 1
         makeJStrArray (
@


1.9
log
@Multi-Obj Mode.
@
text
@d78 1
a78 1
   theMethodNameCStr = theCall.makeCString (theMethodNameJStr);
@


1.8
log
@Multi-Obj Mode
@
text
@d14 1
d135 29
@


1.7
log
@Multi-Obj Mode
@
text
@d12 1
a12 1
#include           <VecWoa.h>
@


1.6
log
@Multi-Obj Mode
@
text
@d12 1
a12 1
#include        <StringWoa.h>
@


1.5
log
@Implemented String StdAttImps.
@
text
@d13 1
d111 23
@


1.4
log
@Multi-Obj Mode
@
text
@a61 96
NATIVE_METHOD (void, GlobalAspectCOR, setTitle) (
      JNIEnv *   theJNIEnv,
      _jobject * theGlobalAspectCORJObj,
      _jstring * theTitleJStr)
   {
   BEGIN_TRY_BLOCK

   NativeCall     theCall (theJNIEnv);
   GlobalAspect * theGlobalAspect;
   const char *   theTitleCStr;

   theGlobalAspect =
      theCall.getObject (theGlobalAspectCORJObj)->asGlobalAspect ();

   theTitleCStr = theCall.makeCString (theTitleJStr);

   theGlobalAspect->setTitle (theTitleCStr);

   END_TRY_BLOCK_SIMPLE_RETURN (theJNIEnv)
   }

//------------------------------------------------------------------------------

NATIVE_METHOD (_jstring *, GlobalAspectCOR, getTitle) (
      JNIEnv *   theJNIEnv,
      _jobject * theGlobalAspectCORJObj)
   {
   BEGIN_TRY_BLOCK

   NativeCall     theCall (theJNIEnv);
   GlobalAspect * theGlobalAspect;
   StringWoa      theTitleWoa;
   _jstring *     theTitleJStr;

   theGlobalAspect =
      theCall.getObject (theGlobalAspectCORJObj)->asGlobalAspect ();

   theGlobalAspect->getTitle (theTitleWoa);

   theTitleJStr = theCall.makeJString (theTitleWoa.getCString ());

   return theTitleJStr;

   END_TRY_BLOCK_VALUE_RETURN (theJNIEnv, NULL)
   }

//------------------------------------------------------------------------------

NATIVE_METHOD (void, GlobalAspectCOR, setSolverLogFileName) (
      JNIEnv *   theJNIEnv,
      _jobject * theGlobalAspectCORJObj,
      _jstring * theNameJStr)
   {
   BEGIN_TRY_BLOCK

   NativeCall     theCall (theJNIEnv);
   GlobalAspect * theGlobalAspect;
   const char *   theNameCStr;

   theGlobalAspect =
      theCall.getObject (theGlobalAspectCORJObj)->asGlobalAspect ();

   theNameCStr = theCall.makeCString (theNameJStr);

   theGlobalAspect->setSolverLogFileName (theNameCStr);

   END_TRY_BLOCK_SIMPLE_RETURN (theJNIEnv)
   }

//------------------------------------------------------------------------------

NATIVE_METHOD (_jstring *, GlobalAspectCOR, getSolverLogFileName) (
      JNIEnv *   theJNIEnv,
      _jobject * theGlobalAspectCORJObj)
   {
   BEGIN_TRY_BLOCK

   NativeCall     theCall (theJNIEnv);
   GlobalAspect * theGlobalAspect;
   StringWoa      theNameWoa;
   _jstring *     theNameJStr;

   theGlobalAspect =
      theCall.getObject (theGlobalAspectCORJObj)->asGlobalAspect ();

   theGlobalAspect->getSolverLogFileName (theNameWoa);

   theNameJStr = theCall.makeJString (theNameWoa.getCString ());

   return theNameJStr;

   END_TRY_BLOCK_VALUE_RETURN (theJNIEnv, NULL)
   }

//------------------------------------------------------------------------------

a109 49
NATIVE_METHOD (void, GlobalAspectCOR, setObjectiveListSpec) (
      JNIEnv *   theJNIEnv,
      _jobject * theGlobalAspectCORJObj,
      _jstring * theObjectiveListSpecJStr)
   {
   BEGIN_TRY_BLOCK

   NativeCall     theCall (theJNIEnv);
   GlobalAspect * theGlobalAspect;
   const char *   theObjectiveListSpecCStr;

   theGlobalAspect =
      theCall.getObject (theGlobalAspectCORJObj)->asGlobalAspect ();

   theObjectiveListSpecCStr = theCall.makeCString (theObjectiveListSpecJStr);

   theGlobalAspect->setObjectiveListSpec (theObjectiveListSpecCStr);

   END_TRY_BLOCK_SIMPLE_RETURN (theJNIEnv)
   }

//------------------------------------------------------------------------------

NATIVE_METHOD (_jstring *, GlobalAspectCOR, getObjectiveListSpec) (
      JNIEnv *   theJNIEnv,
      _jobject * theGlobalAspectCORJObj)
   {
   BEGIN_TRY_BLOCK

   NativeCall     theCall (theJNIEnv);
   GlobalAspect * theGlobalAspect;
   StringWoa      theObjectiveListSpecWoa;
   _jstring *     theObjectiveListSpecJStr;

   theGlobalAspect =
      theCall.getObject (theGlobalAspectCORJObj)->asGlobalAspect ();

   theGlobalAspect->getObjectiveListSpec (theObjectiveListSpecWoa);

   theObjectiveListSpecJStr =
      theCall.makeJString (theObjectiveListSpecWoa.getCString ());

   return theObjectiveListSpecJStr;

   END_TRY_BLOCK_VALUE_RETURN (theJNIEnv, NULL)
   }

//------------------------------------------------------------------------------

@


1.3
log
@Changed the name each native method that creates a C++ object to
   createCppObject.
@
text
@d206 49
@


1.2
log
@Changed handling of Lists of AllocTriples to avoid call-backs.
@
text
@d206 1
a206 1
NATIVE_METHOD (void, GlobalAspectCOR, createMyCppGlobalAspect) (
@


1.1
log
@Changed name of GlobalComponent classes to GlobalAspect.
@
text
@a11 1
#include  <AllocTripleList.h>
d41 1
a41 1
      _jobject * theAllocTripleListCORJObj)
d45 3
a47 3
   NativeCall        theCall (theJNIEnv);
   GlobalAspect *    theGlobalAspect;
   AllocTripleList * theAllocTripleList;
d50 1
a50 1
      theCall.getObject (theGlobalAspectCORJObj)->asGlobalAspect ();
d52 2
a53 2
   theAllocTripleList =
      theCall.getObject (theAllocTripleListCORJObj)->asAllocTripleList ();
d55 1
a55 1
   theGlobalAspect->getPipSeq (theAllocTripleList);
@

