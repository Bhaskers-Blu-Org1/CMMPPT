head	1.3;
access;
symbols;
locks; strict;
comment	@ * @;


1.3
date	2011.03.15.23.02.49;	author rjw;	state dead;
branches;
next	1.2;

1.2
date	2011.03.15.18.59.36;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2011.03.11.23.49.21;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Name changes.
@
text
@//------------------------------------------------------------------------------
// WIT-J C++ Header File JArrayList.h.
//
// Contains the declaration of the following clases and templetes:
//
//    JArrayList
//    IntJArrayList
//    CompJArrayList <C>
//------------------------------------------------------------------------------

#ifndef JArrayList_h
#define JArrayList_h

#include <JniClient.h>

//------------------------------------------------------------------------------
// Class JArrayList
//
// "Java ArrayList"
// Represents a Java ArrayList <E> for some element type, E.
//
// Class Hierarchy:
//
// JniClient
//    JArrayList
//       IntJArrayList
//       CompJArrayList <C>
//------------------------------------------------------------------------------

namespace WitJ
{
class JArrayList: public JniClient
   {
   //---------------------------------------------------------------------------
   // Public member functions.
   //---------------------------------------------------------------------------

   public:

   static void setUpJni (JNIEnv * theJNIEnv);
      //
      // Sets up the interaction between this class and JNI.
      // Uses theJNIEnv as its JNI environment.

   void ensureCapacity (int minCapacity);
      //
      // Calls ensureCapacity (minCapacity) on the Java ArrayList.

   //---------------------------------------------------------------------------
   // Protected member functions.
   //---------------------------------------------------------------------------

   protected:

   explicit JArrayList (JNIEnv * theJNIEnv, _jobject * theArrayListJObj);
      //
      // Constructor.
      // theArrayListJObj must reference a Java ArrayList <E> for some element
      // type, E.

   ~JArrayList ();
      //
      // Destructor.

   void addJObject (_jobject * theJObject);
      //
      // Appends the Java Object referenced by theJObject to the end of the
      // represented Java ArrayList.
      // The Java Object referenced by theJObject must be of the type stored by
      // the represented Java ArrayList.
                                                               
   //---------------------------------------------------------------------------
   // Private member functions.
   //---------------------------------------------------------------------------

   private:

   JArrayList              (const JArrayList &);
   JArrayList & operator = (const JArrayList &);
      //
      // Not implemented; prevents accidental copying and assignment.

   //---------------------------------------------------------------------------
   // Private member data.
   //---------------------------------------------------------------------------

   static _jmethodID * ensureCapacityJMeth_;
   static _jmethodID *            addJMeth_;
      //
      // The JNI method ID for the Java class ArrayList method ensureCapacity.
      // The JNI method ID for the Java class ArrayList method add (E).

   _jobject * const myArrayListJObj_;
      //
      // The jobject for the Java ArrayList represented by this JArrayList.
   };
};
//
// End of namespace WitJ.

//------------------------------------------------------------------------------
// Class IntJArrayList
//
// "Integer Java ArrayList"
// Represents a Java ArrayList <Integer>.
//
// Class Hierarchy:
//
// JniClient
//    JArrayList
//       IntJArrayList
//------------------------------------------------------------------------------

namespace WitJ
{
class IntJArrayList: public JArrayList
   {
   //---------------------------------------------------------------------------
   // Public member functions.
   //---------------------------------------------------------------------------

   public:

   explicit IntJArrayList (JNIEnv * theJNIEnv, _jobject * theIntArrayListJObj);
      //
      // Constructor.
      // theIntArrayListJObj must reference a Java ArrayList <Integer>.

   ~IntJArrayList ();
      //
      // Destructor.

   void add (int theInt);
      //
      // Appends a Java Integer matching theInt to the end of the represented
      // Java ArrayList <Integer>.

   //---------------------------------------------------------------------------
   // Private member functions.
   //---------------------------------------------------------------------------

   private:

   IntJArrayList              (const IntJArrayList &);
   IntJArrayList & operator = (const IntJArrayList &);
      //
      // Not implemented; prevents accidental copying and assignment.
   };
};
//
// End of namespace WitJ.

//------------------------------------------------------------------------------
// Class CompJArrayList <C>
//
// "Component Java ArrayList"
// Represents a Java ArrayList <C extends Component>.
//
// C must be a C++ class derived from class Component.
//
// Class Hierarchy:
//
// JniClient
//    JArrayList
//       CompJArrayList <C>
//------------------------------------------------------------------------------

namespace WitJ
{
template <typename C>
      class CompJArrayList: public JArrayList
   {
   //---------------------------------------------------------------------------
   // Public member functions.
   //---------------------------------------------------------------------------

   public:

   explicit CompJArrayList (
         JNIEnv *   theJNIEnv,
         _jobject * theCompArrayListJObj);
      //
      // Constructor.
      // theCompArrayListJObj must reference a Java ArrayList <C>.

   ~CompJArrayList ();
      //
      // Destructor.

   void add (C * theC);
      //
      // Appends the Java Component corresponding to theC to the end of the
      // represented Java ArrayList <C>.

   //---------------------------------------------------------------------------
   // Private member functions.
   //---------------------------------------------------------------------------

   private:

   CompJArrayList              (const CompJArrayList &);
   CompJArrayList & operator = (const CompJArrayList &);
      //
      // Not implemented; prevents accidental copying and assignment.
   };
};
//
// End of namespace WitJ.

#endif
@


1.2
log
@Revised some comments.
@
text
@@


1.1
log
@Problem.getCriticalList ()
@
text
@d58 1
a58 1
      // theArrayListJObj must represent a Java ArrayList <E> for some element
d67 1
a67 1
      // Appends the Java Object represented by theJObject to the end of the
d69 1
a69 1
      // The Java Object represented by theJObject must be of the type stored by
d127 1
a127 1
      // theIntArrayListJObj must represent a Java ArrayList <Integer>.
d184 1
a184 1
      // theCompArrayListJObj must represent a Java ArrayList <C>.
@

