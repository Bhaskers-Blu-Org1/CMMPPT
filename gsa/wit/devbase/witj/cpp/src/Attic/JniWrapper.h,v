head	1.4;
access;
symbols;
locks; strict;
comment	@ * @;


1.4
date	2008.10.01.19.47.12;	author rjw;	state dead;
branches;
next	1.3;

1.3
date	2008.10.01.18.19.15;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2008.09.29.18.09.11;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2008.09.29.17.34.16;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Changed name of C++ class JniWrapper to JniClient.
@
text
@//------------------------------------------------------------------------------
// WIT-J C++ Header File JniWrapper.h.
//
// Contains the declaration of class JniWrapper.
//------------------------------------------------------------------------------

#ifndef JniWrapper_h
#define JniWrapper_h

#include <Includes.h>

#include      <jni.h>

//------------------------------------------------------------------------------
// Class JniWrapper
//
// This class and the classes derived from it are responsible for all
// interaction with JNI.
//------------------------------------------------------------------------------

namespace WitJ
{
class JniWrapper
   {
   //---------------------------------------------------------------------------
   // Public member functions.
   //---------------------------------------------------------------------------

   public:

   _jstring * makeJString (const StringWoa & theStringWoa);
      //
      // Creates and returns a j-string copy of theStringWoa.

   //---------------------------------------------------------------------------
   // Protected member functions.
   //---------------------------------------------------------------------------

   protected:

   explicit JniWrapper (JNIEnv *);
      //
      // Constructor.

   explicit JniWrapper (const JniWrapper &);
      //
      // Copy Constructor.

   ~JniWrapper ();
      //
      // Destructor.

   void checkForJniException ();
      //
      // Handles any exception that has been thrown by JNI.

   static void checkForJniException (JNIEnv * theJNIEnv);
      //
      // Handles any exception that has been thrown by JNI.

   inline JNIEnv * getJNIEnv ()
      {
      return myJNIEnv_;
      }

   //---------------------------------------------------------------------------
   // Private member functions.
   //---------------------------------------------------------------------------

   private:

   JniWrapper & operator = (const JniWrapper &);
      //
      // Not defined; prevents accidental assignment.

   //---------------------------------------------------------------------------
   // Private member data.
   //---------------------------------------------------------------------------

   JNIEnv * const myJNIEnv_;
      //
      // The JNI environment for this JniWrapper.
   };
};
//
// End of namespace WitJ.

#endif
@


1.3
log
@Extraction
@
text
@@


1.2
log
@Call-back infrastructure.
@
text
@d26 10
@


1.1
log
@Implemented C++ class JniWrapper.
@
text
@d43 4
@

