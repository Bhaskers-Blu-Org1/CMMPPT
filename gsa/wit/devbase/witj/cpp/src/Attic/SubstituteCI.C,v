head	1.6;
access;
symbols;
locks; strict;
comment	@ * @;


1.6
date	2008.09.26.22.21.23;	author rjw;	state dead;
branches;
next	1.5;

1.5
date	2008.08.27.15.30.46;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2008.05.30.16.33.36;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2008.05.30.15.52.20;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2008.05.23.22.58.33;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2008.05.22.21.02.58;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Numerous class name changes.
@
text
@//------------------------------------------------------------------------------
// WIT-J C++ Source File SubstituteCI.C.
//
// Contains the C++ implementations of the native methods of Java class
// witj.SubstituteCI.
//------------------------------------------------------------------------------

#include <JniHandler.h>
#include <Substitute.h>

using namespace WitJ;

//------------------------------------------------------------------------------

nativeMethod (void, SubstituteCI, createMyCppSubstitute) (
      JNIEnv *   theJNIEnv,
      _jobject * theSubCIJObj,
      _jobject * theBomEntCIJObj,
      _jobject * thePartCIJObj)
   {
   JniHandler   theJniHand (theJNIEnv);
   BomEntry   * theBomEnt;
   Part       * thePart;
   Substitute * theSub;

   theBomEnt = theJniHand.getObject (theBomEntCIJObj)->asBomEntry ();
   thePart   = theJniHand.getObject   (thePartCIJObj)->asPart     ();

   theSub    = new Substitute (theBomEnt, thePart);

   theJniHand.transferTo (theSubCIJObj, theSub);
   }
@


1.5
log
@Attributes.
@
text
@@


1.4
log
@JniHandler
@
text
@d26 2
a27 2
   theBomEnt = theJniHand.getObject (theBomEntCIJObj)->thisBomEntry ();
   thePart   = theJniHand.getObject   (thePartCIJObj)->thisPart     ();
@


1.3
log
@JniHandler
@
text
@d26 2
a27 2
   theBomEnt = theJniHand.getBomEntry (theBomEntCIJObj);
   thePart   = theJniHand.getPart     (thePartCIJObj);
@


1.2
log
@*** empty log message ***
@
text
@d17 1
a17 1
      _jobject * theJObj,
d21 1
a21 1
   JniHandler   theJniHand (theJNIEnv, theJObj);
d31 1
a31 1
   theJniHand.attachToCI (theSub);
@


1.1
log
@*** empty log message ***
@
text
@d26 2
a27 2
   theBomEnt = theJniHand.getObject (theBomEntCIJObj)->thisBomEntry ();
   thePart   = theJniHand.getObject (thePartCIJObj)  ->thisPart     ();
@

