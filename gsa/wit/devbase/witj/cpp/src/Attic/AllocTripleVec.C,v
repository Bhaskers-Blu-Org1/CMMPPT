head	1.5;
access;
symbols;
locks; strict;
comment	@ * @;


1.5
date	2011.03.25.22.49.08;	author rjw;	state dead;
branches;
next	1.4;

1.4
date	2010.04.20.20.55.05;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2010.04.19.20.48.01;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2010.04.17.00.20.18;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2009.06.04.23.04.20;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.5
log
@ArrayListJOR
@
text
@//------------------------------------------------------------------------------
// WIT-J C++ Source File AllocTripleVec.C.
//
// Contains the implementation of class AllocTripleVec.
//------------------------------------------------------------------------------

#include <AllocTripleVec.h>

//------------------------------------------------------------------------------

WitJ::AllocTripleVec::AllocTripleVec (Coordinator * theCoord):

      JavaAccObj   (theCoord),
      myCompVec_   (),
      myPeriodWVO_ (),
      myVolumeWVO_ ()
   {
   }

//------------------------------------------------------------------------------

WitJ::AllocTripleVec::~AllocTripleVec ()
   {
   }

//------------------------------------------------------------------------------

WitJ::AllocTripleVec * WitJ::AllocTripleVec::asAllocTripleVec ()
   {
   return this;
   }

//------------------------------------------------------------------------------

void WitJ::AllocTripleVec::resize (int nTriples)
   {
   myCompVec_.resize (nTriples);
   }

//------------------------------------------------------------------------------

void WitJ::AllocTripleVec::acquirePeriodWitVec (int * theWitVec)
   {
   myPeriodWVO_.acquireWitVec (theWitVec);
   }

//------------------------------------------------------------------------------

void WitJ::AllocTripleVec::acquireVolumeWitVec (double * theWitVec)
   {
   myVolumeWVO_.acquireWitVec (theWitVec);
   }

//------------------------------------------------------------------------------

void WitJ::AllocTripleVec::setComponent (int theIdx, Component * theComp)
   {
   myCompVec_[theIdx] = theComp;
   }

//------------------------------------------------------------------------------

int WitJ::AllocTripleVec::getNTriples ()
   {
   return myCompVec_.size ();
   }

//------------------------------------------------------------------------------

WitJ::Component * WitJ::AllocTripleVec::getComponent (int theIdx)
   {
   return myCompVec_[theIdx];
   }

//------------------------------------------------------------------------------

int WitJ::AllocTripleVec::getPeriod (int theIdx)
   {
   return myPeriodWVO_.getWitVec ()[theIdx];
   }

//------------------------------------------------------------------------------

double WitJ::AllocTripleVec::getVolume (int theIdx)
   {
   return myVolumeWVO_.getWitVec ()[theIdx];
   }
@


1.4
log
@Multi-Obj Mode
@
text
@@


1.3
log
@Multi-Obj Mode
@
text
@d13 4
a16 4
      JavaAccObj      (theCoord),
      myCompVec_      (),
      myPeriodVecWoa_ (),
      myVolumeVecWoa_ ()
d44 1
a44 1
   myPeriodVecWoa_.acquireWitVec (theWitVec);
d51 1
a51 1
   myVolumeVecWoa_.acquireWitVec (theWitVec);
d79 1
a79 1
   return myPeriodVecWoa_[theIdx];
d86 1
a86 1
   return myVolumeVecWoa_[theIdx];
@


1.2
log
@Multi-Obj Mode
@
text
@d35 1
a35 4
void WitJ::AllocTripleVec::acquireData (
      int      nTriplesVal,
      int *    thePeriodCVec,
      double * theVolumeCVec)
d37 4
a40 1
   myCompVec_.resize (nTriplesVal);
d42 10
a51 2
   myPeriodVecWoa_.acquire (thePeriodCVec);
   myVolumeVecWoa_.acquire (theVolumeCVec);
@


1.1
log
@Changed handling of Lists of AllocTriples to avoid call-backs.
@
text
@d35 4
a38 1
void WitJ::AllocTripleVec::setNTriples (int nTrips)
d40 4
a43 1
   myCompVec_.resize (nTrips);
a54 14
int * * WitJ::AllocTripleVec::getPeriodCVecAddr ()
   {
   return myPeriodVecWoa_.getCVecAddr ();
   }

//------------------------------------------------------------------------------

double * * WitJ::AllocTripleVec::getVolumeCVecAddr ()
   {
   return myVolumeVecWoa_.getCVecAddr ();
   }

//------------------------------------------------------------------------------

@

