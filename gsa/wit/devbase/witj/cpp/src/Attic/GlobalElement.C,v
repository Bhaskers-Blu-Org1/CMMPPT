head	1.17;
access;
symbols;
locks; strict;
comment	@ * @;


1.17
date	2009.03.12.22.45.18;	author rjw;	state dead;
branches;
next	1.16;

1.16
date	2009.02.28.00.27.53;	author rjw;	state Exp;
branches;
next	1.15;

1.15
date	2009.02.27.23.12.29;	author rjw;	state Exp;
branches;
next	1.14;

1.14
date	2009.02.26.22.46.58;	author rjw;	state Exp;
branches;
next	1.13;

1.13
date	2009.02.20.17.18.43;	author rjw;	state Exp;
branches;
next	1.12;

1.12
date	2009.02.19.19.51.46;	author rjw;	state Exp;
branches;
next	1.11;

1.11
date	2009.02.14.00.51.28;	author rjw;	state Exp;
branches;
next	1.10;

1.10
date	2009.02.03.21.31.10;	author rjw;	state Exp;
branches;
next	1.9;

1.9
date	2009.01.29.22.06.37;	author rjw;	state Exp;
branches;
next	1.8;

1.8
date	2009.01.23.19.32.23;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2009.01.21.21.43.22;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2009.01.16.18.49.18;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2009.01.16.17.03.34;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2009.01.16.16.32.01;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2008.12.15.17.28.47;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2008.11.26.18.33.04;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2008.10.07.18.50.23;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.17
log
@Changed name of GlobalElement classes to GlobalComponent.
@
text
@//------------------------------------------------------------------------------
// WIT-J C++ Source File GlobalElement.C.
//
// Contains the implementation of class GlobalElement.
//------------------------------------------------------------------------------

#include   <GlobalElement.h>
#include     <Coordinator.h>
#include          <Demand.h>
#include <AllocTripleList.h>
#include       <StringWoa.h>
#include       <StrVecWoa.h>

#include             <wit.h>

#include          <string>

//------------------------------------------------------------------------------

WitJ::GlobalElement::GlobalElement (Coordinator * theCoord):

      Element   (theCoord),
      nPeriods_ (26)
   {
   theCoord->store (this);
   }

//------------------------------------------------------------------------------

WitJ::GlobalElement::~GlobalElement ()
   {
   }

//------------------------------------------------------------------------------

WitJ::GlobalElement * WitJ::GlobalElement::asGlobalElement ()
   {
   return this;
   }

//------------------------------------------------------------------------------

void WitJ::GlobalElement::setNPeriods (int theInt)
   {
   nPeriods_ = theInt;

   if (! extractInProgress ())
      witSetNPeriods (getWitRun (), theInt);
   }

//------------------------------------------------------------------------------

int WitJ::GlobalElement::getNPeriods ()
   {
   return nPeriods_;
   }

//------------------------------------------------------------------------------

void WitJ::GlobalElement::getPipSeq (AllocTripleList * theTripleList)
   {
   int             nTriples         (0);
   StrVecWoa       partNameVecWoa   (nTriples);
   StrVecWoa       demandNameVecWoa (nTriples);
   VecWoa <int>    theShipPerVecWoa;
   VecWoa <double> incShipVolVecWoa;
   int             theIdx;
   const char *    partName;
   const char *    demandName;
   int             shipPer;
   double          incShipVol;
   Demand *        theDemand;

   witGetPipSeqDbl (
      getWitRun (),
    & nTriples,
      partNameVecWoa  .getCVecAddr (),
      demandNameVecWoa.getCVecAddr (),
      theShipPerVecWoa.getCVecAddr (),
      incShipVolVecWoa.getCVecAddr ());

   theTripleList->prepareForTriples (nTriples);

   for (theIdx = 0; theIdx < nTriples; theIdx ++)
      {
      partName   = partNameVecWoa  [theIdx];
      demandName = demandNameVecWoa[theIdx];
      shipPer    = theShipPerVecWoa[theIdx];
      incShipVol = incShipVolVecWoa[theIdx];

      theDemand  =
         Demand::findInstance (getCoordinator (), partName, demandName);

      theTripleList->addTriple (theDemand, shipPer, incShipVol);
      }
   }

//------------------------------------------------------------------------------

void WitJ::GlobalElement::setTitle (const char * theCStr)
   {
   witSetTitle (getWitRun (), theCStr);
   }

//------------------------------------------------------------------------------

void WitJ::GlobalElement::getTitle (StringWoa & theStringWoa)
   {
   witGetTitle (getWitRun (), theStringWoa.getCStrAddr ());
   }

//------------------------------------------------------------------------------

void WitJ::GlobalElement::setSolverLogFileName (const char * theCStr)
   {
   witSetSolverLogFileName (getWitRun (), theCStr);
   }

//------------------------------------------------------------------------------

void WitJ::GlobalElement::getSolverLogFileName (StringWoa & theStringWoa)
   {
   witGetSolverLogFileName (getWitRun (), theStringWoa.getCStrAddr ());
   }

//------------------------------------------------------------------------------

void WitJ::GlobalElement::setOptInitMethod (const char * theMethodNameCStr)
   {
   std::string theMethodName;
   witAttr     theMethodAttr;

   theMethodName = theMethodNameCStr;

   theMethodAttr =
      (theMethodName == "ACCELERATED")?   WitACC_OPT_INIT_METHOD:
      (theMethodName ==   "HEURISTIC")?  WitHEUR_OPT_INIT_METHOD:
      (theMethodName ==    "SCHEDULE")? WitSCHED_OPT_INIT_METHOD:
      (theMethodName ==       "CRASH")? WitCRASH_OPT_INIT_METHOD:
                                                            NULL;

   EXCEPTION_ASSERT (theMethodAttr != NULL);

   witSetOptInitMethod (getWitRun (), theMethodAttr);
   }

//------------------------------------------------------------------------------
 
const char * WitJ::GlobalElement::getOptInitMethod ()
   {
   witAttr theMethodAttr;

   witGetOptInitMethod (getWitRun (), & theMethodAttr);

   return
      (theMethodAttr ==   WitACC_OPT_INIT_METHOD)? "ACCELERATED":
      (theMethodAttr ==  WitHEUR_OPT_INIT_METHOD)?   "HEURISTIC":
      (theMethodAttr == WitSCHED_OPT_INIT_METHOD)?    "SCHEDULE":
      (theMethodAttr == WitCRASH_OPT_INIT_METHOD)?       "CRASH":
                                                       "INVALID";
   }
@


1.16
log
@purgeData
@
text
@@


1.15
log
@purgeData
@
text
@d11 1
a11 1
#include          <VecWoa.h>
d109 1
a109 1
   witGetTitle (getWitRun (), theStringWoa.getCVecAddr ());
d123 1
a123 1
   witGetSolverLogFileName (getWitRun (), theStringWoa.getCVecAddr ());
@


1.14
log
@Removed C++ class Extractor.
@
text
@d91 2
a92 1
      theDemand  = getCoordinator ()->findDemand (partName, demandName);
@


1.13
log
@Added the AllocTripleList classes.
@
text
@d47 1
a47 1
   if (! getExtractMode ())
@


1.12
log
@Moved set/get-PipSeq from class Problem to class GlobalElement.
@
text
@d7 6
a12 6
#include <GlobalElement.h>
#include   <Coordinator.h>
#include        <Demand.h>
#include    <JavaObjRep.h>
#include        <VecWoa.h>
#include     <StrVecWoa.h>
d14 1
a14 1
#include           <wit.h>
d16 1
a16 1
#include        <string>
d60 1
a60 1
void WitJ::GlobalElement::getPipSeq ()
d82 1
a82 1
   JavaObjRep::prepAllocTripleList (getCoordinator (), nTriples);
d93 1
a93 1
      JavaObjRep::addAllocTriple (theDemand, shipPer, incShipVol);
@


1.11
log
@Implemented getPipSeq.
@
text
@d9 2
d12 1
d60 39
@


1.10
log
@OptInitMethod.
@
text
@d66 1
a66 1
   witGetTitle (getWitRun (), & theStringWoa);
d80 1
a80 1
   witGetSolverLogFileName (getWitRun (), & theStringWoa);
@


1.9
log
@Implemented Java class CppGateway.
@
text
@d13 2
d82 37
@


1.8
log
@Coordinator
@
text
@d15 1
a15 3
WitJ::GlobalElement::GlobalElement (
         Coordinator * theCoord,
         JavaObjRep *  theGlobalElementJOR):
d17 1
a17 1
      Element   (theCoord, theGlobalElementJOR),
@


1.7
log
@Change the names of the ProbMgr classes to Coordinator, etc.
@
text
@d16 1
a16 1
         Coordinator * theCoordinator,
d19 1
a19 1
      Element   (theCoordinator, theGlobalElementJOR),
d22 1
a22 1
   theCoordinator->store (this);
@


1.6
log
@ProbMgr classes.
@
text
@d8 1
a8 1
#include       <ProbMgr.h>
d16 2
a17 2
         ProbMgr *    theProbMgr,
         JavaObjRep * theGlobalElementJOR):
d19 1
a19 1
      Element   (theProbMgr, theGlobalElementJOR),
d22 1
a22 1
   theProbMgr->store (this);
@


1.5
log
@Change the mname of the ProbCtr classes to ProbMgr in both Java and C++.
@
text
@a7 1
#include       <Problem.h>
d22 1
a22 1
   theProbMgr->getProblem ()->store (this);
@


1.4
log
@Continued implementation of the ProbCtr classes.
@
text
@d9 1
a9 1
#include       <ProbCtr.h>
d17 1
a17 1
         ProbCtr *    theProbCtr,
d20 1
a20 1
      Element   (theProbCtr, theGlobalElementJOR),
d23 1
a23 1
   theProbCtr->getProblem ()->store (this);
@


1.3
log
@Updated some comments.
@
text
@d9 1
d17 1
a17 1
         Problem *    theProblem,
d20 1
a20 1
      Element   (theProblem, theGlobalElementJOR),
d23 1
a23 1
   theProblem->store (this);
@


1.2
log
@Removed C++ class Session.
@
text
@d4 1
a4 1
// Contains the definition of class GlobalElement.
@


1.1
log
@Name change.
@
text
@d19 1
a19 1
      Element   (theProblem->getSession (), theGlobalElementJOR),
@

