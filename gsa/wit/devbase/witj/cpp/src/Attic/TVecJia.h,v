head	1.6;
access;
symbols;
locks; strict;
comment	@ * @;


1.6
date	2008.05.21.22.09.35;	author rjw;	state dead;
branches;
next	1.5;

1.5
date	2008.05.21.18.07.13;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2008.05.19.16.15.30;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2008.05.16.17.07.05;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2008.05.15.19.45.18;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2008.05.13.20.54.12;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.6
log
@*** empty log message ***
@
text
@//------------------------------------------------------------------------------
// WIT-J C++ Header File TVecJia.h.
//
// Contains the declaration of class DblTVecJia.
//------------------------------------------------------------------------------

#ifndef TVecJiaH
#define TVecJiaH

#include <Includes.h>

#include      <jni.h>

//------------------------------------------------------------------------------
// Class DblTVecJia
//
// Represents an input argument from Java of type array of doubles of length
// nPeriods.
//------------------------------------------------------------------------------

namespace WitJ
{
class DblTVecJia
   {
   //---------------------------------------------------------------------------
   // Public member functions.
   //---------------------------------------------------------------------------

   public:

   explicit DblTVecJia (
         JNIEnv *        theJNIEnv,
         _jobject *      theCompCIJObj,
         _jdoubleArray * theJDoubleArray);
         
      //
      // Constructor.
      // Arguments:
      //    theJNIEnv:       The JNI environment.
      //    theCompCIJObj:   A C++ interface to a Component passed in from Java,
      //                     as a JNI jobject, where the array is to be passed
      //                     to the Component.
      //    theJDoubleArray: The double array passed in from Java,
      //                     as a JNI double array.

   ~DblTVecJia ();

   //---------------------------------------------------------------------------
   // Accessors.
   //---------------------------------------------------------------------------

   inline const double * myDblCVec () const
      {
      return myDblCVec_;
      }

   //---------------------------------------------------------------------------
   // Private member functions.
   //---------------------------------------------------------------------------

   private:

   DblTVecJia              (const DblTVecJia &);
   DblTVecJia & operator = (const DblTVecJia &);
      //
      // Not defined; prevents accidental copying and assignment.

   //---------------------------------------------------------------------------
   // Private member data.
   //---------------------------------------------------------------------------

   DblTVecJiaRepos * myRepos_;
      //
      // The DblTVecJiaRepos for this DblTVecJia.

   double * myDblCVec_;
      //
      // A copy of the double array passed in from Java, as a double c-vector.
   };
};
//
// End of namespace WitJ.

#endif
@


1.5
log
@*** empty log message ***
@
text
@@


1.4
log
@*** empty log message ***
@
text
@d33 2
a34 2
         _jdoubleArray * theJDoubleArray,
         _jobject *      theCompCIJObj);
a39 2
      //    theJDoubleArray: The double array passed in from Java,
      //                     as a JNI double array.
d43 2
@


1.3
log
@*** empty log message ***
@
text
@d31 1
a31 1
   DblTVecJia (
@


1.2
log
@*** empty log message ***
@
text
@d31 5
a35 1
   DblTVecJia (JNIEnv * theJNIEnv, _jdoubleArray * theJDoubleArray);
d42 3
d48 3
a50 5
   void attach (ProbCoord * theProbCoord);
      //
      // Associates this DblTVecJia with theProbCoord.
      // May only be invoked once.
      // Must be invoked before myDblCVec ().
a53 2
      assert (myDblCVec_ != NULL);

a71 8
   JNIEnv * const myJNIEnv_;
      //
      // The JNI environment for this DblTVecJia.

   _jdoubleArray * const myJDoubleArray_;
      //
      // The double array passed in from Java, as a JNI double array.

a74 1
      // NULL, before a ProbCoord has been attached.
@


1.1
log
@*** empty log message ***
@
text
@d41 1
a41 1
   void attach (Problem * theProblem);
d43 1
a43 1
      // Associates this DblTVecJia with theProblem.
d80 1
a80 1
      // NULL, before a Problem has been attached.
@

