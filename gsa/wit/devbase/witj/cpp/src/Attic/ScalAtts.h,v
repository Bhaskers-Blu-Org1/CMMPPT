head	1.11;
access;
symbols;
locks; strict;
comment	@ * @;


1.11
date	2008.07.22.21.08.59;	author rjw;	state dead;
branches;
next	1.10;

1.10
date	2008.07.22.20.38.25;	author rjw;	state Exp;
branches;
next	1.9;

1.9
date	2008.07.21.20.58.06;	author rjw;	state Exp;
branches;
next	1.8;

1.8
date	2008.07.15.18.40.59;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2008.07.11.23.02.52;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2008.07.07.22.59.31;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2008.07.01.16.09.22;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2008.06.27.21.43.23;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2008.06.27.16.34.06;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2008.06.19.22.16.54;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2008.06.18.21.28.18;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.11
log
@Attributes.
@
text
@//------------------------------------------------------------------------------
// WIT-J C++ Header File ScalAtts.h.
//
// Contains the declarations of the following class templates:
//
//    GlobalScalAtt <Value>
//      PartScalAtt <Value>
//    DemandScalAtt <Value>
//       OpnScalAtt <Value>
//    BomEntScalAtt <Value>
//       SubScalAtt <Value>
//    BopEntScalAtt <Value>
//------------------------------------------------------------------------------

#ifndef ScalAtts_h
#define ScalAtts_h

#include <Att.h>

#include <wit.h>

//------------------------------------------------------------------------------
// Class template GlobalScalAtt <Value>
//
// Represents an attribute of scalar type Value associated with the whole
// Problem.
//
// Class Hierarchy:
//
//    JAccObject
//       Att
//          GlobalScalAtt <Value>
//
// The definition is in ScalAtts.C.
//------------------------------------------------------------------------------

namespace WitJ
{
template <typename Value>
      class GlobalScalAtt: public Att
   {
   //---------------------------------------------------------------------------
   // Local typedefs.
   //
   // SetFuncPtr:
   //    A pointer to a WIT API function that sets      the value of an
   //    attribute of scalar type Value associated with the whole Problem
   //
   // GetFuncPtr:
   //    A pointer to a WIT API function that retrieves the value of an
   //    attribute of scalar type Value associated with the whole Problem.
   //---------------------------------------------------------------------------

   typedef
      WIT_DECLSPEC witReturnCode STDCALL (* SetFuncPtr) (
         WitRun * const,
         const Value);

   typedef
      WIT_DECLSPEC witReturnCode STDCALL (* GetFuncPtr) (
         WitRun * const,
         Value *);

   //---------------------------------------------------------------------------
   // Public member functions.
   //---------------------------------------------------------------------------

   public:

   explicit GlobalScalAtt (
         AttBldr *    theAttBldr,
         const char * theName,
         SetFuncPtr   theSetFuncPtr,
         GetFuncPtr   theGetFuncPtr);
      //
      // Constructor.

   virtual ~GlobalScalAtt ();
      //
      // Destructor.

   virtual void setValue     (Component *, Value);
   virtual void getValue     (Component *, Value &);
   virtual bool isAnInputAtt ();
      //
      // Overrides from class Att.

   //---------------------------------------------------------------------------
   // Private member functions.
   //---------------------------------------------------------------------------

   private:

   GlobalScalAtt              (const GlobalScalAtt &);
   GlobalScalAtt & operator = (const GlobalScalAtt &);
      //
      // Not defined; prevents accidental copying and assignment.

   //---------------------------------------------------------------------------
   // Private member data.
   //---------------------------------------------------------------------------

   const SetFuncPtr mySetFuncPtr_;
      //
      // A pointer to the WIT API function that sets      the value of the
      // attribute represented by this GlobalScalAtt.
      // NULL, if this GlobalScalAtt represents an output attribute.

   const GetFuncPtr myGetFuncPtr_;
      //
      // A pointer to the WIT API function that retrieves the value of the
      // attribute represented by this GlobalScalAtt.
   };
};
//
// End of namespace WitJ.

//------------------------------------------------------------------------------
// Class template PartScalAtt <Value>
//
// Represents an attribute of scalar type Value associated with a Part.
//
// Class Hierarchy:
//
//    JAccObject
//       Att
//          PartScalAtt <Value>
//
// The definition is in ScalAtts.C.
//------------------------------------------------------------------------------

namespace WitJ
{
template <typename Value>
      class PartScalAtt: public Att
   {
   //---------------------------------------------------------------------------
   // Local typedefs.
   //
   // SetFuncPtr:
   //    A pointer to a WIT API function that sets      the value of an
   //    attribute of scalar type Value associated with a Part.
   //
   // GetFuncPtr:
   //    A pointer to a WIT API function that retrieves the value of an
   //    attribute of scalar type Value associated with a Part.
   //---------------------------------------------------------------------------

   typedef
      WIT_DECLSPEC witReturnCode STDCALL (* SetFuncPtr) (
         WitRun * const,
         const char * const,
         const Value);

   typedef
      WIT_DECLSPEC witReturnCode STDCALL (* GetFuncPtr) (
         WitRun * const,
         const char * const,
         Value *);

   //---------------------------------------------------------------------------
   // Public member functions.
   //---------------------------------------------------------------------------

   public:

   explicit PartScalAtt (
         AttBldr *    theAttBldr,
         const char * theName,
         SetFuncPtr   theSetFuncPtr,
         GetFuncPtr   theGetFuncPtr);
      //
      // Constructor.

   virtual ~PartScalAtt ();
      //
      // Destructor.

   virtual void setValue     (Component *, Value);
   virtual void getValue     (Component *, Value &);
   virtual bool isAnInputAtt ();
      //
      // Overrides from class Att.

   //---------------------------------------------------------------------------
   // Private member functions.
   //---------------------------------------------------------------------------

   private:

   PartScalAtt              (const PartScalAtt &);
   PartScalAtt & operator = (const PartScalAtt &);
      //
      // Not defined; prevents accidental copying and assignment.

   //---------------------------------------------------------------------------
   // Private member data.
   //---------------------------------------------------------------------------

   const SetFuncPtr mySetFuncPtr_;
      //
      // A pointer to the WIT API function that sets      the value of the
      // attribute represented by this PartScalAtt.
      // NULL, if this PartScalAtt represents an output attribute.

   const GetFuncPtr myGetFuncPtr_;
      //
      // A pointer to the WIT API function that retrieves the value of the
      // attribute represented by this PartScalAtt.
   };
};
//
// End of namespace WitJ.

//------------------------------------------------------------------------------
// Class template DemandScalAtt <Value>
//
// Represents an attribute of scalar type Value associated with a Demand.
//
// Class Hierarchy:
//
//    JAccObject
//       Att
//          DemandScalAtt <Value>
//
// The definition is in ScalAtts.C.
//------------------------------------------------------------------------------

namespace WitJ
{
template <typename Value>
      class DemandScalAtt: public Att
   {
   //---------------------------------------------------------------------------
   // Local typedefs.
   //
   // SetFuncPtr:
   //    A pointer to a WIT API function that sets      the value of an
   //    attribute of scalar type Value associated with a Demand.
   //
   // GetFuncPtr:
   //    A pointer to a WIT API function that retrieves the value of an
   //    attribute of scalar type Value associated with a Demand.
   //---------------------------------------------------------------------------

   typedef
      WIT_DECLSPEC witReturnCode STDCALL (* SetFuncPtr) (
         WitRun * const,
         const char * const,
         const char * const,
         const Value);

   typedef
      WIT_DECLSPEC witReturnCode STDCALL (* GetFuncPtr) (
         WitRun * const,
         const char * const,
         const char * const,
         Value *);

   //---------------------------------------------------------------------------
   // Public member functions.
   //---------------------------------------------------------------------------

   public:

   explicit DemandScalAtt (
         AttBldr *    theAttBldr,
         const char * theName,
         SetFuncPtr   theSetFuncPtr,
         GetFuncPtr   theGetFuncPtr);
      //
      // Constructor.

   virtual ~DemandScalAtt ();
      //
      // Destructor.

   virtual void setValue     (Component *, Value);
   virtual void getValue     (Component *, Value &);
   virtual bool isAnInputAtt ();
      //
      // Overrides from class Att.

   //---------------------------------------------------------------------------
   // Private member functions.
   //---------------------------------------------------------------------------

   private:

   DemandScalAtt              (const DemandScalAtt &);
   DemandScalAtt & operator = (const DemandScalAtt &);
      //
      // Not defined; prevents accidental copying and assignment.

   //---------------------------------------------------------------------------
   // Private member data.
   //---------------------------------------------------------------------------

   const SetFuncPtr mySetFuncPtr_;
      //
      // A pointer to the WIT API function that sets      the value of the
      // attribute represented by this DemandScalAtt.
      // NULL, if this DemandScalAtt represents an output attribute.

   const GetFuncPtr myGetFuncPtr_;
      //
      // A pointer to the WIT API function that retrieves the value of the
      // attribute represented by this DemandScalAtt.
   };
};
//
// End of namespace WitJ.

//------------------------------------------------------------------------------
// Class template OpnScalAtt <Value>
//
// Represents an attribute of scalar type Value associated with an Operation.
//
// Class Hierarchy:
//
//    JAccObject
//       Att
//          OpnScalAtt <Value>
//
// The definition is in ScalAtts.C.
//------------------------------------------------------------------------------

namespace WitJ
{
template <typename Value>
      class OpnScalAtt: public Att
   {
   //---------------------------------------------------------------------------
   // Local typedefs.
   //
   // SetFuncPtr:
   //    A pointer to a WIT API function that sets      the value of an
   //    attribute of scalar type Value associated with an Operation.
   //
   // GetFuncPtr:
   //    A pointer to a WIT API function that retrieves the value of an
   //    attribute of scalar type Value associated with an Operation.
   //---------------------------------------------------------------------------

   typedef
      WIT_DECLSPEC witReturnCode STDCALL (* SetFuncPtr) (
         WitRun * const,
         const char * const,
         const Value);

   typedef
      WIT_DECLSPEC witReturnCode STDCALL (* GetFuncPtr) (
         WitRun * const,
         const char * const,
         Value *);

   //---------------------------------------------------------------------------
   // Public member functions.
   //---------------------------------------------------------------------------

   public:

   explicit OpnScalAtt (
         AttBldr *    theAttBldr,
         const char * theName,
         SetFuncPtr   theSetFuncPtr,
         GetFuncPtr   theGetFuncPtr);
      //
      // Constructor.

   virtual ~OpnScalAtt ();
      //
      // Destructor.

   virtual void setValue     (Component *, Value);
   virtual void getValue     (Component *, Value &);
   virtual bool isAnInputAtt ();
      //
      // Overrides from class Att.

   //---------------------------------------------------------------------------
   // Private member functions.
   //---------------------------------------------------------------------------

   private:

   OpnScalAtt              (const OpnScalAtt &);
   OpnScalAtt & operator = (const OpnScalAtt &);
      //
      // Not defined; prevents accidental copying and assignment.

   //---------------------------------------------------------------------------
   // Private member data.
   //---------------------------------------------------------------------------

   const SetFuncPtr mySetFuncPtr_;
      //
      // A pointer to the WIT API function that sets      the value of the
      // attribute represented by this OpnScalAtt.
      // NULL, if this OpnScalAtt represents an output attribute.

   const GetFuncPtr myGetFuncPtr_;
      //
      // A pointer to the WIT API function that retrieves the value of the
      // attribute represented by this OpnScalAtt.
   };
};
//
// End of namespace WitJ.

//------------------------------------------------------------------------------
// Class template BomEntScalAtt <Value>
//
// Represents an attribute of scalar type Value associated with a BopEntry.
//
// Class Hierarchy:
//
//    JAccObject
//       Att
//          BomEntScalAtt <Value>
//
// The definition is in ScalAtts.C.
//------------------------------------------------------------------------------

namespace WitJ
{
template <typename Value>
      class BomEntScalAtt: public Att
   {
   //---------------------------------------------------------------------------
   // Local typedefs.
   //
   // SetFuncPtr:
   //    A pointer to a WIT API function that sets      the value of an
   //    attribute of scalar type Value associated with a BopEntry.
   //
   // GetFuncPtr:
   //    A pointer to a WIT API function that retrieves the value of an
   //    attribute of scalar type Value associated with a BopEntry.
   //---------------------------------------------------------------------------

   typedef
      WIT_DECLSPEC witReturnCode STDCALL (* SetFuncPtr) (
         WitRun * const,
         const char * const,
         const int,
         const Value);

   typedef
      WIT_DECLSPEC witReturnCode STDCALL (* GetFuncPtr) (
         WitRun * const,
         const char * const,
         const int,
         Value *);

   //---------------------------------------------------------------------------
   // Public member functions.
   //---------------------------------------------------------------------------

   public:

   explicit BomEntScalAtt (
         AttBldr *    theAttBldr,
         const char * theName,
         SetFuncPtr   theSetFuncPtr,
         GetFuncPtr   theGetFuncPtr);
      //
      // Constructor.

   virtual ~BomEntScalAtt ();
      //
      // Destructor.

   virtual void setValue     (Component *, Value);
   virtual void getValue     (Component *, Value &);
   virtual bool isAnInputAtt ();
      //
      // Overrides from class Att.

   //---------------------------------------------------------------------------
   // Private member functions.
   //---------------------------------------------------------------------------

   private:

   BomEntScalAtt              (const BomEntScalAtt &);
   BomEntScalAtt & operator = (const BomEntScalAtt &);
      //
      // Not defined; prevents accidental copying and assignment.

   //---------------------------------------------------------------------------
   // Private member data.
   //---------------------------------------------------------------------------

   const SetFuncPtr mySetFuncPtr_;
      //
      // A pointer to the WIT API function that sets      the value of the
      // attribute represented by this BomEntScalAtt.
      // NULL, if this BomEntScalAtt represents an output attribute.

   const GetFuncPtr myGetFuncPtr_;
      //
      // A pointer to the WIT API function that retrieves the value of the
      // attribute represented by this BomEntScalAtt.
   };
};
//
// End of namespace WitJ.

//------------------------------------------------------------------------------
// Class template SubScalAtt <Value>
//
// Represents an attribute of scalar type Value associated with a Substitute.
//
// Class Hierarchy:
//
//    JAccObject
//       Att
//          SubScalAtt <Value>
//
// The definition is in ScalAtts.C.
//------------------------------------------------------------------------------

namespace WitJ
{
template <typename Value>
      class SubScalAtt: public Att
   {
   //---------------------------------------------------------------------------
   // Local typedefs.
   //
   // SetFuncPtr:
   //    A pointer to a WIT API function that sets      the value of an
   //    attribute of scalar type Value associated with a Substitute.
   //
   // GetFuncPtr:
   //    A pointer to a WIT API function that retrieves the value of an
   //    attribute of scalar type Value associated with a Substitute.
   //---------------------------------------------------------------------------

   typedef
      WIT_DECLSPEC witReturnCode STDCALL (* SetFuncPtr) (
         WitRun * const,
         const char * const,
         const int,
         const int,
         const Value);

   typedef
      WIT_DECLSPEC witReturnCode STDCALL (* GetFuncPtr) (
         WitRun * const,
         const char * const,
         const int,
         const int,
         Value *);

   //---------------------------------------------------------------------------
   // Public member functions.
   //---------------------------------------------------------------------------

   public:

   explicit SubScalAtt (
         AttBldr *    theAttBldr,
         const char * theName,
         SetFuncPtr   theSetFuncPtr,
         GetFuncPtr   theGetFuncPtr);
      //
      // Constructor.

   virtual ~SubScalAtt ();
      //
      // Destructor.

   virtual void setValue     (Component *, Value);
   virtual void getValue     (Component *, Value &);
   virtual bool isAnInputAtt ();
      //
      // Overrides from class Att.

   //---------------------------------------------------------------------------
   // Private member functions.
   //---------------------------------------------------------------------------

   private:

   SubScalAtt              (const SubScalAtt &);
   SubScalAtt & operator = (const SubScalAtt &);
      //
      // Not defined; prevents accidental copying and assignment.

   //---------------------------------------------------------------------------
   // Private member data.
   //---------------------------------------------------------------------------

   const SetFuncPtr mySetFuncPtr_;
      //
      // A pointer to the WIT API function that sets      the value of the
      // attribute represented by this SubScalAtt.
      // NULL, if this SubScalAtt represents an output attribute.

   const GetFuncPtr myGetFuncPtr_;
      //
      // A pointer to the WIT API function that retrieves the value of the
      // attribute represented by this SubScalAtt.
   };
};
//
// End of namespace WitJ.

//------------------------------------------------------------------------------
// Class template BopEntScalAtt <Value>
//
// Represents an attribute of scalar type Value associated with a BopEntry.
//
// Class Hierarchy:
//
//    JAccObject
//       Att
//          BopEntScalAtt <Value>
//
// The definition is in ScalAtts.C.
//------------------------------------------------------------------------------

namespace WitJ
{
template <typename Value>
      class BopEntScalAtt: public Att
   {
   //---------------------------------------------------------------------------
   // Local typedefs.
   //
   // SetFuncPtr:
   //    A pointer to a WIT API function that sets      the value of an
   //    attribute of scalar type Value associated with a BopEntry.
   //
   // GetFuncPtr:
   //    A pointer to a WIT API function that retrieves the value of an
   //    attribute of scalar type Value associated with a BopEntry.
   //---------------------------------------------------------------------------

   typedef
      WIT_DECLSPEC witReturnCode STDCALL (* SetFuncPtr) (
         WitRun * const,
         const char * const,
         const int,
         const Value);

   typedef
      WIT_DECLSPEC witReturnCode STDCALL (* GetFuncPtr) (
         WitRun * const,
         const char * const,
         const int,
         Value *);

   //---------------------------------------------------------------------------
   // Public member functions.
   //---------------------------------------------------------------------------

   public:

   explicit BopEntScalAtt (
         AttBldr *    theAttBldr,
         const char * theName,
         SetFuncPtr   theSetFuncPtr,
         GetFuncPtr   theGetFuncPtr);
      //
      // Constructor.

   virtual ~BopEntScalAtt ();
      //
      // Destructor.

   virtual void setValue     (Component *, Value);
   virtual void getValue     (Component *, Value &);
   virtual bool isAnInputAtt ();
      //
      // Overrides from class Att.

   //---------------------------------------------------------------------------
   // Private member functions.
   //---------------------------------------------------------------------------

   private:

   BopEntScalAtt              (const BopEntScalAtt &);
   BopEntScalAtt & operator = (const BopEntScalAtt &);
      //
      // Not defined; prevents accidental copying and assignment.

   //---------------------------------------------------------------------------
   // Private member data.
   //---------------------------------------------------------------------------

   const SetFuncPtr mySetFuncPtr_;
      //
      // A pointer to the WIT API function that sets      the value of the
      // attribute represented by this BopEntScalAtt.
      // NULL, if this BopEntScalAtt represents an output attribute.

   const GetFuncPtr myGetFuncPtr_;
      //
      // A pointer to the WIT API function that retrieves the value of the
      // attribute represented by this BopEntScalAtt.
   };
};
//
// End of namespace WitJ.

#endif
@


1.10
log
@Attributes.
@
text
@@


1.9
log
@Attributes.
@
text
@d45 1
a45 1
   // WitSetFuncPtr:
d49 1
a49 1
   // WitGetFuncPtr:
d55 1
a55 1
      WIT_DECLSPEC witReturnCode STDCALL (* WitSetFuncPtr) (
d60 1
a60 1
      WIT_DECLSPEC witReturnCode STDCALL (* WitGetFuncPtr) (
d71 4
a74 4
         AttBldr *     theAttBldr,
         const char *  theName,
         WitSetFuncPtr theSetFuncPtr,
         WitGetFuncPtr theGetFuncPtr);
d103 1
a103 1
   const WitSetFuncPtr mySetFuncPtr_;
d109 1
a109 1
   const WitGetFuncPtr myGetFuncPtr_;
d140 1
a140 1
   // WitSetFuncPtr:
d144 1
a144 1
   // WitGetFuncPtr:
d150 1
a150 1
      WIT_DECLSPEC witReturnCode STDCALL (* WitSetFuncPtr) (
d156 1
a156 1
      WIT_DECLSPEC witReturnCode STDCALL (* WitGetFuncPtr) (
d168 4
a171 4
         AttBldr *     theAttBldr,
         const char *  theName,
         WitSetFuncPtr theSetFuncPtr,
         WitGetFuncPtr theGetFuncPtr);
d200 1
a200 1
   const WitSetFuncPtr mySetFuncPtr_;
d206 1
a206 1
   const WitGetFuncPtr myGetFuncPtr_;
d237 1
a237 1
   // WitSetFuncPtr:
d241 1
a241 1
   // WitGetFuncPtr:
d247 1
a247 1
      WIT_DECLSPEC witReturnCode STDCALL (* WitSetFuncPtr) (
d254 1
a254 1
      WIT_DECLSPEC witReturnCode STDCALL (* WitGetFuncPtr) (
d267 4
a270 4
         AttBldr *     theAttBldr,
         const char *  theName,
         WitSetFuncPtr theSetFuncPtr,
         WitGetFuncPtr theGetFuncPtr);
d299 1
a299 1
   const WitSetFuncPtr mySetFuncPtr_;
d305 1
a305 1
   const WitGetFuncPtr myGetFuncPtr_;
d336 1
a336 1
   // WitSetFuncPtr:
d340 1
a340 1
   // WitGetFuncPtr:
d346 1
a346 1
      WIT_DECLSPEC witReturnCode STDCALL (* WitSetFuncPtr) (
d352 1
a352 1
      WIT_DECLSPEC witReturnCode STDCALL (* WitGetFuncPtr) (
d364 4
a367 4
         AttBldr *     theAttBldr,
         const char *  theName,
         WitSetFuncPtr theSetFuncPtr,
         WitGetFuncPtr theGetFuncPtr);
d396 1
a396 1
   const WitSetFuncPtr mySetFuncPtr_;
d402 1
a402 1
   const WitGetFuncPtr myGetFuncPtr_;
d433 1
a433 1
   // WitSetFuncPtr:
d437 1
a437 1
   // WitGetFuncPtr:
d443 1
a443 1
      WIT_DECLSPEC witReturnCode STDCALL (* WitSetFuncPtr) (
d450 1
a450 1
      WIT_DECLSPEC witReturnCode STDCALL (* WitGetFuncPtr) (
d463 4
a466 4
         AttBldr *     theAttBldr,
         const char *  theName,
         WitSetFuncPtr theSetFuncPtr,
         WitGetFuncPtr theGetFuncPtr);
d495 1
a495 1
   const WitSetFuncPtr mySetFuncPtr_;
d501 1
a501 1
   const WitGetFuncPtr myGetFuncPtr_;
d532 1
a532 1
   // WitSetFuncPtr:
d536 1
a536 1
   // WitGetFuncPtr:
d542 1
a542 1
      WIT_DECLSPEC witReturnCode STDCALL (* WitSetFuncPtr) (
d550 1
a550 1
      WIT_DECLSPEC witReturnCode STDCALL (* WitGetFuncPtr) (
d564 4
a567 4
         AttBldr *     theAttBldr,
         const char *  theName,
         WitSetFuncPtr theSetFuncPtr,
         WitGetFuncPtr theGetFuncPtr);
d596 1
a596 1
   const WitSetFuncPtr mySetFuncPtr_;
d602 1
a602 1
   const WitGetFuncPtr myGetFuncPtr_;
d633 1
a633 1
   // WitSetFuncPtr:
d637 1
a637 1
   // WitGetFuncPtr:
d643 1
a643 1
      WIT_DECLSPEC witReturnCode STDCALL (* WitSetFuncPtr) (
d650 1
a650 1
      WIT_DECLSPEC witReturnCode STDCALL (* WitGetFuncPtr) (
d663 4
a666 4
         AttBldr *     theAttBldr,
         const char *  theName,
         WitSetFuncPtr theSetFuncPtr,
         WitGetFuncPtr theGetFuncPtr);
d695 1
a695 1
   const WitSetFuncPtr mySetFuncPtr_;
d701 1
a701 1
   const WitGetFuncPtr myGetFuncPtr_;
@


1.8
log
@Attributes.
@
text
@d6 5
d23 488
d521 1
a521 1
// The definition is in VecAtts.C.
d622 1
a622 1
// The definition is in VecAtts.C.
@


1.7
log
@Attribute.
@
text
@d28 1
a28 1
// The definition is in VecAtts-D.h.
d129 1
a129 1
// The definition is in VecAtts-D.h.
@


1.6
log
@Attributes.
@
text
@d4 4
a7 1
// Contains the declaration of class template SubScalAtt <Value>.
d20 1
a20 1
// Represents an attribute of scalar type Value associated with a SubEntry.
d41 1
a41 1
   //    attribute of scalar type Value associated with a SubEntry.
d45 1
a45 1
   //    attribute of scalar type Value associated with a SubEntry.
d118 99
@


1.5
log
@Changed the names of access functions beginning with "my"
to begin with "get".
@
text
@d79 3
a81 4
   virtual void         setValue         (Component *, Value);
   virtual void         getValue         (Component *, Value &);
   virtual bool         isAnInputAtt     ();
   virtual const char * getCompClassName ();
@


1.4
log
@Self-Test.
@
text
@d79 4
a82 4
   virtual void         setValue        (Component *, Value);
   virtual void         getValue        (Component *, Value &);
   virtual bool         isAnInputAtt    ();
   virtual const char * myCompClassName ();
@


1.3
log
@Initial implementation of self-test.
@
text
@d79 4
a82 3
   virtual void setValue     (Component *, Value);
   virtual void getValue     (Component *, Value &);
   virtual bool isAnInputAtt ();
@


1.2
log
@Implemented of class DblVecOutAttAcc.
@
text
@d79 3
a81 2
   virtual void setValue (Component *, Value);
   virtual void getValue (Component *, Value &);
@


1.1
log
@Attributes.
@
text
@d103 1
@

