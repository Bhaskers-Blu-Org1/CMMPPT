head	1.29;
access;
symbols;
locks; strict;
comment	@ * @;


1.29
date	2008.09.26.22.50.16;	author rjw;	state dead;
branches;
next	1.28;

1.28
date	2008.09.26.20.46.04;	author rjw;	state Exp;
branches;
next	1.27;

1.27
date	2008.09.26.20.31.19;	author rjw;	state Exp;
branches;
next	1.26;

1.26
date	2008.09.25.18.52.26;	author rjw;	state Exp;
branches;
next	1.25;

1.25
date	2008.09.24.16.26.36;	author rjw;	state Exp;
branches;
next	1.24;

1.24
date	2008.09.23.16.42.19;	author rjw;	state Exp;
branches;
next	1.23;

1.23
date	2008.09.19.16.29.50;	author rjw;	state Exp;
branches;
next	1.22;

1.22
date	2008.09.15.16.20.38;	author rjw;	state Exp;
branches;
next	1.21;

1.21
date	2008.09.12.18.57.24;	author rjw;	state Exp;
branches;
next	1.20;

1.20
date	2008.09.09.20.04.07;	author rjw;	state Exp;
branches;
next	1.19;

1.19
date	2008.09.09.18.59.58;	author rjw;	state Exp;
branches;
next	1.18;

1.18
date	2008.09.09.15.38.19;	author rjw;	state Exp;
branches;
next	1.17;

1.17
date	2008.09.08.19.45.34;	author rjw;	state Exp;
branches;
next	1.16;

1.16
date	2008.08.28.18.30.37;	author rjw;	state Exp;
branches;
next	1.15;

1.15
date	2008.08.27.15.30.45;	author rjw;	state Exp;
branches;
next	1.14;

1.14
date	2008.08.06.18.48.21;	author rjw;	state Exp;
branches;
next	1.13;

1.13
date	2008.07.18.15.49.40;	author rjw;	state Exp;
branches;
next	1.12;

1.12
date	2008.06.26.19.18.06;	author rjw;	state Exp;
branches;
next	1.11;

1.11
date	2008.05.29.15.51.16;	author rjw;	state Exp;
branches;
next	1.10;

1.10
date	2008.05.28.18.10.11;	author rjw;	state Exp;
branches;
next	1.9;

1.9
date	2008.05.22.21.02.58;	author rjw;	state Exp;
branches;
next	1.8;

1.8
date	2008.05.22.14.19.16;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2008.05.21.22.09.34;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2008.05.21.14.33.48;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2008.05.20.18.16.39;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2008.05.19.22.20.54;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2008.05.16.17.07.05;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2008.05.15.19.45.16;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2008.05.13.20.54.11;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.29
log
@Changed name of C++ class JAccObject to JavaAccObj.
@
text
@//------------------------------------------------------------------------------
// WIT-J C++ Source File JAccObject.C.
//
// Contains the definition of class JAccObject.
//------------------------------------------------------------------------------

#include    <Session.h>
#include    <Problem.h>
#include <JavaObjRep.h>
#include  <Extractor.h>

//------------------------------------------------------------------------------

const int WitJ::JAccObject::validMark_ = 1234567890;

//------------------------------------------------------------------------------

WitJ::JAccObject::~JAccObject ()
   {
   validityMarker_ = 0;

   delete myJavaObjRep_;
   }

//------------------------------------------------------------------------------

WitJ::Session * WitJ::JAccObject::asSession ()
   {
   witjAssert (false);

   return NULL;
   }

//------------------------------------------------------------------------------

WitJ::MessageMgr * WitJ::JAccObject::asMessageMgr ()
   {
   witjAssert (false);

   return NULL;
   }

//------------------------------------------------------------------------------

WitJ::Problem * WitJ::JAccObject::asProblem ()
   {
   witjAssert (false);

   return NULL;
   }

//------------------------------------------------------------------------------

WitJ::Component * WitJ::JAccObject::asComponent ()
   {
   witjAssert (false);

   return NULL;
   }

//------------------------------------------------------------------------------

WitJ::GlobalComp * WitJ::JAccObject::asGlobalComp ()
   {
   witjAssert (false);

   return NULL;
   }

//------------------------------------------------------------------------------

WitJ::Part * WitJ::JAccObject::asPart ()
   {
   witjAssert (false);

   return NULL;
   }

//------------------------------------------------------------------------------

WitJ::Demand * WitJ::JAccObject::asDemand ()
   {
   witjAssert (false);

   return NULL;
   }

//------------------------------------------------------------------------------

WitJ::Operation * WitJ::JAccObject::asOperation ()
   {
   witjAssert (false);

   return NULL;
   }

//------------------------------------------------------------------------------

WitJ::BomEntry * WitJ::JAccObject::asBomEntry ()
   {
   witjAssert (false);

   return NULL;
   }

//------------------------------------------------------------------------------

WitJ::Substitute * WitJ::JAccObject::asSubstitute ()
   {
   witjAssert (false);

   return NULL;
   }

//------------------------------------------------------------------------------

WitJ::BopEntry * WitJ::JAccObject::asBopEntry ()
   {
   witjAssert (false);

   return NULL;
   }

//------------------------------------------------------------------------------

WitJ::AttBldr * WitJ::JAccObject::asAttBldr ()
   {
   witjAssert (false);

   return NULL;
   }

//------------------------------------------------------------------------------

WitJ::Att * WitJ::JAccObject::asAtt ()
   {
   witjAssert (false);

   return NULL;
   }

//------------------------------------------------------------------------------

void  WitJ::JAccObject::attach (JavaObjRep * theJavaObjRep)
   {
   witjAssert (myJavaObjRep_ == NULL);

   myJavaObjRep_ = theJavaObjRep;
   }

//------------------------------------------------------------------------------

WitRun * WitJ::JAccObject::getWitRun ()
   {
   return mySession_->getWitRun ();
   }

//------------------------------------------------------------------------------

bool WitJ::JAccObject::getExtractMode ()
   {
   return
      mySession_->
         getProblem ()->
            getExtractor ()->
               getExtractMode ();
   }

//------------------------------------------------------------------------------

WitJ::JAccObject::JAccObject (Session * theSession):

      myJavaObjRep_   (NULL),
      mySession_      (theSession),
      validityMarker_ (validMark_)
   {
   }
@


1.28
log
@Minor revision.
@
text
@@


1.27
log
@Changed name of C++ class JavaLink to JavaObjRep.
@
text
@d144 1
a144 1
void  WitJ::JAccObject::store (JavaObjRep * theJavaObjRep)
@


1.26
log
@Continued implementation of nPeriods extraction.
@
text
@d7 4
a10 4
#include   <Session.h>
#include   <Problem.h>
#include  <JavaLink.h>
#include <Extractor.h>
d22 1
a22 1
   delete myJavaLink_;
d144 1
a144 1
void  WitJ::JAccObject::store (JavaLink * theJavaLink)
d146 1
a146 1
   witjAssert (myJavaLink_ == NULL);
d148 1
a148 1
   myJavaLink_ = theJavaLink;
d173 1
a173 1
      myJavaLink_     (NULL),
@


1.25
log
@Intitial implementation of extraction of nPeriods.
@
text
@d9 1
d21 2
@


1.24
log
@Continued implementation of C++ class JavaLink.
@
text
@d7 3
a9 1
#include <Session.h>
d157 11
@


1.23
log
@Class name change.
@
text
@d139 9
d157 1
@


1.22
log
@Class name changes.
@
text
@d31 1
a31 1
WitJ::MsgMgr * WitJ::JAccObject::asMsgMgr ()
@


1.21
log
@Initial implementation of MsgHandler classes.
@
text
@d31 1
a31 1
WitJ::MsgHandler * WitJ::JAccObject::asMsgHandler ()
@


1.20
log
@Minor update.
@
text
@d22 10
a31 1
WitJ::Problem * WitJ::JAccObject::asProblem ()
d40 1
a40 1
WitJ::Session * WitJ::JAccObject::asSession ()
@


1.19
log
@Renamed Java class ProbCoordCI to SessionCI.
Renamed C++  class ProbCoord   to Session.
@
text
@d7 1
a7 1
#include <JAccObject.h>
d130 7
@


1.18
log
@Removed Java class SessionCI.
Removed C++  class Session.
Kept the empty source files.
@
text
@d31 1
a31 1
WitJ::ProbCoord * WitJ::JAccObject::asProbCoord ()
d130 1
a130 1
WitJ::JAccObject::JAccObject (ProbCoord * theProbCoord):
d132 1
a132 1
      myProbCoord_    (theProbCoord),
@


1.17
log
@Initial implementation of the Session classes.
@
text
@a21 9
WitJ::Session * WitJ::JAccObject::asSession ()
   {
   witjAssert (false);

   return NULL;
   }

//------------------------------------------------------------------------------

@


1.16
log
@Name change: Global --> GlobalComp.
@
text
@d22 9
@


1.15
log
@Attributes.
@
text
@d49 1
a49 1
WitJ::Global * WitJ::JAccObject::asGlobal ()
@


1.14
log
@Classes Global and GlobalCI.
@
text
@d22 1
a22 1
WitJ::Problem * WitJ::JAccObject::thisProblem ()
d31 1
a31 1
WitJ::ProbCoord * WitJ::JAccObject::thisProbCoord ()
d40 1
a40 1
WitJ::Component * WitJ::JAccObject::thisComponent ()
d49 1
a49 1
WitJ::Global * WitJ::JAccObject::thisGlobal ()
d58 1
a58 1
WitJ::Part * WitJ::JAccObject::thisPart ()
d67 1
a67 1
WitJ::Demand * WitJ::JAccObject::thisDemand ()
d76 1
a76 1
WitJ::Operation * WitJ::JAccObject::thisOperation ()
d85 1
a85 1
WitJ::BomEntry * WitJ::JAccObject::thisBomEntry ()
d94 1
a94 1
WitJ::Substitute * WitJ::JAccObject::thisSubstitute ()
d103 1
a103 1
WitJ::BopEntry * WitJ::JAccObject::thisBopEntry ()
d112 1
a112 1
WitJ::AttBldr * WitJ::JAccObject::thisAttBldr ()
d121 1
a121 1
WitJ::Att * WitJ::JAccObject::thisAtt ()
@


1.13
log
@Attributes.
@
text
@d49 1
a49 1
WitJ::GlobalComp * WitJ::JAccObject::thisGlobalComp ()
@


1.12
log
@Attributes.
@
text
@d11 4
d17 1
d132 2
a133 1
      myProbCoord_ (theProbCoord)
@


1.11
log
@Initial implementation of class AttBldr.
@
text
@d19 1
a19 1
   assert (false);
d28 1
a28 1
   assert (false);
d37 1
a37 1
   assert (false);
d46 1
a46 1
   assert (false);
d55 1
a55 1
   assert (false);
d64 1
a64 1
   assert (false);
d73 1
a73 1
   assert (false);
d82 1
a82 1
   assert (false);
d91 1
a91 1
   assert (false);
d100 1
a100 1
   assert (false);
d109 1
a109 1
   assert (false);
d118 1
a118 1
   assert (false);
@


1.10
log
@Initial implementation of attributes.
@
text
@d107 9
@


1.9
log
@*** empty log message ***
@
text
@d107 9
@


1.8
log
@*** empty log message ***
@
text
@d89 9
@


1.7
log
@*** empty log message ***
@
text
@d89 9
@


1.6
log
@*** empty log message ***
@
text
@d89 3
a91 1
WitJ::JAccObject::JAccObject ()
@


1.5
log
@*** empty log message ***
@
text
@a16 56
void WitJ::JAccObject::getDerivedInstance (Problem * &)
   {
   assert (false);
   }

//------------------------------------------------------------------------------

void WitJ::JAccObject::getDerivedInstance (ProbCoord * &)
   {
   assert (false);
   }

//------------------------------------------------------------------------------

void WitJ::JAccObject::getDerivedInstance (Component * &)
   {
   assert (false);
   }

//------------------------------------------------------------------------------

void WitJ::JAccObject::getDerivedInstance (GlobalComp * &)
   {
   assert (false);
   }

//------------------------------------------------------------------------------

void WitJ::JAccObject::getDerivedInstance (Part * &)
   {
   assert (false);
   }

//------------------------------------------------------------------------------

void WitJ::JAccObject::getDerivedInstance (Demand * &)
   {
   assert (false);
   }

//------------------------------------------------------------------------------

void WitJ::JAccObject::getDerivedInstance (Operation * &)
   {
   assert (false);
   }

//------------------------------------------------------------------------------

void WitJ::JAccObject::getDerivedInstance (BomEntry * &)
   {
   assert (false);
   }

//------------------------------------------------------------------------------

@


1.4
log
@*** empty log message ***
@
text
@d91 1
a91 1
WitJ::Component * WitJ::JAccObject::thisComp ()
d127 1
a127 1
WitJ::Operation * WitJ::JAccObject::thisOpn ()
d136 1
a136 1
WitJ::BomEntry * WitJ::JAccObject::thisBomEnt ()
@


1.3
log
@*** empty log message ***
@
text
@d73 72
@


1.2
log
@*** empty log message ***
@
text
@d31 7
@


1.1
log
@*** empty log message ***
@
text
@d24 7
@

