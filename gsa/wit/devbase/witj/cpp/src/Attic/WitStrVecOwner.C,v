head	1.4;
access;
symbols;
locks; strict;
comment	@ * @;


1.4
date	2011.03.30.23.23.03;	author rjw;	state dead;
branches;
next	1.3;

1.3
date	2011.03.11.23.49.24;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2010.04.23.22.41.23;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2010.04.20.18.22.34;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Revised set/get ObjectiveList for ArrayList <String>.
@
text
@//------------------------------------------------------------------------------
// WIT-J C++ Source File WitStrVecOwner.C.
//
// Contains the implementation of class WitStrVecOwner.
//------------------------------------------------------------------------------

#include <WitStrVecOwner.h>

#include            <wit.h>

//------------------------------------------------------------------------------
// Definition of class WitStrVecOwner.
//------------------------------------------------------------------------------

WitJ::WitStrVecOwner::WitStrVecOwner ():

         myWitStrVec_ (NULL),
         myLength_    (0)
   {
   }

//------------------------------------------------------------------------------

WitJ::WitStrVecOwner::~WitStrVecOwner ()
   {
   clear ();
   }

//------------------------------------------------------------------------------

void WitJ::WitStrVecOwner::acquireWitStrVec (
      char * * theWitStrVec,
      int      theLength)
   {
   clear ();

   myWitStrVec_ = theWitStrVec;
   myLength_    = theLength;
   }

//------------------------------------------------------------------------------

const char * WitJ::WitStrVecOwner::operator[] (int theIdx) const
   {
   EXCEPTION_ASSERT (myWitStrVec_ != NULL);
   EXCEPTION_ASSERT (theIdx       >= 0);
   EXCEPTION_ASSERT (theIdx       <  myLength_);

   return myWitStrVec_[theIdx];
   }

//------------------------------------------------------------------------------

void WitJ::WitStrVecOwner::clear ()
   {
   if (myWitStrVec_ != NULL)
      {
      freeWitStrVec (myWitStrVec_, myLength_);

      myWitStrVec_ = NULL;
      }
   }
@


1.3
log
@Problem.getCriticalList ()
@
text
@@


1.2
log
@Multi-Obj Mode.
@
text
@a55 2
   int theIdx;

d58 1
a58 6
      for (theIdx = 0; theIdx < myLength_; theIdx ++)
         {
         witFree (myWitStrVec_[theIdx]);
         }

      witFree (myWitStrVec_);
@


1.1
log
@Multi-Obj Mode
@
text
@d43 1
a43 1
const char * WitJ::WitStrVecOwner::operator[] (int theIdx)
d46 2
a47 2
   EXCEPTION_ASSERT (theIdx  >= 0);
   EXCEPTION_ASSERT (theIdx  <  myLength_);
@

