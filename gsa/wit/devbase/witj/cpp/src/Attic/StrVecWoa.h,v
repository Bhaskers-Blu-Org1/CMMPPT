head	1.4;
access;
symbols;
locks; strict;
comment	@ * @;


1.4
date	2010.04.20.18.22.34;	author rjw;	state dead;
branches;
next	1.3;

1.3
date	2010.04.20.16.36.58;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2009.02.17.17.23.49;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2009.02.14.00.51.30;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Multi-Obj Mode
@
text
@//------------------------------------------------------------------------------
// WIT-J C++ Header File StrVecWoa.h.
//
// Contains the declaration of class template StrVecWoa <Elem>.
//------------------------------------------------------------------------------

#ifndef StrVecWoa_h
#define StrVecWoa_h

#include <Includes.h>

//------------------------------------------------------------------------------
// Class StrVecWoa
//
// "String Vector WIT Output Argument"
// Represents an output argument to WIT of type vector of string.
//------------------------------------------------------------------------------

namespace WitJ
{
class StrVecWoa
   {
   //---------------------------------------------------------------------------
   // Public member functions.
   //---------------------------------------------------------------------------

   public:

   explicit StrVecWoa ();
      //
      // Constructor.

   ~StrVecWoa ();
      //
      // Destructor.
      // Clears this StrVecWoa:

   void acquireWitStrVec (char * * theWitStrVec, int theLength);
      //
      // Acquires theWitStrVec as the c-vector of c-strings allocated by WIT
      // and held by this StrVecWoa, with responsibility for calling witFree on
      // the c-vector and the c-strings that it holds.
      // Takes theLength as the lenngth of the vector.

   const char * operator[] (int theIdx);
      //
      // Returns the c-string indexed by theIdx.
      // Asserts that the vector has been obtained and that theIdx is within
      // bounds.

   inline int getLength ()
      {
      return myLength_;
      }

   //---------------------------------------------------------------------------
   // Private member functions.
   //---------------------------------------------------------------------------

   private:

   void clear ();
      //
      // Clears this StrVecWoa:
      // Calls witFree on the strings and the c-vector of c-strings currently
      // held by this StrVecWoa, if any and sets the c-vector pointer to NULL.

   StrVecWoa              (const StrVecWoa &);
   StrVecWoa & operator = (const StrVecWoa &);
      //
      // Not implemented; prevents accidental copying and assignment.

   //---------------------------------------------------------------------------
   // Private member data.
   //---------------------------------------------------------------------------

   char * * myWitStrVec_;
      //
      // The c-vector of c-strings allocated by WIT and held by this StrVecWoa,
      // if any; otherwise NULL.

   int myLength_;
      //
      // The length of the c-vector of c-strings, if any; otherwise 0.
   };
};
//
// End of namespace WitJ.

#endif
@


1.3
log
@Multi-Obj Mode
@
text
@@


1.2
log
@PIP.
@
text
@d29 1
a29 1
   explicit StrVecWoa (const int & theLengthRef);
d38 1
a38 1
   char * * * getCVecAddr ();
d40 4
a43 3
      // Clears this StrVecWoa.
      // Returns the address of the c-vector pointer to be passed as an output
      // string vector argument to a WIT API function.
d53 1
a53 1
      return myLengthRef_;
d77 1
a77 1
   char * * myCVec_;
d79 2
a80 1
      // The c-vector of c-strings to be obtained from WIT.
d82 1
a82 1
   const int & myLengthRef_;
d84 1
a84 2
      // Reference to a variable that will be set by WIT to the length of the
      // vector.
@


1.1
log
@Implemented getPipSeq.
@
text
@d50 5
@

