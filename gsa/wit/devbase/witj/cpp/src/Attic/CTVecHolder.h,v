head	1.7;
access;
symbols;
locks; strict;
comment	@ * @;


1.7
date	2009.03.26.19.22.22;	author rjw;	state dead;
branches;
next	1.6;

1.6
date	2009.01.14.22.24.33;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2008.12.15.17.28.46;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2008.09.29.15.26.11;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2008.09.12.14.58.06;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2008.09.09.18.59.57;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2008.07.18.15.49.40;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Replaced C++ classes CTVecHolder <...> and CTVecRes with CTVecSupply.
@
text
@//------------------------------------------------------------------------------
// WIT-J C++ Header File CTVecHolder.h.
//
// Contains the declaration of class template CTVecHolder <Elem>.
//------------------------------------------------------------------------------

#ifndef CTVecHolder_h
#define CTVecHolder_h

#include <Includes.h>

#include   <vector>

//------------------------------------------------------------------------------
// Class template CTVecHolder <Elem>
//
// "C Time-Vector Holder"
// A place to store the C time vectors of Elems that are to be used by the
// NativeCalls associated with a given Problem.
//------------------------------------------------------------------------------

namespace WitJ
{
template <typename Elem>
      class CTVecHolder
   {
   friend class CTVecRes;

   //---------------------------------------------------------------------------
   // Private member functions.
   //---------------------------------------------------------------------------

   private:

   explicit CTVecHolder (int nPeriodsVal);
      //
      // Constructor.

   ~CTVecHolder ();
      //
      // Destructor.

   Elem * provideCTVec ();
      //
      // Returns a c-vector of length nPeriods, to be used by the caller.

   void reclaimCTVecs ();
      //
      // Takes all the c-vectors that were returned by provideCTVec () since
      // the previous call to reclaimCTVecs () and makes them available for
      // future calls to provideCTVec ().

   CTVecHolder              (const CTVecHolder &);
   CTVecHolder & operator = (const CTVecHolder &);
      //
      // Not implemented; prevents accidental copying and assignment.

   //---------------------------------------------------------------------------
   // Private member data.
   //---------------------------------------------------------------------------

   const int nPeriods_;
      //
      // nPeriods for the Problem associated with this CTVecHolder.

   std::vector <Elem *> availCTVecs_;
      //
      // The collection of c-vectors of length nPeriods owned by this
      // CTVecHolder that are available for use.

   std::vector <Elem *> inUseCTVecs_;
      //
      // The collection of c-vectors of length nPeriods owned by this
      // CTVecHolder that are currently in-use.
   };
};
//
// End of namespace WitJ.

#endif
@


1.6
log
@Initial implementation of C++ class ProbCtr.
@
text
@@


1.5
log
@Updated some comments.
@
text
@d19 1
a19 1
// NativeCalls associated with a given Session.
@


1.4
log
@Changed name of C++ class JniHandler to NativeCall.
@
text
@d56 1
a56 1
      // Not defined; prevents accidental copying and assignment.
@


1.3
log
@Revised class CTVecRes.
@
text
@d19 1
a19 1
// JniHandlers associated with a given Session.
@


1.2
log
@Renamed Java class ProbCoordCI to SessionCI.
Renamed C++  class ProbCoord   to Session.
@
text
@d35 1
a35 1
   explicit CTVecHolder (Session * theSession);
a37 1
      // theSession: the Session that owns this CTVecHolder.
d62 1
a62 5
   Session * const mySession_;
      //
      // The Session that owns this CTVecHolder.

   int nPeriods_;
@


1.1
log
@Attributes.
@
text
@d19 1
a19 1
// JniHandlers associated with a given ProbCoord.
d35 1
a35 1
   explicit CTVecHolder (ProbCoord * theProbCoord);
d38 1
a38 1
      // theProbCoord: the ProbCoord that owns this CTVecHolder.
d63 1
a63 1
   ProbCoord * const myProbCoord_;
d65 1
a65 1
      // The ProbCoord that owns this CTVecHolder.
@

