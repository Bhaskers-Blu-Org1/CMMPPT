head	1.11;
access;
symbols;
locks; strict;
comment	@ * @;


1.11
date	2009.03.26.19.22.22;	author rjw;	state dead;
branches;
next	1.10;

1.10
date	2009.03.17.21.08.01;	author rjw;	state Exp;
branches;
next	1.9;

1.9
date	2009.02.14.00.51.28;	author rjw;	state Exp;
branches;
next	1.8;

1.8
date	2009.01.14.22.24.33;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2008.12.15.17.28.46;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2008.10.22.16.12.43;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2008.09.29.15.26.11;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2008.09.12.14.58.07;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2008.09.09.18.59.57;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2008.07.18.20.29.15;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2008.07.18.15.49.40;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.11
log
@Replaced C++ classes CTVecHolder <...> and CTVecRes with CTVecSupply.
@
text
@//------------------------------------------------------------------------------
// WIT-J C++ Header File CTVecRes.h.
//
// Contains the declaration of class CTVecRes.
//------------------------------------------------------------------------------

#ifndef CTVecRes_h
#define CTVecRes_h

#include <Includes.h>

//------------------------------------------------------------------------------
// Class CTVecRes
//
// "C Time-Vector Reservior"
// A reservior to store the C time vectors of all types of element that are to
// be used by the NativeCalls associated with a given Problem.
//------------------------------------------------------------------------------

namespace WitJ
{
class CTVecRes
   {
   //---------------------------------------------------------------------------
   // Public member functions.
   //---------------------------------------------------------------------------

   public:

   explicit CTVecRes (int nPeriodsVal);
      //
      // Constructor.

   ~CTVecRes ();
      //
      // Destructor.

   Boolean * provideBoolCTVec ();
   int     * provideIntCTVec  ();
   double  * provideDblCTVec  ();
      //
      // Each of these functions returns a c-vector of the indicated type and
      // of length nPeriods, to be used by the caller.

   void reclaimCTVecs ();
      //
      // Takes all the c-vectors that were returned by the provide... functions
      // since the previous call to reclaimCTVecs () and makes them available
      // for future calls to the provide... functions.

   //---------------------------------------------------------------------------
   // Private member functions.
   //---------------------------------------------------------------------------

   private:

   CTVecRes              (const CTVecRes &);
   CTVecRes & operator = (const CTVecRes &);
      //
      // Not implemented; prevents accidental copying and assignment.

   //---------------------------------------------------------------------------
   // Private member data.
   //---------------------------------------------------------------------------

   CTVecHolder <int>    * myIntCTVecHolder_;
   CTVecHolder <double> * myDblCTVecHolder_;
      //
      // The CTVecHolders owned by this CTVecRes.

   bool providedCTVecs_;
      //
      // True, iff a provide...CTVec function has been called since
      // reclaimCTVecs () was last called.
   };
};
//
// End of namespace WitJ.

#endif
@


1.10
log
@Removed non-portable assignments between _jint * and int *.
@
text
@@


1.9
log
@Implemented getPipSeq.
@
text
@a11 2
#include      <jni.h>

d38 3
a40 4
   Boolean  * provideBoolCTVec  ();
   int      * provideIntCTVec   ();
   double   * provideDblCTVec   ();
   jboolean * provideJBoolCTVec ();
d66 2
a67 3
   CTVecHolder <int>      *   myIntCTVecHolder_;
   CTVecHolder <double>   *   myDblCTVecHolder_;
   CTVecHolder <jboolean> * myJBoolCTVecHolder_;
d70 5
@


1.8
log
@Initial implementation of C++ class ProbCtr.
@
text
@a43 1
   jint     * provideJIntCTVec  ();
a68 1
   CTVecHolder <Boolean>  *  myBoolCTVecHolder_;
a71 1
   CTVecHolder <jint> *      myJIntCTVecHolder_;
@


1.7
log
@Updated some comments.
@
text
@d19 1
a19 1
// be used by the NativeCalls associated with a given Session.
@


1.6
log
@Removed implicit conversions from int * to jint *.
@
text
@d64 1
a64 1
      // Not defined; prevents accidental copying and assignment.
@


1.5
log
@Changed name of C++ class JniHandler to NativeCall.
@
text
@d44 1
d74 1
@


1.4
log
@Revised class CTVecRes.
@
text
@d19 1
a19 1
// be used by the JniHandlers associated with a given Session.
@


1.3
log
@Renamed Java class ProbCoordCI to SessionCI.
Renamed C++  class ProbCoord   to Session.
@
text
@d32 1
a32 1
   explicit CTVecRes (Session * theSession);
a34 1
      // theSession: the Session that owns this CTVecRes.
a68 4
   Session * const mySession_;
      //
      // The Session that owns this CTVecRes.

@


1.2
log
@Attributes.
@
text
@d19 1
a19 1
// be used by the JniHandlers associated with a given ProbCoord.
d32 1
a32 1
   explicit CTVecRes (ProbCoord * theProbCoord);
d35 1
a35 1
      // theProbCoord: the ProbCoord that owns this CTVecRes.
d70 1
a70 1
   ProbCoord * const myProbCoord_;
d72 1
a72 1
      // The ProbCoord that owns this CTVecRes.
@


1.1
log
@Attributes.
@
text
@d41 1
d74 1
@

