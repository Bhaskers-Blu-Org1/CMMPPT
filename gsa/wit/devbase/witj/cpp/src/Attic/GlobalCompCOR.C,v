head	1.7;
access;
symbols;
locks; strict;
comment	@ * @;


1.7
date	2008.10.06.22.14.02;	author rjw;	state dead;
branches;
next	1.6;

1.6
date	2008.10.03.19.43.26;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2008.09.29.17.34.15;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2008.09.29.15.26.11;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2008.09.29.15.05.36;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2008.09.27.00.37.57;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2008.09.26.22.21.22;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Changed name of Component to Entity.
@
text
@//------------------------------------------------------------------------------
// WIT-J C++ Source file GlobalCompCOR.C.
//
// Contains the C++ implementations of the native methods of Java class
// witj.GlobalCompCOR.
//------------------------------------------------------------------------------

#include <NativeMacros.h>
#include   <NativeCall.h>
#include   <JavaObjRep.h>
#include   <GlobalComp.h>
#include       <VecWoa.h>

using namespace WitJ;

//------------------------------------------------------------------------------

nativeMethod (void, GlobalCompCOR, createMyCppGlobalComp) (
      JNIEnv *   theJNIEnv,
      _jobject * theGlobalCompCORJObj,
      _jobject * theProblemCORJObj,
      _jobject * theGlobalCompJObj)
   {
   NativeCall   theCall (theJNIEnv);
   Problem *    theProblem;
   JavaObjRep * theGlobalCompJOR;
   GlobalComp * theGlobalComp;

   theProblem       = theCall.getObject (theProblemCORJObj)->asProblem ();

   theGlobalCompJOR = new JavaObjRep (theCall, theGlobalCompJObj);

   theGlobalComp    = new GlobalComp (theProblem, theGlobalCompJOR);

   theCall.transferTo (theGlobalCompCORJObj, theGlobalComp);
   }

//------------------------------------------------------------------------------

nativeMethod (void, GlobalCompCOR, setNPeriods) (
      JNIEnv *   theJNIEnv,
      _jobject * theGlobalCompCORJObj,
      jint       theNPeriodsJInt)
   {
   NativeCall   theCall (theJNIEnv);
   GlobalComp * theGlobalComp;

   theGlobalComp = theCall.getObject (theGlobalCompCORJObj)->asGlobalComp ();

   theGlobalComp->setNPeriods (theNPeriodsJInt);
   }

//------------------------------------------------------------------------------

nativeMethod (void, GlobalCompCOR, setTitle) (
      JNIEnv *   theJNIEnv,
      _jobject * theGlobalCompCORJObj,
      _jstring * theTitleJStr)
   {
   NativeCall   theCall (theJNIEnv);
   GlobalComp * theGlobalComp;
   const char * theTitleCStr;

   theGlobalComp = theCall.getObject (theGlobalCompCORJObj)->asGlobalComp ();

   theTitleCStr  = theCall.makeCString (theTitleJStr);

   theGlobalComp->setTitle (theTitleCStr);
   }

//------------------------------------------------------------------------------

nativeMethod (_jstring *, GlobalCompCOR, getTitle) (
      JNIEnv *   theJNIEnv,
      _jobject * theGlobalCompCORJObj)
   {
   NativeCall   theCall (theJNIEnv);
   GlobalComp * theGlobalComp;
   StringWoa    theTitleWoa;
   _jstring *   theTitleJStr;

   theGlobalComp = theCall.getObject (theGlobalCompCORJObj)->asGlobalComp ();

   theGlobalComp->getTitle (theTitleWoa);

   theTitleJStr  = theCall.makeJString (theTitleWoa);

   return theTitleJStr;
   }

//------------------------------------------------------------------------------

nativeMethod (void, GlobalCompCOR, setSolverLogFileName) (
      JNIEnv *   theJNIEnv,
      _jobject * theGlobalCompCORJObj,
      _jstring * theNameJStr)
   {
   NativeCall   theCall (theJNIEnv);
   GlobalComp * theGlobalComp;
   const char * theNameCStr;

   theGlobalComp = theCall.getObject (theGlobalCompCORJObj)->asGlobalComp ();

   theNameCStr   = theCall.makeCString (theNameJStr);

   theGlobalComp->setSolverLogFileName (theNameCStr);
   }

//------------------------------------------------------------------------------

nativeMethod (_jstring *, GlobalCompCOR, getSolverLogFileName) (
      JNIEnv *   theJNIEnv,
      _jobject * theGlobalCompCORJObj)
   {
   NativeCall   theCall (theJNIEnv);
   GlobalComp * theGlobalComp;
   StringWoa    theNameWoa;
   _jstring *   theNameJStr;

   theGlobalComp = theCall.getObject (theGlobalCompCORJObj)->asGlobalComp ();

   theGlobalComp->getSolverLogFileName (theNameWoa);

   theNameJStr   = theCall.makeJString (theNameWoa);

   return theNameJStr;
   }
@


1.6
log
@Replaced C++ class StringWoa with a typedef for VecWoa <char>.
@
text
@@


1.5
log
@Implemented C++ class JniWrapper.
@
text
@d12 1
a12 1
#include    <StringWoa.h>
@


1.4
log
@Changed name of C++ class JniHandler to NativeCall.
@
text
@d10 1
d31 1
a31 1
   theGlobalCompJOR = theCall.newJavaObjRep (theGlobalCompJObj);
@


1.3
log
@Moved macro nativeMethod to its own header file.
@
text
@d9 1
a9 1
#include   <JniHandler.h>
d23 1
a23 1
   JniHandler   theJniHand (theJNIEnv);
d28 1
a28 1
   theProblem       = theJniHand.getObject (theProblemCORJObj)->asProblem ();
d30 1
a30 1
   theGlobalCompJOR = theJniHand.newJavaObjRep (theGlobalCompJObj);
d34 1
a34 1
   theJniHand.transferTo (theGlobalCompCORJObj, theGlobalComp);
d44 1
a44 1
   JniHandler   theJniHand (theJNIEnv);
d47 1
a47 1
   theGlobalComp = theJniHand.getObject (theGlobalCompCORJObj)->asGlobalComp ();
d59 1
a59 1
   JniHandler   theJniHand (theJNIEnv);
d63 1
a63 1
   theGlobalComp = theJniHand.getObject (theGlobalCompCORJObj)->asGlobalComp ();
d65 1
a65 1
   theTitleCStr  = theJniHand.makeCString (theTitleJStr);
d76 1
a76 1
   JniHandler   theJniHand (theJNIEnv);
d81 1
a81 1
   theGlobalComp = theJniHand.getObject (theGlobalCompCORJObj)->asGlobalComp ();
d85 1
a85 1
   theTitleJStr  = theJniHand.makeJString (theTitleWoa);
d97 1
a97 1
   JniHandler   theJniHand (theJNIEnv);
d101 1
a101 1
   theGlobalComp = theJniHand.getObject (theGlobalCompCORJObj)->asGlobalComp ();
d103 1
a103 1
   theNameCStr   = theJniHand.makeCString (theNameJStr);
d114 1
a114 1
   JniHandler   theJniHand (theJNIEnv);
d119 1
a119 1
   theGlobalComp = theJniHand.getObject (theGlobalCompCORJObj)->asGlobalComp ();
d123 1
a123 1
   theNameJStr   = theJniHand.makeJString (theNameWoa);
@


1.2
log
@Extraction.
@
text
@d8 4
a11 3
#include <JniHandler.h>
#include <GlobalComp.h>
#include  <StringWoa.h>
@


1.1
log
@Numerous class name changes.
@
text
@d19 2
a20 2
      _jobject * theGlobalCompJObj,
      _jobject * theProblemCORJObj)
d24 1
d27 1
a27 1
   theProblem    = theJniHand.getObject (theProblemCORJObj)->asProblem ();
d29 1
a29 1
   theGlobalComp = new GlobalComp (theProblem);
d31 3
a33 2
   theJniHand.transferTo   (theGlobalCompCORJObj, theGlobalComp);
   theJniHand.attachRepFor (theGlobalCompJObj,    theGlobalComp);
@

