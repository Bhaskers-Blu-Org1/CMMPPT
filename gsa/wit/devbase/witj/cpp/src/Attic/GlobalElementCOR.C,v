head	1.15;
access;
symbols;
locks; strict;
comment	@ * @;


1.15
date	2009.03.12.22.45.18;	author rjw;	state dead;
branches;
next	1.14;

1.14
date	2009.02.28.00.27.53;	author rjw;	state Exp;
branches;
next	1.13;

1.13
date	2009.02.20.17.18.44;	author rjw;	state Exp;
branches;
next	1.12;

1.12
date	2009.02.19.19.51.46;	author rjw;	state Exp;
branches;
next	1.11;

1.11
date	2009.02.14.00.51.28;	author rjw;	state Exp;
branches;
next	1.10;

1.10
date	2009.02.03.21.31.10;	author rjw;	state Exp;
branches;
next	1.9;

1.9
date	2009.01.29.22.06.37;	author rjw;	state Exp;
branches;
next	1.8;

1.8
date	2009.01.23.19.32.23;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2009.01.21.21.43.22;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2009.01.16.17.03.34;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2009.01.16.16.32.02;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2008.12.15.17.17.39;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2008.12.12.23.38.31;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2008.12.12.19.29.25;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2008.10.07.18.50.23;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.15
log
@Changed name of GlobalElement classes to GlobalComponent.
@
text
@//------------------------------------------------------------------------------
// WIT-J C++ Source file GlobalElementCOR.C.
//
// Contains the C++ implementations of the native methods of Java class
// witj.GlobalElementCOR.
//------------------------------------------------------------------------------

#include     <NativeMacros.h>
#include <ExceptionHandler.h>
#include       <NativeCall.h>
#include    <GlobalElement.h>
#include  <AllocTripleList.h>
#include        <StringWoa.h>

using namespace WitJ;

//------------------------------------------------------------------------------

NATIVE_METHOD (void, GlobalElementCOR, setNPeriods) (
      JNIEnv *   theJNIEnv,
      _jobject * theGlobalElementCORJObj,
      jint       theNPeriodsJInt)
   {
   BEGIN_TRY_BLOCK

   NativeCall      theCall (theJNIEnv);
   GlobalElement * theGlobalElement;

   theGlobalElement =
      theCall.getObject (theGlobalElementCORJObj)->asGlobalElement ();

   theGlobalElement->setNPeriods (theNPeriodsJInt);

   END_TRY_BLOCK_SIMPLE_RETURN (theJNIEnv)
   }

//------------------------------------------------------------------------------

NATIVE_METHOD (void, GlobalElementCOR, getPipSeq) (
      JNIEnv *   theJNIEnv,
      _jobject * theGlobalElementCORJObj,
      _jobject * theAllocTripleListCORJObj)
   {
   BEGIN_TRY_BLOCK

   NativeCall        theCall (theJNIEnv);
   GlobalElement *   theGlobalElement;
   AllocTripleList * theAllocTripleList;

   theGlobalElement   =
      theCall.getObject (theGlobalElementCORJObj)  ->asGlobalElement   ();

   theAllocTripleList =
      theCall.getObject (theAllocTripleListCORJObj)->asAllocTripleList ();

   theGlobalElement->getPipSeq (theAllocTripleList);

   END_TRY_BLOCK_SIMPLE_RETURN (theJNIEnv)
   }

//------------------------------------------------------------------------------

NATIVE_METHOD (void, GlobalElementCOR, setTitle) (
      JNIEnv *   theJNIEnv,
      _jobject * theGlobalElementCORJObj,
      _jstring * theTitleJStr)
   {
   BEGIN_TRY_BLOCK

   NativeCall      theCall (theJNIEnv);
   GlobalElement * theGlobalElement;
   const char *    theTitleCStr;

   theGlobalElement =
      theCall.getObject (theGlobalElementCORJObj)->asGlobalElement ();

   theTitleCStr = theCall.makeCString (theTitleJStr);

   theGlobalElement->setTitle (theTitleCStr);

   END_TRY_BLOCK_SIMPLE_RETURN (theJNIEnv)
   }

//------------------------------------------------------------------------------

NATIVE_METHOD (_jstring *, GlobalElementCOR, getTitle) (
      JNIEnv *   theJNIEnv,
      _jobject * theGlobalElementCORJObj)
   {
   BEGIN_TRY_BLOCK

   NativeCall      theCall (theJNIEnv);
   GlobalElement * theGlobalElement;
   StringWoa       theTitleWoa;
   _jstring *      theTitleJStr;

   theGlobalElement =
      theCall.getObject (theGlobalElementCORJObj)->asGlobalElement ();

   theGlobalElement->getTitle (theTitleWoa);

   theTitleJStr = theCall.makeJString (theTitleWoa.getCString ());

   return theTitleJStr;

   END_TRY_BLOCK_VALUE_RETURN (theJNIEnv, NULL)
   }

//------------------------------------------------------------------------------

NATIVE_METHOD (void, GlobalElementCOR, setSolverLogFileName) (
      JNIEnv *   theJNIEnv,
      _jobject * theGlobalElementCORJObj,
      _jstring * theNameJStr)
   {
   BEGIN_TRY_BLOCK

   NativeCall      theCall (theJNIEnv);
   GlobalElement * theGlobalElement;
   const char *    theNameCStr;

   theGlobalElement =
      theCall.getObject (theGlobalElementCORJObj)->asGlobalElement ();

   theNameCStr = theCall.makeCString (theNameJStr);

   theGlobalElement->setSolverLogFileName (theNameCStr);

   END_TRY_BLOCK_SIMPLE_RETURN (theJNIEnv)
   }

//------------------------------------------------------------------------------

NATIVE_METHOD (_jstring *, GlobalElementCOR, getSolverLogFileName) (
      JNIEnv *   theJNIEnv,
      _jobject * theGlobalElementCORJObj)
   {
   BEGIN_TRY_BLOCK

   NativeCall      theCall (theJNIEnv);
   GlobalElement * theGlobalElement;
   StringWoa       theNameWoa;
   _jstring *      theNameJStr;

   theGlobalElement =
      theCall.getObject (theGlobalElementCORJObj)->asGlobalElement ();

   theGlobalElement->getSolverLogFileName (theNameWoa);

   theNameJStr = theCall.makeJString (theNameWoa.getCString ());

   return theNameJStr;

   END_TRY_BLOCK_VALUE_RETURN (theJNIEnv, NULL)
   }

//------------------------------------------------------------------------------

NATIVE_METHOD (void, GlobalElementCOR, setOptInitMethod) (
      JNIEnv *   theJNIEnv,
      _jobject * theGlobalElementCORJObj,
      _jstring * theMethodNameJStr)
   {
   BEGIN_TRY_BLOCK

   NativeCall      theCall (theJNIEnv);
   GlobalElement * theGlobalElement;
   const char *    theMethodNameCStr;

   theGlobalElement =
      theCall.getObject (theGlobalElementCORJObj)->asGlobalElement ();

   theMethodNameCStr = theCall.makeCString (theMethodNameJStr);

   theGlobalElement->setOptInitMethod (theMethodNameCStr);

   END_TRY_BLOCK_SIMPLE_RETURN (theJNIEnv)
   }

//------------------------------------------------------------------------------

NATIVE_METHOD (_jstring *, GlobalElementCOR, getOptInitMethod) (
      JNIEnv *   theJNIEnv,
      _jobject * theGlobalElementCORJObj)
   {
   BEGIN_TRY_BLOCK

   NativeCall      theCall (theJNIEnv);
   GlobalElement * theGlobalElement;
   const char *    theMethodNameCStr;
   _jstring *      theMethodNameJStr;

   theGlobalElement =
      theCall.getObject (theGlobalElementCORJObj)->asGlobalElement ();

   theMethodNameCStr = theGlobalElement->getOptInitMethod ();

   theMethodNameJStr = theCall.makeJString (theMethodNameCStr);

   return theMethodNameJStr;

   END_TRY_BLOCK_VALUE_RETURN (theJNIEnv, NULL)
   }

//------------------------------------------------------------------------------

NATIVE_METHOD (void, GlobalElementCOR, createMyCppGlobalElement) (
      JNIEnv *   theJNIEnv,
      _jobject * theGlobalElementCORJObj,
      _jobject * theCoordCORJObj)
   {
   BEGIN_TRY_BLOCK

   NativeCall      theCall (theJNIEnv);
   Coordinator *   theCoord;
   GlobalElement * theGlobalElement;

   theCoord         = theCall.getObject (theCoordCORJObj)->asCoordinator ();

   theGlobalElement = new GlobalElement (theCoord);

   theCall.associate (theGlobalElementCORJObj, theGlobalElement);

   END_TRY_BLOCK_SIMPLE_RETURN (theJNIEnv)
   }
@


1.14
log
@purgeData
@
text
@@


1.13
log
@Added the AllocTripleList classes.
@
text
@d13 1
a13 1
#include           <VecWoa.h>
d102 1
a102 1
   theTitleJStr = theCall.makeJString (theTitleWoa.getCVec ());
d150 1
a150 1
   theNameJStr = theCall.makeJString (theNameWoa.getCVec ());
@


1.12
log
@Moved set/get-PipSeq from class Problem to class GlobalElement.
@
text
@d12 1
d41 2
a42 1
      _jobject * theGlobalElementCORJObj)
d46 6
a51 2
   NativeCall      theCall (theJNIEnv);
   GlobalElement * theGlobalElement;
d53 2
a54 2
   theGlobalElement =
      theCall.getObject (theGlobalElementCORJObj)->asGlobalElement ();
d56 1
a56 1
   theGlobalElement->getPipSeq ();
@


1.11
log
@Implemented getPipSeq.
@
text
@d38 19
@


1.10
log
@OptInitMethod.
@
text
@d77 1
a77 1
   theTitleJStr = theCall.makeJString (theTitleWoa);
d125 1
a125 1
   theNameJStr = theCall.makeJString (theNameWoa);
@


1.9
log
@Implemented Java class CppGateway.
@
text
@d134 48
@


1.8
log
@Coordinator
@
text
@a10 1
#include       <JavaObjRep.h>
a17 26
NATIVE_METHOD (void, GlobalElementCOR, createMyCppGlobalElement) (
      JNIEnv *   theJNIEnv,
      _jobject * theGlobalElementCORJObj,
      _jobject * theCoordCORJObj,
      _jobject * theGlobalElementJObj)
   {
   BEGIN_TRY_BLOCK

   NativeCall      theCall (theJNIEnv);
   Coordinator *   theCoord;
   JavaObjRep *    theGlobalElementJOR;
   GlobalElement * theGlobalElement;

   theCoord            = theCall.getObject (theCoordCORJObj)->asCoordinator ();

   theGlobalElementJOR = new JavaObjRep (theCall, theGlobalElementJObj);

   theGlobalElement    = new GlobalElement (theCoord, theGlobalElementJOR);

   theCall.transferTo (theGlobalElementCORJObj, theGlobalElement);

   END_TRY_BLOCK_SIMPLE_RETURN (theJNIEnv)
   }

//------------------------------------------------------------------------------

d131 22
@


1.7
log
@Change the names of the ProbMgr classes to Coordinator, etc.
@
text
@d22 1
a22 1
      _jobject * theCoordinatorCORJObj,
d28 1
a28 1
   Coordinator *   theCoordinator;
d32 1
a32 1
   theCoordinator = theCall.getObject (theCoordinatorCORJObj)->asCoordinator ();
d36 1
a36 1
   theGlobalElement = new GlobalElement (theCoordinator, theGlobalElementJOR);
@


1.6
log
@Change the mname of the ProbCtr classes to ProbMgr in both Java and C++.
@
text
@d22 1
a22 1
      _jobject * theProbMgrCORJObj,
d28 1
a28 1
   ProbMgr *       theProbMgr;
d32 1
a32 1
   theProbMgr          = theCall.getObject (theProbMgrCORJObj)->asProbMgr ();
d36 1
a36 1
   theGlobalElement    = new GlobalElement (theProbMgr, theGlobalElementJOR);
@


1.5
log
@Continued implementation of the ProbCtr classes.
@
text
@d22 1
a22 1
      _jobject * theProbCtrCORJObj,
d28 1
a28 1
   ProbCtr *       theProbCtr;
d32 1
a32 1
   theProbCtr          = theCall.getObject (theProbCtrCORJObj)->asProbCtr ();
d36 1
a36 1
   theGlobalElement    = new GlobalElement (theProbCtr, theGlobalElementJOR);
@


1.4
log
@Initial implementation of class ExceptionHandler.
@
text
@d22 1
a22 1
      _jobject * theProblemCORJObj,
d28 1
a28 1
   Problem *       theProblem;
d32 1
a32 1
   theProblem          = theCall.getObject (theProblemCORJObj)->asProblem ();
d36 1
a36 1
   theGlobalElement    = new GlobalElement (theProblem, theGlobalElementJOR);
@


1.3
log
@Imbedded every native method implementation in a canonical try block.
@
text
@d8 6
a13 6
#include  <NativeMacros.h>
#include <WitjException.h>
#include    <NativeCall.h>
#include    <JavaObjRep.h>
#include <GlobalElement.h>
#include        <VecWoa.h>
d108 1
a108 1
   END_TRY_BLOCK_RETURNING_VALUE (theJNIEnv, NULL)
d156 1
a156 1
   END_TRY_BLOCK_RETURNING_VALUE (theJNIEnv, NULL)
@


1.2
log
@Changed to all upper case for the names of macros.
@
text
@d9 1
d25 2
d39 2
d50 2
d59 2
d70 2
d82 2
d92 2
d107 2
d118 2
d130 2
d140 2
d155 2
@


1.1
log
@Name change.
@
text
@d18 1
a18 1
nativeMethod (void, GlobalElementCOR, createMyCppGlobalElement) (
d40 1
a40 1
nativeMethod (void, GlobalElementCOR, setNPeriods) (
d56 1
a56 1
nativeMethod (void, GlobalElementCOR, setTitle) (
d75 1
a75 1
nativeMethod (_jstring *, GlobalElementCOR, getTitle) (
d96 1
a96 1
nativeMethod (void, GlobalElementCOR, setSolverLogFileName) (
d115 1
a115 1
nativeMethod (_jstring *, GlobalElementCOR, getSolverLogFileName) (
@

