head	1.4;
access;
symbols;
locks; strict;
comment	@ * @;


1.4
date	2008.10.01.19.47.12;	author rjw;	state dead;
branches;
next	1.3;

1.3
date	2008.10.01.18.19.15;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2008.09.29.18.09.11;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2008.09.29.17.34.15;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Changed name of C++ class JniWrapper to JniClient.
@
text
@//------------------------------------------------------------------------------
// WIT-J C++ Source File JniWrapper.C.
//
// Contains the definition of class JniWrapper.
//------------------------------------------------------------------------------

#include <JniWrapper.h>
#include  <StringWoa.h>

//------------------------------------------------------------------------------

_jstring * WitJ::JniWrapper::makeJString (const StringWoa & theStringWoa)
   {
   _jstring * theJString;

   witjAssert (theStringWoa.getCString () != NULL);

   theJString = myJNIEnv_->NewStringUTF (theStringWoa.getCString ());

   if (theJString == NULL)
      abortForMemory ("NewStringUTF");

   return theJString;
   }

//------------------------------------------------------------------------------

WitJ::JniWrapper::JniWrapper (JNIEnv * theJNIEnv):

      myJNIEnv_ (theJNIEnv)
   {
   }

//------------------------------------------------------------------------------

WitJ::JniWrapper::JniWrapper (const JniWrapper & theJniWrapper):

      myJNIEnv_ (theJniWrapper.myJNIEnv_)
   {
   }

//------------------------------------------------------------------------------

WitJ::JniWrapper::~JniWrapper ()
   {
   }

//------------------------------------------------------------------------------

void WitJ::JniWrapper::checkForJniException ()
   {
   checkForJniException (myJNIEnv_);
   }

//------------------------------------------------------------------------------

void WitJ::JniWrapper::checkForJniException (JNIEnv * theJNIEnv)
   {
   if (theJNIEnv->ExceptionCheck ())
      {
      theJNIEnv->ExceptionDescribe ();

      witjAssert (false);
      }
   }
@


1.3
log
@Extraction
@
text
@@


1.2
log
@Call-back infrastructure.
@
text
@d8 17
@


1.1
log
@Implemented C++ class JniWrapper.
@
text
@d33 7
@

