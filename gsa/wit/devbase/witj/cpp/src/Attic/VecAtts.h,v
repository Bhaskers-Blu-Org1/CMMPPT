head	1.19;
access;
symbols;
locks; strict;
comment	@ * @;


1.19
date	2008.07.22.21.08.59;	author rjw;	state dead;
branches;
next	1.18;

1.18
date	2008.07.22.20.38.25;	author rjw;	state Exp;
branches;
next	1.17;

1.17
date	2008.07.22.13.54.52;	author rjw;	state Exp;
branches;
next	1.16;

1.16
date	2008.07.21.21.44.07;	author rjw;	state Exp;
branches;
next	1.15;

1.15
date	2008.07.15.18.40.59;	author rjw;	state Exp;
branches;
next	1.14;

1.14
date	2008.07.07.22.59.32;	author rjw;	state Exp;
branches;
next	1.13;

1.13
date	2008.07.01.16.09.22;	author rjw;	state Exp;
branches;
next	1.12;

1.12
date	2008.06.27.21.43.23;	author rjw;	state Exp;
branches;
next	1.11;

1.11
date	2008.06.27.16.34.06;	author rjw;	state Exp;
branches;
next	1.10;

1.10
date	2008.06.19.22.16.55;	author rjw;	state Exp;
branches;
next	1.9;

1.9
date	2008.06.19.20.15.06;	author rjw;	state Exp;
branches;
next	1.8;

1.8
date	2008.06.18.21.28.18;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2008.06.11.19.27.16;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2008.05.30.21.07.23;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2008.05.29.14.37.13;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2008.05.28.22.29.36;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2008.05.28.20.44.08;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2008.05.28.20.24.47;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2008.05.28.18.10.12;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.19
log
@Attributes.
@
text
@//------------------------------------------------------------------------------
// WIT-J C++ Header File VecAtts.h.
//
// Contains the declarations of the following class templates:
//
//    GlobalVecAtt <Elem>
//      PartVecAtt <Elem>
//    DemandVecAtt <Elem>
//       OpnVecAtt <Elem>
//       BomVecAtt <Elem>
//       SubVecAtt <Elem>
//       BopVecAtt <Elem>
//------------------------------------------------------------------------------

#ifndef VecAtts_h
#define VecAtts_h

#include <Att.h>

#include <wit.h>

//------------------------------------------------------------------------------
// Class template GlobalVecAtt <Elem>
//
// Represents an attribute of type time-vector of Elems associated with the
// whole Problem.
//
// Class Hierarchy:
//
//    JAccObject
//       Att
//          GlobalVecAtt <Elem>
//
// The definition is in VecAtts.C.
//------------------------------------------------------------------------------

namespace WitJ
{
template <typename Elem>
      class GlobalVecAtt: public Att
   {
   //---------------------------------------------------------------------------
   // Local typedefs.
   //
   // SetFuncPtr:
   //    A pointer to a WIT API function that sets      the value of an
   //    attribute of type time-vector of Elems associated with the whole
   //    Problem.
   //
   // GetFuncPtr:
   //    A pointer to a WIT API function that retrieves the value of an
   //    attribute of type time-vector of Elems associated with the whole
   //    Problem.
   //---------------------------------------------------------------------------

   typedef
      WIT_DECLSPEC witReturnCode STDCALL (* SetFuncPtr) (
         WitRun * const,
         const Elem * const);

   typedef
      WIT_DECLSPEC witReturnCode STDCALL (* GetFuncPtr) (
         WitRun * const,
         Elem * *);

   //---------------------------------------------------------------------------
   // Public member functions.
   //---------------------------------------------------------------------------

   public:

   explicit GlobalVecAtt (
         AttBldr *    theAttBldr,
         const char * theName,
         SetFuncPtr   theSetFuncPtr,
         GetFuncPtr   theGetFuncPtr);
      //
      // Constructor.

   virtual ~GlobalVecAtt ();
      //
      // Destructor.

   virtual void setValue     (Component *, const Elem *);
   virtual void getValue     (Component *, VecWoa <Elem> &);
   virtual bool isAnInputAtt ();
      //
      // Overrides from class Att.

   //---------------------------------------------------------------------------
   // Private member functions.
   //---------------------------------------------------------------------------

   private:

   GlobalVecAtt              (const GlobalVecAtt &);
   GlobalVecAtt & operator = (const GlobalVecAtt &);
      //
      // Not defined; prevents accidental copying and assignment.

   //---------------------------------------------------------------------------
   // Private member data.
   //---------------------------------------------------------------------------

   const SetFuncPtr mySetFuncPtr_;
      //
      // A pointer to the WIT API function that sets      the value of the
      // attribute represented by this GlobalVecAtt.
      // NULL, if this GlobalVecAtt represents an output attribute.

   const GetFuncPtr myGetFuncPtr_;
      //
      // A pointer to the WIT API function that retrieves the value of the
      // attribute represented by this GlobalVecAtt.
   };
};
//
// End of namespace WitJ.

//------------------------------------------------------------------------------
// Class template PartVecAtt <Elem>
//
// Represents an attribute of type time-vector of Elems associated with a Part.
//
// Class Hierarchy:
//
//    JAccObject
//       Att
//          PartVecAtt <Elem>
//
// The definition is in VecAtts.C.
//------------------------------------------------------------------------------

namespace WitJ
{
template <typename Elem>
      class PartVecAtt: public Att
   {
   //---------------------------------------------------------------------------
   // Local typedefs.
   //
   // SetFuncPtr:
   //    A pointer to a WIT API function that sets      the value of an
   //    attribute of type time-vector of Elems associated with a Part.
   //
   // GetFuncPtr:
   //    A pointer to a WIT API function that retrieves the value of an
   //    attribute of type time-vector of Elems associated with a Part.
   //---------------------------------------------------------------------------

   typedef
      WIT_DECLSPEC witReturnCode STDCALL (* SetFuncPtr) (
         WitRun * const,
         const char * const,
         const Elem * const);

   typedef
      WIT_DECLSPEC witReturnCode STDCALL (* GetFuncPtr) (
         WitRun * const,
         const char * const,
         Elem * *);

   //---------------------------------------------------------------------------
   // Public member functions.
   //---------------------------------------------------------------------------

   public:

   explicit PartVecAtt (
         AttBldr *    theAttBldr,
         const char * theName,
         SetFuncPtr   theSetFuncPtr,
         GetFuncPtr   theGetFuncPtr);
      //
      // Constructor.

   virtual ~PartVecAtt ();
      //
      // Destructor.

   virtual void setValue     (Component *, const Elem *);
   virtual void getValue     (Component *, VecWoa <Elem> &);
   virtual bool isAnInputAtt ();
      //
      // Overrides from class Att.

   //---------------------------------------------------------------------------
   // Private member functions.
   //---------------------------------------------------------------------------

   private:

   PartVecAtt              (const PartVecAtt &);
   PartVecAtt & operator = (const PartVecAtt &);
      //
      // Not defined; prevents accidental copying and assignment.

   //---------------------------------------------------------------------------
   // Private member data.
   //---------------------------------------------------------------------------

   const SetFuncPtr mySetFuncPtr_;
      //
      // A pointer to the WIT API function that sets      the value of the
      // attribute represented by this PartVecAtt.
      // NULL, if this PartVecAtt represents an output attribute.

   const GetFuncPtr myGetFuncPtr_;
      //
      // A pointer to the WIT API function that retrieves the value of the
      // attribute represented by this PartVecAtt.
   };
};
//
// End of namespace WitJ.

//------------------------------------------------------------------------------
// Class template DemandVecAtt <Elem>
//
// Represents an attribute of type time-vector of Elems associated with a
// Demand.
//
// Class Hierarchy:
//
//    JAccObject
//       Att
//          DemandVecAtt <Elem>
//
// The definition is in VecAtts.C.
//------------------------------------------------------------------------------

namespace WitJ
{
template <typename Elem>
      class DemandVecAtt: public Att
   {
   //---------------------------------------------------------------------------
   // Local typedefs.
   //
   // SetFuncPtr:
   //    A pointer to a WIT API function that sets      the value of an
   //    attribute of type time-vector of Elems associated with a Demand.
   //
   // GetFuncPtr:
   //    A pointer to a WIT API function that retrieves the value of an
   //    attribute of type time-vector of Elems associated with a Demand.
   //---------------------------------------------------------------------------

   typedef
      WIT_DECLSPEC witReturnCode STDCALL (* SetFuncPtr) (
         WitRun * const,
         const char * const,
         const char * const,
         const Elem * const);

   typedef
      WIT_DECLSPEC witReturnCode STDCALL (* GetFuncPtr) (
         WitRun * const,
         const char * const,
         const char * const,
         Elem * *);

   //---------------------------------------------------------------------------
   // Public member functions.
   //---------------------------------------------------------------------------

   public:

   explicit DemandVecAtt (
         AttBldr *    theAttBldr,
         const char * theName,
         SetFuncPtr   theSetFuncPtr,
         GetFuncPtr   theGetFuncPtr);
      //
      // Constructor.

   virtual ~DemandVecAtt ();
      //
      // Destructor.

   virtual void setValue     (Component *, const Elem *);
   virtual void getValue     (Component *, VecWoa <Elem> &);
   virtual bool isAnInputAtt ();
      //
      // Overrides from class Att.

   //---------------------------------------------------------------------------
   // Private member functions.
   //---------------------------------------------------------------------------

   private:

   DemandVecAtt              (const DemandVecAtt &);
   DemandVecAtt & operator = (const DemandVecAtt &);
      //
      // Not defined; prevents accidental copying and assignment.

   //---------------------------------------------------------------------------
   // Private member data.
   //---------------------------------------------------------------------------

   const SetFuncPtr mySetFuncPtr_;
      //
      // A pointer to the WIT API function that sets      the value of the
      // attribute represented by this DemandVecAtt.
      // NULL, if this DemandVecAtt represents an output attribute.

   const GetFuncPtr myGetFuncPtr_;
      //
      // A pointer to the WIT API function that retrieves the value of the
      // attribute represented by this DemandVecAtt.
   };
};
//
// End of namespace WitJ.

//------------------------------------------------------------------------------
// Class template OpnVecAtt <Elem>
//
// Represents an attribute of type time-vector of Elems associated with an
// Operation.
//
// Class Hierarchy:
//
//    JAccObject
//       Att
//          OpnVecAtt <Elem>
//
// The definition is in VecAtts.C.
//------------------------------------------------------------------------------

namespace WitJ
{
template <typename Elem>
      class OpnVecAtt: public Att
   {
   //---------------------------------------------------------------------------
   // Local typedefs.
   //
   // SetFuncPtr:
   //    A pointer to a WIT API function that sets      the value of an
   //    attribute of type time-vector of Elems associated with an Operation.
   //
   // GetFuncPtr:
   //    A pointer to a WIT API function that retrieves the value of an
   //    attribute of type time-vector of Elems associated with an Operation.
   //---------------------------------------------------------------------------

   typedef
      WIT_DECLSPEC witReturnCode STDCALL (* SetFuncPtr) (
         WitRun * const,
         const char * const,
         const Elem * const);

   typedef
      WIT_DECLSPEC witReturnCode STDCALL (* GetFuncPtr) (
         WitRun * const,
         const char * const,
         Elem * *);

   //---------------------------------------------------------------------------
   // Public member functions.
   //---------------------------------------------------------------------------

   public:

   explicit OpnVecAtt (
         AttBldr *    theAttBldr,
         const char * theName,
         SetFuncPtr   theSetFuncPtr,
         GetFuncPtr   theGetFuncPtr);
      //
      // Constructor.

   virtual ~OpnVecAtt ();
      //
      // Destructor.

   virtual void setValue     (Component *, const Elem *);
   virtual void getValue     (Component *, VecWoa <Elem> &);
   virtual bool isAnInputAtt ();
      //
      // Overrides from class Att.

   //---------------------------------------------------------------------------
   // Private member functions.
   //---------------------------------------------------------------------------

   private:

   OpnVecAtt              (const OpnVecAtt &);
   OpnVecAtt & operator = (const OpnVecAtt &);
      //
      // Not defined; prevents accidental copying and assignment.

   //---------------------------------------------------------------------------
   // Private member data.
   //---------------------------------------------------------------------------

   const SetFuncPtr mySetFuncPtr_;
      //
      // A pointer to the WIT API function that sets      the value of the
      // attribute represented by this OpnVecAtt.
      // NULL, if this OpnVecAtt represents an output attribute.

   const GetFuncPtr myGetFuncPtr_;
      //
      // A pointer to the WIT API function that retrieves the value of the
      // attribute represented by this OpnVecAtt.
   };
};
//
// End of namespace WitJ.

//------------------------------------------------------------------------------
// Class template BomEntVecAtt <Elem>
//
// Represents an attribute of type time-vector of Elems associated with a
// BomEntry.
//
// Class Hierarchy:
//
//    JAccObject
//       Att
//          BomEntVecAtt <Elem>
//
// The definition is in VecAtts.C.
//------------------------------------------------------------------------------

namespace WitJ
{
template <typename Elem>
      class BomEntVecAtt: public Att
   {
   //---------------------------------------------------------------------------
   // Local typedefs.
   //
   // SetFuncPtr:
   //    A pointer to a WIT API function that sets      the value of an
   //    attribute of type time-vector of Elems associated with a BomEntry.
   //
   // GetFuncPtr:
   //    A pointer to a WIT API function that retrieves the value of an
   //    attribute of type time-vector of Elems associated with a BomEntry.
   //---------------------------------------------------------------------------

   typedef
      WIT_DECLSPEC witReturnCode STDCALL (* SetFuncPtr) (
         WitRun * const,
         const char * const,
         const int,
         const Elem * const);

   typedef
      WIT_DECLSPEC witReturnCode STDCALL (* GetFuncPtr) (
         WitRun * const,
         const char * const,
         const int,
         Elem * *);

   //---------------------------------------------------------------------------
   // Public member functions.
   //---------------------------------------------------------------------------

   public:

   explicit BomEntVecAtt (
         AttBldr *    theAttBldr,
         const char * theName,
         SetFuncPtr   theSetFuncPtr,
         GetFuncPtr   theGetFuncPtr);
      //
      // Constructor.

   virtual ~BomEntVecAtt ();
      //
      // Destructor.

   virtual void setValue     (Component *, const Elem *);
   virtual void getValue     (Component *, VecWoa <Elem> &);
   virtual bool isAnInputAtt ();
      //
      // Overrides from class Att.

   //---------------------------------------------------------------------------
   // Private member functions.
   //---------------------------------------------------------------------------

   private:

   BomEntVecAtt              (const BomEntVecAtt &);
   BomEntVecAtt & operator = (const BomEntVecAtt &);
      //
      // Not defined; prevents accidental copying and assignment.

   //---------------------------------------------------------------------------
   // Private member data.
   //---------------------------------------------------------------------------

   const SetFuncPtr mySetFuncPtr_;
      //
      // A pointer to the WIT API function that sets      the value of the
      // attribute represented by this BomEntVecAtt.
      // NULL, if this BomEntVecAtt represents an output attribute.

   const GetFuncPtr myGetFuncPtr_;
      //
      // A pointer to the WIT API function that retrieves the value of the
      // attribute represented by this BomEntVecAtt.
   };
};
//
// End of namespace WitJ.

//------------------------------------------------------------------------------
// Class template SubVecAtt <Elem>
//
// Represents an attribute of type time-vector of Elems associated with a
// Substitute.
//
// Class Hierarchy:
//
//    JAccObject
//       Att
//          SubVecAtt <Elem>
//
// The definition is in VecAtts.C.
//------------------------------------------------------------------------------

namespace WitJ
{
template <typename Elem>
      class SubVecAtt: public Att
   {
   //---------------------------------------------------------------------------
   // Local typedefs.
   //
   // SetFuncPtr:
   //    A pointer to a WIT API function that sets      the value of an
   //    attribute of type time-vector of Elems associated with a Substitute.
   //
   // GetFuncPtr:
   //    A pointer to a WIT API function that retrieves the value of an
   //    attribute of type time-vector of Elems associated with a Substitute.
   //---------------------------------------------------------------------------

   typedef
      WIT_DECLSPEC witReturnCode STDCALL (* SetFuncPtr) (
         WitRun * const,
         const char * const,
         const int,
         const int,
         const Elem * const);

   typedef
      WIT_DECLSPEC witReturnCode STDCALL (* GetFuncPtr) (
         WitRun * const,
         const char * const,
         const int,
         const int,
         Elem * *);

   //---------------------------------------------------------------------------
   // Public member functions.
   //---------------------------------------------------------------------------

   public:

   explicit SubVecAtt (
         AttBldr *    theAttBldr,
         const char * theName,
         SetFuncPtr   theSetFuncPtr,
         GetFuncPtr   theGetFuncPtr);
      //
      // Constructor.

   virtual ~SubVecAtt ();
      //
      // Destructor.

   virtual void setValue     (Component *, const Elem *);
   virtual void getValue     (Component *, VecWoa <Elem> &);
   virtual bool isAnInputAtt ();
      //
      // Overrides from class Att.

   //---------------------------------------------------------------------------
   // Private member functions.
   //---------------------------------------------------------------------------

   private:

   SubVecAtt              (const SubVecAtt &);
   SubVecAtt & operator = (const SubVecAtt &);
      //
      // Not defined; prevents accidental copying and assignment.

   //---------------------------------------------------------------------------
   // Private member data.
   //---------------------------------------------------------------------------

   const SetFuncPtr mySetFuncPtr_;
      //
      // A pointer to the WIT API function that sets      the value of the
      // attribute represented by this SubVecAtt.
      // NULL, if this SubVecAtt represents an output attribute.

   const GetFuncPtr myGetFuncPtr_;
      //
      // A pointer to the WIT API function that retrieves the value of the
      // attribute represented by this SubVecAtt.
   };
};
//
// End of namespace WitJ.

//------------------------------------------------------------------------------
// Class template BopEntVecAtt <Elem>
//
// Represents an attribute of type time-vector of Elems associated with a
// BopEntry.
//
// Class Hierarchy:
//
//    JAccObject
//       Att
//          BopEntVecAtt <Elem>
//
// The definition is in VecAtts.C.
//------------------------------------------------------------------------------

namespace WitJ
{
template <typename Elem>
      class BopEntVecAtt: public Att
   {
   //---------------------------------------------------------------------------
   // Local typedefs.
   //
   // SetFuncPtr:
   //    A pointer to a WIT API function that sets      the value of an
   //    attribute of type time-vector of Elems associated with a BopEntry.
   //
   // GetFuncPtr:
   //    A pointer to a WIT API function that retrieves the value of an
   //    attribute of type time-vector of Elems associated with a BopEntry.
   //---------------------------------------------------------------------------

   typedef
      WIT_DECLSPEC witReturnCode STDCALL (* SetFuncPtr) (
         WitRun * const,
         const char * const,
         const int,
         const Elem * const);

   typedef
      WIT_DECLSPEC witReturnCode STDCALL (* GetFuncPtr) (
         WitRun * const,
         const char * const,
         const int,
         Elem * *);

   //---------------------------------------------------------------------------
   // Public member functions.
   //---------------------------------------------------------------------------

   public:

   explicit BopEntVecAtt (
         AttBldr *    theAttBldr,
         const char * theName,
         SetFuncPtr   theSetFuncPtr,
         GetFuncPtr   theGetFuncPtr);
      //
      // Constructor.

   virtual ~BopEntVecAtt ();
      //
      // Destructor.

   virtual void setValue     (Component *, const Elem *);
   virtual void getValue     (Component *, VecWoa <Elem> &);
   virtual bool isAnInputAtt ();
      //
      // Overrides from class Att.

   //---------------------------------------------------------------------------
   // Private member functions.
   //---------------------------------------------------------------------------

   private:

   BopEntVecAtt              (const BopEntVecAtt &);
   BopEntVecAtt & operator = (const BopEntVecAtt &);
      //
      // Not defined; prevents accidental copying and assignment.

   //---------------------------------------------------------------------------
   // Private member data.
   //---------------------------------------------------------------------------

   const SetFuncPtr mySetFuncPtr_;
      //
      // A pointer to the WIT API function that sets      the value of the
      // attribute represented by this BopEntVecAtt.
      // NULL, if this BopEntVecAtt represents an output attribute.

   const GetFuncPtr myGetFuncPtr_;
      //
      // A pointer to the WIT API function that retrieves the value of the
      // attribute represented by this BopEntVecAtt.
   };
};
//
// End of namespace WitJ.

#endif
@


1.18
log
@Attributes.
@
text
@@


1.17
log
@Attributes.
@
text
@d45 1
a45 1
   // WitSetFuncPtr:
d50 1
a50 1
   // WitGetFuncPtr:
d57 1
a57 1
      WIT_DECLSPEC witReturnCode STDCALL (* WitSetFuncPtr) (
d62 1
a62 1
      WIT_DECLSPEC witReturnCode STDCALL (* WitGetFuncPtr) (
d73 4
a76 4
         AttBldr *     theAttBldr,
         const char *  theName,
         WitSetFuncPtr theSetFuncPtr,
         WitGetFuncPtr theGetFuncPtr);
d105 1
a105 1
   const WitSetFuncPtr mySetFuncPtr_;
d111 1
a111 1
   const WitGetFuncPtr myGetFuncPtr_;
d142 1
a142 1
   // WitSetFuncPtr:
d146 1
a146 1
   // WitGetFuncPtr:
d152 1
a152 1
      WIT_DECLSPEC witReturnCode STDCALL (* WitSetFuncPtr) (
d158 1
a158 1
      WIT_DECLSPEC witReturnCode STDCALL (* WitGetFuncPtr) (
d170 4
a173 4
         AttBldr *     theAttBldr,
         const char *  theName,
         WitSetFuncPtr theSetFuncPtr,
         WitGetFuncPtr theGetFuncPtr);
d202 1
a202 1
   const WitSetFuncPtr mySetFuncPtr_;
d208 1
a208 1
   const WitGetFuncPtr myGetFuncPtr_;
d240 1
a240 1
   // WitSetFuncPtr:
d244 1
a244 1
   // WitGetFuncPtr:
d250 1
a250 1
      WIT_DECLSPEC witReturnCode STDCALL (* WitSetFuncPtr) (
d257 1
a257 1
      WIT_DECLSPEC witReturnCode STDCALL (* WitGetFuncPtr) (
d270 4
a273 4
         AttBldr *     theAttBldr,
         const char *  theName,
         WitSetFuncPtr theSetFuncPtr,
         WitGetFuncPtr theGetFuncPtr);
d302 1
a302 1
   const WitSetFuncPtr mySetFuncPtr_;
d308 1
a308 1
   const WitGetFuncPtr myGetFuncPtr_;
d340 1
a340 1
   // WitSetFuncPtr:
d344 1
a344 1
   // WitGetFuncPtr:
d350 1
a350 1
      WIT_DECLSPEC witReturnCode STDCALL (* WitSetFuncPtr) (
d356 1
a356 1
      WIT_DECLSPEC witReturnCode STDCALL (* WitGetFuncPtr) (
d368 4
a371 4
         AttBldr *     theAttBldr,
         const char *  theName,
         WitSetFuncPtr theSetFuncPtr,
         WitGetFuncPtr theGetFuncPtr);
d400 1
a400 1
   const WitSetFuncPtr mySetFuncPtr_;
d406 1
a406 1
   const WitGetFuncPtr myGetFuncPtr_;
d438 1
a438 1
   // WitSetFuncPtr:
d442 1
a442 1
   // WitGetFuncPtr:
d448 1
a448 1
      WIT_DECLSPEC witReturnCode STDCALL (* WitSetFuncPtr) (
d455 1
a455 1
      WIT_DECLSPEC witReturnCode STDCALL (* WitGetFuncPtr) (
d468 4
a471 4
         AttBldr *     theAttBldr,
         const char *  theName,
         WitSetFuncPtr theSetFuncPtr,
         WitGetFuncPtr theGetFuncPtr);
d500 1
a500 1
   const WitSetFuncPtr mySetFuncPtr_;
d506 1
a506 1
   const WitGetFuncPtr myGetFuncPtr_;
d538 1
a538 1
   // WitSetFuncPtr:
d542 1
a542 1
   // WitGetFuncPtr:
d548 1
a548 1
      WIT_DECLSPEC witReturnCode STDCALL (* WitSetFuncPtr) (
d556 1
a556 1
      WIT_DECLSPEC witReturnCode STDCALL (* WitGetFuncPtr) (
d570 4
a573 4
         AttBldr *     theAttBldr,
         const char *  theName,
         WitSetFuncPtr theSetFuncPtr,
         WitGetFuncPtr theGetFuncPtr);
d602 1
a602 1
   const WitSetFuncPtr mySetFuncPtr_;
d608 1
a608 1
   const WitGetFuncPtr myGetFuncPtr_;
d640 1
a640 1
   // WitSetFuncPtr:
d644 1
a644 1
   // WitGetFuncPtr:
d650 1
a650 1
      WIT_DECLSPEC witReturnCode STDCALL (* WitSetFuncPtr) (
d657 1
a657 1
      WIT_DECLSPEC witReturnCode STDCALL (* WitGetFuncPtr) (
d670 4
a673 4
         AttBldr *     theAttBldr,
         const char *  theName,
         WitSetFuncPtr theSetFuncPtr,
         WitGetFuncPtr theGetFuncPtr);
d702 1
a702 1
   const WitSetFuncPtr mySetFuncPtr_;
d708 1
a708 1
   const WitGetFuncPtr myGetFuncPtr_;
@


1.16
log
@Attributes.
@
text
@a58 1
         const char * const,
a63 1
         const char * const,
d451 1
d458 1
d551 2
d559 2
d653 1
d660 1
@


1.15
log
@Attributes.
@
text
@d6 2
a7 1
//    PartVecAtt   <Elem>
d9 4
d23 100
d319 392
@


1.14
log
@Attributes.
@
text
@d4 4
a7 2
// Contains the declaration of class template   PartVecAtt <Elem>.
// Contains the declaration of class template DemandVecAtt <Elem>.
d28 1
a28 1
// The definition is in VecAtts-D.h.
d126 1
a126 1
// The definition is in VecAtts-D.h.
@


1.13
log
@Changed the names of access functions beginning with "my"
to begin with "get".
@
text
@d76 3
a78 4
   virtual void         setValue         (Component *, const Elem *);
   virtual void         getValue         (Component *, VecWoa <Elem> &);
   virtual bool         isAnInputAtt     ();
   virtual const char * getCompClassName ();
d176 3
a178 4
   virtual void         setValue         (Component *, const Elem *);
   virtual void         getValue         (Component *, VecWoa <Elem> &);
   virtual bool         isAnInputAtt     ();
   virtual const char * getCompClassName ();
@


1.12
log
@Self-Test.
@
text
@d76 4
a79 4
   virtual void         setValue        (Component *, const Elem *);
   virtual void         getValue        (Component *, VecWoa <Elem> &);
   virtual bool         isAnInputAtt    ();
   virtual const char * myCompClassName ();
d177 4
a180 4
   virtual void         setValue        (Component *, const Elem *);
   virtual void         getValue        (Component *, VecWoa <Elem> &);
   virtual bool         isAnInputAtt    ();
   virtual const char * myCompClassName ();
@


1.11
log
@Initial implementation of self-test.
@
text
@d76 4
a79 3
   virtual void setValue     (Component *, const Elem *);
   virtual void getValue     (Component *, VecWoa <Elem> &);
   virtual bool isAnInputAtt ();
d177 4
a180 3
   virtual void setValue     (Component *, const Elem *);
   virtual void getValue     (Component *, VecWoa <Elem> &);
   virtual bool isAnInputAtt ();
@


1.10
log
@Implemented of class DblVecOutAttAcc.
@
text
@d76 3
a78 2
   virtual void setValue (Component *, const Elem *);
   virtual void getValue (Component *, VecWoa <Elem> &);
d176 3
a178 2
   virtual void setValue (Component *, const Elem *);
   virtual void getValue (Component *, VecWoa <Elem> &);
@


1.9
log
@Implemented the demandVol attribute.
@
text
@d100 1
d199 1
@


1.8
log
@Attributes.
@
text
@d4 2
a5 1
// Contains the declaration of class template PartVecAtt <Elem>.
d110 98
@


1.7
log
@Attributes.
@
text
@d7 2
a8 2
#ifndef VecAttsH
#define VecAttsH
@


1.6
log
@File name change.
@
text
@d64 1
a64 1
         ProbCoord *   theProbCoord,
@


1.5
log
@Local function pointer typedefs.
@
text
@a4 2
//
// The definition is in VecAtts-Def.h.
d24 2
@


1.4
log
@Added myName_ to class Att.
@
text
@a16 9
// Macro WitApiFunc
//
// Expands to the standard beginning of a declaration of a WIT API function.
// This macro is to be used when declaring a pointer to a WIT API function.
//------------------------------------------------------------------------------

#define WitApiFunc WIT_DECLSPEC witReturnCode STDCALL

//------------------------------------------------------------------------------
d34 24
d66 2
a67 8
         WitApiFunc (* theSetFunc) (
            WitRun * const,
            const char * const,
            const Elem * const),
         WitApiFunc (* theGetFunc) (
            WitRun * const,
            const char * const,
            Elem * *));
d95 1
a95 4
   WitApiFunc (* const mySetFunc_) (
         WitRun * const,
         const char * const,
         const Elem * const);
d97 2
a98 2
      // A pointer to the WIT API function that sets the value of the attribute
      // represented by this PartVecAtt.
d100 1
a100 4
   WitApiFunc (* const myGetFunc_) (
         WitRun * const,
         const char * const,
         Elem * *);
d102 2
a103 2
      // A pointer to the WIT API function that gets the value of the attribute
      // represented by this PartVecAtt.
@


1.3
log
@Changed file name VecAttsI.h to VecAtts-Def.h.
@
text
@d49 2
a50 1
         ProbCoord *,
@


1.2
log
@Attributes
@
text
@d6 1
a6 1
// The definition is in VecAttsI.h.
@


1.1
log
@Initial implementation of attributes.
@
text
@d5 2
d50 5
a54 1
         WitApiFunc (*) (
d57 1
a57 1
            const Elem * const));
d66 1
d68 1
a68 1
      // Override from class Att.
d92 8
@

