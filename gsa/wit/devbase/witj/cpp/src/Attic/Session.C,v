head	1.12;
access;
symbols;
locks; strict;
comment	@ * @;


1.12
date	2008.11.26.18.33.05;	author rjw;	state dead;
branches;
next	1.11;

1.11
date	2008.09.26.22.50.17;	author rjw;	state Exp;
branches;
next	1.10;

1.10
date	2008.09.12.23.00.34;	author rjw;	state Exp;
branches;
next	1.9;

1.9
date	2008.09.12.14.43.23;	author rjw;	state Exp;
branches;
next	1.8;

1.8
date	2008.09.11.22.22.46;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2008.09.11.21.14.42;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2008.09.11.15.20.51;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2008.09.10.22.20.19;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2008.09.10.21.32.34;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2008.09.09.18.59.59;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2008.09.09.15.38.19;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2008.09.08.19.45.34;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.12
log
@Removed C++ class Session.
@
text
@//------------------------------------------------------------------------------
// WIT-J C++ Source File Session.C.
//
// Contains the definition of class Session.
//------------------------------------------------------------------------------

#include <Session.h>
#include <Problem.h>

#include     <wit.h>

//------------------------------------------------------------------------------

WitJ::Session::Session ():

      JavaAccObj (this),
      myWitRun_  (NULL),
      myProblem_ (NULL)
   {
   witNewRun (& myWitRun_);
   }

//------------------------------------------------------------------------------

WitJ::Session::~Session ()
   {
   witDeleteRun (myWitRun_);
   }

//------------------------------------------------------------------------------

WitJ::Session * WitJ::Session::asSession ()
   {
   return this;
   }

//------------------------------------------------------------------------------

void WitJ::Session::store (Problem * theProblem)
   {
   witjAssert (myProblem_ == NULL);

   witjAssert (theProblem != NULL);

   witjAssert (theProblem->getSession () == this);

   myProblem_ = theProblem;
   }
@


1.11
log
@Changed name of C++ class JAccObject to JavaAccObj.
@
text
@@


1.10
log
@Implemented msg attribute fileAccessMode.
@
text
@d16 1
a16 1
      JAccObject (this),
@


1.9
log
@Revised the use of class CTVecRes.
@
text
@d20 1
a20 3
   witNewRun              (& myWitRun_);

   witSetMesgFileAccessMode (myWitRun_, WitTRUE, "w");
@


1.8
log
@Moves C++ GlobalComp from Session to Problem.
@
text
@d7 2
a8 3
#include  <Session.h>
#include  <Problem.h>
#include <CTVecRes.h>
d10 1
a10 1
#include      <wit.h>
d16 3
a18 4
      JAccObject  (this),
      myWitRun_   (NULL),
      myProblem_  (NULL),
      myCTVecRes_ (NULL)
a28 2
   delete myCTVecRes_;

a50 7

//------------------------------------------------------------------------------

void WitJ::Session::lockNPeriods ()
   {
   myCTVecRes_ = new CTVecRes (this);
   }
@


1.7
log
@Added theSession.myProblem_.
@
text
@d17 4
a20 5
      JAccObject    (this),
      myWitRun_     (NULL),
      myProblem_    (NULL),
      myGlobalComp_ (NULL),
      myCTVecRes_   (NULL)
a57 10
void WitJ::Session::store (GlobalComp * theGlobalComp)
   {
   witjAssert (myGlobalComp_ == NULL);
   witjAssert (theGlobalComp != NULL);

   myGlobalComp_ = theGlobalComp;
   }

//------------------------------------------------------------------------------

@


1.6
log
@Disallowed creating a Problem for a Session that already has one.
@
text
@d19 1
d46 13
@


1.5
log
@Updated class CTVecRes.
@
text
@a54 13
void WitJ::Session::clearProblem ()
   {
   delete myCTVecRes_;

   myCTVecRes_   = NULL;

   witjAssert (myGlobalComp_ != NULL);

   myGlobalComp_ = NULL;
   }

//------------------------------------------------------------------------------

@


1.4
log
@Initial implementation of creating a Session without a Problem.
@
text
@d17 4
a20 5
      JAccObject      (this),
      myWitRun_       (NULL),
      myGlobalComp_   (NULL),
      nPeriodsLocked_ (false),
      myCTVecRes_     (NULL)
a24 2

   myCTVecRes_ = new CTVecRes (this);
d57 4
d70 1
a70 1
   nPeriodsLocked_ = true;
@


1.3
log
@Renamed Java class ProbCoordCI to SessionCI.
Renamed C++  class ProbCoord   to Session.
@
text
@a26 2
   witInitialize            (myWitRun_);

d58 9
@


1.2
log
@Removed Java class SessionCI.
Removed C++  class Session.
Kept the empty source files.
@
text
@d3 2
d6 58
@


1.1
log
@Initial implementation of the Session classes.
@
text
@a2 2
//
// Contains the definition of class Session.
a3 23

#include <Session.h>

//------------------------------------------------------------------------------

WitJ::Session::Session (ProbCoord * theProbCoord):

      JAccObject (theProbCoord)
   {
   }

//------------------------------------------------------------------------------

WitJ::Session::~Session ()
   {
   }

//------------------------------------------------------------------------------

WitJ::Session * WitJ::Session::asSession ()
   {
   return this;
   }
@

