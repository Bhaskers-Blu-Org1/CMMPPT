head	1.3;
access;
symbols;
locks; strict;
comment	@ * @;


1.3
date	2011.03.15.23.02.49;	author rjw;	state dead;
branches;
next	1.2;

1.2
date	2011.03.15.20.56.41;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2011.03.11.23.49.21;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Name changes.
@
text
@//------------------------------------------------------------------------------
// WIT-J C++ Source File JArrayList.C.
//
// Contains the implementation of the following clases and templetes:
//
//    JArrayList
//    IntJArrayList
//    CompJArrayList <C>
//
// Contains the explicit instantiation of class templates CompJArrayList <C>.
//------------------------------------------------------------------------------

#include <JArrayList.h>
#include     <CORJOR.h>
#include       <Part.h>

//------------------------------------------------------------------------------
// Implementation of class JArrayList.
//------------------------------------------------------------------------------

_jmethodID * WitJ::JArrayList::ensureCapacityJMeth_ = NULL;
_jmethodID * WitJ::JArrayList::           addJMeth_ = NULL;

//------------------------------------------------------------------------------

void WitJ::JArrayList::setUpJni (JNIEnv * theJNIEnv)
   {
   _jclass * theArrayListJCl;

   EXCEPTION_ASSERT (ensureCapacityJMeth_ == NULL);

   theArrayListJCl = findJClass (theJNIEnv, "java/util/ArrayList");

   ensureCapacityJMeth_ =
      getJMethodID (theJNIEnv, theArrayListJCl, "ensureCapacity", "(I)V");

   addJMeth_ =
      getJMethodID (theJNIEnv, theArrayListJCl, "add", "(Ljava/lang/Object;)Z");

   theJNIEnv->DeleteLocalRef (theArrayListJCl);
   }

//------------------------------------------------------------------------------

void WitJ::JArrayList::ensureCapacity (int minCapacity)
   {
   jint minCapJint;

   minCapJint = minCapacity;

   getJNIEnv ()->
      CallVoidMethod (myArrayListJObj_, ensureCapacityJMeth_, minCapJint);

   throwAnyJavaException ();
   }

//------------------------------------------------------------------------------

WitJ::JArrayList::JArrayList (JNIEnv * theJNIEnv, _jobject * theArrayListJObj):

      JniClient        (theJNIEnv),
      myArrayListJObj_ (theArrayListJObj)
   {
   }

//------------------------------------------------------------------------------

WitJ::JArrayList::~JArrayList ()
   {
   }

//------------------------------------------------------------------------------

void WitJ::JArrayList::addJObject (_jobject * theJObject)
   {
   getJNIEnv ()->CallBooleanMethod (myArrayListJObj_, addJMeth_, theJObject);

   throwAnyJavaException ();
   }

//------------------------------------------------------------------------------
// Implementation of class IntJArrayList.
//------------------------------------------------------------------------------

WitJ::IntJArrayList::IntJArrayList (
         JNIEnv *   theJNIEnv,
         _jobject * theIntArrayListJObj):

      JArrayList (theJNIEnv, theIntArrayListJObj)
   {
   }

//------------------------------------------------------------------------------

WitJ::IntJArrayList::~IntJArrayList ()
   {
   }

//------------------------------------------------------------------------------

void WitJ::IntJArrayList::add (int theInt)
   {
    _jobject * theIntegerJObj;

   theIntegerJObj = anIntegerJObjFor (theInt);

   addJObject     (theIntegerJObj);

   deleteLocalRef (theIntegerJObj);
   }

//------------------------------------------------------------------------------
// Implementation of class template CompJArrayList <C>.
//------------------------------------------------------------------------------

template <typename C>
      WitJ::CompJArrayList <C>::CompJArrayList (
         JNIEnv *   theJNIEnv,
         _jobject * theCompArrayListJObj):

      JArrayList (theJNIEnv, theCompArrayListJObj)
   {
   }

//------------------------------------------------------------------------------

template <typename C>
      WitJ::CompJArrayList <C>::~CompJArrayList ()
   {
   }

//------------------------------------------------------------------------------

template <typename C>
      void WitJ::CompJArrayList <C>::add (C * theC)
   {
   _jobject * theCompJObj;

   theCompJObj = CORJOR::getComponentJObj (theC);

   addJObject     (theCompJObj);

   deleteLocalRef (theCompJObj);
   }

//------------------------------------------------------------------------------
// Explicit instantiation of class template CompJArrayList <C>.
//------------------------------------------------------------------------------

template class WitJ::CompJArrayList <WitJ::Part>;
@


1.2
log
@Renamed JavaObjRep to CORJOR.
@
text
@@


1.1
log
@Problem.getCriticalList ()
@
text
@d14 1
a14 1
#include <JavaObjRep.h>
d139 1
a139 1
   theCompJObj = JavaObjRep::getComponentJObj (theC);
@

