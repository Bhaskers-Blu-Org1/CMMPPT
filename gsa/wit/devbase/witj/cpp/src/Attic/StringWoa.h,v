head	1.6;
access;
symbols;
locks; strict;
comment	@ * @;


1.6
date	2010.04.17.00.20.19;	author rjw;	state dead;
branches;
next	1.5;

1.5
date	2009.02.28.00.27.54;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2008.10.03.19.43.27;	author rjw;	state dead;
branches;
next	1.3;

1.3
date	2008.10.03.19.06.59;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2008.10.03.18.07.57;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2008.08.27.22.28.49;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Multi-Obj Mode
@
text
@//------------------------------------------------------------------------------
// WIT-J C++ Header File StringWoa.h.
//
// Contains the declaration of class StringWoa.
//------------------------------------------------------------------------------

#ifndef StringWoa_h
#define StringWoa_h

#include <VecWoa.h>

//------------------------------------------------------------------------------
// Class StringWoa
//
// "String WIT Output Argument"
// Represents an output argument to WIT of type string.
// Implemented as a wrapper around a VecWoa <char>.
// All implementation is inline.
//------------------------------------------------------------------------------

namespace WitJ
{
class StringWoa
   {
   //---------------------------------------------------------------------------
   // Public member functions.
   //---------------------------------------------------------------------------

   public:

   inline explicit StringWoa ():

         myVecWoa_ ()
      {
      }

   inline ~StringWoa ()
      {
      }

   inline char * * getCStrAddr ()
      {
      return myVecWoa_.getCVecAddr ();
      }

   inline char * getCString ()
      {
      return myVecWoa_.getCVec ();
      }

   //---------------------------------------------------------------------------
   // Private member functions.
   //---------------------------------------------------------------------------

   private:

   StringWoa              (const StringWoa &);
   StringWoa & operator = (const StringWoa &);
      //
      // Not implemented; prevents accidental copying and assignment.

   //---------------------------------------------------------------------------
   // Private member data.
   //---------------------------------------------------------------------------

   VecWoa <char> myVecWoa_;
      //
      // The VecWoa that implements this StringWoa.
   };
};
//
// End of namespace WitJ.

#endif
@


1.5
log
@purgeData
@
text
@@


1.4
log
@Replaced C++ class StringWoa with a typedef for VecWoa <char>.
@
text
@d10 2
d17 2
d31 5
a35 3
   explicit StringWoa ();
      //
      // Constructor.
d37 3
a39 4
   ~StringWoa ();
      //
      // Destructor.
      // Calls witFree on the c-string currently held by this StringWoa, if any.
d41 4
a44 6
   char * * operator & ();
      //
      // Calls witFree on the c-string currently held by this StringWoa, if any,
      // sets the pointer to NULL and returns the address of the c-string
      // pointer to be passed as an output string argument to a WIT API
      // function.
d46 1
a46 1
   inline operator const char * () const
d48 1
a48 1
      return myCString_;
d60 1
a60 1
      // Not defined; prevents accidental copying and assignment.
d66 1
a66 1
   char * myCString_;
d68 1
a68 1
      // The c-string to be obtained from WIT.
@


1.3
log
@Revised C++ class template VecWoa.
@
text
@@


1.2
log
@Revised class StringWoa.
@
text
@d34 1
d38 4
a41 3
      // Frees the c-string currently held by this StringWoa, if any, sets the
      // pointer to NULL and returns the address of the c-string pointer to be
      // passed as an output string argument to a WIT API function.
@


1.1
log
@Added C++ class StringWoa.
@
text
@d35 5
a39 4
   inline char * * getCStringAddr ()
      {
      return & myCString_;
      }
d41 1
a41 1
   inline const char * getCString () const
@

