head	1.11;
access;
symbols;
locks; strict;
comment	@ * @;


1.11
date	2008.09.26.20.31.19;	author rjw;	state dead;
branches;
next	1.10;

1.10
date	2008.09.26.19.48.41;	author rjw;	state Exp;
branches;
next	1.9;

1.9
date	2008.09.25.20.24.41;	author rjw;	state Exp;
branches;
next	1.8;

1.8
date	2008.09.25.18.52.27;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2008.09.25.15.21.00;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2008.09.24.21.53.26;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2008.09.24.19.57.54;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2008.09.24.16.26.36;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2008.09.23.19.30.10;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2008.09.23.17.52.29;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2008.09.23.15.50.37;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.11
log
@Changed name of C++ class JavaLink to JavaObjRep.
@
text
@//------------------------------------------------------------------------------
// WIT-J C++ Header File JavaLink.h.
//
// Contains the declaration of class JavaLink.
//------------------------------------------------------------------------------

#ifndef JavaLink_h
#define JavaLink_h

#include <Includes.h>

#include      <jni.h>

//------------------------------------------------------------------------------
// Class JavaLink
//
// The C++ interface to a Java object.
//------------------------------------------------------------------------------

namespace WitJ
{
class JavaLink
   {
   //---------------------------------------------------------------------------
   // Public member functions.
   //---------------------------------------------------------------------------

   public:

   explicit JavaLink (JNIEnv * theJNIEnv, _jobject * theJObject);
      //
      // Constructor.

   ~JavaLink ();
      //
      // Destructor.

   static void findJMethodIDs (JNIEnv * theJNIEnv);
      //
      // Finds the _jmethodIDs needed by this class.

   static void setNPeriods (GlobalComp * theGlobalComp, int theInt);
      //
      // Calls setNPeriods on the Java side.

   //---------------------------------------------------------------------------
   // Private member functions.
   //---------------------------------------------------------------------------

   private:

   static _jmethodID * findMethodID (
         JNIEnv *     theJNIEnv,
         const char * theMethName,
         const char * theClassName,
         const char * theMethDesc);
      //
      // Finds and returns the _jmethodID of the Java method indicated by the
      // arguments. Handles any exceptions that result.
      // Arguements:
      //    theJNIEnv:    The JNI environment
      //    theMethName:  The name of the Java method
      //    theClassName: The name of the Java class to which the method belongs
      //    theMethDesc:  The JNI method descriptor of the Java method

   static void checkForJniException (JAccObject * theJAccObject);
      //
      // Handles any exception that has been thrown by JNI.
      // Uses the JNIEnv corresponding to theJAccObject.

   static JNIEnv * theJNIEnvFor (JAccObject * theJAccObject);
      //
      // Returns the JNIEnv for theJAccObject.

   static _jobject * linkedJObjectFor (JAccObject * theJAccObject);
      //
      // Returns the _jobject that represents the Java Object corresponding to
      // theJAccObject.

   JavaLink              (const JavaLink &);
   JavaLink & operator = (const JavaLink &);
      //
      // Not defined; prevents accidental copying and assignment.

   //---------------------------------------------------------------------------
   // Private member data.
   //---------------------------------------------------------------------------

   JNIEnv * const myJNIEnv_;
      //
      // The JNI environment for this JavaLink.

   _jweak * linkedJObject_;
      //          
      // A JNI weak global reference that represents the Java Object to which
      // this JavaLink provides access.

   static _jmethodID * setNPeriodsID_;
      //
      // The jmethodID for theGlobalComp.setNPeriods (...).
   };
};
//
// End of namespace WitJ.

#endif
@


1.10
log
@Extraction
@
text
@@


1.9
log
@Extraction.
@
text
@d30 1
a30 1
   explicit JavaLink (JNIEnv *, _jobject *);
d75 1
a75 1
   static _jobject * theCIJObjectFor (JAccObject * theJAccObject);
d77 1
a77 1
      // Returns the _jobject that represents the Java CppInterface that owns
d93 1
a93 1
   _jweak * myCIJObj_;
d95 2
a96 2
      // A JNI weak global reference that represents the Java CppInterface to
      // which this JavaLink provides access.
d98 1
a98 1
   static _jmethodID * setNPeriodsInJavaID_;
d100 1
a100 1
      // The jmethodID for theGlobalCompCI.setNPeriodsInJava (...).
@


1.8
log
@Continued implementation of nPeriods extraction.
@
text
@d95 2
a96 2
      // A JNI weak global reference that represents the Java CppInterface that
      // owns this JavaLink.
@


1.7
log
@Continued implementation of nPeriods extraction.
@
text
@d30 1
a30 1
   explicit JavaLink (JNIEnv *, _jobject *, JAccObject *);
a46 9
   // Accessors.
   //---------------------------------------------------------------------------

   inline JAccObject * getJAccObject ()
      {
      return myJAccObject_;
      }

   //---------------------------------------------------------------------------
a97 4
   JAccObject * const myJAccObject_;
      //
      // The JAccObject that belongs to this JavaLink.

@


1.6
log
@Continued implementation of nPeriods extraction.
@
text
@d61 14
@


1.5
log
@Continued implementation of nPeriods extraction.
@
text
@d38 4
d61 6
a66 1
   static _jmethodID * findMethIDForSetNPeriods (JNIEnv * theJNIEnv);
d68 6
a73 1
      // Finds and returns the jmethodID for theGlobalCompCI.setNPeriods (...).
d96 4
@


1.4
log
@Intitial implementation of extraction of nPeriods.
@
text
@d38 1
a38 1
   void setNPeriods (int theInt);
d57 4
d74 1
a74 1
   _jweak * myCIJWeak_;
@


1.3
log
@Continued implementation of C++ class JavaLink.
@
text
@d38 4
@


1.2
log
@Continued implementation of C++ class JavaLink.
@
text
@d30 1
a30 1
   explicit JavaLink (JNIEnv *, JAccObject *);
d66 5
@


1.1
log
@Initial implementation of C++ class JavaLink.
@
text
@d30 1
a30 1
   explicit JavaLink (JAccObject *);
d62 4
@

