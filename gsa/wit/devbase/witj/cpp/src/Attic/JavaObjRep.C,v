head	1.60;
access;
symbols;
locks; strict;
comment	@ * @;


1.60
date	2011.04.08.23.39.54;	author rjw;	state dead;
branches;
next	1.59;

1.59
date	2011.04.06.15.56.37;	author rjw;	state Exp;
branches;
next	1.58;

1.58
date	2011.03.30.19.49.51;	author rjw;	state Exp;
branches;
next	1.57;

1.57
date	2011.03.15.20.56.43;	author rjw;	state dead;
branches;
next	1.56;

1.56
date	2011.03.11.23.49.22;	author rjw;	state Exp;
branches;
next	1.55;

1.55
date	2011.03.09.22.35.25;	author rjw;	state Exp;
branches;
next	1.54;

1.54
date	2011.02.25.16.06.50;	author rjw;	state Exp;
branches;
next	1.53;

1.53
date	2011.02.16.19.08.30;	author rjw;	state Exp;
branches;
next	1.52;

1.52
date	2011.02.14.21.13.46;	author rjw;	state Exp;
branches;
next	1.51;

1.51
date	2009.09.18.18.35.07;	author rjw;	state Exp;
branches;
next	1.50;

1.50
date	2009.06.04.23.04.21;	author rjw;	state Exp;
branches;
next	1.49;

1.49
date	2009.03.13.19.32.18;	author rjw;	state Exp;
branches;
next	1.48;

1.48
date	2009.03.13.16.36.07;	author rjw;	state Exp;
branches;
next	1.47;

1.47
date	2009.03.12.22.45.18;	author rjw;	state Exp;
branches;
next	1.46;

1.46
date	2009.03.05.17.21.26;	author rjw;	state Exp;
branches;
next	1.45;

1.45
date	2009.02.27.15.41.53;	author rjw;	state Exp;
branches;
next	1.44;

1.44
date	2009.02.24.17.44.56;	author rjw;	state Exp;
branches;
next	1.43;

1.43
date	2009.02.20.20.58.42;	author rjw;	state Exp;
branches;
next	1.42;

1.42
date	2009.02.20.17.18.44;	author rjw;	state Exp;
branches;
next	1.41;

1.41
date	2009.02.18.22.10.21;	author rjw;	state Exp;
branches;
next	1.40;

1.40
date	2009.02.14.00.51.29;	author rjw;	state Exp;
branches;
next	1.39;

1.39
date	2009.02.03.23.18.07;	author rjw;	state Exp;
branches;
next	1.38;

1.38
date	2009.02.03.16.32.27;	author rjw;	state Exp;
branches;
next	1.37;

1.37
date	2009.01.31.00.56.26;	author rjw;	state Exp;
branches;
next	1.36;

1.36
date	2009.01.29.22.06.38;	author rjw;	state Exp;
branches;
next	1.35;

1.35
date	2009.01.23.19.32.23;	author rjw;	state Exp;
branches;
next	1.34;

1.34
date	2009.01.23.18.46.54;	author rjw;	state Exp;
branches;
next	1.33;

1.33
date	2008.12.24.20.40.54;	author rjw;	state Exp;
branches;
next	1.32;

1.32
date	2008.12.24.20.34.22;	author rjw;	state Exp;
branches;
next	1.31;

1.31
date	2008.12.24.15.37.34;	author rjw;	state Exp;
branches;
next	1.30;

1.30
date	2008.12.24.00.18.55;	author rjw;	state Exp;
branches;
next	1.29;

1.29
date	2008.12.22.16.29.12;	author rjw;	state Exp;
branches;
next	1.28;

1.28
date	2008.12.15.17.28.47;	author rjw;	state Exp;
branches;
next	1.27;

1.27
date	2008.12.12.19.29.25;	author rjw;	state Exp;
branches;
next	1.26;

1.26
date	2008.10.14.22.17.46;	author rjw;	state Exp;
branches;
next	1.25;

1.25
date	2008.10.11.00.31.01;	author rjw;	state Exp;
branches;
next	1.24;

1.24
date	2008.10.11.00.10.38;	author rjw;	state Exp;
branches;
next	1.23;

1.23
date	2008.10.10.22.25.14;	author rjw;	state Exp;
branches;
next	1.22;

1.22
date	2008.10.10.17.51.11;	author rjw;	state Exp;
branches;
next	1.21;

1.21
date	2008.10.10.17.33.17;	author rjw;	state Exp;
branches;
next	1.20;

1.20
date	2008.10.07.18.50.24;	author rjw;	state Exp;
branches;
next	1.19;

1.19
date	2008.10.06.22.14.02;	author rjw;	state Exp;
branches;
next	1.18;

1.18
date	2008.10.06.14.52.39;	author rjw;	state Exp;
branches;
next	1.17;

1.17
date	2008.10.03.21.47.51;	author rjw;	state Exp;
branches;
next	1.16;

1.16
date	2008.10.03.20.35.52;	author rjw;	state Exp;
branches;
next	1.15;

1.15
date	2008.10.03.18.07.56;	author rjw;	state Exp;
branches;
next	1.14;

1.14
date	2008.10.02.21.45.13;	author rjw;	state Exp;
branches;
next	1.13;

1.13
date	2008.10.02.17.34.35;	author rjw;	state Exp;
branches;
next	1.12;

1.12
date	2008.10.02.15.13.51;	author rjw;	state Exp;
branches;
next	1.11;

1.11
date	2008.10.02.14.01.19;	author rjw;	state Exp;
branches;
next	1.10;

1.10
date	2008.10.01.20.31.38;	author rjw;	state Exp;
branches;
next	1.9;

1.9
date	2008.10.01.19.47.12;	author rjw;	state Exp;
branches;
next	1.8;

1.8
date	2008.10.01.18.19.15;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2008.10.01.15.12.09;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2008.09.29.18.09.11;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2008.09.29.17.34.15;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2008.09.29.15.26.11;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2008.09.26.22.50.16;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2008.09.26.20.46.05;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2008.09.26.20.31.19;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.60
log
@Removed C++ class JavaObjRep.
@
text
@//------------------------------------------------------------------------------
// WIT-J C++ Source File JavaObjRep.C.
//
// Contains the implementation of class JavaObjRep.
//------------------------------------------------------------------------------

#include <JavaObjRep.h>

//------------------------------------------------------------------------------

WitJ::JavaObjRep::JavaObjRep (_jobject * theJObject, JNIEnv * theJNIEnv):

      JniClient  (theJNIEnv),
      myJObject_ (NULL)
   {
   myJObject_ = getJNIEnv ()->NewGlobalRef (theJObject);

   EXCEPTION_ASSERT (myJObject_ != NULL);
   }

//------------------------------------------------------------------------------

WitJ::JavaObjRep::~JavaObjRep ()
   {
   getJNIEnv ()->DeleteGlobalRef (myJObject_);
   }
@


1.59
log
@JNIEnv arguments.
@
text
@@


1.58
log
@C++ class JavaObjRep.
@
text
@d11 1
a11 1
WitJ::JavaObjRep::JavaObjRep (JNIEnv * theJNIEnv, _jobject * theJObject):
@


1.57
log
@Renamed JavaObjRep to CORJOR.
@
text
@d7 1
a7 21
#include  <JavaObjRep.h>
#include  <NativeCall.h>
#include     <Problem.h>
#include <Coordinator.h>
#include        <Part.h>
#include   <Operation.h>
#include    <BomEntry.h>

#include      <string>
#include    <iostream>

//------------------------------------------------------------------------------

_jmethodID * WitJ::JavaObjRep::makePartJMeth_           = NULL;
_jmethodID * WitJ::JavaObjRep::makeDemandJMeth_         = NULL;
_jmethodID * WitJ::JavaObjRep::makeOperationJMeth_      = NULL;
_jmethodID * WitJ::JavaObjRep::makeBomEntryJMeth_       = NULL;
_jmethodID * WitJ::JavaObjRep::makeSubstituteJMeth_     = NULL;
_jmethodID * WitJ::JavaObjRep::makeBopEntryJMeth_       = NULL;
_jmethodID * WitJ::JavaObjRep::setNPeriodsFromCppJMeth_ = NULL;
_jmethodID * WitJ::JavaObjRep::getComponentJMeth_       = NULL;
d11 1
a11 1
WitJ::JavaObjRep::JavaObjRep (NativeCall & theCall, _jobject * theCORJObj):
d13 2
a14 2
      JniClient  (theCall),
      myCORJObj_ (NULL)
d16 1
a16 1
   EXCEPTION_ASSERT (theCORJObj != NULL);
d18 1
a18 3
   myCORJObj_ = getJNIEnv ()->NewWeakGlobalRef (theCORJObj);

   throwAnyJavaException ();
d25 1
a25 283
   getJNIEnv ()->DeleteWeakGlobalRef (myCORJObj_);
   }

//------------------------------------------------------------------------------

void WitJ::JavaObjRep::setUpJni (JNIEnv * theJNIEnv)
   {
   findAllJMethodIDs (theJNIEnv);
   }

//------------------------------------------------------------------------------

void WitJ::JavaObjRep::makePart (
      Coordinator * theCoord,
      const char *  thePartNameCStr,
      bool          theCategoryIsMaterial)
   {
   theCoord->
      getJavaObjRep ()->
         callVoidJMethod (
            makePartJMeth_,
            thePartNameCStr,
            theCategoryIsMaterial);
   }

//------------------------------------------------------------------------------

void WitJ::JavaObjRep::makeDemand (
      Part *       thePart,
      const char * theDemandNameCStr)
   {
   thePart->
      getJavaObjRep ()->
         callVoidJMethod (makeDemandJMeth_, theDemandNameCStr);
   }

//------------------------------------------------------------------------------

void WitJ::JavaObjRep::makeOperation (
      Coordinator * theCoord,
      const char *  theOpnNameCStr)
   {
   theCoord->
      getJavaObjRep ()->
         callVoidJMethod (makeOperationJMeth_, theOpnNameCStr);
   }

//------------------------------------------------------------------------------

void WitJ::JavaObjRep::makeBomEntry (Operation * theOpn, Part * thePart)
   {
   theOpn->
      getJavaObjRep ()->
         callVoidJMethod (makeBomEntryJMeth_, thePart);
   }

//------------------------------------------------------------------------------

void WitJ::JavaObjRep::makeSubstitute (BomEntry * theBomEnt, Part * thePart)
   {
   theBomEnt->
      getJavaObjRep ()->
         callVoidJMethod (makeSubstituteJMeth_, thePart);
   }

//------------------------------------------------------------------------------

void WitJ::JavaObjRep::makeBopEntry (Operation * theOpn, Part * thePart)
   {
   theOpn->
      getJavaObjRep ()->
         callVoidJMethod (makeBopEntryJMeth_, thePart);
   }

//------------------------------------------------------------------------------

void WitJ::JavaObjRep::setNPeriods (Problem * theProblem, int theValue)
   {
   theProblem->
      getJavaObjRep ()->
         callVoidJMethod (setNPeriodsFromCppJMeth_, theValue);
   }

//------------------------------------------------------------------------------

_jobject * WitJ::JavaObjRep::getComponentJObj (Component * theComp)
   {
   return theComp->getJavaObjRep ()->callObjectJMethod (getComponentJMeth_);
   }

//------------------------------------------------------------------------------

void WitJ::JavaObjRep::findNonsense (Coordinator * theCoord)
   {
   findJClass (theCoord->getJavaObjRep ()->getJNIEnv (), "Nonsense");
   }

//------------------------------------------------------------------------------

void WitJ::JavaObjRep::exhaustJniMemory ()
   {
   std::string  theString;
   const char * theCString;
   int          totDiscarded;
   _jstring *   theJString;
   _jobject *   theJGlobalRef;

   theString.append (10485760, ' ');

   theCString = theString.c_str ();

   for (totDiscarded = 10; totDiscarded <= 10000; totDiscarded += 10)
      {
      theJString    = newJString (theCString);

      theJGlobalRef = getJNIEnv ()->NewGlobalRef (theJString);

      EXCEPTION_ASSERT (theJGlobalRef != NULL);

      deleteLocalRef (theJString);

      std::cout << totDiscarded << "MB of memory have been allocated by JNI.\n";

      std::cout.flush ();
      }

   EXCEPTION_ASSERT (false);
   }

//------------------------------------------------------------------------------

void WitJ::JavaObjRep::callVoidJMethod (
      _jmethodID * theMethodID,
      const char * theCString)
   {
   _jstring * theJString;
   
   theJString = newJString (theCString);

   getJNIEnv ()->CallVoidMethod (myCORJObj_, theMethodID, theJString);

   throwAnyJavaException ();
   }

//------------------------------------------------------------------------------

void WitJ::JavaObjRep::callVoidJMethod (
      _jmethodID * theMethodID,
      const char * theCString,
      bool         theBool)
   {
   _jstring * theJString;
   
   theJString = newJString (theCString);

   getJNIEnv ()->CallVoidMethod (myCORJObj_, theMethodID, theJString, theBool);

   throwAnyJavaException ();
   }

//------------------------------------------------------------------------------

void WitJ::JavaObjRep::callVoidJMethod (_jmethodID * theMethodID, int theInt)
   {
   getJNIEnv ()->CallVoidMethod (myCORJObj_, theMethodID, theInt);

   throwAnyJavaException ();
   }

//------------------------------------------------------------------------------

void WitJ::JavaObjRep::callVoidJMethod (
      _jmethodID * theMethodID,
      JavaAccObj * theJavaAccObj)
   {
   _jobject * theCORJObj;
   
   theCORJObj = theJavaAccObj->getJavaObjRep ()->myCORJObj_;

   getJNIEnv ()->CallVoidMethod (myCORJObj_, theMethodID, theCORJObj);

   throwAnyJavaException ();
   }

//------------------------------------------------------------------------------

_jobject * WitJ::JavaObjRep::callObjectJMethod (_jmethodID * theMethodID)
   {
   _jobject * theJObject;

   theJObject = getJNIEnv ()->CallObjectMethod (myCORJObj_, theMethodID);
            
   throwAnyJavaException ();
            
   return theJObject;
   }

//------------------------------------------------------------------------------

void WitJ::JavaObjRep::findAllJMethodIDs (JNIEnv * theJNIEnv)
   {
   EXCEPTION_ASSERT (makePartJMeth_ == NULL);

   makePartJMeth_ =
      findWitJMethodID (
         theJNIEnv,
         "CoordinatorCOR",
         "makePart",
         "(Ljava/lang/String;Z)V");

   makeDemandJMeth_ =
      findWitJMethodID (
         theJNIEnv,
         "PartCOR",
         "makeDemand",
         "(Ljava/lang/String;)V");

   makeOperationJMeth_ =
      findWitJMethodID (
         theJNIEnv,
         "CoordinatorCOR",
         "makeOperation",
         "(Ljava/lang/String;)V");

   makeBomEntryJMeth_ =
      findWitJMethodID (
         theJNIEnv,
         "OperationCOR",
         "makeBomEntry",
         "(Lcom/ibm/witj/PartCOR;)V");

   makeSubstituteJMeth_ =
      findWitJMethodID (
         theJNIEnv,
         "BomEntryCOR",
         "makeSubstitute",
         "(Lcom/ibm/witj/PartCOR;)V");

   makeBopEntryJMeth_ =
      findWitJMethodID (
         theJNIEnv,
         "OperationCOR",
         "makeBopEntry",
         "(Lcom/ibm/witj/PartCOR;)V");

   setNPeriodsFromCppJMeth_ =
      findWitJMethodID (
         theJNIEnv,
         "ProblemCOR",
         "setNPeriodsFromCpp",
         "(I)V");

   getComponentJMeth_ =
      findWitJMethodID (
         theJNIEnv,
         "ComponentCOR",
         "getComponent",
         "()Lcom/ibm/witj/Component;");
   }

//------------------------------------------------------------------------------

_jmethodID * WitJ::JavaObjRep::findWitJMethodID (
      JNIEnv *     theJNIEnv,
      const char * theClassName,
      const char * theMethName,
      const char * theMethDesc)
   {
   std::string  fullClassName;
   _jclass *    theJClass;
   _jmethodID * theJMethodID;

   fullClassName  = "com/ibm/witj/";

   fullClassName += theClassName;

   theJClass      = findJClass (theJNIEnv, fullClassName.c_str ());

   theJMethodID = getJMethodID (theJNIEnv, theJClass, theMethName, theMethDesc);

   theJNIEnv->DeleteLocalRef (theJClass);

   return theJMethodID;
@


1.56
log
@Problem.getCriticalList ()
@
text
@@


1.55
log
@Replaced calls to ctors for Java Integer and Double with valueOf.
@
text
@d27 1
d66 1
a66 1
         callJavaMethod (
d80 1
a80 1
         callJavaMethod (makeDemandJMeth_, theDemandNameCStr);
d91 1
a91 1
         callJavaMethod (makeOperationJMeth_, theOpnNameCStr);
d100 1
a100 1
         callJavaMethod (makeBomEntryJMeth_, thePart);
d109 1
a109 1
         callJavaMethod (makeSubstituteJMeth_, thePart);
d118 1
a118 1
         callJavaMethod (makeBopEntryJMeth_, thePart);
d127 8
a134 1
         callJavaMethod (setNPeriodsFromCppJMeth_, theValue);
d141 1
a141 3
   theCoord->getJavaObjRep ()->getJNIEnv ()->FindClass ("Nonsense");

   theCoord->getJavaObjRep ()->throwAnyJavaException ();
d178 1
a178 1
void WitJ::JavaObjRep::callJavaMethod (
d186 1
a186 5
   getJNIEnv ()->
      CallVoidMethod (
         myCORJObj_,
         theMethodID,
         theJString);
d193 1
a193 1
void WitJ::JavaObjRep::callJavaMethod (
d202 1
a202 6
   getJNIEnv ()->
      CallVoidMethod (
         myCORJObj_,
         theMethodID,
         theJString,
         theBool);
d209 1
a209 1
void WitJ::JavaObjRep::callJavaMethod (_jmethodID * theMethodID, int theInt)
d211 1
a211 5
   getJNIEnv ()->
      CallVoidMethod (
         myCORJObj_,
         theMethodID,
         theInt);
d218 1
a218 1
void WitJ::JavaObjRep::callJavaMethod (
d226 1
a226 5
   getJNIEnv ()->
      CallVoidMethod (
         myCORJObj_,
         theMethodID,
         theCORJObj);
d233 13
d251 1
a251 1
      findJMethodID (
d258 1
a258 1
      findJMethodID (
d265 1
a265 1
      findJMethodID (
d272 1
a272 1
      findJMethodID (
d279 1
a279 1
      findJMethodID (
d286 1
a286 1
      findJMethodID (
d293 1
a293 1
      findJMethodID (
d298 7
d309 1
a309 1
_jmethodID * WitJ::JavaObjRep::findJMethodID (
d323 1
a323 5
   theJClass      = theJNIEnv->FindClass (fullClassName.c_str ());

   throwAnyJavaException (theJNIEnv);

   theJMethodID = theJNIEnv->GetMethodID (theJClass, theMethName, theMethDesc);
d325 1
a325 1
   throwAnyJavaException (theJNIEnv);
@


1.54
log
@Moved GlobalAspect responsibilities to class Problem.
Removed class GlobalAspect.
@
text
@d20 7
a26 7
_jmethodID * WitJ::JavaObjRep::makePart_           = NULL;
_jmethodID * WitJ::JavaObjRep::makeDemand_         = NULL;
_jmethodID * WitJ::JavaObjRep::makeOperation_      = NULL;
_jmethodID * WitJ::JavaObjRep::makeBomEntry_       = NULL;
_jmethodID * WitJ::JavaObjRep::makeSubstitute_     = NULL;
_jmethodID * WitJ::JavaObjRep::makeBopEntry_       = NULL;
_jmethodID * WitJ::JavaObjRep::setNPeriodsFromCpp_ = NULL;
d65 4
a68 1
         callJavaMethod (makePart_, thePartNameCStr, theCategoryIsMaterial);
d79 1
a79 1
         callJavaMethod (makeDemand_, theDemandNameCStr);
d90 1
a90 1
         callJavaMethod (makeOperation_, theOpnNameCStr);
d99 1
a99 1
         callJavaMethod (makeBomEntry_, thePart);
d108 1
a108 1
         callJavaMethod (makeSubstitute_, thePart);
d117 1
a117 1
         callJavaMethod (makeBopEntry_, thePart);
d126 1
a126 1
         callJavaMethod (setNPeriodsFromCpp_, theValue);
d246 1
a246 1
   EXCEPTION_ASSERT (makePart_ == NULL);
d248 1
a248 1
   makePart_  =
d255 1
a255 1
   makeDemand_  =
d262 1
a262 1
   makeOperation_  =
d269 1
a269 1
   makeBomEntry_  =
d276 1
a276 1
   makeSubstitute_  =
d283 1
a283 1
   makeBopEntry_  =
d290 1
a290 1
   setNPeriodsFromCpp_ =
@


1.53
log
@CPLEX
@
text
@d7 7
a13 7
#include   <JavaObjRep.h>
#include   <NativeCall.h>
#include <GlobalAspect.h>
#include  <Coordinator.h>
#include         <Part.h>
#include    <Operation.h>
#include     <BomEntry.h>
d15 2
a16 2
#include       <string>
#include     <iostream>
d119 1
a119 3
void WitJ::JavaObjRep::setNPeriods (
      GlobalAspect * theGlobalAspect,
      int            theValue)
d121 1
a121 1
   theGlobalAspect->
d290 1
a290 1
         "GlobalAspectCOR",
@


1.52
log
@CPLEX
@
text
@d153 1
a153 1
      theJString    = makeJString (theCString);
d177 1
a177 1
   theJString = makeJString (theCString);
d197 1
a197 1
   theJString = makeJString (theCString);
@


1.51
log
@Implemented synchronized WIT-J/C++/JNI set-up.
@
text
@d51 1
a51 1
void WitJ::JavaObjRep::setUpJni (NativeCall & theCall)
d53 1
a53 50
   EXCEPTION_ASSERT (makePart_ == NULL);

   makePart_  =
      theCall.
         findJMethodID (
            "CoordinatorCOR",
            "makePart",
            "(Ljava/lang/String;Z)V");

   makeDemand_  =
      theCall.
         findJMethodID (
            "PartCOR",
            "makeDemand",
            "(Ljava/lang/String;)V");

   makeOperation_  =
      theCall.
         findJMethodID (
            "CoordinatorCOR",
            "makeOperation",
            "(Ljava/lang/String;)V");

   makeBomEntry_  =
      theCall.
         findJMethodID (
            "OperationCOR",
            "makeBomEntry",
            "(Lcom/ibm/witj/PartCOR;)V");

   makeSubstitute_  =
      theCall.
         findJMethodID (
            "BomEntryCOR",
            "makeSubstitute",
            "(Lcom/ibm/witj/PartCOR;)V");

   makeBopEntry_  =
      theCall.
         findJMethodID (
            "OperationCOR",
            "makeBopEntry",
            "(Lcom/ibm/witj/PartCOR;)V");

   setNPeriodsFromCpp_ =
      theCall.
         findJMethodID (
            "GlobalAspectCOR",
            "setNPeriodsFromCpp",
            "(I)V");
d240 85
@


1.50
log
@Changed handling of Lists of AllocTriples to avoid call-backs.
@
text
@a34 5
   if (makePart_ == NULL)
      {
      findAllJMethodIDs ();
      }

d51 56
a219 76
void WitJ::JavaObjRep::findAllJMethodIDs ()
   {
   makePart_  =
      findJMethodID (
         "CoordinatorCOR",
         "makePart",
         "(Ljava/lang/String;Z)V");

   makeDemand_  =
      findJMethodID (
         "PartCOR",
         "makeDemand",
         "(Ljava/lang/String;)V");

   makeOperation_  =
      findJMethodID (
         "CoordinatorCOR",
         "makeOperation",
         "(Ljava/lang/String;)V");

   makeBomEntry_  =
      findJMethodID (
         "OperationCOR",
         "makeBomEntry",
         "(Lcom/ibm/witj/PartCOR;)V");

   makeSubstitute_  =
      findJMethodID (
         "BomEntryCOR",
         "makeSubstitute",
         "(Lcom/ibm/witj/PartCOR;)V");

   makeBopEntry_  =
      findJMethodID (
         "OperationCOR",
         "makeBopEntry",
         "(Lcom/ibm/witj/PartCOR;)V");

   setNPeriodsFromCpp_ =
      findJMethodID (
         "GlobalAspectCOR",
         "setNPeriodsFromCpp",
         "(I)V");
   }

//------------------------------------------------------------------------------

_jmethodID * WitJ::JavaObjRep::findJMethodID (
      const char * theClassName,
      const char * theMethName,
      const char * theMethDesc)
   {
   std::string  fullClassName;
   _jclass *    theJClass;
   _jmethodID * theJMethodID;

   fullClassName  = "com/ibm/witj/";

   fullClassName += theClassName;

   theJClass      = getJNIEnv ()->FindClass (fullClassName.c_str ());

   throwAnyJavaException ();

   theJMethodID =
      getJNIEnv ()->GetMethodID (theJClass, theMethName, theMethDesc);

   throwAnyJavaException ();

   deleteLocalRef (theJClass);

   return theJMethodID;
   }

//------------------------------------------------------------------------------

@


1.49
log
@Changed name of Element classes in Java and C++ to Component.
@
text
@d7 7
a13 8
#include      <JavaObjRep.h>
#include      <NativeCall.h>
#include    <GlobalAspect.h>
#include     <Coordinator.h>
#include            <Part.h>
#include       <Operation.h>
#include        <BomEntry.h>
#include <AllocTripleList.h>
d15 2
a16 2
#include          <string>
#include        <iostream>
a26 2
_jmethodID * WitJ::JavaObjRep::prepareForTriples_  = NULL;
_jmethodID * WitJ::JavaObjRep::addTriple_          = NULL;
a127 24
void WitJ::JavaObjRep::prepareForTriples (
      AllocTripleList * theAllocTripleList,
      int               nTriples)
   {
   theAllocTripleList->
      getJavaObjRep ()->
         callJavaMethod (prepareForTriples_, nTriples);
   }

//------------------------------------------------------------------------------

void WitJ::JavaObjRep::addTriple (
      AllocTripleList * theAllocTripleList,
      Component *       theComp,
      int               thePeriod,
      double            theVolume)
   {
   theAllocTripleList->
      getJavaObjRep ()->
         callJavaMethod (addTriple_, theComp, thePeriod, theVolume);
   }

//------------------------------------------------------------------------------

a211 12

   prepareForTriples_ =
      findJMethodID (
         "AllocTripleListCOR",
         "prepareForTriples",
         "(I)V");

   addTriple_ =
      findJMethodID (
         "AllocTripleListCOR",
         "addTriple",
         "(Lcom/ibm/witj/ComponentCOR;ID)V");
a313 24

//------------------------------------------------------------------------------

void WitJ::JavaObjRep::callJavaMethod (
      _jmethodID * theMethodID,
      JavaAccObj * theJavaAccObj,
      int          theInt,
      double       theDbl)
   {
   _jobject * theCORJObj;
   
   theCORJObj = theJavaAccObj->getJavaObjRep ()->myCORJObj_;

   getJNIEnv ()->
      CallVoidMethod (
         myCORJObj_,
         theMethodID,
         theCORJObj,
         theInt,
         theDbl);

   throwAnyJavaException ();
   }

@


1.48
log
@Changed name of GlobalComponent classes to GlobalAspect.
@
text
@d144 1
a144 1
      Element *         theElement,
d150 1
a150 1
         callJavaMethod (addTriple_, theElement, thePeriod, theVolume);
d250 1
a250 1
         "(Lcom/ibm/witj/ElementCOR;ID)V");
@


1.47
log
@Changed name of GlobalElement classes to GlobalComponent.
@
text
@d9 1
a9 1
#include <GlobalComponent.h>
d121 2
a122 2
      GlobalComponent * theGlobalComp,
      int               theValue)
d124 1
a124 1
   theGlobalComp->
d236 1
a236 1
         "GlobalComponentCOR",
@


1.46
log
@purgeData
@
text
@d9 1
a9 1
#include   <GlobalElement.h>
d121 2
a122 2
      GlobalElement * theGlobalElement,
      int             theValue)
d124 1
a124 1
   theGlobalElement->
d236 1
a236 1
         "GlobalElementCOR",
@


1.45
log
@purgeData
@
text
@a29 1
_jmethodID * WitJ::JavaObjRep::setToBeShutDown_    = NULL;
a154 9
void WitJ::JavaObjRep::setToBeShutDown (Element * theElement, bool theValue)
   {
   theElement->
      getJavaObjRep ()->
         callJavaMethod (setToBeShutDown_, theValue);
   }

//------------------------------------------------------------------------------

a250 6

   setToBeShutDown_ =
      findJMethodID (
         "ElementCOR",
         "setToBeShutDown",
         "(Z)V");
a323 13
void WitJ::JavaObjRep::callJavaMethod (_jmethodID * theMethodID, bool theBool)
   {
   getJNIEnv ()->
      CallVoidMethod (
         myCORJObj_,
         theMethodID,
         theBool);

   throwAnyJavaException ();
   }

//------------------------------------------------------------------------------

@


1.44
log
@Part.Category by boolean.
@
text
@d30 1
d156 9
d261 6
d340 13
@


1.43
log
@Removed Java class CppGateway.
@
text
@d62 1
a62 1
      const char *  thePartCatNameCStr)
d66 1
a66 1
         callJavaMethod (makePart_, thePartNameCStr, thePartCatNameCStr);
d202 1
a202 1
         "(Ljava/lang/String;Ljava/lang/String;)V");
d305 2
a306 2
      const char * theCString1,
      const char * theCString2)
d308 1
a308 2
   _jstring * theJString1;
   _jstring * theJString2;
d310 1
a310 2
   theJString1 = makeJString (theCString1);
   theJString2 = makeJString (theCString2);
d313 5
a317 1
      CallVoidMethod (myCORJObj_, theMethodID, theJString1, theJString2);
@


1.42
log
@Added the AllocTripleList classes.
@
text
@d21 9
a29 12
_jclass *    WitJ::JavaObjRep::ourCppGatewayJCl_    = NULL;
_jclass *    WitJ::JavaObjRep::ourElementCORJCl_    = NULL;

_jmethodID * WitJ::JavaObjRep::makePartID_          = NULL;
_jmethodID * WitJ::JavaObjRep::makeDemandID_        = NULL;
_jmethodID * WitJ::JavaObjRep::makeOperationID_     = NULL;
_jmethodID * WitJ::JavaObjRep::makeBomEntryID_      = NULL;
_jmethodID * WitJ::JavaObjRep::makeSubstituteID_    = NULL;
_jmethodID * WitJ::JavaObjRep::makeBopEntryID_      = NULL;
_jmethodID * WitJ::JavaObjRep::setNPeriodsID_       = NULL;
_jmethodID * WitJ::JavaObjRep::prepareForTriplesID_ = NULL;
_jmethodID * WitJ::JavaObjRep::addTripleID_         = NULL;
d38 1
a38 1
   if (ourCppGatewayJCl_ == NULL)
a39 1
      findAllJClasses   ();
d66 1
a66 1
         callJavaMethod (makePartID_, thePartNameCStr, thePartCatNameCStr);
d77 1
a77 1
         callJavaMethod (makeDemandID_, theDemandNameCStr);
d88 1
a88 1
         callJavaMethod (makeOperationID_, theOpnNameCStr);
d97 1
a97 1
         callJavaMethod (makeBomEntryID_, thePart);
d106 1
a106 1
         callJavaMethod (makeSubstituteID_, thePart);
d115 1
a115 1
         callJavaMethod (makeBopEntryID_, thePart);
d126 1
a126 1
         callJavaMethod (setNPeriodsID_, theValue);
d137 1
a137 1
         callJavaMethod (prepareForTriplesID_, nTriples);
d150 1
a150 1
         callJavaMethod (addTripleID_, theElement, thePeriod, theVolume);
a195 33
void WitJ::JavaObjRep::findAllJClasses ()
   {
   ourCppGatewayJCl_ = findJClass ("CppGateway");
   ourElementCORJCl_ = findJClass ("ElementCOR");
   }

//------------------------------------------------------------------------------

_jclass * WitJ::JavaObjRep::findJClass (const char * theClassName)
   {
   std::string fullClassName;
   _jclass *   theLocalRef;
   _jobject *  theGlobalRef;

   fullClassName  = "com/ibm/witj/";

   fullClassName += theClassName;
   
   theLocalRef    = getJNIEnv ()->FindClass (fullClassName.c_str ());

   throwAnyJavaException ();

   theGlobalRef   = getJNIEnv ()->NewGlobalRef (theLocalRef);

   throwAnyJavaException ();
   
   deleteLocalRef (theLocalRef);

   return static_cast <_jclass *> (theGlobalRef);
   }

//------------------------------------------------------------------------------

d198 1
a198 1
   makePartID_  =
d200 1
d202 1
a202 5
         "("
         "Lcom/ibm/witj/CoordinatorCOR;"
         "Ljava/lang/String;"
         "Ljava/lang/String;"
         ")V");
d204 1
a204 1
   makeDemandID_  =
d206 1
d208 1
a208 1
         "(Lcom/ibm/witj/PartCOR;Ljava/lang/String;)V");
d210 1
a210 1
   makeOperationID_  =
d212 1
d214 1
a214 1
         "(Lcom/ibm/witj/CoordinatorCOR;Ljava/lang/String;)V");
d216 1
a216 1
   makeBomEntryID_  =
d218 1
d220 1
a220 1
         "(Lcom/ibm/witj/OperationCOR;Lcom/ibm/witj/PartCOR;)V");
d222 1
a222 1
   makeSubstituteID_  =
d224 1
d226 1
a226 1
         "(Lcom/ibm/witj/BomEntryCOR;Lcom/ibm/witj/PartCOR;)V");
d228 1
a228 1
   makeBopEntryID_  =
d230 1
d232 1
a232 1
         "(Lcom/ibm/witj/OperationCOR;Lcom/ibm/witj/PartCOR;)V");
d234 1
a234 1
   setNPeriodsID_ =
d236 3
a238 2
         "setNPeriods",
         "(Lcom/ibm/witj/GlobalElementCOR;I)V");
d240 1
a240 1
   prepareForTriplesID_ =
d242 1
d244 1
a244 1
         "(Lcom/ibm/witj/AllocTripleListCOR;I)V");
d246 1
a246 1
   addTripleID_ =
d248 1
d250 1
a250 1
         "(Lcom/ibm/witj/AllocTripleListCOR;Lcom/ibm/witj/ElementCOR;ID)V");
d256 1
d260 2
d264 5
a268 3
   theJMethodID = 
      getJNIEnv ()->
         GetStaticMethodID (ourCppGatewayJCl_, theMethName, theMethDesc);
d272 7
d293 2
a294 2
      CallStaticVoidMethod (
         ourCppGatewayJCl_,
a295 1
         myCORJObj_,
d315 1
a315 6
      CallStaticVoidMethod (
         ourCppGatewayJCl_,
         theMethodID,
         myCORJObj_,
         theJString1,
         theJString2);
d325 2
a326 2
      CallStaticVoidMethod (
         ourCppGatewayJCl_,
a327 1
         myCORJObj_,
d344 2
a345 2
      CallStaticVoidMethod (
         ourCppGatewayJCl_,
a346 1
         myCORJObj_,
d365 2
a366 2
      CallStaticVoidMethod (
         ourCppGatewayJCl_,
a367 1
         myCORJObj_,
d374 1
@


1.41
log
@PIP
@
text
@d7 11
a17 10
#include    <JavaObjRep.h>
#include    <NativeCall.h>
#include <GlobalElement.h>
#include   <Coordinator.h>
#include          <Part.h>
#include     <Operation.h>
#include      <BomEntry.h>

#include        <string>
#include      <iostream>
d21 12
a32 12
_jclass *    WitJ::JavaObjRep::ourCppGatewayJCl_      = NULL;
_jclass *    WitJ::JavaObjRep::ourElementCORJCl_      = NULL;

_jmethodID * WitJ::JavaObjRep::makePartID_            = NULL;
_jmethodID * WitJ::JavaObjRep::makeDemandID_          = NULL;
_jmethodID * WitJ::JavaObjRep::makeOperationID_       = NULL;
_jmethodID * WitJ::JavaObjRep::makeBomEntryID_        = NULL;
_jmethodID * WitJ::JavaObjRep::makeSubstituteID_      = NULL;
_jmethodID * WitJ::JavaObjRep::makeBopEntryID_        = NULL;
_jmethodID * WitJ::JavaObjRep::setNPeriodsID_         = NULL;
_jmethodID * WitJ::JavaObjRep::prepAllocTripleListID_ = NULL;
_jmethodID * WitJ::JavaObjRep::addAllocTripleID_      = NULL;
d135 3
a137 3
void WitJ::JavaObjRep::prepAllocTripleList (
      Coordinator * theCoordinator,
      int           nTriples)
d139 1
a139 1
   theCoordinator->
d141 1
a141 1
         callJavaMethod (prepAllocTripleListID_, nTriples);
d146 5
a150 4
void WitJ::JavaObjRep::addAllocTriple (
      Element * theElement,
      int       thePeriod,
      double    theVolume)
d152 1
a152 1
   theElement->
d154 1
a154 1
         callJavaMethod (addAllocTripleID_, thePeriod, theVolume);
d274 1
a274 1
   prepAllocTripleListID_ =
d276 2
a277 2
         "prepAllocTripleList",
         "(Lcom/ibm/witj/CoordinatorCOR;I)V");
d279 1
a279 1
   addAllocTripleID_ =
d281 2
a282 2
         "addAllocTriple",
         "(Lcom/ibm/witj/ElementCOR;ID)V");
d364 1
a364 2
      int          theInt,
      double       theDbl)
d366 4
d375 1
a375 2
         theInt,
         theDbl);
d384 3
a386 1
      JavaAccObj * theJavaAccObj)
d397 3
a399 1
         theCORJObj);
@


1.40
log
@Implemented getPipSeq.
@
text
@d20 2
a21 2
_jclass *    WitJ::JavaObjRep::ourCppGatewayJCl_    = NULL;
_jclass *    WitJ::JavaObjRep::ourElementCORJCl_    = NULL;
d23 9
a31 8
_jmethodID * WitJ::JavaObjRep::makePartID_          = NULL;
_jmethodID * WitJ::JavaObjRep::makeDemandID_        = NULL;
_jmethodID * WitJ::JavaObjRep::makeOperationID_     = NULL;
_jmethodID * WitJ::JavaObjRep::makeBomEntryID_      = NULL;
_jmethodID * WitJ::JavaObjRep::makeSubstituteID_    = NULL;
_jmethodID * WitJ::JavaObjRep::makeBopEntryID_      = NULL;
_jmethodID * WitJ::JavaObjRep::setNPeriodsID_       = NULL;
_jmethodID * WitJ::JavaObjRep::storeAllocTriplesID_ = NULL;
d134 3
a136 5
void WitJ::JavaObjRep::storeAllocTriples (
      Coordinator *                   theCoord,
      const std::vector <Element *> & theElementVec,
      int *                           thePeriodCVec,
      double *                        theVolumeCVec)
d138 13
a150 1
   theCoord->
d152 1
a152 1
         storeAllocTriples (theElementVec, thePeriodCVec, theVolumeCVec);
d272 1
a272 1
   storeAllocTriplesID_ =
d274 7
a280 7
         "storeAllocTriples",
         "("
         "Lcom/ibm/witj/CoordinatorCOR;"
         "[Lcom/ibm/witj/ElementCOR;"
         "[I"
         "[D"
         ")V");
a301 67
void WitJ::JavaObjRep::storeAllocTriples (
      const std::vector <Element *> & theElementVec,
      int *                           thePeriodCVec,
      double *                        theVolumeCVec)
   {
   int             nTriples;
   _jobjectArray * theElementCORJObjArr;
   _jintArray *    thePeriodJIntArr;
   _jdoubleArray * theVolumeJDblArr;

   nTriples             = theElementVec.size ();

   theElementCORJObjArr = makeJObjArray (theElementVec);
   thePeriodJIntArr     = makeJIntArray (thePeriodCVec, nTriples);
   theVolumeJDblArr     = makeJDblArray (theVolumeCVec, nTriples);

   getJNIEnv ()->
      CallStaticVoidMethod (
         ourCppGatewayJCl_,
         storeAllocTriplesID_,
         myCORJObj_,
         theElementCORJObjArr,
         thePeriodJIntArr,
         theVolumeJDblArr);

   throwAnyJavaException ();

   deleteLocalRef (theVolumeJDblArr);
   deleteLocalRef (thePeriodJIntArr);
   deleteLocalRef (theElementCORJObjArr);
   }

//------------------------------------------------------------------------------

_jobjectArray * WitJ::JavaObjRep::makeJObjArray (
      const std::vector <Element *> & theElementVec)
   {
   int             nTriples;
   _jobjectArray * theElementCORJObjArr;
   int             theIdx;
   _jobject *      theElementCORJObj;

   nTriples             = theElementVec.size ();

   theElementCORJObjArr =
      getJNIEnv ()->NewObjectArray (nTriples, ourElementCORJCl_, NULL);

   throwAnyJavaException ();

   for (theIdx = 0; theIdx < nTriples; theIdx ++)
      {
      theElementCORJObj = theElementVec[theIdx]->getJavaObjRep ()->myCORJObj_;

      getJNIEnv ()->
         SetObjectArrayElement (
               theElementCORJObjArr,
               theIdx,
               theElementCORJObj);

      throwAnyJavaException ();
      }

   return theElementCORJObjArr;
   }

//------------------------------------------------------------------------------

d362 18
@


1.39
log
@Part Category
@
text
@d20 11
a30 8
_jclass *    WitJ::JavaObjRep::ourCppGatewayJCl_ = NULL;
_jmethodID * WitJ::JavaObjRep::makePartID_       = NULL;
_jmethodID * WitJ::JavaObjRep::makeDemandID_     = NULL;
_jmethodID * WitJ::JavaObjRep::makeOperationID_  = NULL;
_jmethodID * WitJ::JavaObjRep::makeBomEntryID_   = NULL;
_jmethodID * WitJ::JavaObjRep::makeSubstituteID_ = NULL;
_jmethodID * WitJ::JavaObjRep::makeBopEntryID_   = NULL;
_jmethodID * WitJ::JavaObjRep::setNPeriodsID_    = NULL;
d41 1
a41 1
      findCppGatewayJCl ();
d66 3
a68 1
   callJavaMethod (makePartID_, theCoord, thePartNameCStr, thePartCatNameCStr);
d77 3
a79 1
   callJavaMethod (makeDemandID_, thePart, theDemandNameCStr);
d88 3
a90 1
   callJavaMethod (makeOperationID_, theCoord, theOpnNameCStr);
d97 3
a99 1
   callJavaMethod (makeBomEntryID_, theOpn, thePart);
d106 3
a108 1
   callJavaMethod (makeSubstituteID_, theBomEnt, thePart);
d115 3
a117 1
   callJavaMethod (makeBopEntryID_, theOpn, thePart);
d126 16
a141 1
   callJavaMethod (setNPeriodsID_, theGlobalElement, theValue);
d187 1
a187 1
void WitJ::JavaObjRep::findCppGatewayJCl ()
d189 3
a191 2
   _jclass *  theLocalRef;
   _jobject * theGlobalRef;
d193 13
a205 1
   theLocalRef       = getJNIEnv ()->FindClass ("com/ibm/witj/CppGateway");
d209 1
a209 1
   theGlobalRef      = getJNIEnv ()->NewGlobalRef (theLocalRef);
d212 2
d215 1
a215 1
   ourCppGatewayJCl_ = static_cast <_jclass *> (theGlobalRef);
d260 10
d291 67
a359 1
      JavaAccObj * theJavaAccObj,
d362 1
a362 2
   JavaObjRep * theJavaObjRep;
   _jstring *   theJString;
d364 1
a364 1
   theJavaObjRep = theJavaAccObj->getJavaObjRep ();
d366 6
a371 1
   theJString    = theJavaObjRep->makeJString (theCString);
d373 1
a373 9
   theJavaObjRep->
      getJNIEnv ()->
         CallStaticVoidMethod (
            ourCppGatewayJCl_,
            theMethodID,
            theJavaObjRep->myCORJObj_,
            theJString);

   theJavaObjRep->throwAnyJavaException ();
a379 1
      JavaAccObj * theJavaAccObj,
d383 2
a384 3
   JavaObjRep * theJavaObjRep;
   _jstring *   theJString1;
   _jstring *   theJString2;
d386 2
a387 1
   theJavaObjRep = theJavaAccObj->getJavaObjRep ();
d389 7
a395 2
   theJString1   = theJavaObjRep->makeJString (theCString1);
   theJString2   = theJavaObjRep->makeJString (theCString2);
d397 1
a397 10
   theJavaObjRep->
      getJNIEnv ()->
         CallStaticVoidMethod (
            ourCppGatewayJCl_,
            theMethodID,
            theJavaObjRep->myCORJObj_,
            theJString1,
            theJString2);

   theJavaObjRep->throwAnyJavaException ();
d402 1
a402 4
void WitJ::JavaObjRep::callJavaMethod (
      _jmethodID * theMethodID,
      JavaAccObj * theJavaAccObj,
      int          theInt)
d404 6
a409 3
   JavaObjRep * theJavaObjRep;
   
   theJavaObjRep = theJavaAccObj->getJavaObjRep ();
d411 1
a411 9
   theJavaObjRep->
      getJNIEnv ()->
         CallStaticVoidMethod (
            ourCppGatewayJCl_,
            theMethodID,
            theJavaObjRep->myCORJObj_,
            theInt);

   theJavaObjRep->throwAnyJavaException ();
d418 1
a418 2
      JavaAccObj * theJavaAccObj1,
      JavaAccObj * theJavaAccObj2)
d420 1
a420 2
   JavaObjRep * theJavaObjRep1;
   JavaObjRep * theJavaObjRep2;
d422 1
a422 2
   theJavaObjRep1 = theJavaAccObj1->getJavaObjRep ();
   theJavaObjRep2 = theJavaAccObj2->getJavaObjRep ();
d424 6
a429 7
   theJavaObjRep1->
      getJNIEnv ()->
         CallStaticVoidMethod (
            ourCppGatewayJCl_,
            theMethodID,
            theJavaObjRep1->myCORJObj_,
            theJavaObjRep2->myCORJObj_);
d431 1
a431 1
   theJavaObjRep1->throwAnyJavaException ();
@


1.38
log
@Removed the Alternative classes.
@
text
@d61 1
a61 1
      int           thePartCatIdx)
d63 1
a63 1
   callJavaMethod (makePartID_, theCoord, thePartNameCStr, thePartCatIdx);
d180 5
a184 1
         "(Lcom/ibm/witj/CoordinatorCOR;Ljava/lang/String;I)V");
d264 2
a265 2
      const char * theCString,
      int          theInt)
d268 2
a269 1
   _jstring *   theJString;
d273 2
a274 1
   theJString    = theJavaObjRep->makeJString (theCString);
d282 2
a283 2
            theJString,
            theInt);
@


1.37
log
@Part.Category as Alternative
@
text
@a13 1
#include   <Alternative.h>
d61 1
a61 1
      Alternative * thePartCatAlt)
d63 1
a63 1
   callJavaMethod (makePartID_, theCoord, thePartNameCStr, thePartCatAlt);
d180 1
a180 5
         "("
         "Lcom/ibm/witj/CoordinatorCOR;"
         "Ljava/lang/String;"
         "Lcom/ibm/witj/AlternativeCOR;"
         ")V");
d260 1
d264 1
d268 2
d276 1
d286 2
a287 2
      JavaAccObj * theJavaAccObj1,
      JavaAccObj * theJavaAccObj2)
d289 1
a289 2
   JavaObjRep * theJavaObjRep1;
   JavaObjRep * theJavaObjRep2;
d291 1
a291 2
   theJavaObjRep1 = theJavaAccObj1->getJavaObjRep ();
   theJavaObjRep2 = theJavaAccObj2->getJavaObjRep ();
d293 1
a293 1
   theJavaObjRep1->
d298 2
a299 2
            theJavaObjRep1->myCORJObj_,
            theJavaObjRep2->myCORJObj_);
d301 1
a301 1
   theJavaObjRep1->throwAnyJavaException ();
a308 1
      const char * theCString,
a312 1
   _jstring *   theJString;
a316 2
   theJString     = theJavaObjRep1->makeJString (theCString);

a322 1
            theJString,
@


1.36
log
@Implemented Java class CppGateway.
@
text
@d14 1
d62 1
a62 1
      bool          theCategoryIsMat)
d64 1
a64 1
   callJavaMethod (makePartID_, theCoord, thePartNameCStr, theCategoryIsMat);
d181 5
a185 1
         "(Lcom/ibm/witj/CoordinatorCOR;Ljava/lang/String;Z)V");
d265 1
a265 2
      const char * theCString,
      bool         theBool)
a267 1
   _jstring *   theJString;
a270 2
   theJString    = theJavaObjRep->makeJString (theCString);

d277 1
a277 2
            theJString,
            theBool);
d286 2
a287 2
      JavaAccObj * theJavaAccObj,
      int          theInt)
d289 2
a290 1
   JavaObjRep * theJavaObjRep;
d292 2
a293 1
   theJavaObjRep = theJavaAccObj->getJavaObjRep ();
d295 1
a295 1
   theJavaObjRep->
d300 2
a301 2
            theJavaObjRep->myCORJObj_,
            theInt);
d303 1
a303 1
   theJavaObjRep->throwAnyJavaException ();
d311 1
d316 1
d321 2
d329 1
@


1.35
log
@Coordinator
@
text
@d8 2
a10 1
#include <GlobalElement.h>
d20 12
a31 1
WitJ::JavaObjRep::JavaObjRep (JniClient & theJniClient, _jobject * theJObj):
d33 2
a34 2
      JniClient (theJniClient),
      myJObj_   (NULL)
d36 7
a42 1
   EXCEPTION_ASSERT (theJObj != NULL);
d44 1
a44 1
   myJObj_ = getJNIEnv ()->NewWeakGlobalRef (theJObj);
d53 1
a53 1
   getJNIEnv ()->DeleteWeakGlobalRef (myJObj_);
d60 1
a60 1
      const char *  thePartName,
d63 1
a63 3
   theCoord->
      getJavaObjRep ()->
         makePartInt (theCoord, thePartName, theCategoryIsMat);
d70 1
a70 1
      const char * theDemandName)
d72 1
a72 11
   static _jclass *    theDemandJCl    = NULL;
   static _jmethodID * theDemandCtorID = NULL;

   thePart->
      getJavaObjRep ()->
         makeObjectFromObjectString (
            theDemandJCl,
            theDemandCtorID,
            "Demand",
            "Part",
            theDemandName);
d79 1
a79 1
      const char *  theOpnName)
d81 1
a81 11
   static _jclass *    theOpnJCl    = NULL;
   static _jmethodID * theOpnCtorID = NULL;

   theCoord->
      getJavaObjRep ()->
         makeObjectFromObjectString (
            theOpnJCl,
            theOpnCtorID,
            "Operation",
            "Coordinator",
            theOpnName);
d88 1
a88 12
   static _jclass *    theBomEntJCl    = NULL;
   static _jmethodID * theBomEntCtorID = NULL;

   theOpn->
      getJavaObjRep ()->
         makeObjectFromObjectElement (
            theBomEntJCl,
            theBomEntCtorID,
            "BomEntry",
            "Operation",
            "Part",
            thePart);
d95 1
a95 12
   static _jclass *    theSubJCl    = NULL;
   static _jmethodID * theSubCtorID = NULL;

   theBomEnt->
      getJavaObjRep ()->
         makeObjectFromObjectElement (
            theSubJCl,
            theSubCtorID,
            "Substitute",
            "BomEntry",
            "Part",
            thePart);
d102 1
a102 12
   static _jclass *    theBopEntJCl    = NULL;
   static _jmethodID * theBopEntCtorID = NULL;

   theOpn->
      getJavaObjRep ()->
         makeObjectFromObjectElement (
            theBopEntJCl,
            theBopEntCtorID,
            "BopEntry",
            "Operation",
            "Part",
            thePart);
d107 3
a109 3
void WitJ::JavaObjRep::makeNonsense (
      Coordinator * theCoord,
      const char *  theName)
d111 1
a111 11
   static _jclass *    theJClass = NULL;
   static _jmethodID * theCtorID = NULL;

   theCoord->
      getJavaObjRep ()->
         makeObjectFromObjectString (
            theJClass,
            theCtorID,
            "Nonsense",
            "Coordinator",
            theName);
d116 1
a116 3
void WitJ::JavaObjRep::setNPeriods (
      GlobalElement * theGlobalElement,
      int             theInt)
d118 3
a120 1
   theGlobalElement->getJavaObjRep ()->setNPeriods (theInt);
d157 1
a157 4
void WitJ::JavaObjRep::makePartInt (
      Coordinator * theCoord,
      const char *  thePartName,
      bool          theCategoryIsMat)
d159 2
a160 4
   static _jclass *    thePartJCl = NULL;
   static _jmethodID * makePartID = NULL;
   _jobject *          theCoordJObj;
   _jstring *          thePartNameJStr;
d162 1
a162 3
   if (thePartJCl == NULL)
      {
      thePartJCl = findJClass ("Part");
d164 1
a164 13
      makePartID =
         getJNIEnv ()->
            GetStaticMethodID (
               thePartJCl, 
               "makePart",
               "(Lcom/ibm/witj/Coordinator;Ljava/lang/String;Z)V");

      throwAnyJavaException ();
      }

   theCoordJObj = theCoord->getJavaObjRep ()->myJObj_;

   thePartNameJStr    = makeJString (thePartName);
d166 1
a166 7
   getJNIEnv ()->
      CallStaticVoidMethod (
         thePartJCl,
         makePartID,
         theCoordJObj,
         thePartNameJStr,
         theCategoryIsMat);
d170 1
a170 1
   deleteLocalRef (thePartNameJStr);
d175 1
a175 1
void WitJ::JavaObjRep::setNPeriods (int theInt)
d177 4
a180 1
   static _jmethodID * setNPeriodsID = NULL;
d182 4
a185 2
   if (setNPeriodsID == NULL)
       setNPeriodsID = findJMethodID ("setNPeriods", "(I)V");
d187 4
a190 1
   getJNIEnv ()->CallVoidMethod (myJObj_, setNPeriodsID, theInt);
d192 19
a210 1
   throwAnyJavaException ();
d215 3
a217 6
void WitJ::JavaObjRep::makeObjectFromObjectString (
      _jclass *    & theJClass,
      _jmethodID * & theCtorID,
      const char *   theClassName,
      const char *   arg1ClassName,
      const char *   theName)
d219 1
a219 20
   _jstring * theNameJStr;

   if (theJClass == NULL)
      {
      std::string arg1ClassDesc;

      theJClass      = findJClass (theClassName);

      arg1ClassDesc  = "com/ibm/witj/";

      arg1ClassDesc += arg1ClassName;

      theCtorID      =
         findCtorID (
            theJClass,
            arg1ClassDesc.c_str (),
            "java/lang/String");
      }

   theNameJStr = makeJString (theName);
d221 3
a223 1
   getJNIEnv ()->NewObject (theJClass, theCtorID, myJObj_, theNameJStr);
d227 1
a227 1
   deleteLocalRef (theNameJStr);
d232 4
a235 7
void WitJ::JavaObjRep::makeObjectFromObjectElement (
      _jclass *    & theJClass,
      _jmethodID * & theCtorID,
      const char *   theClassName,
      const char *   arg1ClassName,
      const char *   arg2ClassName,
      Element *      theElement)
d237 4
a240 1
   _jobject * theElementJObj;
d242 1
a242 4
   if (theJClass == NULL)
      {
      std::string arg1ClassDesc;
      std::string arg2ClassDesc;
d244 7
a250 1
      theJClass      = findJClass (theClassName);
d252 1
a252 15
      arg1ClassDesc  = "com/ibm/witj/";
      arg2ClassDesc  = "com/ibm/witj/";

      arg1ClassDesc += arg1ClassName;
      arg2ClassDesc += arg2ClassName;

      theCtorID      =
         findCtorID (theJClass, arg1ClassDesc.c_str (), arg2ClassDesc.c_str ());
      }

   theElementJObj = theElement->getJavaObjRep ()->myJObj_;

   getJNIEnv ()->NewObject (theJClass, theCtorID, myJObj_, theElementJObj);

   throwAnyJavaException ();
d257 5
a261 1
_jclass * WitJ::JavaObjRep::findJClass (const char * theClassName)
d263 4
a266 5
   std::string theClassDesc;
   _jclass *   theLocalRef;
   _jobject *  theGlobalRef;

   theClassDesc  = "com/ibm/witj/";
d268 1
a268 1
   theClassDesc += theClassName;
d270 8
a277 1
   theLocalRef   = getJNIEnv ()->FindClass (theClassDesc.c_str ());
d279 1
a279 9
   throwAnyJavaException ();

   theGlobalRef  = getJNIEnv ()->NewGlobalRef (theLocalRef);

   throwAnyJavaException ();

   deleteLocalRef (theLocalRef);

   return static_cast <_jclass *> (theGlobalRef);
d284 4
a287 4
_jmethodID * WitJ::JavaObjRep::findCtorID (
      _jclass *    theJClass,
      const char * arg1ClassDesc,
      const char * arg2ClassDesc)
d289 3
a291 8
   std::string  theMethodDesc;
   _jmethodID * theCtorID;

   theMethodDesc  = "(L";
   theMethodDesc += arg1ClassDesc;
   theMethodDesc += ";L";
   theMethodDesc += arg2ClassDesc;
   theMethodDesc += ";)V";
d293 7
a299 4
   theCtorID =
      getJNIEnv ()->GetMethodID (theJClass, "<init>", theMethodDesc.c_str ());

   throwAnyJavaException ();
d301 1
a301 1
   return theCtorID;
d306 4
a309 3
_jmethodID * WitJ::JavaObjRep::findJMethodID (
      const char * theMethName,
      const char * theMethDesc)
d311 5
a315 4
   _jclass *    theJClass;
   _jmethodID * theJMethodID;

   theJClass    = getJNIEnv ()->GetObjectClass (myJObj_);
d317 7
a323 2
   theJMethodID =
      getJNIEnv ()->GetMethodID (theJClass, theMethName, theMethDesc);
d325 1
a325 5
   throwAnyJavaException ();

   deleteLocalRef (theJClass);

   return theJMethodID;
@


1.34
log
@Coordinator
@
text
@d41 1
a41 1
      Coordinator * theCoordinator,
d45 1
a45 1
   theCoordinator->
d47 1
a47 1
         makePartInt (theCoordinator, thePartName, theCategoryIsMat);
d72 1
a72 1
      Coordinator * theCoordinator,
d78 1
a78 1
   theCoordinator->
d145 1
a145 1
      Coordinator * theCoordinator,
d151 1
a151 1
   theCoordinator->
d205 1
a205 1
      Coordinator * theCoordinator,
d211 1
a211 1
   _jobject *          theCoordinatorJObj;
d228 1
a228 1
   theCoordinatorJObj = theCoordinator->getJavaObjRep ()->myJObj_;
d236 1
a236 1
         theCoordinatorJObj,
@


1.33
log
@Replaced abortForMemory with throwAnyJavaException.
@
text
@d8 1
a8 1
#include       <Problem.h>
d41 3
a43 3
      Problem *    theProblem,
      const char * thePartName,
      bool         theCategoryIsMat)
d45 1
a45 1
   theProblem->
d47 1
a47 1
         makePartInt (theProblem, thePartName, theCategoryIsMat);
d72 2
a73 2
      Problem *    theProblem,
      const char * theOpnName)
d78 1
a78 1
   theProblem->
d84 1
a84 1
            "Problem",
d145 2
a146 2
      Problem *    theProblem,
      const char * theName)
d151 1
a151 1
   theProblem->
d157 1
a157 1
            "Problem",
d205 3
a207 3
      Problem *    theProblem,
      const char * thePartName,
      bool         theCategoryIsMat)
d211 1
a211 1
   _jobject *          theProblemJObj;
d223 1
a223 1
               "(Lcom/ibm/witj/Problem;Ljava/lang/String;Z)V");
d228 1
a228 1
   theProblemJObj  = theProblem->getJavaObjRep ()->myJObj_;
d230 1
a230 1
   thePartNameJStr = makeJString (thePartName);
d236 1
a236 1
         theProblemJObj,
@


1.32
log
@Added code to handle memory errors in makeJString.
@
text
@d28 1
a28 2
   if (myJObj_ == NULL)
      abortForMemory ("NewWeakGlobalRef");
d350 1
a350 2
   if (theGlobalRef == NULL)
      abortForMemory ("NewGlobalRef");
@


1.31
log
@Minor revision.
@
text
@d15 1
d173 32
d226 1
a226 1
      throwOnJavaException ();
d241 1
a241 1
   throwOnJavaException ();
d257 1
a257 1
   throwOnJavaException ();
d292 1
a292 1
   throwOnJavaException ();
d330 1
a330 1
   throwOnJavaException ();
d347 1
a347 1
   throwOnJavaException ();
d378 1
a378 1
   throwOnJavaException ();
d397 1
a397 1
   throwOnJavaException ();
@


1.30
log
@Added code to handle Java exceptions raised during the execution of JNI
   functions.
@
text
@d193 1
a193 1
      abortOnJavaException ();
d208 1
a208 1
   abortOnJavaException ();
d224 1
a224 1
   abortOnJavaException ();
d259 1
a259 1
   abortOnJavaException ();
d297 1
a297 1
   abortOnJavaException ();
d345 1
a345 1
   abortOnJavaException ();
d364 1
a364 1
   abortOnJavaException ();
@


1.29
log
@Implemented EXCEPTION_ASSERT and ABORTING_ASSERT.
@
text
@d144 19
d193 1
a193 1
      checkForJniException ();
d208 1
a208 1
   checkForJniException ();
d224 1
a224 1
   checkForJniException ();
d259 1
a259 1
   checkForJniException ();
d297 1
a297 1
   checkForJniException ();
d314 1
a314 1
   checkForJniException ();
d345 1
a345 1
   checkForJniException ();
d364 1
a364 1
   checkForJniException ();
@


1.28
log
@Updated some comments.
@
text
@d23 1
a23 1
   WITJ_ASSERT (theJObj != NULL);
@


1.27
log
@Changed to all upper case for the names of macros.
@
text
@d4 1
a4 1
// Contains the definition of class JavaObjRep.
@


1.26
log
@Minot revision.
@
text
@d23 1
a23 1
   witjAssert (theJObj != NULL);
@


1.25
log
@Call-back infrastructure.
@
text
@d43 1
a43 1
      bool         theMaterialCase)
d47 1
a47 1
         makePartInt (theProblem, thePartName, theMaterialCase);
d156 1
a156 1
      bool         theMaterialCase)
d187 1
a187 1
         theMaterialCase);
@


1.24
log
@Call-back infrastructure.
@
text
@a39 9
void WitJ::JavaObjRep::setNPeriods (
      GlobalElement * theGlobalElement,
      int             theInt)
   {
   theGlobalElement->getJavaObjRep ()->setNPeriods (theInt);
   }

//------------------------------------------------------------------------------

d144 3
a146 1
void WitJ::JavaObjRep::setNPeriods (int theInt)
d148 1
a148 10
   static _jmethodID * setNPeriodsID = NULL;

   findJMethodID (
       setNPeriodsID,
      "setNPeriods",
      "(I)V");

   getJNIEnv ()->CallVoidMethod (myJObj_, setNPeriodsID, theInt);

   checkForJniException ();
d196 14
a282 22
void WitJ::JavaObjRep::findJMethodID (
      _jmethodID * & theJMethodID,
      const char *   theMethName,
      const char *   theMethDesc)
   {
   if (theJMethodID != NULL)
      return;

   _jclass * theJClass;

   theJClass    = getJNIEnv ()->GetObjectClass (myJObj_);

   theJMethodID =
      getJNIEnv ()->GetMethodID (theJClass, theMethName, theMethDesc);

   checkForJniException ();

   deleteLocalRef (theJClass);
   }

//------------------------------------------------------------------------------

d330 21
@


1.23
log
@Call-back infrastructure.
@
text
@d49 1
a49 1
void WitJ::JavaObjRep::newPart (
d54 3
a56 5
   JavaObjRep * theProblemJOR;

   theProblemJOR = theProblem->getJavaObjRep ();

   theProblemJOR->newPart (thePartName, theMaterialCase);
d169 4
a172 1
void WitJ::JavaObjRep::newPart (const char * thePartName, bool theMaterialCase)
d174 3
a176 1
   static _jmethodID * newPartID       = NULL;
d179 15
a193 4
   findJMethodID (
       newPartID,
      "newPart",
      "(Ljava/lang/String;Z)Lcom/ibm/witj/Part;");
d198 4
a201 3
      CallObjectMethod (
         myJObj_,
         newPartID,
@


1.22
log
@Removed C++ class JniLocalFrame.
@
text
@d63 15
a77 7
void WitJ::JavaObjRep::newDemand (Part * thePart, const char * theDemandName)
   {
   JavaObjRep * thePartJOR;

   thePartJOR = thePart->getJavaObjRep ();

   thePartJOR->newDemand (theDemandName);
d82 3
a84 1
void WitJ::JavaObjRep::newBomEntry (Operation * theOpn, Part * thePart)
d86 2
a87 2
   JavaObjRep * theOpnJOR;
   JavaObjRep * thePartJOR;
d89 8
a96 4
   theOpnJOR  = theOpn ->getJavaObjRep ();
   thePartJOR = thePart->getJavaObjRep ();

   theOpnJOR->newBomEntry (thePartJOR);
d101 1
a101 1
void WitJ::JavaObjRep::newSubstitute (BomEntry * theBomEnt, Part * thePart)
d103 2
a104 2
   JavaObjRep * theBomEntJOR;
   JavaObjRep * thePartJOR;
d106 9
a114 4
   theBomEntJOR = theBomEnt->getJavaObjRep ();
   thePartJOR   = thePart  ->getJavaObjRep ();

   theBomEntJOR->newSubstitute (thePartJOR);
d119 1
a119 1
void WitJ::JavaObjRep::newBopEntry (Operation * theOpn, Part * thePart)
d121 2
a122 5
   JavaObjRep * theOpnJOR;
   JavaObjRep * thePartJOR;

   theOpnJOR  = theOpn ->getJavaObjRep ();
   thePartJOR = thePart->getJavaObjRep ();
d124 9
a132 1
   theOpnJOR->newBopEntry (thePartJOR);
d137 1
a137 3
void WitJ::JavaObjRep::makeOperation (
      Problem *    theProblem,
      const char * theOpnName)
d139 2
a140 12
   JavaObjRep *        theJOR;
   static _jclass *    theOpnJCl    = NULL;
   static _jmethodID * theOpnCtorID = NULL;
   _jobject *          theProblemJObj;
   _jstring *          theOpnNameJStr;

   theJOR = theProblem->getJavaObjRep ();

   if (theOpnJCl == NULL)
      {
      _jclass *  theJClass;
      _jobject * theGlobalRef;
d142 9
a150 39
      theJClass = theJOR->getJNIEnv ()->FindClass ("com/ibm/witj/Operation");

      theJOR->checkForJniException ();

      theGlobalRef = theJOR->getJNIEnv ()->NewGlobalRef (theJClass);
         //
         // Note: This global reference will never be deleted.

      if (theGlobalRef == NULL)
         abortForMemory ("NewGlobalRef");

      theOpnJCl = static_cast <_jclass *> (theGlobalRef);

      theOpnCtorID =
         theJOR->
            getJNIEnv ()->
               GetMethodID (
                  theOpnJCl,
                  "<init>",
                 "(Lcom/ibm/witj/Problem;Ljava/lang/String;)V");

      theJOR->checkForJniException ();
      }

   theProblemJObj = theProblem->getJavaObjRep ()->myJObj_;

   theOpnNameJStr = theJOR->makeJString (theOpnName);

   theJOR->
      getJNIEnv ()->
         NewObject (
            theOpnJCl,
            theOpnCtorID,
            theProblemJObj,
            theOpnNameJStr);

   theJOR->checkForJniException ();

   theJOR->deleteLocalRef (theOpnNameJStr);
d197 6
a202 1
void WitJ::JavaObjRep::newDemand (const char * theDemandName)
d204 9
a212 2
   static _jmethodID * newDemandID       = NULL;
   _jstring *          theDemandNameJStr;
d214 8
a221 4
   findJMethodID (
       newDemandID,
      "newDemand",
      "(Ljava/lang/String;)Lcom/ibm/witj/Demand;");
d223 1
a223 1
   theDemandNameJStr = makeJString (theDemandName);
d225 1
a225 5
   getJNIEnv ()->
      CallObjectMethod (
         myJObj_,
         newDemandID,
         theDemandNameJStr);
d229 1
a229 1
   deleteLocalRef (theDemandNameJStr);
d234 7
a240 1
void WitJ::JavaObjRep::newBomEntry (JavaObjRep * thePartJOR)
d242 6
a247 2
   static _jmethodID * newBomEntryID = NULL;
   _jobject *          thePartJObj;
d249 11
a259 4
   findJMethodID (
       newBomEntryID,
      "newBomEntry",
      "(Lcom/ibm/witj/Part;)Lcom/ibm/witj/BomEntry;");
d261 1
a261 1
   thePartJObj = thePartJOR->myJObj_;
d263 1
a263 1
   getJNIEnv ()->CallObjectMethod (myJObj_, newBomEntryID, thePartJObj);
d270 4
a273 1
void WitJ::JavaObjRep::newSubstitute (JavaObjRep * thePartJOR)
d275 2
a276 2
   static _jmethodID * newSubstituteID = NULL;
   _jobject *          thePartJObj;
d278 1
a278 4
   findJMethodID (
       newSubstituteID,
      "newSubstitute",
      "(Lcom/ibm/witj/Part;)Lcom/ibm/witj/Substitute;");
d280 1
a280 1
   thePartJObj = thePartJOR->myJObj_;
d282 2
a283 1
   getJNIEnv ()->CallObjectMethod (myJObj_, newSubstituteID, thePartJObj);
d286 2
d292 1
a292 1
void WitJ::JavaObjRep::newBopEntry (JavaObjRep * thePartJOR)
d294 3
a296 2
   static _jmethodID * newBopEntryID = NULL;
   _jobject *          thePartJObj;
d298 1
a298 4
   findJMethodID (
       newBopEntryID,
      "newBopEntry",
      "(Lcom/ibm/witj/Part;)Lcom/ibm/witj/BopEntry;");
d300 1
a300 1
   thePartJObj = thePartJOR->myJObj_;
d302 1
a302 1
   getJNIEnv ()->CallObjectMethod (myJObj_, newBopEntryID, thePartJObj);
d305 9
d318 4
a321 4
void WitJ::JavaObjRep::findJMethodID (
      _jmethodID * & theJMethodID,
      const char *   theMethName,
      const char *   theMethDesc)
d323 2
a324 4
   if (theJMethodID != NULL)
      return;

   _jclass * theJClass;
d326 5
a330 1
   theJClass    = getJNIEnv ()->GetObjectClass (myJObj_);
d332 2
a333 2
   theJMethodID =
      getJNIEnv ()->GetMethodID (theJClass, theMethName, theMethDesc);
d337 1
a337 1
   deleteLocalRef (theJClass);
@


1.21
log
@Call-back infrastructure.
@
text
@a7 1
#include <JniLocalFrame.h>
a124 2
   JniLocalFrame       theFrame (theJOR, 2);

d167 2
a193 2
   JniLocalFrame       theFrame (this, 1);

d209 2
a219 2
   JniLocalFrame       theFrame (this, 1);

d234 2
d305 1
a305 3
   _jclass *     theJClass;

   JniLocalFrame theFrame (this, 1);
d313 2
@


1.20
log
@Name change.
@
text
@a74 13
void WitJ::JavaObjRep::newOperation (
      Problem *    theProblem,
      const char * theOpnName)
   {
   JavaObjRep * theProblemJOR;

   theProblemJOR = theProblem->getJavaObjRep ();

   theProblemJOR->newOperation (theOpnName);
   }  

//------------------------------------------------------------------------------

d114 60
a240 21
void WitJ::JavaObjRep::newOperation (const char * theOpnName)
   {
   static _jmethodID * newOperationID = NULL;
   _jstring *          theOpnNameJStr;

   JniLocalFrame       theFrame (this, 1);

   findJMethodID (
       newOperationID,
      "newOperation",
      "(Ljava/lang/String;)Lcom/ibm/witj/Operation;");

   theOpnNameJStr = makeJString (theOpnName);

   getJNIEnv ()->CallObjectMethod (myJObj_, newOperationID, theOpnNameJStr);

   checkForJniException ();
   }

//------------------------------------------------------------------------------

@


1.19
log
@Changed name of Component to Entity.
@
text
@d10 1
a10 1
#include  <GlobalEntity.h>
d41 3
a43 1
void WitJ::JavaObjRep::setNPeriods (GlobalEntity * theGlobalEntity, int theInt)
d45 1
a45 1
   theGlobalEntity->getJavaObjRep ()->setNPeriods (theInt);
@


1.18
log
@Minor revision
@
text
@d10 1
a10 1
#include    <GlobalComp.h>
d41 1
a41 1
void WitJ::JavaObjRep::setNPeriods (GlobalComp * theGlobalComp, int theInt)
d43 1
a43 1
   theGlobalComp->getJavaObjRep ()->setNPeriods (theInt);
@


1.17
log
@Implemented extraction of substitutes.
@
text
@d51 1
a51 1
      bool         theMaterialMode)
d57 1
a57 1
   theProblemJOR->newPart (thePartName, theMaterialMode);
d141 1
a141 1
void WitJ::JavaObjRep::newPart (const char * thePartName, bool theMaterialMode)
d160 1
a160 1
         theMaterialMode);
@


1.16
log
@Implemented extraction of BOP entries.
@
text
@d13 1
d99 13
d232 19
@


1.15
log
@Revised class StringWoa.
@
text
@d98 13
d218 19
@


1.14
log
@Implemented extraction of BOM entries.
@
text
@d48 3
a50 3
      Problem *         theProblem,
      const StringWoa & thePartNameWoa,
      bool              theMaterialMode)
d56 1
a56 1
   theProblemJOR->newPart (thePartNameWoa, theMaterialMode);
d61 1
a61 3
void WitJ::JavaObjRep::newDemand (
      Part *            thePart,
      const StringWoa & theDemandNameWoa)
d67 1
a67 1
   thePartJOR->newDemand (theDemandNameWoa);
d73 2
a74 2
      Problem *         theProblem,
      const StringWoa & theOpnNameWoa)
d80 1
a80 1
   theProblemJOR->newOperation (theOpnNameWoa);
d114 1
a114 3
void WitJ::JavaObjRep::newPart (
      const StringWoa & thePartNameWoa,
      bool              theMaterialMode)
d126 1
a126 1
   thePartNameJStr = makeJString (thePartNameWoa);
d140 1
a140 1
void WitJ::JavaObjRep::newDemand (const StringWoa & theDemandNameWoa)
d152 1
a152 1
   theDemandNameJStr = makeJString (theDemandNameWoa);
d165 1
a165 1
void WitJ::JavaObjRep::newOperation (const StringWoa & theOpnNameWoa)
d177 1
a177 1
   theOpnNameJStr = makeJString (theOpnNameWoa);
@


1.13
log
@Call-back infrastructure.
Implemented extraction of Demands.
@
text
@d12 1
d18 1
a18 1
WitJ::JavaObjRep::JavaObjRep (JniClient & theJniClient, _jobject * theJObject):
d20 2
a21 2
      JniClient  (theJniClient),
      myJObject_ (NULL)
d23 1
a23 1
   witjAssert (theJObject != NULL);
d25 1
a25 1
   myJObject_ = getJNIEnv ()->NewWeakGlobalRef (theJObject);
d27 1
a27 1
   if (myJObject_ == NULL)
d35 1
a35 1
   getJNIEnv ()->DeleteWeakGlobalRef (myJObject_);
d52 5
a56 1
   theProblem->getJavaObjRep ()->newPart (thePartNameWoa, theMaterialMode);
d65 5
a69 1
   thePart->getJavaObjRep ()->newDemand (theDemandNameWoa);
d78 5
a82 1
   theProblem->getJavaObjRep ()->newOperation (theOpnNameWoa);
d87 13
d109 1
a109 1
   getJNIEnv ()->CallVoidMethod (myJObject_, setNPeriodsID, theInt);
d134 1
a134 1
         myJObject_,
d160 1
a160 1
         myJObject_,
d183 20
a202 1
   getJNIEnv ()->CallObjectMethod (myJObject_, newOperationID, theOpnNameJStr);
d221 1
a221 1
   theJClass    = getJNIEnv ()->GetObjectClass (myJObject_);
@


1.12
log
@Implemented extraction of Parts.
@
text
@d11 1
d56 9
d118 25
@


1.11
log
@Extraction.
@
text
@d45 10
d80 28
@


1.10
log
@Implemented and used C++ class JniLocalFrame.
@
text
@a55 1
   JniLocalFrame       theFrame (this);
a71 1
   JniLocalFrame       theFrame (this);
d75 2
a95 2
   _jclass * theJClass;

d99 4
a108 2

   getJNIEnv ()->DeleteLocalRef (theJClass);
@


1.9
log
@Changed name of C++ class JniWrapper to JniClient.
@
text
@d7 4
a10 3
#include <JavaObjRep.h>
#include    <Problem.h>
#include <GlobalComp.h>
d12 1
a12 1
#include     <string>
d56 1
d73 1
a86 2

   getJNIEnv ()->DeleteLocalRef (theOpnNameJStr);
@


1.8
log
@Extraction
@
text
@d15 1
a15 3
WitJ::JavaObjRep::JavaObjRep (
         JniWrapper & theJniWrapper,
         _jobject *   theJObject):
d17 1
a17 1
      JniWrapper (theJniWrapper),
@


1.7
log
@Call-back infrastructure.
@
text
@d8 1
a8 1
#include <NativeCall.h>
d15 3
a17 1
WitJ::JavaObjRep::JavaObjRep (NativeCall & theCall, _jobject * theJObject):
d19 1
a19 1
      JniWrapper (theCall),
d46 9
d57 1
a57 1
   static _jmethodID * theJMethodID = NULL;
d59 4
a62 1
   findJMethodID (theJMethodID, "setNPeriods", "(I)V");
d64 1
a64 1
   getJNIEnv ()->CallVoidMethod (myJObject_, theJMethodID, theInt);
d71 21
@


1.6
log
@Call-back infrastructure.
@
text
@a36 8
void WitJ::JavaObjRep::findJMethodIDs (JNIEnv * theJNIEnv)
   {
   setNPeriodsID_ =
      findMethodID (theJNIEnv, "setNPeriods", "GlobalComp", "(I)V");
   }

//------------------------------------------------------------------------------

d44 1
a44 5
_jmethodID * WitJ::JavaObjRep::findMethodID (
      JNIEnv *     theJNIEnv,
      const char * theMethName,
      const char * theClassName,
      const char * theMethDesc)
d46 1
a46 3
   std::string  fullClassName;
   _jclass *    theJClass;
   _jmethodID * theMethodID;
d48 1
a48 1
   fullClassName  = "com/ibm/witj/";
d50 1
a50 1
   fullClassName += theClassName;
d52 2
a53 1
   theJClass      = theJNIEnv->FindClass (fullClassName.c_str ());
d55 1
a55 1
   checkForJniException (theJNIEnv);
d57 6
a62 1
   theMethodID = theJNIEnv->GetMethodID (theJClass, theMethName, theMethDesc);
d64 2
a65 1
   checkForJniException (theJNIEnv);
d67 1
a67 1
   theJNIEnv->DeleteLocalRef (theJClass);
d69 2
a70 2
   return theMethodID;
   }
d72 1
a72 5
//------------------------------------------------------------------------------

void WitJ::JavaObjRep::setNPeriods (int theInt)
   {
   getJNIEnv ()->CallVoidMethod (myJObject_, setNPeriodsID_, theInt);
d74 1
a74 1
   checkForJniException ();
a75 4

//------------------------------------------------------------------------------

_jmethodID * WitJ::JavaObjRep::setNPeriodsID_ = NULL;
@


1.5
log
@Implemented C++ class JniWrapper.
@
text
@d47 1
a47 7
   theJNIEnvFor (theGlobalComp)->
      CallVoidMethod (
         getJObjectFor (theGlobalComp),
         setNPeriodsID_,
         theInt);

   checkForJniException (theJNIEnvFor (theGlobalComp));
d81 1
a81 1
JNIEnv * WitJ::JavaObjRep::theJNIEnvFor (JavaAccObj * theJavaAccObj)
d83 1
a83 2
   return theJavaAccObj->getJavaObjRep ()->getJNIEnv ();
   }
d85 1
a85 5
//------------------------------------------------------------------------------

_jobject * WitJ::JavaObjRep::getJObjectFor (JavaAccObj * theJavaAccObj)
   {
   return theJavaAccObj->getJavaObjRep ()->myJObject_;
@


1.4
log
@Changed name of C++ class JniHandler to NativeCall.
@
text
@d3 2
d15 1
a15 1
WitJ::JavaObjRep::JavaObjRep (JNIEnv * theJNIEnv, _jobject * theJObject):
d17 1
a17 1
      myJNIEnv_  (theJNIEnv),
d22 1
a22 1
   myJObject_ = myJNIEnv_->NewWeakGlobalRef (theJObject);
d32 1
a32 1
   myJNIEnv_->DeleteWeakGlobalRef (myJObject_);
d53 1
a53 1
   checkForJniException (theGlobalComp);
d74 1
a74 1
   NativeCall::checkForJniException (theJNIEnv);
d78 1
a78 1
   NativeCall::checkForJniException (theJNIEnv);
a86 7
void WitJ::JavaObjRep::checkForJniException (JavaAccObj * theJavaAccObj)
   {
   NativeCall::checkForJniException (theJNIEnvFor (theJavaAccObj));
   }

//------------------------------------------------------------------------------

d89 1
a89 1
   return theJavaAccObj->getJavaObjRep ()->myJNIEnv_;
@


1.3
log
@Changed name of C++ class JAccObject to JavaAccObj.
@
text
@d6 1
a6 1
#include <JniHandler.h>
d72 1
a72 1
   JniHandler::checkForJniException (theJNIEnv);
d76 1
a76 1
   JniHandler::checkForJniException (theJNIEnv);
d87 1
a87 1
   JniHandler::checkForJniException (theJNIEnvFor (theJavaAccObj));
@


1.2
log
@Minor revision.
@
text
@d85 1
a85 1
void WitJ::JavaObjRep::checkForJniException (JAccObject * theJAccObject)
d87 1
a87 1
   JniHandler::checkForJniException (theJNIEnvFor (theJAccObject));
d92 1
a92 1
JNIEnv * WitJ::JavaObjRep::theJNIEnvFor (JAccObject * theJAccObject)
d94 1
a94 1
   return theJAccObject->getJavaObjRep ()->myJNIEnv_;
d99 1
a99 1
_jobject * WitJ::JavaObjRep::getJObjectFor (JAccObject * theJAccObject)
d101 1
a101 1
   return theJAccObject->getJavaObjRep ()->myJObject_;
@


1.1
log
@Changed name of C++ class JavaLink to JavaObjRep.
@
text
@d15 2
a16 2
      myJNIEnv_      (theJNIEnv),
      linkedJObject_ (NULL)
d20 1
a20 1
   linkedJObject_ = myJNIEnv_->NewWeakGlobalRef (theJObject);
d22 1
a22 1
   if (linkedJObject_ == NULL)
d30 1
a30 1
   myJNIEnv_->DeleteWeakGlobalRef (linkedJObject_);
d47 1
a47 1
         linkedJObjectFor (theGlobalComp),
d99 1
a99 1
_jobject * WitJ::JavaObjRep::linkedJObjectFor (JAccObject * theJAccObject)
d101 1
a101 1
   return theJAccObject->getJavaObjRep ()->linkedJObject_;
@

