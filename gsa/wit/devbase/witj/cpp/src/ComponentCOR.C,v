head	1.21;
access;
symbols;
locks; strict;
comment	@ * @;


1.21
date	2011.04.15.21.02.18;	author rjw;	state Exp;
branches;
next	1.20;

1.20
date	2011.04.15.19.01.06;	author rjw;	state Exp;
branches;
next	1.19;

1.19
date	2011.04.15.00.07.22;	author rjw;	state Exp;
branches;
next	1.18;

1.18
date	2011.04.13.22.36.21;	author rjw;	state Exp;
branches;
next	1.17;

1.17
date	2011.04.13.21.50.33;	author rjw;	state Exp;
branches;
next	1.16;

1.16
date	2011.04.13.19.16.19;	author rjw;	state Exp;
branches;
next	1.15;

1.15
date	2011.04.13.16.00.14;	author rjw;	state Exp;
branches;
next	1.14;

1.14
date	2011.04.08.20.56.17;	author rjw;	state Exp;
branches;
next	1.13;

1.13
date	2011.04.06.15.56.35;	author rjw;	state Exp;
branches;
next	1.12;

1.12
date	2011.04.05.22.25.38;	author rjw;	state Exp;
branches;
next	1.11;

1.11
date	2011.04.01.23.24.59;	author rjw;	state Exp;
branches;
next	1.10;

1.10
date	2011.03.29.23.38.44;	author rjw;	state Exp;
branches;
next	1.9;

1.9
date	2011.03.19.00.26.08;	author rjw;	state Exp;
branches;
next	1.8;

1.8
date	2010.04.20.20.55.06;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2009.04.08.21.02.39;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2009.03.26.19.22.22;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2009.03.13.19.32.17;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2008.10.06.22.14.00;	author rjw;	state dead;
branches;
next	1.3;

1.3
date	2008.09.29.15.26.11;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2008.09.29.15.05.36;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2008.09.26.22.21.21;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.21
log
@Class template ArrayJOR <E>
@
text
@//------------------------------------------------------------------------------
// WIT-J C++ Source File ComponentCOR.C.
//
// Contains the C++ implementations of the native methods of Java class
// witj.ComponentCOR.
//------------------------------------------------------------------------------

#include     <NativeMacros.h>
#include <ExceptionHandler.h>
#include           <CORJOR.h>
#include        <Component.h>
#include     <ComponentJOR.h>
#include      <CTVecSupply.h>
#include         <ArrayJOR.h>

using namespace WitJ;

//------------------------------------------------------------------------------

NATIVE_METHOD (void, ComponentCOR, setComponent) (
      JNIEnv *   theJNIEnv,
      _jobject * theCompCORJObj,
      _jobject * theCompJObj)
   {
   BEGIN_TRY_BLOCK

   CORJOR <Component> theCompCJOR (theCompCORJObj, theJNIEnv);
   ComponentJOR *     theCompJOR;

   theCompJOR = new ComponentJOR (theCompJObj,    theJNIEnv);

   theCompCJOR.getCppObject ()->setComponentJOR (theCompJOR);

   END_TRY_BLOCK_SIMPLE_RETURN (theJNIEnv)
   }

//------------------------------------------------------------------------------

NATIVE_METHOD (void, ComponentCOR, setBoundSet) (
      JNIEnv *        theJNIEnv,
      _jobject *      theCompCORJObj,
      _jdoubleArray * hardLBJArr,
      _jdoubleArray * softLBJArr,
      _jdoubleArray * hardUBJArr)
   {
   BEGIN_TRY_BLOCK

   CORJOR <Component> theCompCJOR (theCompCORJObj, theJNIEnv);
   DblArrayJOR        hardLBAJOR  (hardLBJArr,     theCompCJOR);
   DblArrayJOR        softLBAJOR  (softLBJArr,     theCompCJOR);
   DblArrayJOR        hardUBAJOR  (hardUBJArr,     theCompCJOR);

   theCompCJOR.
      getCppObject ()->
         setBoundSet (
            hardLBAJOR.getBoundCTVec (),
            softLBAJOR.getBoundCTVec (),
            hardUBAJOR.getBoundCTVec ());

   END_TRY_BLOCK_SIMPLE_RETURN (theJNIEnv)
   }

//------------------------------------------------------------------------------

NATIVE_METHOD (void, ComponentCOR, setBoundSetToScalars) (
      JNIEnv *   theJNIEnv,
      _jobject * theCompCORJObj,
      jdouble    hardLBVal,
      jdouble    softLBVal,
      jdouble    hardUBVal)
   {
   BEGIN_TRY_BLOCK

   CORJOR <Component> theCompCJOR (theCompCORJObj, theJNIEnv);

   theCompCJOR.
      getCppObject ()->
         setBoundSetToScalars (hardLBVal, softLBVal, hardUBVal);

   END_TRY_BLOCK_SIMPLE_RETURN (theJNIEnv)
   }

//------------------------------------------------------------------------------

NATIVE_METHOD (void, ComponentCOR, getBoundSet) (
      JNIEnv *        theJNIEnv,
      _jobject *      theCompCORJObj,
      _jdoubleArray * hardLBJArr,
      _jdoubleArray * softLBJArr,
      _jdoubleArray * hardUBJArr)
   {
   BEGIN_TRY_BLOCK

   CORJOR <Component> theCompCJOR (theCompCORJObj, theJNIEnv);
   DblArrayJOR        hardLBAJOR  (hardLBJArr,     theCompCJOR);
   DblArrayJOR        softLBAJOR  (softLBJArr,     theCompCJOR);
   DblArrayJOR        hardUBAJOR  (hardUBJArr,     theCompCJOR);

   theCompCJOR.
      getCppObject ()->
         getBoundSet (hardLBAJOR, softLBAJOR, hardUBAJOR);

   END_TRY_BLOCK_SIMPLE_RETURN (theJNIEnv)
   }

//------------------------------------------------------------------------------

NATIVE_METHOD (void, ComponentCOR, copyComponentData) (
      JNIEnv *   theJNIEnv,
      _jobject * theCompCORJObj,
      _jobject * origCompCORJObj)
   {
   BEGIN_TRY_BLOCK

   CORJOR <Component>  theCompCJOR  (theCompCORJObj, theJNIEnv);
   CORJOR <Component> origCompCJOR (origCompCORJObj, theJNIEnv);

   theCompCJOR.
      getCppObject ()->
         copyComponentData (
            origCompCJOR.getCppObject ());

   END_TRY_BLOCK_SIMPLE_RETURN (theJNIEnv)
   }

//------------------------------------------------------------------------------

NATIVE_METHOD (void, ComponentCOR, setWasDeletedInWit) (
      JNIEnv *   theJNIEnv,
      _jobject * theCompCORJObj,
      jboolean   theJBool)
   {
   BEGIN_TRY_BLOCK

   CORJOR <Component> theCompCJOR (theCompCORJObj, theJNIEnv);

   theCompCJOR.getCppObject ()->setWasDeletedInWit (theJBool);

   END_TRY_BLOCK_SIMPLE_RETURN (theJNIEnv)
   }

//------------------------------------------------------------------------------

NATIVE_METHOD (jboolean, ComponentCOR, wasDeletedInWit) (
      JNIEnv *   theJNIEnv,
      _jobject * theCompCORJObj)
   {
   BEGIN_TRY_BLOCK

   CORJOR <Component> theCompCJOR (theCompCORJObj, theJNIEnv);

   return theCompCJOR.getCppObject ()->wasDeletedInWit ();

   END_TRY_BLOCK_VALUE_RETURN (theJNIEnv, false)
   }
@


1.20
log
@Class template CORJOR
@
text
@d49 3
a51 3
   DblArrayJOR        hardLBAJOR  (hardLBJArr,     theJNIEnv);
   DblArrayJOR        softLBAJOR  (softLBJArr,     theJNIEnv);
   DblArrayJOR        hardUBAJOR  (hardUBJArr,     theJNIEnv);
d56 3
a58 3
            hardLBAJOR.getBoundCTVec (theCompCJOR.getCppObject ()),
            softLBAJOR.getBoundCTVec (theCompCJOR.getCppObject ()),
            hardUBAJOR.getBoundCTVec (theCompCJOR.getCppObject ()));
d95 3
a97 3
   DblArrayJOR        hardLBAJOR  (hardLBJArr,     theJNIEnv);
   DblArrayJOR        softLBAJOR  (softLBJArr,     theJNIEnv);
   DblArrayJOR        hardUBAJOR  (hardUBJArr,     theJNIEnv);
@


1.19
log
@Class template CORJOR
@
text
@d32 1
a32 1
   theCompCJOR->setComponentJOR (theCompJOR);
d53 6
a58 5
   theCompCJOR->
      setBoundSet (
         hardLBAJOR.getBoundCTVec (theCompCJOR),
         softLBAJOR.getBoundCTVec (theCompCJOR),
         hardUBAJOR.getBoundCTVec (theCompCJOR));
d76 3
a78 1
   theCompCJOR->setBoundSetToScalars (hardLBVal, softLBVal, hardUBVal);
d99 3
a101 1
   theCompCJOR->getBoundSet (hardLBAJOR, softLBAJOR, hardUBAJOR);
d118 4
a121 1
   theCompCJOR->copyComponentData (origCompCJOR);
d137 1
a137 1
   theCompCJOR->setWasDeletedInWit (theJBool);
d152 1
a152 1
   return theCompCJOR->wasDeletedInWit ();
@


1.18
log
@Removed namespace JniUtil.
@
text
@d10 1
d27 2
a28 2
   Component *    theComp;
   ComponentJOR * theCompJOR;
a29 1
   theComp    = getComponent     (theCompCORJObj, theJNIEnv);
d32 1
a32 1
   theComp->setComponentJOR (theCompJOR);
d48 4
a51 4
   DblArrayJOR hardLBAJOR (hardLBJArr,     theJNIEnv);
   DblArrayJOR softLBAJOR (softLBJArr,     theJNIEnv);
   DblArrayJOR hardUBAJOR (hardUBJArr,     theJNIEnv);
   Component * theComp;
d53 1
a53 3
   theComp = getComponent (theCompCORJObj, theJNIEnv);

   theComp->
d55 3
a57 3
         hardLBAJOR.getBoundCTVec (theComp),
         softLBAJOR.getBoundCTVec (theComp),
         hardUBAJOR.getBoundCTVec (theComp));
d73 1
a73 3
   Component * theComp;

   theComp = getComponent (theCompCORJObj, theJNIEnv);
d75 1
a75 1
   theComp->setBoundSetToScalars (hardLBVal, softLBVal, hardUBVal);
d91 4
a94 6
   Component * theComp;
   DblArrayJOR hardLBAJOR (hardLBJArr,     theJNIEnv);
   DblArrayJOR softLBAJOR (softLBJArr,     theJNIEnv);
   DblArrayJOR hardUBAJOR (hardUBJArr,     theJNIEnv);

   theComp = getComponent (theCompCORJObj, theJNIEnv);
d96 1
a96 1
   theComp->getBoundSet (hardLBAJOR, softLBAJOR, hardUBAJOR);
d110 2
a111 2
   Component * theComp;
   Component * origComp;
d113 1
a113 4
   theComp  = getComponent (theCompCORJObj,  theJNIEnv);
   origComp = getComponent (origCompCORJObj, theJNIEnv);

   theComp->copyComponentData (origComp);
d127 1
a127 3
   Component * theComp;

   theComp = getComponent (theCompCORJObj, theJNIEnv);
d129 1
a129 1
   theComp->setWasDeletedInWit (theJBool);
d142 1
a142 3
   Component * theComp;

   theComp = getComponent (theCompCORJObj, theJNIEnv);
d144 1
a144 1
   return theComp->wasDeletedInWit ();
@


1.17
log
@ArrayJOR classes
@
text
@a8 1
#include          <JniUtil.h>
a15 1
using namespace WitJ::JniUtil;
@


1.16
log
@CTVecSupply
@
text
@d50 3
a53 6
   double *    hardLBCVec;
   double *    softLBCVec;
   double *    hardUBCVec;
   double *    hardLBCV;
   double *    softLBCV;
   double *    hardUBCV;
d57 5
a61 17
   theComp->getCTVecSupply ()->provideCTVec (hardLBCVec);
   theComp->getCTVecSupply ()->provideCTVec (softLBCVec);
   theComp->getCTVecSupply ()->provideCTVec (hardUBCVec);

   hardLBCV = hardLBCVec;
   softLBCV = softLBCVec;
   hardUBCV = hardUBCVec;

   copyBoundVecInto (hardLBCV, hardLBJArr, theJNIEnv);
   copyBoundVecInto (softLBCV, softLBJArr, theJNIEnv);
   copyBoundVecInto (hardUBCV, hardUBJArr, theJNIEnv);

   theComp->setBoundSet (hardLBCV, softLBCV, hardUBCV);

   theComp->getCTVecSupply ()->reclaimCTVec (hardLBCVec);
   theComp->getCTVecSupply ()->reclaimCTVec (softLBCVec);
   theComp->getCTVecSupply ()->reclaimCTVec (hardUBCVec);
@


1.15
log
@ArrayJOR classes
@
text
@d54 3
d60 17
a76 11
   theComp->
      getCTVecSupply ()->
         provideBoundCTVecs (hardLBCVec, softLBCVec, hardUBCVec);

   copyBoundVecInto (hardLBCVec, hardLBJArr, theJNIEnv);
   copyBoundVecInto (softLBCVec, softLBJArr, theJNIEnv);
   copyBoundVecInto (hardUBCVec, hardUBJArr, theJNIEnv);

   theComp->setBoundSet (hardLBCVec, softLBCVec, hardUBCVec);

   theComp->getCTVecSupply ()->reclaimCTVecs ();
@


1.14
log
@copyComponentData
@
text
@d14 1
a14 1
#include      <WitVecOwner.h>
d103 4
a106 4
   Component *          theComp;
   WitVecOwner <double> hardLBWVO;
   WitVecOwner <double> softLBWVO;
   WitVecOwner <double> hardUBWVO;
d110 1
a110 5
   theComp->getBoundSet (hardLBWVO, softLBWVO, hardUBWVO);

   copyInto (hardLBJArr, hardLBWVO.getWitVec (), theJNIEnv);
   copyInto (softLBJArr, softLBWVO.getWitVec (), theJNIEnv);
   copyInto (hardUBJArr, hardUBWVO.getWitVec (), theJNIEnv);
@


1.13
log
@JNIEnv arguments.
@
text
@d121 20
@


1.12
log
@Namespace JniUtil.
@
text
@d31 2
a32 3
   theComp    = getComponent (theCompCORJObj, theJNIEnv);

   theCompJOR = new ComponentJOR (theJNIEnv, theCompJObj);
@


1.11
log
@JniAsst
@
text
@d9 1
a10 1
#include          <JniAsst.h>
d17 1
d31 1
a31 1
   theComp = JniAsst::getComponent (theCompCORJObj, theJNIEnv);
d56 1
a56 1
   theComp = JniAsst::getComponent (theCompCORJObj, theJNIEnv);
d62 3
a64 3
   theComp->getJniAsst ()->copyBoundVecInto (hardLBCVec, hardLBJArr);
   theComp->getJniAsst ()->copyBoundVecInto (softLBCVec, softLBJArr);
   theComp->getJniAsst ()->copyBoundVecInto (hardUBCVec, hardUBJArr);
d86 1
a86 1
   theComp = JniAsst::getComponent (theCompCORJObj, theJNIEnv);
d109 1
a109 1
   theComp = JniAsst::getComponent (theCompCORJObj, theJNIEnv);
d113 3
a115 3
   theComp->getJniAsst ()->copyInto (hardLBJArr, hardLBWVO.getWitVec ());
   theComp->getJniAsst ()->copyInto (softLBJArr, softLBWVO.getWitVec ());
   theComp->getJniAsst ()->copyInto (hardUBJArr, hardUBWVO.getWitVec ());
d131 1
a131 1
   theComp = JniAsst::getComponent (theCompCORJObj, theJNIEnv);
d148 1
a148 1
   theComp = JniAsst::getComponent (theCompCORJObj, theJNIEnv);
@


1.10
log
@Replaced C++ class CORJOR with ComponentJOR.
@
text
@d10 1
a10 1
#include       <NativeCall.h>
a26 1
   NativeCall     theCall (theJNIEnv);
d30 1
a30 1
   theComp    = theCall.getJavaAccObj (theCompCORJObj)->asComponent ();
a49 1
   NativeCall  theCall (theJNIEnv);
d55 1
a55 1
   theComp = theCall.getJavaAccObj (theCompCORJObj)->asComponent ();
d61 3
a63 3
   theCall.copyBoundVecInto (hardLBCVec, hardLBJArr);
   theCall.copyBoundVecInto (softLBCVec, softLBJArr);
   theCall.copyBoundVecInto (hardUBCVec, hardUBJArr);
a82 1
   NativeCall  theCall (theJNIEnv);
d85 1
a85 1
   theComp = theCall.getJavaAccObj (theCompCORJObj)->asComponent ();
a102 1
   NativeCall           theCall (theJNIEnv);
d108 1
a108 1
   theComp = theCall.getJavaAccObj (theCompCORJObj)->asComponent ();
d112 3
a114 3
   theCall.copyInto (hardLBJArr, hardLBWVO.getWitVec ());
   theCall.copyInto (softLBJArr, softLBWVO.getWitVec ());
   theCall.copyInto (hardUBJArr, hardUBWVO.getWitVec ());
a127 1
   NativeCall  theCall (theJNIEnv);
d130 1
a130 1
   theComp = theCall.getJavaAccObj (theCompCORJObj)->asComponent ();
a144 1
   NativeCall  theCall (theJNIEnv);
d147 1
a147 1
   theComp = theCall.getJavaAccObj (theCompCORJObj)->asComponent ();
@


1.9
log
@Revised the arguments to eqHeurAlloc.
@
text
@d12 1
d20 22
@


1.8
log
@Multi-Obj Mode
@
text
@d34 1
a34 1
   theComp = theCall.getObject (theCompCORJObj)->asComponent ();
d65 1
a65 1
   theComp = theCall.getObject (theCompCORJObj)->asComponent ();
d89 1
a89 1
   theComp = theCall.getObject (theCompCORJObj)->asComponent ();
d112 1
a112 1
   theComp = theCall.getObject (theCompCORJObj)->asComponent ();
d130 1
a130 1
   theComp = theCall.getObject (theCompCORJObj)->asComponent ();
@


1.7
log
@Added theComp.setBoundSetToScalars (...).
@
text
@d13 1
a13 1
#include           <VecWoa.h>
d83 5
a87 5
   NativeCall      theCall (theJNIEnv);
   Component *     theComp;
   VecWoa <double> hardLBWoa;
   VecWoa <double> softLBWoa;
   VecWoa <double> hardUBWoa;
d91 1
a91 1
   theComp->getBoundSet (hardLBWoa, softLBWoa, hardUBWoa);
d93 3
a95 3
   theCall.copyInto (hardLBJArr, hardLBWoa.getCVec ());
   theCall.copyInto (softLBJArr, softLBWoa.getCVec ());
   theCall.copyInto (hardUBJArr, hardUBWoa.getCVec ());
@


1.6
log
@Replaced C++ classes CTVecHolder <...> and CTVecRes with CTVecSupply.
@
text
@d53 21
@


1.5
log
@Changed name of Element classes in Java and C++ to Component.
@
text
@d12 1
d28 15
a42 11
   NativeCall     theCall (theJNIEnv);
   Component *    theComp;
   const double * hardLBCVec;
   const double * softLBCVec;
   const double * hardUBCVec;

   theComp    = theCall.getObject (theCompCORJObj)->asComponent ();

   hardLBCVec = theCall.makeBoundVec (hardLBJArr);
   softLBCVec = theCall.makeBoundVec (softLBJArr);
   hardUBCVec = theCall.makeBoundVec (hardUBJArr);
d46 2
@


1.4
log
@Changed name of Component to Entity.
@
text
@d8 5
a12 4
#include <NativeMacros.h>
#include   <NativeCall.h>
#include    <Component.h>
#include       <VecWoa.h>
d18 1
a18 1
nativeMethod (void, ComponentCOR, setBoundSet) (
d25 2
d40 2
d46 1
a46 1
nativeMethod (void, ComponentCOR, getBoundSet) (
d53 2
d65 42
a106 3
   theCall.copyInto (hardLBJArr, hardLBWoa);
   theCall.copyInto (softLBJArr, softLBWoa);
   theCall.copyInto (hardUBJArr, hardUBWoa);
@


1.3
log
@Changed name of C++ class JniHandler to NativeCall.
@
text
@@


1.2
log
@Moved macro nativeMethod to its own header file.
@
text
@d9 1
a9 1
#include   <JniHandler.h>
d24 1
a24 1
   JniHandler     theJniHand (theJNIEnv);
d30 1
a30 1
   theComp    = theJniHand.getObject (theCompCORJObj)->asComponent ();
d32 3
a34 3
   hardLBCVec = theJniHand.makeBoundVec (hardLBJArr);
   softLBCVec = theJniHand.makeBoundVec (softLBJArr);
   hardUBCVec = theJniHand.makeBoundVec (hardUBJArr);
d48 1
a48 1
   JniHandler      theJniHand (theJNIEnv);
d54 1
a54 1
   theComp = theJniHand.getObject (theCompCORJObj)->asComponent ();
d58 3
a60 3
   theJniHand.copyInto (hardLBJArr, hardLBWoa);
   theJniHand.copyInto (softLBJArr, softLBWoa);
   theJniHand.copyInto (hardUBJArr, hardUBWoa);
@


1.1
log
@Numerous class name changes.
@
text
@d8 4
a11 3
#include <JniHandler.h>
#include  <Component.h>
#include     <VecWoa.h>
@

