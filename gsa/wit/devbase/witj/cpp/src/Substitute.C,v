head	1.36;
access;
symbols;
locks; strict;
comment	@ * @;


1.36
date	2011.04.08.20.56.21;	author rjw;	state Exp;
branches;
next	1.35;

1.35
date	2011.03.30.16.20.39;	author rjw;	state Exp;
branches;
next	1.34;

1.34
date	2009.04.15.23.33.27;	author rjw;	state Exp;
branches;
next	1.33;

1.33
date	2009.04.15.22.14.56;	author rjw;	state Exp;
branches;
next	1.32;

1.32
date	2009.04.15.21.11.58;	author rjw;	state Exp;
branches;
next	1.31;

1.31
date	2009.03.13.19.32.19;	author rjw;	state Exp;
branches;
next	1.30;

1.30
date	2009.03.05.19.09.17;	author rjw;	state Exp;
branches;
next	1.29;

1.29
date	2009.03.05.17.21.26;	author rjw;	state Exp;
branches;
next	1.28;

1.28
date	2009.02.28.00.27.54;	author rjw;	state Exp;
branches;
next	1.27;

1.27
date	2009.02.27.23.12.30;	author rjw;	state Exp;
branches;
next	1.26;

1.26
date	2009.02.27.21.22.39;	author rjw;	state Exp;
branches;
next	1.25;

1.25
date	2009.02.27.18.44.24;	author rjw;	state Exp;
branches;
next	1.24;

1.24
date	2009.02.26.22.46.59;	author rjw;	state Exp;
branches;
next	1.23;

1.23
date	2009.01.29.22.06.39;	author rjw;	state Exp;
branches;
next	1.22;

1.22
date	2009.01.21.21.43.24;	author rjw;	state Exp;
branches;
next	1.21;

1.21
date	2009.01.16.17.30.24;	author rjw;	state Exp;
branches;
next	1.20;

1.20
date	2009.01.16.17.03.35;	author rjw;	state Exp;
branches;
next	1.19;

1.19
date	2009.01.16.16.32.02;	author rjw;	state Exp;
branches;
next	1.18;

1.18
date	2008.12.15.17.28.49;	author rjw;	state Exp;
branches;
next	1.17;

1.17
date	2008.11.26.18.33.05;	author rjw;	state Exp;
branches;
next	1.16;

1.16
date	2008.10.07.18.50.25;	author rjw;	state Exp;
branches;
next	1.15;

1.15
date	2008.10.06.22.14.03;	author rjw;	state Exp;
branches;
next	1.14;

1.14
date	2008.10.03.21.47.51;	author rjw;	state Exp;
branches;
next	1.13;

1.13
date	2008.10.02.17.34.36;	author rjw;	state Exp;
branches;
next	1.12;

1.12
date	2008.09.29.22.43.47;	author rjw;	state Exp;
branches;
next	1.11;

1.11
date	2008.09.09.19.00.00;	author rjw;	state Exp;
branches;
next	1.10;

1.10
date	2008.08.29.15.34.42;	author rjw;	state Exp;
branches;
next	1.9;

1.9
date	2008.08.28.18.50.40;	author rjw;	state Exp;
branches;
next	1.8;

1.8
date	2008.08.27.15.30.46;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2008.07.01.17.49.16;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2008.07.01.16.09.22;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2008.06.10.23.21.37;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2008.06.10.22.32.35;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2008.05.28.22.29.36;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2008.05.22.22.00.12;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2008.05.22.21.02.58;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.36
log
@copyComponentData
@
text
@//------------------------------------------------------------------------------
// WIT-J C++ Source File Substitute.C.
//
// Contains the implementation of class Substitute.
//------------------------------------------------------------------------------

#include  <Substitute.h>
#include    <BomEntry.h>
#include        <Part.h>
#include <Coordinator.h>

#include         <wit.h>

//------------------------------------------------------------------------------

WitJ::Substitute::Substitute (
         BomEntry *   theBomEnt,
         int          theSubIdx,
         Part *       thePart):

      Component   (theBomEnt->getCoordinator ()),
      myBomEnt_   (theBomEnt),
      mySubIndex_ (theSubIdx)
   {
   if (! extractInProgress ())
      witAddSubsBomEntry (
         getWitRun (),
         getOperationName (),
         getBomIndex (),
         thePart->getPartName ());

   witSetSubsBomEntryAppData (
      getWitRun (),
      getOperationName (),
      getBomIndex (),
      mySubIndex_,
      this);
   }

//------------------------------------------------------------------------------

WitJ::Substitute::~Substitute ()
   {
   }

//------------------------------------------------------------------------------

WitJ::Substitute * WitJ::Substitute::asSubstitute ()
   {
   return this;
   }

//------------------------------------------------------------------------------

void WitJ::Substitute::copyComponentData (Component * origComp)
   {
   Substitute * origSub;

   origSub = origComp->asSubstitute ();

   witCopySubsBomEntryData (
               getWitRun        (),
               getOperationName (),
               getBomIndex      (),
               mySubIndex_,
      origSub->getWitRun        (),
      origSub->getOperationName (),
      origSub->getBomIndex      (),
      origSub->mySubIndex_);
   }

//------------------------------------------------------------------------------

const char * WitJ::Substitute::getOperationName ()
   {
   return myBomEnt_->getOperationName ();
   }

//------------------------------------------------------------------------------

int WitJ::Substitute::getBomIndex ()
   {
   return myBomEnt_->getBomIndex ();
   }

//------------------------------------------------------------------------------

void WitJ::Substitute::setSubIndex (int theSubIdx)
   {
   mySubIndex_ = theSubIdx;
   }
@


1.35
log
@Revised CppObjRep class ctors.
@
text
@d55 19
@


1.34
log
@Moved findInstsnce functions into class Component.
@
text
@d18 1
a18 1
         int          theSubIndex,
d23 1
a23 1
      mySubIndex_ (theSubIndex)
d69 1
a69 1
void WitJ::Substitute::setSubIndex (int theSubIndex)
d71 1
a71 1
   mySubIndex_ = theSubIndex;
@


1.33
log
@Moved restoreInstance functions from the Component classes to class
   Coordinator.
@
text
@a10 2
#include   <StringWoa.h>
#include  <JavaObjRep.h>
a68 20
WitJ::Substitute * WitJ::Substitute::findInstance (
      Coordinator * theCoord,
      const char *  theOpnName,
      int           theBomIndex,
      int           theSubIndex)
   {
   void * theAppData;

   witGetSubsBomEntryAppData (
      theCoord->getWitRun (),
      theOpnName,
      theBomIndex,
      theSubIndex,
    & theAppData);

   return static_cast <Substitute *> (theAppData);
   }

//------------------------------------------------------------------------------

@


1.32
log
@Moved Component extraction functions to class Coordinator.
Removed debugging output code from createMyCppCoordinator implementation.
@
text
@a70 27
void WitJ::Substitute::restoreInstance (Coordinator * theCoord)
   {
   StringWoa    theOpnNameWoa;
   int          theBomIndex;
   int          theSubIndex;
   Substitute * theSub;

   witGetObjItrSubsBomEntry (
      theCoord    ->getWitRun   (),
      theOpnNameWoa.getCStrAddr (),
    & theBomIndex,
    & theSubIndex);

   theSub =
      findInstance (
         theCoord,
         theOpnNameWoa.getCString (),
         theBomIndex,
         theSubIndex);

   theSub->mySubIndex_ = theSubIndex;

   theSub->setWasDeletedInWit (false);
   }

//------------------------------------------------------------------------------

d88 7
@


1.31
log
@Changed name of Element classes in Java and C++ to Component.
@
text
@a70 33
void WitJ::Substitute::extractInstance (Coordinator * theCoord)
   {
   StringWoa  theOpnNameWoa;
   int        theBomIndex;
   int        theSubIndex;
   StringWoa  thePartNameWoa;
   BomEntry * theBomEnt;
   Part *     thePart;

   witGetObjItrSubsBomEntry (
      theCoord    ->getWitRun   (),
      theOpnNameWoa.getCStrAddr (),
    & theBomIndex,
    & theSubIndex);

   witGetSubsBomEntryConsumedPart (
      theCoord     ->getWitRun   (),
      theOpnNameWoa .getCString  (),
      theBomIndex,
      theSubIndex,
      thePartNameWoa.getCStrAddr ());

   theBomEnt = BomEntry::findInstance (theCoord, theOpnNameWoa .getCString (),
                                                 theBomIndex);

   thePart   = Part    ::findInstance (theCoord, thePartNameWoa.getCString ());

   JavaObjRep::makeSubstitute (theBomEnt, thePart);
   }


//------------------------------------------------------------------------------

@


1.30
log
@purgeData
@
text
@d23 1
a23 1
      Element     (theBomEnt->getCoordinator ()),
@


1.29
log
@purgeData
@
text
@d104 1
a104 1
void WitJ::Substitute::preserveInstance (Coordinator * theCoord)
@


1.28
log
@purgeData
@
text
@d126 1
a126 1
   theSub->setToBeShutDown (false);
@


1.27
log
@purgeData
@
text
@d11 1
a11 1
#include      <VecWoa.h>
d82 1
a82 1
      theOpnNameWoa.getCVecAddr (),
d88 1
a88 1
      theOpnNameWoa .getCVec     (),
d91 1
a91 1
      thePartNameWoa.getCVecAddr ());
d93 1
a93 1
   theBomEnt = BomEntry::findInstance (theCoord, theOpnNameWoa .getCVec (),
d96 1
a96 1
   thePart   = Part    ::findInstance (theCoord, thePartNameWoa.getCVec ());
d113 1
a113 1
      theOpnNameWoa.getCVecAddr (),
d120 1
a120 1
         theOpnNameWoa.getCVec (),
@


1.26
log
@purgeData
@
text
@d57 7
d93 4
a96 2
   theBomEnt = theCoord->findBomEntry (theOpnNameWoa .getCVec (), theBomIndex);
   thePart   = theCoord->findPart     (thePartNameWoa.getCVec ());
d118 5
a122 2
      theCoord->
         findSubstitute (theOpnNameWoa.getCVec (), theBomIndex, theSubIndex);
d131 5
a135 1
const char * WitJ::Substitute::getOperationName ()
d137 10
a146 1
   return myBomEnt_->getOperationName ();
@


1.25
log
@purgeData
@
text
@d92 25
@


1.24
log
@Removed C++ class Extractor.
@
text
@d7 6
a12 3
#include <Substitute.h>
#include   <BomEntry.h>
#include       <Part.h>
d14 1
a14 1
#include        <wit.h>
d64 30
@


1.23
log
@Implemented Java class CppGateway.
@
text
@d24 1
a24 1
   if (! getExtractMode ())
@


1.22
log
@Change the names of the ProbMgr classes to Coordinator, etc.
@
text
@d18 1
a18 2
         Part *       thePart,
         JavaObjRep * theSubJOR):
d20 1
a20 1
      Element     (theBomEnt->getCoordinator (), theSubJOR),
@


1.21
log
@ProbMgr classes.
@
text
@d21 1
a21 1
      Element     (theBomEnt->getProbMgr (), theSubJOR),
@


1.20
log
@Change the mname of the ProbCtr classes to ProbMgr in both Java and C++.
@
text
@a14 2
#include <Problem.h>

d21 1
a21 1
      Element     (theBomEnt->getProblem ()->getProbMgr (), theSubJOR),
@


1.19
log
@Continued implementation of the ProbCtr classes.
@
text
@d23 1
a23 1
      Element     (theBomEnt->getProblem ()->getProbCtr (), theSubJOR),
@


1.18
log
@Updated some comments.
@
text
@d15 2
d23 1
a23 1
      Element     (theBomEnt->getProblem (), theSubJOR),
@


1.17
log
@Removed C++ class Session.
@
text
@d4 1
a4 1
// Contains the definition of class Substitute.
@


1.16
log
@Name change.
@
text
@d21 1
a21 1
      Element     (theBomEnt->getSession (), theSubJOR),
@


1.15
log
@Changed name of Component to Entity.
@
text
@d21 1
a21 1
      Entity      (theBomEnt->getSession (), theSubJOR),
@


1.14
log
@Implemented extraction of substitutes.
@
text
@d21 1
a21 1
      Component   (theBomEnt->getSession (), theSubJOR),
@


1.13
log
@Call-back infrastructure.
Implemented extraction of Demands.
@
text
@d17 1
d21 3
a23 2
      Component (theBomEnt->getSession (), theSubJOR),
      myBomEnt_ (theBomEnt)
d25 6
a30 11
   witGetBomEntryNSubsBomEntries (
      getWitRun (),
      getOperationName (),
      getBomIndex (),
    & mySubIndex_);

   witAddSubsBomEntry (
      getWitRun (),
      getOperationName (),
      getBomIndex (),
      thePart->getPartName ());
@


1.12
log
@Call-back infrastructure.
@
text
@d34 7
@


1.11
log
@Renamed Java class ProbCoordCI to SessionCI.
Renamed C++  class ProbCoord   to Session.
@
text
@d16 3
a18 2
         BomEntry * theBomEnt,
         Part *     thePart):
d20 1
a20 1
      Component (theBomEnt->getSession ()),
@


1.10
log
@Attributes.
@
text
@d19 1
a19 1
      Component (theBomEnt->getProbCoord ()),
@


1.9
log
@Removed some debugging output.
@
text
@d24 1
a24 1
      getOperationCName (),
d30 1
a30 1
      getOperationCName (),
d32 1
a32 1
      thePart->getPartCName ());
d57 1
a57 1
const char * WitJ::Substitute::getOperationCName ()
d59 1
a59 1
   return myBomEnt_->getOperationCName ();
@


1.8
log
@Attributes.
@
text
@a12 2
#include   <iostream>

a38 9
   std::cout
      << "\n"
      << "Destroying Substitute #\""
      << mySubIndex_
      << "\" for BomEntry # \""
      << getBomIndex ()
      << "\" for Operation \""
      << getOperationCName ()
      << "\".\n";
@


1.7
log
@Accessor names.
@
text
@d54 1
a54 1
WitJ::Substitute * WitJ::Substitute::thisSubstitute ()
@


1.6
log
@Changed the names of access functions beginning with "my"
to begin with "get".
@
text
@d26 3
a28 3
      consumingOpnCName (),
      bomIndex (),
    & subIndex_);
d32 3
a34 3
      consumingOpnCName (),
      bomIndex (),
      thePart->partCName ());
d44 1
a44 1
      << subIndex_
d46 1
a46 1
      << bomIndex ()
d48 1
a48 1
      << consumingOpnCName ()
d61 1
a61 1
int WitJ::Substitute::bomIndex ()
d63 1
a63 1
   return myBomEnt_->bomIndex ();
d68 1
a68 1
const char * WitJ::Substitute::consumingOpnCName ()
d70 1
a70 1
   return myBomEnt_->consumingOpnCName ();
@


1.5
log
@Strings.
@
text
@d21 1
a21 1
      Component (theBomEnt->myProbCoord ()),
d25 1
a25 1
      myWitRun (),
d31 1
a31 1
      myWitRun (),
@


1.4
log
@Replaced class WitJ::String with class std::string.
@
text
@d26 1
a26 1
      consumingOpnName ().c_str (),
d32 1
a32 1
      consumingOpnName ().c_str (),
d34 1
a34 1
      thePart->partName ().c_str ());
d48 1
a48 1
      << consumingOpnName ()
d68 1
a68 1
const std::string & WitJ::Substitute::consumingOpnName ()
d70 1
a70 1
   return myBomEnt_->consumingOpnName ();
@


1.3
log
@Added myName_ to class Att.
@
text
@d26 1
a26 1
      consumingOpnName (),
d32 1
a32 1
      consumingOpnName (),
d34 1
a34 1
      thePart->partName ());
d61 1
a61 1
const WitJ::String & WitJ::Substitute::consumingOpnName ()
d63 1
a63 1
   return myBomEnt_->consumingOpnName ();
d68 1
a68 1
int WitJ::Substitute::bomIndex ()
d70 1
a70 1
   return myBomEnt_->bomIndex ();
@


1.2
log
@*** empty log message ***
@
text
@d43 1
a43 1
      << "Destroying WitJ::Substitute #\""
@


1.1
log
@*** empty log message ***
@
text
@d27 2
a28 2
      bomEntIdx (),
    & subIdx_);
d33 1
a33 1
      bomEntIdx (),
d44 1
a44 1
      << subIdx_
d46 1
a46 1
      << bomEntIdx ()
d68 1
a68 1
int WitJ::Substitute::bomEntIdx ()
d70 1
a70 1
   return myBomEnt_->bomEntIdx ();
@

