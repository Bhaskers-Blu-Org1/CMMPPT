head	1.20;
access;
symbols;
locks; strict;
comment	@ * @;


1.20
date	2011.05.04.22.49.04;	author rjw;	state Exp;
branches;
next	1.19;

1.19
date	2011.04.12.00.33.14;	author rjw;	state Exp;
branches;
next	1.18;

1.18
date	2011.04.01.19.23.36;	author rjw;	state Exp;
branches;
next	1.17;

1.17
date	2011.02.25.16.06.53;	author rjw;	state Exp;
branches;
next	1.16;

1.16
date	2010.04.20.20.55.08;	author rjw;	state Exp;
branches;
next	1.15;

1.15
date	2010.04.17.00.20.19;	author rjw;	state Exp;
branches;
next	1.14;

1.14
date	2010.04.13.23.10.42;	author rjw;	state Exp;
branches;
next	1.13;

1.13
date	2009.03.13.19.32.19;	author rjw;	state Exp;
branches;
next	1.12;

1.12
date	2008.12.15.17.28.49;	author rjw;	state Exp;
branches;
next	1.11;

1.11
date	2008.12.15.17.17.40;	author rjw;	state Exp;
branches;
next	1.10;

1.10
date	2008.12.03.18.28.49;	author rjw;	state Exp;
branches;
next	1.9;

1.9
date	2008.11.21.15.49.15;	author rjw;	state Exp;
branches;
next	1.8;

1.8
date	2008.10.14.22.04.38;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2008.10.07.18.50.24;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2008.10.06.22.14.03;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2008.10.06.14.42.38;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2008.10.01.22.55.33;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2008.09.26.22.50.17;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2008.08.01.16.29.32;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2008.07.22.21.08.59;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.20
log
@setValue ==> set
getValue ==> get
@
text
@//------------------------------------------------------------------------------
// WIT-J C++ Header File ScalarAtts.h.
//
// Contains the declarations of the following class templates:
//
//    ProblemScalarAtt <Value>
//       PartScalarAtt <Value>
//     DemandScalarAtt <Value>
//        OpnScalarAtt <Value>
//     BomEntScalarAtt <Value>
//        SubScalarAtt <Value>
//     BopEntScalarAtt <Value>
//
// Contains the declaration of the following class:
//
//    StringProblemScalarAtt
//------------------------------------------------------------------------------

#ifndef ScalarAtts_h
#define ScalarAtts_h

#include <Att.h>

#include <wit.h>

//------------------------------------------------------------------------------
// Class template ProblemScalarAtt <Value>
//
// Represents an attribute of scalar type Value associated with the whole
// Problem.
//
// Class Hierarchy:
//
// JavaAccObj
//    Att
//       ProblemScalarAtt <Value>
//
// The implementation is in ScalarAtts.C.
//------------------------------------------------------------------------------

namespace WitJ
{
template <typename Value>
      class ProblemScalarAtt: public Att
   {
   //---------------------------------------------------------------------------
   // Local typedefs.
   //
   // SetFuncPtr:
   //    A pointer to a WIT API function that sets      the value of an
   //    attribute of scalar type Value associated with the whole Problem
   //
   // GetFuncPtr:
   //    A pointer to a WIT API function that retrieves the value of an
   //    attribute of scalar type Value associated with the whole Problem.
   //---------------------------------------------------------------------------

   typedef
      WIT_DECLSPEC witReturnCode STDCALL (* SetFuncPtr) (
         WitRun * const,
         const Value);

   typedef
      WIT_DECLSPEC witReturnCode STDCALL (* GetFuncPtr) (
         WitRun * const,
         Value *);

   //---------------------------------------------------------------------------
   // Public member functions.
   //---------------------------------------------------------------------------

   public:

   explicit ProblemScalarAtt (
         AttBldr *    theAttBldr,
         const char * theName,
         SetFuncPtr   theSetFuncPtr,
         GetFuncPtr   theGetFuncPtr);
      //
      // Constructor.

   virtual ~ProblemScalarAtt ();
      //
      // Destructor.

   virtual void set              (Component *, Value);
   virtual void get              (Component *, Value &);
   virtual bool isModifiable     ();
   virtual bool valueTypeMatches (const std::string &);
      //
      // Overrides from class Att.

   //---------------------------------------------------------------------------
   // Private member functions.
   //---------------------------------------------------------------------------

   private:

   ProblemScalarAtt              (const ProblemScalarAtt &);
   ProblemScalarAtt & operator = (const ProblemScalarAtt &);
      //
      // Not implemented; prevents accidental copying and assignment.

   //---------------------------------------------------------------------------
   // Private member data.
   //---------------------------------------------------------------------------

   const SetFuncPtr mySetFuncPtr_;
      //
      // A pointer to the WIT API function that sets      the value of the
      // attribute represented by this ProblemScalarAtt.
      // NULL, if this ProblemScalarAtt represents an output attribute.

   const GetFuncPtr myGetFuncPtr_;
      //
      // A pointer to the WIT API function that retrieves the value of the
      // attribute represented by this ProblemScalarAtt.
   };
};
//
// End of namespace WitJ.

//------------------------------------------------------------------------------
// Class template PartScalarAtt <Value>
//
// Represents an attribute of scalar type Value associated with a Part.
//
// Class Hierarchy:
//
// JavaAccObj
//    Att
//       PartScalarAtt <Value>
//
// The implementation is in ScalarAtts.C.
//------------------------------------------------------------------------------

namespace WitJ
{
template <typename Value>
      class PartScalarAtt: public Att
   {
   //---------------------------------------------------------------------------
   // Local typedefs.
   //
   // SetFuncPtr:
   //    A pointer to a WIT API function that sets      the value of an
   //    attribute of scalar type Value associated with a Part.
   //
   // GetFuncPtr:
   //    A pointer to a WIT API function that retrieves the value of an
   //    attribute of scalar type Value associated with a Part.
   //---------------------------------------------------------------------------

   typedef
      WIT_DECLSPEC witReturnCode STDCALL (* SetFuncPtr) (
         WitRun * const,
         const char * const,
         const Value);

   typedef
      WIT_DECLSPEC witReturnCode STDCALL (* GetFuncPtr) (
         WitRun * const,
         const char * const,
         Value *);

   //---------------------------------------------------------------------------
   // Public member functions.
   //---------------------------------------------------------------------------

   public:

   explicit PartScalarAtt (
         AttBldr *    theAttBldr,
         const char * theName,
         SetFuncPtr   theSetFuncPtr,
         GetFuncPtr   theGetFuncPtr);
      //
      // Constructor.

   virtual ~PartScalarAtt ();
      //
      // Destructor.

   virtual void set              (Component *, Value);
   virtual void get              (Component *, Value &);
   virtual bool isModifiable     ();
   virtual bool valueTypeMatches (const std::string &);
      //
      // Overrides from class Att.

   //---------------------------------------------------------------------------
   // Private member functions.
   //---------------------------------------------------------------------------

   private:

   PartScalarAtt              (const PartScalarAtt &);
   PartScalarAtt & operator = (const PartScalarAtt &);
      //
      // Not implemented; prevents accidental copying and assignment.

   //---------------------------------------------------------------------------
   // Private member data.
   //---------------------------------------------------------------------------

   const SetFuncPtr mySetFuncPtr_;
      //
      // A pointer to the WIT API function that sets      the value of the
      // attribute represented by this PartScalarAtt.
      // NULL, if this PartScalarAtt represents an output attribute.

   const GetFuncPtr myGetFuncPtr_;
      //
      // A pointer to the WIT API function that retrieves the value of the
      // attribute represented by this PartScalarAtt.
   };
};
//
// End of namespace WitJ.

//------------------------------------------------------------------------------
// Class template DemandScalarAtt <Value>
//
// Represents an attribute of scalar type Value associated with a Demand.
//
// Class Hierarchy:
//
// JavaAccObj
//    Att
//       DemandScalarAtt <Value>
//
// The implementation is in ScalarAtts.C.
//------------------------------------------------------------------------------

namespace WitJ
{
template <typename Value>
      class DemandScalarAtt: public Att
   {
   //---------------------------------------------------------------------------
   // Local typedefs.
   //
   // SetFuncPtr:
   //    A pointer to a WIT API function that sets      the value of an
   //    attribute of scalar type Value associated with a Demand.
   //
   // GetFuncPtr:
   //    A pointer to a WIT API function that retrieves the value of an
   //    attribute of scalar type Value associated with a Demand.
   //---------------------------------------------------------------------------

   typedef
      WIT_DECLSPEC witReturnCode STDCALL (* SetFuncPtr) (
         WitRun * const,
         const char * const,
         const char * const,
         const Value);

   typedef
      WIT_DECLSPEC witReturnCode STDCALL (* GetFuncPtr) (
         WitRun * const,
         const char * const,
         const char * const,
         Value *);

   //---------------------------------------------------------------------------
   // Public member functions.
   //---------------------------------------------------------------------------

   public:

   explicit DemandScalarAtt (
         AttBldr *    theAttBldr,
         const char * theName,
         SetFuncPtr   theSetFuncPtr,
         GetFuncPtr   theGetFuncPtr);
      //
      // Constructor.

   virtual ~DemandScalarAtt ();
      //
      // Destructor.

   virtual void set              (Component *, Value);
   virtual void get              (Component *, Value &);
   virtual bool isModifiable     ();
   virtual bool valueTypeMatches (const std::string &);
      //
      // Overrides from class Att.

   //---------------------------------------------------------------------------
   // Private member functions.
   //---------------------------------------------------------------------------

   private:

   DemandScalarAtt              (const DemandScalarAtt &);
   DemandScalarAtt & operator = (const DemandScalarAtt &);
      //
      // Not implemented; prevents accidental copying and assignment.

   //---------------------------------------------------------------------------
   // Private member data.
   //---------------------------------------------------------------------------

   const SetFuncPtr mySetFuncPtr_;
      //
      // A pointer to the WIT API function that sets      the value of the
      // attribute represented by this DemandScalarAtt.
      // NULL, if this DemandScalarAtt represents an output attribute.

   const GetFuncPtr myGetFuncPtr_;
      //
      // A pointer to the WIT API function that retrieves the value of the
      // attribute represented by this DemandScalarAtt.
   };
};
//
// End of namespace WitJ.

//------------------------------------------------------------------------------
// Class template OpnScalarAtt <Value>
//
// Represents an attribute of scalar type Value associated with an Operation.
//
// Class Hierarchy:
//
// JavaAccObj
//    Att
//       OpnScalarAtt <Value>
//
// The implementation is in ScalarAtts.C.
//------------------------------------------------------------------------------

namespace WitJ
{
template <typename Value>
      class OpnScalarAtt: public Att
   {
   //---------------------------------------------------------------------------
   // Local typedefs.
   //
   // SetFuncPtr:
   //    A pointer to a WIT API function that sets      the value of an
   //    attribute of scalar type Value associated with an Operation.
   //
   // GetFuncPtr:
   //    A pointer to a WIT API function that retrieves the value of an
   //    attribute of scalar type Value associated with an Operation.
   //---------------------------------------------------------------------------

   typedef
      WIT_DECLSPEC witReturnCode STDCALL (* SetFuncPtr) (
         WitRun * const,
         const char * const,
         const Value);

   typedef
      WIT_DECLSPEC witReturnCode STDCALL (* GetFuncPtr) (
         WitRun * const,
         const char * const,
         Value *);

   //---------------------------------------------------------------------------
   // Public member functions.
   //---------------------------------------------------------------------------

   public:

   explicit OpnScalarAtt (
         AttBldr *    theAttBldr,
         const char * theName,
         SetFuncPtr   theSetFuncPtr,
         GetFuncPtr   theGetFuncPtr);
      //
      // Constructor.

   virtual ~OpnScalarAtt ();
      //
      // Destructor.

   virtual void set              (Component *, Value);
   virtual void get              (Component *, Value &);
   virtual bool isModifiable     ();
   virtual bool valueTypeMatches (const std::string &);
      //
      // Overrides from class Att.

   //---------------------------------------------------------------------------
   // Private member functions.
   //---------------------------------------------------------------------------

   private:

   OpnScalarAtt              (const OpnScalarAtt &);
   OpnScalarAtt & operator = (const OpnScalarAtt &);
      //
      // Not implemented; prevents accidental copying and assignment.

   //---------------------------------------------------------------------------
   // Private member data.
   //---------------------------------------------------------------------------

   const SetFuncPtr mySetFuncPtr_;
      //
      // A pointer to the WIT API function that sets      the value of the
      // attribute represented by this OpnScalarAtt.
      // NULL, if this OpnScalarAtt represents an output attribute.

   const GetFuncPtr myGetFuncPtr_;
      //
      // A pointer to the WIT API function that retrieves the value of the
      // attribute represented by this OpnScalarAtt.
   };
};
//
// End of namespace WitJ.

//------------------------------------------------------------------------------
// Class template BomEntScalarAtt <Value>
//
// Represents an attribute of scalar type Value associated with a BopEntry.
//
// Class Hierarchy:
//
// JavaAccObj
//    Att
//       BomEntScalarAtt <Value>
//
// The implementation is in ScalarAtts.C.
//------------------------------------------------------------------------------

namespace WitJ
{
template <typename Value>
      class BomEntScalarAtt: public Att
   {
   //---------------------------------------------------------------------------
   // Local typedefs.
   //
   // SetFuncPtr:
   //    A pointer to a WIT API function that sets      the value of an
   //    attribute of scalar type Value associated with a BopEntry.
   //
   // GetFuncPtr:
   //    A pointer to a WIT API function that retrieves the value of an
   //    attribute of scalar type Value associated with a BopEntry.
   //---------------------------------------------------------------------------

   typedef
      WIT_DECLSPEC witReturnCode STDCALL (* SetFuncPtr) (
         WitRun * const,
         const char * const,
         const int,
         const Value);

   typedef
      WIT_DECLSPEC witReturnCode STDCALL (* GetFuncPtr) (
         WitRun * const,
         const char * const,
         const int,
         Value *);

   //---------------------------------------------------------------------------
   // Public member functions.
   //---------------------------------------------------------------------------

   public:

   explicit BomEntScalarAtt (
         AttBldr *    theAttBldr,
         const char * theName,
         SetFuncPtr   theSetFuncPtr,
         GetFuncPtr   theGetFuncPtr);
      //
      // Constructor.

   virtual ~BomEntScalarAtt ();
      //
      // Destructor.

   virtual void set              (Component *, Value);
   virtual void get              (Component *, Value &);
   virtual bool isModifiable     ();
   virtual bool valueTypeMatches (const std::string &);
      //
      // Overrides from class Att.

   //---------------------------------------------------------------------------
   // Private member functions.
   //---------------------------------------------------------------------------

   private:

   BomEntScalarAtt              (const BomEntScalarAtt &);
   BomEntScalarAtt & operator = (const BomEntScalarAtt &);
      //
      // Not implemented; prevents accidental copying and assignment.

   //---------------------------------------------------------------------------
   // Private member data.
   //---------------------------------------------------------------------------

   const SetFuncPtr mySetFuncPtr_;
      //
      // A pointer to the WIT API function that sets      the value of the
      // attribute represented by this BomEntScalarAtt.
      // NULL, if this BomEntScalarAtt represents an output attribute.

   const GetFuncPtr myGetFuncPtr_;
      //
      // A pointer to the WIT API function that retrieves the value of the
      // attribute represented by this BomEntScalarAtt.
   };
};
//
// End of namespace WitJ.

//------------------------------------------------------------------------------
// Class template SubScalarAtt <Value>
//
// Represents an attribute of scalar type Value associated with a Substitute.
//
// Class Hierarchy:
//
// JavaAccObj
//    Att
//       SubScalarAtt <Value>
//
// The implementation is in ScalarAtts.C.
//------------------------------------------------------------------------------

namespace WitJ
{
template <typename Value>
      class SubScalarAtt: public Att
   {
   //---------------------------------------------------------------------------
   // Local typedefs.
   //
   // SetFuncPtr:
   //    A pointer to a WIT API function that sets      the value of an
   //    attribute of scalar type Value associated with a Substitute.
   //
   // GetFuncPtr:
   //    A pointer to a WIT API function that retrieves the value of an
   //    attribute of scalar type Value associated with a Substitute.
   //---------------------------------------------------------------------------

   typedef
      WIT_DECLSPEC witReturnCode STDCALL (* SetFuncPtr) (
         WitRun * const,
         const char * const,
         const int,
         const int,
         const Value);

   typedef
      WIT_DECLSPEC witReturnCode STDCALL (* GetFuncPtr) (
         WitRun * const,
         const char * const,
         const int,
         const int,
         Value *);

   //---------------------------------------------------------------------------
   // Public member functions.
   //---------------------------------------------------------------------------

   public:

   explicit SubScalarAtt (
         AttBldr *    theAttBldr,
         const char * theName,
         SetFuncPtr   theSetFuncPtr,
         GetFuncPtr   theGetFuncPtr);
      //
      // Constructor.

   virtual ~SubScalarAtt ();
      //
      // Destructor.

   virtual void set              (Component *, Value);
   virtual void get              (Component *, Value &);
   virtual bool isModifiable     ();
   virtual bool valueTypeMatches (const std::string &);
      //
      // Overrides from class Att.

   //---------------------------------------------------------------------------
   // Private member functions.
   //---------------------------------------------------------------------------

   private:

   SubScalarAtt              (const SubScalarAtt &);
   SubScalarAtt & operator = (const SubScalarAtt &);
      //
      // Not implemented; prevents accidental copying and assignment.

   //---------------------------------------------------------------------------
   // Private member data.
   //---------------------------------------------------------------------------

   const SetFuncPtr mySetFuncPtr_;
      //
      // A pointer to the WIT API function that sets      the value of the
      // attribute represented by this SubScalarAtt.
      // NULL, if this SubScalarAtt represents an output attribute.

   const GetFuncPtr myGetFuncPtr_;
      //
      // A pointer to the WIT API function that retrieves the value of the
      // attribute represented by this SubScalarAtt.
   };
};
//
// End of namespace WitJ.

//------------------------------------------------------------------------------
// Class template BopEntScalarAtt <Value>
//
// Represents an attribute of scalar type Value associated with a BopEntry.
//
// Class Hierarchy:
//
// JavaAccObj
//    Att
//       BopEntScalarAtt <Value>
//
// The implementation is in ScalarAtts.C.
//------------------------------------------------------------------------------

namespace WitJ
{
template <typename Value>
      class BopEntScalarAtt: public Att
   {
   //---------------------------------------------------------------------------
   // Local typedefs.
   //
   // SetFuncPtr:
   //    A pointer to a WIT API function that sets      the value of an
   //    attribute of scalar type Value associated with a BopEntry.
   //
   // GetFuncPtr:
   //    A pointer to a WIT API function that retrieves the value of an
   //    attribute of scalar type Value associated with a BopEntry.
   //---------------------------------------------------------------------------

   typedef
      WIT_DECLSPEC witReturnCode STDCALL (* SetFuncPtr) (
         WitRun * const,
         const char * const,
         const int,
         const Value);

   typedef
      WIT_DECLSPEC witReturnCode STDCALL (* GetFuncPtr) (
         WitRun * const,
         const char * const,
         const int,
         Value *);

   //---------------------------------------------------------------------------
   // Public member functions.
   //---------------------------------------------------------------------------

   public:

   explicit BopEntScalarAtt (
         AttBldr *    theAttBldr,
         const char * theName,
         SetFuncPtr   theSetFuncPtr,
         GetFuncPtr   theGetFuncPtr);
      //
      // Constructor.

   virtual ~BopEntScalarAtt ();
      //
      // Destructor.

   virtual void set              (Component *, Value);
   virtual void get              (Component *, Value &);
   virtual bool isModifiable     ();
   virtual bool valueTypeMatches (const std::string &);
      //
      // Overrides from class Att.

   //---------------------------------------------------------------------------
   // Private member functions.
   //---------------------------------------------------------------------------

   private:

   BopEntScalarAtt              (const BopEntScalarAtt &);
   BopEntScalarAtt & operator = (const BopEntScalarAtt &);
      //
      // Not implemented; prevents accidental copying and assignment.

   //---------------------------------------------------------------------------
   // Private member data.
   //---------------------------------------------------------------------------

   const SetFuncPtr mySetFuncPtr_;
      //
      // A pointer to the WIT API function that sets      the value of the
      // attribute represented by this BopEntScalarAtt.
      // NULL, if this BopEntScalarAtt represents an output attribute.

   const GetFuncPtr myGetFuncPtr_;
      //
      // A pointer to the WIT API function that retrieves the value of the
      // attribute represented by this BopEntScalarAtt.
   };
};
//
// End of namespace WitJ.

//------------------------------------------------------------------------------
// Class template StringProblemScalarAtt
//
// Represents an string attribute associated with the whole Problem.
//
// Class Hierarchy:
//
// JavaAccObj
//    Att
//       StringProblemScalarAtt
//
// The implementation is in ScalarAtts.C.
//------------------------------------------------------------------------------

namespace WitJ
{
class StringProblemScalarAtt: public Att
   {
   //---------------------------------------------------------------------------
   // Local typedefs.
   //
   // SetFuncPtr:
   //    A pointer to a WIT API function that sets      the value of a string
   //    attribute associated with the whole Problem
   //
   // GetFuncPtr:
   //    A pointer to a WIT API function that retrieves the value of a string
   //    attribute associated with the whole Problem.
   //---------------------------------------------------------------------------

   typedef
      WIT_DECLSPEC witReturnCode STDCALL (* SetFuncPtr) (
         WitRun * const,
         const char * const);

   typedef
      WIT_DECLSPEC witReturnCode STDCALL (* GetFuncPtr) (
         WitRun * const,
         char * *);

   //---------------------------------------------------------------------------
   // Public member functions.
   //---------------------------------------------------------------------------

   public:

   explicit StringProblemScalarAtt (
         AttBldr *    theAttBldr,
         const char * theName,
         SetFuncPtr   theSetFuncPtr,
         GetFuncPtr   theGetFuncPtr);
      //
      // Constructor.

   virtual ~StringProblemScalarAtt ();
      //
      // Destructor.

   virtual void set              (Component *, const char *);
   virtual void get              (Component *, StringJOR &);
   virtual bool isModifiable     ();
   virtual bool valueTypeMatches (const std::string &);
      //
      // Overrides from class Att.

   //---------------------------------------------------------------------------
   // Private member functions.
   //---------------------------------------------------------------------------

   private:

   StringProblemScalarAtt              (const StringProblemScalarAtt &);
   StringProblemScalarAtt & operator = (const StringProblemScalarAtt &);
      //
      // Not implemented; prevents accidental copying and assignment.

   //---------------------------------------------------------------------------
   // Private member data.
   //---------------------------------------------------------------------------

   const SetFuncPtr mySetFuncPtr_;
      //
      // A pointer to the WIT API function that sets      the value of the
      // attribute represented by this StringProblemScalarAtt.
      // NULL, if this StringProblemScalarAtt represents an output attribute.

   const GetFuncPtr myGetFuncPtr_;
      //
      // A pointer to the WIT API function that retrieves the value of the
      // attribute represented by this StringProblemScalarAtt.
   };
};
//
// End of namespace WitJ.

#endif
@


1.19
log
@Class StringJOR
@
text
@d86 2
a87 2
   virtual void setValue         (Component *, Value);
   virtual void getValue         (Component *, Value &);
d184 2
a185 2
   virtual void setValue         (Component *, Value);
   virtual void getValue         (Component *, Value &);
d284 2
a285 2
   virtual void setValue         (Component *, Value);
   virtual void getValue         (Component *, Value &);
d382 2
a383 2
   virtual void setValue         (Component *, Value);
   virtual void getValue         (Component *, Value &);
d482 2
a483 2
   virtual void setValue         (Component *, Value);
   virtual void getValue         (Component *, Value &);
d584 2
a585 2
   virtual void setValue         (Component *, Value);
   virtual void getValue         (Component *, Value &);
d684 2
a685 2
   virtual void setValue         (Component *, Value);
   virtual void getValue         (Component *, Value &);
d779 2
a780 2
   virtual void setValue         (Component *, const char *);
   virtual void getValue         (Component *, StringJOR &);
@


1.18
log
@Replaced newHeldCString with copyInto.
@
text
@d780 1
a780 1
   virtual void getValue         (Component *, WitStringOwner &);
@


1.17
log
@Moved GlobalAspect responsibilities to class Problem.
Removed class GlobalAspect.
@
text
@d89 1
a89 1
   virtual bool valueTypeMatches (const std::string);
d187 1
a187 1
   virtual bool valueTypeMatches (const std::string);
d287 1
a287 1
   virtual bool valueTypeMatches (const std::string);
d385 1
a385 1
   virtual bool valueTypeMatches (const std::string);
d485 1
a485 1
   virtual bool valueTypeMatches (const std::string);
d587 1
a587 1
   virtual bool valueTypeMatches (const std::string);
d687 1
a687 1
   virtual bool valueTypeMatches (const std::string);
d782 1
a782 1
   virtual bool valueTypeMatches (const std::string);
@


1.16
log
@Multi-Obj Mode
@
text
@d6 7
a12 7
//    GlobalScalarAtt <Value>
//      PartScalarAtt <Value>
//    DemandScalarAtt <Value>
//       OpnScalarAtt <Value>
//    BomEntScalarAtt <Value>
//       SubScalarAtt <Value>
//    BopEntScalarAtt <Value>
d16 1
a16 1
//    StringGlobalScalarAtt
d27 1
a27 1
// Class template GlobalScalarAtt <Value>
d36 1
a36 1
//       GlobalScalarAtt <Value>
d44 1
a44 1
      class GlobalScalarAtt: public Att
d74 1
a74 1
   explicit GlobalScalarAtt (
d82 1
a82 1
   virtual ~GlobalScalarAtt ();
d99 2
a100 2
   GlobalScalarAtt              (const GlobalScalarAtt &);
   GlobalScalarAtt & operator = (const GlobalScalarAtt &);
d111 2
a112 2
      // attribute represented by this GlobalScalarAtt.
      // NULL, if this GlobalScalarAtt represents an output attribute.
d117 1
a117 1
      // attribute represented by this GlobalScalarAtt.
d722 1
a722 1
// Class template StringGlobalScalarAtt
d730 1
a730 1
//       StringGlobalScalarAtt
d737 1
a737 1
class StringGlobalScalarAtt: public Att
d767 1
a767 1
   explicit StringGlobalScalarAtt (
d775 1
a775 1
   virtual ~StringGlobalScalarAtt ();
d792 2
a793 2
   StringGlobalScalarAtt              (const StringGlobalScalarAtt &);
   StringGlobalScalarAtt & operator = (const StringGlobalScalarAtt &);
d804 2
a805 2
      // attribute represented by this StringGlobalScalarAtt.
      // NULL, if this StringGlobalScalarAtt represents an output attribute.
d810 1
a810 1
      // attribute represented by this StringGlobalScalarAtt.
@


1.15
log
@Multi-Obj Mode
@
text
@d780 1
a780 1
   virtual void getValue         (Component *, VecWoa <char> &);
@


1.14
log
@Implemented String StdAttImps.
@
text
@d780 1
a780 1
   virtual void getValue         (Component *, StringWoa &);
@


1.13
log
@Changed name of Element classes in Java and C++ to Component.
@
text
@d13 4
d721 95
@


1.12
log
@Updated some comments.
@
text
@d82 2
a83 2
   virtual void setValue         (Element *, Value);
   virtual void getValue         (Element *, Value &);
d180 2
a181 2
   virtual void setValue         (Element *, Value);
   virtual void getValue         (Element *, Value &);
d280 2
a281 2
   virtual void setValue         (Element *, Value);
   virtual void getValue         (Element *, Value &);
d378 2
a379 2
   virtual void setValue         (Element *, Value);
   virtual void getValue         (Element *, Value &);
d478 2
a479 2
   virtual void setValue         (Element *, Value);
   virtual void getValue         (Element *, Value &);
d580 2
a581 2
   virtual void setValue         (Element *, Value);
   virtual void getValue         (Element *, Value &);
d680 2
a681 2
   virtual void setValue         (Element *, Value);
   virtual void getValue         (Element *, Value &);
@


1.11
log
@Initial implementation of class ExceptionHandler.
@
text
@d34 1
a34 1
// The definition is in ScalarAtts.C.
d98 1
a98 1
      // Not defined; prevents accidental copying and assignment.
d130 1
a130 1
// The definition is in ScalarAtts.C.
d196 1
a196 1
      // Not defined; prevents accidental copying and assignment.
d228 1
a228 1
// The definition is in ScalarAtts.C.
d296 1
a296 1
      // Not defined; prevents accidental copying and assignment.
d328 1
a328 1
// The definition is in ScalarAtts.C.
d394 1
a394 1
      // Not defined; prevents accidental copying and assignment.
d426 1
a426 1
// The definition is in ScalarAtts.C.
d494 1
a494 1
      // Not defined; prevents accidental copying and assignment.
d526 1
a526 1
// The definition is in ScalarAtts.C.
d596 1
a596 1
      // Not defined; prevents accidental copying and assignment.
d628 1
a628 1
// The definition is in ScalarAtts.C.
d696 1
a696 1
      // Not defined; prevents accidental copying and assignment.
@


1.10
log
@Changed name of method Attribute.allowsSetValue to isModifiable.
@
text
@d30 3
a32 3
//    JavaAccObj
//       Att
//          GlobalScalarAtt <Value>
d126 3
a128 3
//    JavaAccObj
//       Att
//          PartScalarAtt <Value>
d224 3
a226 3
//    JavaAccObj
//       Att
//          DemandScalarAtt <Value>
d324 3
a326 3
//    JavaAccObj
//       Att
//          OpnScalarAtt <Value>
d422 3
a424 3
//    JavaAccObj
//       Att
//          BomEntScalarAtt <Value>
d522 3
a524 3
//    JavaAccObj
//       Att
//          SubScalarAtt <Value>
d624 3
a626 3
//    JavaAccObj
//       Att
//          BopEntScalarAtt <Value>
@


1.9
log
@Attributes.
@
text
@d84 1
a84 1
   virtual bool allowsSetValue   ();
d182 1
a182 1
   virtual bool allowsSetValue   ();
d282 1
a282 1
   virtual bool allowsSetValue   ();
d380 1
a380 1
   virtual bool allowsSetValue   ();
d480 1
a480 1
   virtual bool allowsSetValue   ();
d582 1
a582 1
   virtual bool allowsSetValue   ();
d682 1
a682 1
   virtual bool allowsSetValue   ();
@


1.8
log
@Minor Revision.
@
text
@d84 1
a84 1
   virtual bool getIsInputAtt    ();
d182 1
a182 1
   virtual bool getIsInputAtt    ();
d282 1
a282 1
   virtual bool getIsInputAtt    ();
d380 1
a380 1
   virtual bool getIsInputAtt    ();
d480 1
a480 1
   virtual bool getIsInputAtt    ();
d582 1
a582 1
   virtual bool getIsInputAtt   ();
d682 1
a682 1
   virtual bool getIsInputAtt    ();
@


1.7
log
@Name change.
@
text
@d84 1
a84 1
   virtual bool getInputAccess   ();
d182 1
a182 1
   virtual bool getInputAccess   ();
d282 1
a282 1
   virtual bool getInputAccess   ();
d380 1
a380 1
   virtual bool getInputAccess   ();
d480 1
a480 1
   virtual bool getInputAccess   ();
d582 1
a582 1
   virtual bool getInputAccess   ();
d682 1
a682 1
   virtual bool getInputAccess   ();
@


1.6
log
@Changed name of Component to Entity.
@
text
@d82 2
a83 2
   virtual void setValue         (Entity *, Value);
   virtual void getValue         (Entity *, Value &);
d180 2
a181 2
   virtual void setValue         (Entity *, Value);
   virtual void getValue         (Entity *, Value &);
d280 2
a281 2
   virtual void setValue         (Entity *, Value);
   virtual void getValue         (Entity *, Value &);
d378 2
a379 2
   virtual void setValue         (Entity *, Value);
   virtual void getValue         (Entity *, Value &);
d478 2
a479 2
   virtual void setValue         (Entity *, Value);
   virtual void getValue         (Entity *, Value &);
d580 2
a581 2
   virtual void setValue         (Entity *, Value);
   virtual void getValue         (Entity *, Value &);
d680 2
a681 2
   virtual void setValue         (Entity *, Value);
   virtual void getValue         (Entity *, Value &);
@


1.5
log
@Minor revision.
@
text
@d82 2
a83 2
   virtual void setValue         (Component *, Value);
   virtual void getValue         (Component *, Value &);
d180 2
a181 2
   virtual void setValue         (Component *, Value);
   virtual void getValue         (Component *, Value &);
d280 2
a281 2
   virtual void setValue         (Component *, Value);
   virtual void getValue         (Component *, Value &);
d378 2
a379 2
   virtual void setValue         (Component *, Value);
   virtual void getValue         (Component *, Value &);
d478 2
a479 2
   virtual void setValue         (Component *, Value);
   virtual void getValue         (Component *, Value &);
d580 2
a581 2
   virtual void setValue         (Component *, Value);
   virtual void getValue         (Component *, Value &);
d680 2
a681 2
   virtual void setValue         (Component *, Value);
   virtual void getValue         (Component *, Value &);
@


1.4
log
@Minor revision.
@
text
@d84 1
a84 1
   virtual bool getInputMode     ();
d182 1
a182 1
   virtual bool getInputMode     ();
d282 1
a282 1
   virtual bool getInputMode     ();
d380 1
a380 1
   virtual bool getInputMode     ();
d480 1
a480 1
   virtual bool getInputMode     ();
d582 1
a582 1
   virtual bool getInputMode     ();
d682 1
a682 1
   virtual bool getInputMode     ();
@


1.3
log
@Changed name of C++ class JAccObject to JavaAccObj.
@
text
@d84 1
a84 1
   virtual bool isAnInputAtt     ();
d182 1
a182 1
   virtual bool isAnInputAtt     ();
d282 1
a282 1
   virtual bool isAnInputAtt     ();
d380 1
a380 1
   virtual bool isAnInputAtt     ();
d480 1
a480 1
   virtual bool isAnInputAtt     ();
d582 1
a582 1
   virtual bool isAnInputAtt     ();
d682 1
a682 1
   virtual bool isAnInputAtt     ();
@


1.2
log
@Attributes.
@
text
@d30 1
a30 1
//    JAccObject
d126 1
a126 1
//    JAccObject
d224 1
a224 1
//    JAccObject
d324 1
a324 1
//    JAccObject
d422 1
a422 1
//    JAccObject
d522 1
a522 1
//    JAccObject
d624 1
a624 1
//    JAccObject
@


1.1
log
@Attributes.
@
text
@d82 4
a85 3
   virtual void setValue     (Component *, Value);
   virtual void getValue     (Component *, Value &);
   virtual bool isAnInputAtt ();
d180 4
a183 3
   virtual void setValue     (Component *, Value);
   virtual void getValue     (Component *, Value &);
   virtual bool isAnInputAtt ();
d280 4
a283 3
   virtual void setValue     (Component *, Value);
   virtual void getValue     (Component *, Value &);
   virtual bool isAnInputAtt ();
d378 4
a381 3
   virtual void setValue     (Component *, Value);
   virtual void getValue     (Component *, Value &);
   virtual bool isAnInputAtt ();
d478 4
a481 3
   virtual void setValue     (Component *, Value);
   virtual void getValue     (Component *, Value &);
   virtual bool isAnInputAtt ();
d580 4
a583 3
   virtual void setValue     (Component *, Value);
   virtual void getValue     (Component *, Value &);
   virtual bool isAnInputAtt ();
d680 4
a683 3
   virtual void setValue     (Component *, Value);
   virtual void getValue     (Component *, Value &);
   virtual bool isAnInputAtt ();
@

