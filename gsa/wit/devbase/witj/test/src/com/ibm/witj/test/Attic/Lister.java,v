head	1.3;
access;
symbols;
locks; strict;
comment	@# @;


1.3
date	2008.10.15.17.32.50;	author rjw;	state dead;
branches;
next	1.2;

1.2
date	2008.10.09.21.20.23;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2008.10.08.17.58.52;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Removed class Lister.
@
text
@
//==============================================================================
// WIT-J/Test Source File Lister.java.
//
// Contains the declaration of class Lister.
//==============================================================================

package com.ibm.witj.test;

import  com.ibm.witj.*;

//==============================================================================
// Class Lister
//
// A class that reads a WIT data file and lists the WIT-J Elements that were
// loaded in from the file.
//==============================================================================

final class Lister
{
//==============================================================================
// Package-Internal Methods
//==============================================================================

//------------------------------------------------------------------------------
// listElements ().
//
// Reads in the WIT data file whose name is given in theArgs[1] and lists the
// WIT-J Elements that were loaded in from the file.
//------------------------------------------------------------------------------

   public static void listElements (String[] theArgs)
      {
      Lister theLister;

      theLister = new Lister ();

      theLister.listElementsInt (theArgs);
      }

//==============================================================================
// Private Constructor
//==============================================================================

   private Lister ()
      {
      }

//==============================================================================
// Private Methods
//==============================================================================

//------------------------------------------------------------------------------
// listElementsInt ().
//
// Internal version of listElements.
//------------------------------------------------------------------------------

   private void listElementsInt (String[] theArgs)
      {
      String theFileName;

      if (theArgs.length < 2)
         {
         Tester.abortWmsg (
            "   The WIT-J Tester requires at least 2 command line arguments\n"
          + "   in the \"l\" case.");
         }

      theFileName = theArgs[1];

      listElements (theFileName);
      }

//------------------------------------------------------------------------------
// listElements (theFileName).
//------------------------------------------------------------------------------

   private void listElements (String theFileName)
      {
      Session theSession;
      Problem theProblem;

      theSession = Session.newInstance ();

      theSession.getMessageMgr ().setQuietMode (true);

      theSession.
         getMessageMgr ().
            setMesgTimesPrint (MessageGroup.INFORMATIONAL, 0);

      theProblem = Problem.newInstance (theSession);

      theProblem.readData (theFileName);

      System.out.println (
         "\n"
       + "Elements loaded in from WIT data file \""
       +  theFileName
       + "\":\n");

      for (Element theElement: theProblem.getElements ())
         {
         System.out.println ("   " + theElement);
         }

      theSession.shutDown ();
      }

//------------------------------------------------------------------------------
}
@


1.2
log
@Revised factory methods.
@
text
@@


1.1
log
@Added the "l" option to the Tester.
@
text
@d84 1
a84 1
      theSession = Session.newSession ();
d92 1
a92 1
      theProblem = theSession.newProblem ();
@

