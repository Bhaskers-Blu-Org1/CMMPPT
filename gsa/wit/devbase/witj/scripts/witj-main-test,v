head	1.8;
access;
symbols;
locks; strict;
comment	@# @;


1.8
date	2011.09.30.15.23.42;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2010.09.20.19.10.53;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2010.05.28.20.07.36;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2010.05.28.17.30.50;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2010.04.13.23.10.43;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2009.10.28.21.47.35;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2009.10.28.20.02.03;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2009.08.12.21.03.32;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Revised diff filter
@
text
@#!/bin/sh

#-------------------------------------------------------------------------------
# Sh Script witj-main-test
#
# Performs the main set of tests for WIT-J.
#
# CDs to the data directory.
#
# Removes the old main-new.output and main-basis.output files, if any.
#
# Runs the Tester with argument "unit-test".
# * The Java Class Path is given as:
#      the directory that contains the bytecode for the Tester and
#      the WIT-J/Java Jar file.
# * The Native Library Path is given as:
#      the directory that contains the WIT-J/C++ native library.
# * All output is directed to main-new.output.
# This performs a unit test of WIT-J.
#
# Runs the Tester with argument "status-quo-test".
# * The Java Class Path is given as:
#      the directory that contains the bytecode for the Tester and
#      the WIT-J/Java Jar file.
# * The Native Library Path is given as:
#      the directory that contains the WIT-J/C++ native library.
# * All output is directed to main-new.output.
# This performs a test of all the StatusQuoExceptions in WIT-J.
#
# Retrieves the saved output from CVS as main-saved.output.
#
# Copies the saved version to a basis version, main-basis.output.
#
# On MinGW and Cygwin, runs dos2unix on the basis and new versions.
#
# Compares the new version to the basis version, storing the differences in
#    main-diff.output.
#-------------------------------------------------------------------------------

cd $WIT_HOME/witj/test/data

rm main-new.output   2> /dev/null
rm main-basis.output 2> /dev/null

echo
echo "Running the main tests for WIT-J."

#-------------------------------------------------------------------------------
# Unit Test
#-------------------------------------------------------------------------------

$JAVA_HOME/bin/java                        \
   -Djava.library.path=../../cpp/$PLATFORM \
   -enableassertions                       \
   -jar ../bytecode/witj-test.jar          \
    unit-test                              \
    2>&1 | cat >> main-new.output          \

echo                                   >> main-new.output
echo "-------------------------------" >> main-new.output
echo " Contents of UnitTester.output " >> main-new.output
echo "-------------------------------" >> main-new.output
echo                                   >> main-new.output

cat UnitTester.output >> main-new.output
rm  UnitTester.output

echo                                 >> main-new.output
echo "-----------------------------" >> main-new.output
echo " Contents of copyData.output " >> main-new.output
echo "-----------------------------" >> main-new.output
echo                                 >> main-new.output

cat copyData.output >> main-new.output
rm  copyData.output

echo                                >> main-new.output
echo "----------------------------" >> main-new.output
echo " Contents of unit-test.data " >> main-new.output
echo "----------------------------" >> main-new.output
echo                                >> main-new.output

cat unit-test.data >> main-new.output
rm  unit-test.data

echo                                >> main-new.output
echo "----------------------------" >> main-new.output
echo " Contents of unit-test.exec " >> main-new.output
echo "----------------------------" >> main-new.output
echo                                >> main-new.output

cat unit-test.exec >> main-new.output
rm  unit-test.exec

echo                                >> main-new.output
echo "----------------------------" >> main-new.output
echo " Contents of unit-test.ship " >> main-new.output
echo "----------------------------" >> main-new.output
echo                                >> main-new.output

cat unit-test.ship >> main-new.output
rm  unit-test.ship

echo                                >> main-new.output
echo "----------------------------" >> main-new.output
echo " Contents of unit-test.crit " >> main-new.output
echo "----------------------------" >> main-new.output
echo                                >> main-new.output

cat unit-test.crit >> main-new.output
rm  unit-test.crit

echo                               >> main-new.output
echo "---------------------------" >> main-new.output
echo " Contents of unit-test.req " >> main-new.output
echo "---------------------------" >> main-new.output
echo                               >> main-new.output

cat unit-test.req >> main-new.output
rm  unit-test.req

echo                            >> main-new.output
echo "------------------------" >> main-new.output
echo " Contents of solver.log " >> main-new.output
echo "------------------------" >> main-new.output
echo                            >> main-new.output

cat solver.log >> main-new.output
rm  solver.log

#-------------------------------------------------------------------------------
# Status Quo Test
#-------------------------------------------------------------------------------

$JAVA_HOME/bin/java                        \
   -Djava.library.path=../../cpp/$PLATFORM \
   -enableassertions                       \
   -jar ../bytecode/witj-test.jar          \
    status-quo-test                        \
    2>&1 | cat >> main-new.output          \

echo                                        >> main-new.output
echo "------------------------------------" >> main-new.output
echo " Contents of StatusQuoTester.output " >> main-new.output
echo "------------------------------------" >> main-new.output
echo                                        >> main-new.output

cat StatusQuoTester.output >> main-new.output
rm  StatusQuoTester.output

#-------------------------------------------------------------------------------
# Compare
#-------------------------------------------------------------------------------

echo "Comparing main-new.output with main-basis.output."
echo

cp main-saved.output main-basis.output

chmod +w             main-basis.output

if [ $PLATFORM = "mingw" ] 
then 
    dos2unix main-basis.output
    dos2unix main-new.output

elif [ $PLATFORM = "cygwinGcc" ] 
then 
    dos2unix main-basis.output
    dos2unix main-new.output

fi

diff                                                                     \
   -I "^         Build Date:"                                            \
   -I "^         Run Started At:"                                        \
   -I "^	at java.util.Collections\$UnmodifiableCollection.clear(" \
   -I "^         Lot size tolerance:"                                    \
                                                                         \
   main-basis.output                                                     \
   main-new.output                                                       \
 > main-diff.output                                                      \

@


1.7
log
@Using relative path names for Cygwin.
@
text
@d175 2
a176 2
   -I "^WIT0097I Watson Implosion Technology ("                          \
   -I "^         Run on "                                                \
a178 3
   -I "^Clp0006I"                                                        \
   -I "^Clp0000I"                                                        \
   -I "^Coin0511I"                                                       \
@


1.6
log
@Cygwin port.
@
text
@d52 6
a57 6
$JAVA_HOME/bin/java                                 \
   -Djava.library.path=$WIT_HOME/witj/cpp/$PLATFORM \
   -enableassertions                                \
   -jar $WIT_HOME/witj/test/bytecode/witj-test.jar  \
    unit-test                                       \
    2>&1 | cat >> main-new.output                   \
d135 6
a140 6
$JAVA_HOME/bin/java                                 \
   -Djava.library.path=$WIT_HOME/witj/cpp/$PLATFORM \
   -enableassertions                                \
   -jar $WIT_HOME/witj/test/bytecode/witj-test.jar  \
    status-quo-test                                 \
    2>&1 | cat >> main-new.output                   \
@


1.5
log
@Porting to Cygwin.
@
text
@d34 1
a34 1
# On MinGW, runs dos2unix on the basis and new versions.
d160 1
a160 1
chmod +w main-basis.output
d167 1
a167 1
elif [ $PLATFORM = "cygwin" ] 
@


1.4
log
@Implemented String StdAttImps.
@
text
@d160 2
d166 6
@


1.3
log
@Changed the extensions of test output files from out to output.
@
text
@d122 5
a126 5
echo                                       >> main-new.output
echo "-----------------------------------" >> main-new.output
echo " Contents of wit-j.test.solver.log " >> main-new.output
echo "-----------------------------------" >> main-new.output
echo                                       >> main-new.output
d128 2
a129 2
cat wit-j.test.solver.log >> main-new.output
rm  wit-j.test.solver.log
@


1.2
log
@Made the tester into a single jar file.
@
text
@d10 1
a10 1
# Removes the old main-new.out and main-basis.out files, if any.
d18 1
a18 1
# * All output is directed to main-new.out.
d27 1
a27 1
# * All output is directed to main-new.out.
d30 1
a30 1
# Retrieves the saved output from CVS as main-saved.out.
d32 1
a32 1
# Copies the saved version to a basis version, main-basis.out.
d37 1
a37 1
#    main-diff.out.
d42 2
a43 2
rm main-new.out   2> /dev/null
rm main-basis.out 2> /dev/null
d57 1
a57 1
    2>&1 | cat >> main-new.out                      \
d59 23
a81 23
echo                                >> main-new.out
echo "----------------------------" >> main-new.out
echo " Contents of UnitTester.out " >> main-new.out
echo "----------------------------" >> main-new.out
echo                                >> main-new.out

cat UnitTester.out >> main-new.out
rm  UnitTester.out

echo                              >> main-new.out
echo "--------------------------" >> main-new.out
echo " Contents of copyData.out " >> main-new.out
echo "--------------------------" >> main-new.out
echo                              >> main-new.out

cat copyData.out >> main-new.out
rm  copyData.out

echo                                >> main-new.out
echo "----------------------------" >> main-new.out
echo " Contents of unit-test.data " >> main-new.out
echo "----------------------------" >> main-new.out
echo                                >> main-new.out
d83 1
a83 1
cat unit-test.data >> main-new.out
d86 5
a90 5
echo                                >> main-new.out
echo "----------------------------" >> main-new.out
echo " Contents of unit-test.exec " >> main-new.out
echo "----------------------------" >> main-new.out
echo                                >> main-new.out
d92 1
a92 1
cat unit-test.exec >> main-new.out
d95 5
a99 5
echo                                >> main-new.out
echo "----------------------------" >> main-new.out
echo " Contents of unit-test.ship " >> main-new.out
echo "----------------------------" >> main-new.out
echo                                >> main-new.out
d101 1
a101 1
cat unit-test.ship >> main-new.out
d104 5
a108 5
echo                                >> main-new.out
echo "----------------------------" >> main-new.out
echo " Contents of unit-test.crit " >> main-new.out
echo "----------------------------" >> main-new.out
echo                                >> main-new.out
d110 1
a110 1
cat unit-test.crit >> main-new.out
d113 5
a117 5
echo                               >> main-new.out
echo "---------------------------" >> main-new.out
echo " Contents of unit-test.req " >> main-new.out
echo "---------------------------" >> main-new.out
echo                               >> main-new.out
d119 1
a119 1
cat unit-test.req >> main-new.out
d122 5
a126 5
echo                                       >> main-new.out
echo "-----------------------------------" >> main-new.out
echo " Contents of wit-j.test.solver.log " >> main-new.out
echo "-----------------------------------" >> main-new.out
echo                                       >> main-new.out
d128 1
a128 1
cat wit-j.test.solver.log >> main-new.out
d140 1
a140 1
    2>&1 | cat >> main-new.out                      \
d142 5
a146 5
echo                                     >> main-new.out
echo "---------------------------------" >> main-new.out
echo " Contents of StatusQuoTester.out " >> main-new.out
echo "---------------------------------" >> main-new.out
echo                                     >> main-new.out
d148 2
a149 2
cat StatusQuoTester.out >> main-new.out
rm  StatusQuoTester.out
d155 1
a155 1
echo "Comparing main-new.out with main-basis.out."
d158 1
a158 1
cp main-saved.out main-basis.out
d162 2
a163 2
    dos2unix main-basis.out
    dos2unix main-new.out
d175 3
a177 3
   main-basis.out                                                        \
   main-new.out                                                          \
 > main-diff.out                                                         \
@


1.1
log
@Changed the names of some scripts and some output files.
@
text
@d52 6
a57 7
$JAVA_HOME/bin/java                                                       \
   -cp $WIT_HOME/witj/test/bytecode:$WIT_HOME/witj/java/bytecode/witj.jar \
   -Djava.library.path=$WIT_HOME/witj/cpp/$PLATFORM                       \
   -enableassertions                                                      \
    com.ibm.witj.test.Tester                                              \
    unit-test                                                             \
    2>&1 | cat >> main-new.out                                            \
d135 6
a140 7
$JAVA_HOME/bin/java                                                       \
   -cp $WIT_HOME/witj/test/bytecode:$WIT_HOME/witj/java/bytecode/witj.jar \
   -Djava.library.path=$WIT_HOME/witj/cpp/$PLATFORM                       \
   -enableassertions                                                      \
    com.ibm.witj.test.Tester                                              \
    status-quo-test                                                       \
    2>&1 | cat >> main-new.out                                            \
@

