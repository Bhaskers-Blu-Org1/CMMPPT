head	1.45;
access;
symbols;
locks; strict;
comment	@# @;


1.45
date	2009.08.12.19.10.56;	author rjw;	state dead;
branches;
next	1.44;

1.44
date	2009.08.12.15.04.59;	author rjw;	state Exp;
branches;
next	1.43;

1.43
date	2009.08.12.13.29.50;	author dpc;	state Exp;
branches;
next	1.42;

1.42
date	2009.08.07.23.04.36;	author rjw;	state Exp;
branches;
next	1.41;

1.41
date	2009.08.07.19.45.53;	author rjw;	state Exp;
branches;
next	1.40;

1.40
date	2009.08.07.16.07.39;	author rjw;	state Exp;
branches;
next	1.39;

1.39
date	2009.08.06.14.40.09;	author rjw;	state Exp;
branches;
next	1.38;

1.38
date	2009.08.05.21.17.54;	author rjw;	state Exp;
branches;
next	1.37;

1.37
date	2009.08.05.18.54.35;	author rjw;	state Exp;
branches;
next	1.36;

1.36
date	2009.08.04.23.20.41;	author rjw;	state Exp;
branches;
next	1.35;

1.35
date	2009.07.31.15.53.23;	author rjw;	state Exp;
branches;
next	1.34;

1.34
date	2009.07.30.20.55.19;	author rjw;	state Exp;
branches;
next	1.33;

1.33
date	2009.07.28.22.33.23;	author rjw;	state Exp;
branches;
next	1.32;

1.32
date	2009.07.08.19.24.44;	author rjw;	state Exp;
branches;
next	1.31;

1.31
date	2009.04.24.17.42.52;	author rjw;	state Exp;
branches;
next	1.30;

1.30
date	2009.04.17.19.51.59;	author rjw;	state Exp;
branches;
next	1.29;

1.29
date	2009.04.09.19.50.14;	author rjw;	state Exp;
branches;
next	1.28;

1.28
date	2009.04.02.17.49.28;	author rjw;	state Exp;
branches;
next	1.27;

1.27
date	2009.02.25.23.06.45;	author rjw;	state Exp;
branches;
next	1.26;

1.26
date	2009.02.25.22.13.54;	author rjw;	state Exp;
branches;
next	1.25;

1.25
date	2009.01.12.17.24.14;	author rjw;	state Exp;
branches;
next	1.24;

1.24
date	2008.12.22.20.21.40;	author rjw;	state Exp;
branches;
next	1.23;

1.23
date	2008.12.22.17.12.09;	author rjw;	state Exp;
branches;
next	1.22;

1.22
date	2008.12.18.22.12.34;	author rjw;	state Exp;
branches;
next	1.21;

1.21
date	2008.12.18.19.48.25;	author rjw;	state Exp;
branches;
next	1.20;

1.20
date	2008.12.18.17.02.11;	author rjw;	state Exp;
branches;
next	1.19;

1.19
date	2008.12.15.22.31.42;	author rjw;	state Exp;
branches;
next	1.18;

1.18
date	2008.12.12.22.53.06;	author rjw;	state Exp;
branches;
next	1.17;

1.17
date	2008.12.11.23.39.52;	author rjw;	state Exp;
branches;
next	1.16;

1.16
date	2008.12.11.21.37.16;	author rjw;	state Exp;
branches;
next	1.15;

1.15
date	2008.12.08.17.03.41;	author rjw;	state Exp;
branches;
next	1.14;

1.14
date	2008.12.04.16.56.33;	author rjw;	state Exp;
branches;
next	1.13;

1.13
date	2008.12.03.23.02.22;	author rjw;	state Exp;
branches;
next	1.12;

1.12
date	2008.11.25.15.28.48;	author rjw;	state Exp;
branches;
next	1.11;

1.11
date	2008.11.14.16.58.02;	author rjw;	state Exp;
branches;
next	1.10;

1.10
date	2008.11.07.16.26.39;	author rjw;	state Exp;
branches;
next	1.9;

1.9
date	2008.11.05.22.54.00;	author rjw;	state Exp;
branches;
next	1.8;

1.8
date	2008.11.05.17.12.29;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2008.11.04.22.22.25;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2008.10.16.21.54.18;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2008.10.15.22.17.02;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2008.10.15.21.57.09;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2008.10.15.21.54.58;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2008.10.15.21.49.20;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2008.10.15.21.46.48;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.45
log
@Moved scripts from scripts/linux/ to scripts/.
@
text
@#!/bin/sh

#-------------------------------------------------------------------------------
# Sh Script test-witj
#
# Performs the complete set of standard tests for WIT-J.
#
# CDs to the data directory.
#
# Removes the old output.new file, if any.
# Removes the old output.good1 file, if any.
#
# Runs the Tester with argument "unit-test".
# * The Java Class Path is given as:
#      the directory that contains the bytecode for the Tester and
#      the WIT-J/Java Jar file.
# * The Native Library Path is given as:
#      the directory that contains the WIT-J/C++ native library.
# * All output is directed to output.new.
# This performs a unit test of WIT-J.
#
# Runs the Tester with argument "status-quo-test".
# * The Java Class Path is given as:
#      the directory that contains the bytecode for the Tester and
#      the WIT-J/Java Jar file.
# * The Native Library Path is given as:
#      the directory that contains the WIT-J/C++ native library.
# * All output is directed to output.new.
# This performs a test of all the StatusQuoExceptions in WIT-J.
#
# Compares the output to the output of a previous run of the tests.
#-------------------------------------------------------------------------------

cd $WIT_HOME/witj/test/data

rm output.new 2> /dev/null
rm output.good1 2> /dev/null

echo
echo "Running the standard tests for WIT-J."

#-------------------------------------------------------------------------------
# Unit Test
#-------------------------------------------------------------------------------

$JAVA_HOME/bin/java                                                       \
   -cp $WIT_HOME/witj/test/bytecode:$WIT_HOME/witj/java/bytecode/witj.jar \
   -Djava.library.path=$WIT_HOME/witj/cpp/$PLATFORM                       \
   -enableassertions                                                      \
    com.ibm.witj.test.Tester                                              \
    unit-test                                                             \
    2>&1 | cat >> output.new                                              \

echo                                >> output.new
echo "----------------------------" >> output.new
echo " Contents of UnitTester.out " >> output.new
echo "----------------------------" >> output.new
echo                                >> output.new

cat UnitTester.out >> output.new
rm  UnitTester.out

echo                              >> output.new
echo "--------------------------" >> output.new
echo " Contents of copyData.out " >> output.new
echo "--------------------------" >> output.new
echo                              >> output.new

cat copyData.out >> output.new
rm  copyData.out

echo                                >> output.new
echo "----------------------------" >> output.new
echo " Contents of unit-test.data " >> output.new
echo "----------------------------" >> output.new
echo                                >> output.new

cat unit-test.data >> output.new
rm  unit-test.data

echo                                >> output.new
echo "----------------------------" >> output.new
echo " Contents of unit-test.exec " >> output.new
echo "----------------------------" >> output.new
echo                                >> output.new

cat unit-test.exec >> output.new
rm  unit-test.exec

echo                                >> output.new
echo "----------------------------" >> output.new
echo " Contents of unit-test.ship " >> output.new
echo "----------------------------" >> output.new
echo                                >> output.new

cat unit-test.ship >> output.new
rm  unit-test.ship

echo                                >> output.new
echo "----------------------------" >> output.new
echo " Contents of unit-test.crit " >> output.new
echo "----------------------------" >> output.new
echo                                >> output.new

cat unit-test.crit >> output.new
rm  unit-test.crit

echo                               >> output.new
echo "---------------------------" >> output.new
echo " Contents of unit-test.req " >> output.new
echo "---------------------------" >> output.new
echo                               >> output.new

cat unit-test.req >> output.new
rm  unit-test.req

echo                                       >> output.new
echo "-----------------------------------" >> output.new
echo " Contents of wit-j.test.solver.log " >> output.new
echo "-----------------------------------" >> output.new
echo                                       >> output.new

cat wit-j.test.solver.log >> output.new
rm  wit-j.test.solver.log

#-------------------------------------------------------------------------------
# Status Quo Test
#-------------------------------------------------------------------------------

$JAVA_HOME/bin/java                                                       \
   -cp $WIT_HOME/witj/test/bytecode:$WIT_HOME/witj/java/bytecode/witj.jar \
   -Djava.library.path=$WIT_HOME/witj/cpp/$PLATFORM                       \
   -enableassertions                                                      \
    com.ibm.witj.test.Tester                                              \
    status-quo-test                                                       \
    2>&1 | cat >> output.new                                              \

echo                                     >> output.new
echo "---------------------------------" >> output.new
echo " Contents of StatusQuoTester.out " >> output.new
echo "---------------------------------" >> output.new
echo                                     >> output.new

cat StatusQuoTester.out >> output.new
rm  StatusQuoTester.out

#-------------------------------------------------------------------------------
# Compare
#-------------------------------------------------------------------------------

echo "Comparing output.new with output.good1."
echo

cp output.good output.good1

if [ $PLATFORM = "mingw" ] 
then 
    dos2unix output.good1
    dos2unix output.new
fi

diff                                                                     \
   -I "^WIT0097I Watson Implosion Technology ("                          \
   -I "^         Run on "                                                \
   -I "^	at java.util.Collections\$UnmodifiableCollection.clear(" \
   -I "^         Lot size tolerance:"                                    \
   -I "^Clp0006I"                                                        \
   -I "^Clp0000I"                                                        \
   -I "^Coin0511I"                                                       \
                                                                         \
   output.good1                                                           \
   output.new                                                            \
 > output.diff                                                           \

@


1.44
log
@Added space around the = signs in the if statements to make them correct.
@
text
@@


1.43
log
@Added code to handle dos2unix conversion that is needed on the mingw platform.
@
text
@d156 1
a156 1
if [ $PLATFORM="mingw" ] 
@


1.42
log
@WIT-J scripts no longer depend on $USER.
WIT-J scripts now       depend on $WIT_HOME.
WIT-J scripts now       depend on $PLATFORM.
@
text
@d11 1
d37 1
d151 1
a151 1
echo "Comparing output.new with output.good."
d154 8
d171 1
a171 1
   output.good                                                           \
@


1.41
log
@Changed ksh to sh in scripts.
@
text
@a7 3
# Defines the WITJ_PATH directory:
#    All WIT-J files are under this directory.
#
d17 1
a17 1
#      the directory that contains the WIT-J/C++ native library for Linux.
d26 1
a26 1
#      the directory that contains the WIT-J/C++ native library for Linux.
d33 1
a33 3
WITJ_PATH=/home/$USER/u/wit/$USER/witj

cd $WITJ_PATH/test/data
d44 7
a50 7
$JAVA_HOME/bin/java                                                      \
   -classpath $WITJ_PATH/test/bytecode:$WITJ_PATH/java/bytecode/witj.jar \
   -Djava.library.path=$WITJ_PATH/cpp/linux                              \
   -enableassertions                                                     \
    com.ibm.witj.test.Tester                                             \
    unit-test                                                            \
    2>&1 | cat >> output.new                                             \
d128 7
a134 7
$JAVA_HOME/bin/java                                                      \
   -classpath $WITJ_PATH/test/bytecode:$WITJ_PATH/java/bytecode/witj.jar \
   -Djava.library.path=$WITJ_PATH/cpp/linux                              \
   -enableassertions                                                     \
    com.ibm.witj.test.Tester                                             \
    status-quo-test                                                      \
    2>&1 | cat >> output.new                                             \
@


1.40
log
@Revised the diff filter.
@
text
@d1 1
a1 1
#!/bin/ksh
d4 1
a4 1
# Ksh Script test-witj
@


1.39
log
@Moved the UTF-8 logic to a special print method and re-used it.
@
text
@d161 1
a161 1
   -I "^         Lot size tolerance:                          1e-"       \
@


1.38
log
@Trying FileDescriptor.out.
@
text
@a65 9
#cho                                >> output.new
#cho "----------------------------" >> output.new
#cho " Contents of unit-test.utf8 " >> output.new
#cho "----------------------------" >> output.new
#cho                                >> output.new

#at unit-test.utf8 >> output.new
#m  unit-test.utf8

@


1.37
log
@Tried writing UTF-8 to a file.
@
text
@d66 5
a70 5
echo                                >> output.new
echo "----------------------------" >> output.new
echo " Contents of unit-test.utf8 " >> output.new
echo "----------------------------" >> output.new
echo                                >> output.new
d72 2
a73 2
cat unit-test.utf8 >> output.new
rm  unit-test.utf8
@


1.36
log
@Added more filters to the diff.
@
text
@d66 9
@


1.35
log
@Replaced environment variables with command line arguments.
@
text
@d161 5
@


1.34
log
@Re-worked the scripts for building and performing the standard tests of
WIT-J.
@
text
@a10 7
# Specifies the Java Class Path as:
#    The directory that has the bytecode for the WIT-J Tester, and
#    the WIT-J/Java Jar file.
#
# Specifies the Native Library Path as:
#    The directory that contains the WIT-J/C++ native library.
# 
d15 7
a21 1
# Runs the Tester with argument "unit-test", directing all output to output.new.
d24 7
a30 2
# Runs the Tester with argument "status-quo-test", directing all output to
#    output.new.
a37 5
export CLASSPATH=$WITJ_PATH/test/bytecode:$WITJ_PATH/java/bytecode/witj.jar

export LD_LIBRARY_PATH=$WITJ_PATH/cpp/linux


d49 7
a55 5
$JAVA_HOME/bin/java          \
   -enableassertions         \
    com.ibm.witj.test.Tester \
    unit-test                \
    2>&1 | cat >> output.new \
d133 7
a139 5
$JAVA_HOME/bin/java          \
   -enableassertions         \
    com.ibm.witj.test.Tester \
    status-quo-test          \
    2>&1 | cat >> output.new \
@


1.33
log
@Many changes.
@
text
@d7 22
d32 1
a32 1
cd /home/$USER/u/wit/$USER/witj/test/data
d34 8
a41 4
if [ -f output.new ]
then
   rm output.new
fi
d50 5
a54 6
$JAVA_HOME/bin/java                \
   -enableassertions               \
   -Djava.library.path=../bytecode \
   -jar ../bytecode/witj.test.jar  \
    unit-test                      \
    2>&1 | cat >> output.new       \
d132 5
a136 6
$JAVA_HOME/bin/java                \
   -enableassertions               \
   -Djava.library.path=../bytecode \
   -jar ../bytecode/witj.test.jar  \
    status-quo-test                \
    2>&1 | cat >> output.new       \
d154 3
a156 3
diff                                            \
   -I "^WIT0097I Watson Implosion Technology (" \
   -I "^         Run on "                       \
d158 3
a160 3
   output.good                                  \
   output.new                                   \
 > output.diff                                  \
@


1.32
log
@Revised the testing scripts to filter out more in the diffs.
@
text
@d24 6
a29 6
$JAVA_HOME/bin/java                    \
   -jar                                \
   -enableassertions                   \
   -Djava.library.path=../../cpp/linux \
    ../bytecode/witj.test.jar          \
    unit-test 2>&1 | cat >> output.new \
d107 6
a112 6
$JAVA_HOME/bin/java                          \
   -jar                                      \
   -enableassertions                         \
   -Djava.library.path=../../cpp/linux       \
    ../bytecode/witj.test.jar                \
    status-quo-test 2>&1 | cat >> output.new \
@


1.31
log
@Timing test.
@
text
@d133 1
@


1.30
log
@theProblem.copyData (...).
@
text
@d104 1
a104 1
# Recovering Test
@


1.29
log
@Renamed recovering test to status quo test.
@
text
@d40 9
@


1.28
log
@Changed name of recovery test to recovering test.
@
text
@d103 1
a103 1
    recovering-test 2>&1 | cat >> output.new \
d105 5
a109 5
echo                                      >> output.new
echo "----------------------------------" >> output.new
echo " Contents of RecoveringTester.out " >> output.new
echo "----------------------------------" >> output.new
echo                                      >> output.new
d111 2
a112 2
cat RecoveringTester.out >> output.new
rm  RecoveringTester.out
@


1.27
log
@writeCriticalList
@
text
@d95 1
a95 1
# Recovery Test
d98 12
a109 12
$JAVA_HOME/bin/java                        \
   -jar                                    \
   -enableassertions                       \
   -Djava.library.path=../../cpp/linux     \
    ../bytecode/witj.test.jar              \
    recovery-test 2>&1 | cat >> output.new \

echo                                    >> output.new
echo "--------------------------------" >> output.new
echo " Contents of RecoveryTester.out " >> output.new
echo "--------------------------------" >> output.new
echo                                    >> output.new
d111 2
a112 2
cat RecoveryTester.out >> output.new
rm  RecoveryTester.out
@


1.26
log
@Implemented writeExecSched, writeShipSched, and writeReqSched.
@
text
@d67 9
@


1.25
log
@Implemented method writeData of class Problem.
@
text
@d49 27
@


1.24
log
@Split unrecoverable error testing from the rest of the tests.
@
text
@d35 1
d40 18
d73 1
@


1.23
log
@Added a test for ABORTING_ASSERT.
@
text
@a58 10
# Error Tests
#-------------------------------------------------------------------------------

../../scripts/linux/error-test-witj 1 2>&1 | cat >> output.new
../../scripts/linux/error-test-witj 2 2>&1 | cat >> output.new
../../scripts/linux/error-test-witj 3 2>&1 | cat >> output.new
../../scripts/linux/error-test-witj 4 2>&1 | cat >> output.new
../../scripts/linux/error-test-witj 5 2>&1 | cat >> output.new

#-------------------------------------------------------------------------------
@


1.22
log
@Removed an unneeded test case.
@
text
@d66 1
@


1.21
log
@Implemented the recovery test.
@
text
@a65 1
../../scripts/linux/error-test-witj 5 2>&1 | cat >> output.new
@


1.20
log
@Added test for an invalid command to performActionInJava.
@
text
@d20 4
d39 32
a70 29
../../scripts/linux/error-test-witj  1 2>&1 | cat >> output.new
../../scripts/linux/error-test-witj  2 2>&1 | cat >> output.new
../../scripts/linux/error-test-witj  3 2>&1 | cat >> output.new
../../scripts/linux/error-test-witj  4 2>&1 | cat >> output.new
../../scripts/linux/error-test-witj  5 2>&1 | cat >> output.new
../../scripts/linux/error-test-witj  6 2>&1 | cat >> output.new
../../scripts/linux/error-test-witj  7 2>&1 | cat >> output.new
../../scripts/linux/error-test-witj  8 2>&1 | cat >> output.new
../../scripts/linux/error-test-witj  9 2>&1 | cat >> output.new
../../scripts/linux/error-test-witj 10 2>&1 | cat >> output.new
../../scripts/linux/error-test-witj 11 2>&1 | cat >> output.new
../../scripts/linux/error-test-witj 12 2>&1 | cat >> output.new
../../scripts/linux/error-test-witj 13 2>&1 | cat >> output.new
../../scripts/linux/error-test-witj 14 2>&1 | cat >> output.new
../../scripts/linux/error-test-witj 15 2>&1 | cat >> output.new
../../scripts/linux/error-test-witj 16 2>&1 | cat >> output.new
../../scripts/linux/error-test-witj 17 2>&1 | cat >> output.new
../../scripts/linux/error-test-witj 18 2>&1 | cat >> output.new
../../scripts/linux/error-test-witj 19 2>&1 | cat >> output.new
../../scripts/linux/error-test-witj 20 2>&1 | cat >> output.new
../../scripts/linux/error-test-witj 21 2>&1 | cat >> output.new
../../scripts/linux/error-test-witj 22 2>&1 | cat >> output.new
../../scripts/linux/error-test-witj 23 2>&1 | cat >> output.new
../../scripts/linux/error-test-witj 24 2>&1 | cat >> output.new
../../scripts/linux/error-test-witj 25 2>&1 | cat >> output.new
../../scripts/linux/error-test-witj 26 2>&1 | cat >> output.new
../../scripts/linux/error-test-witj 27 2>&1 | cat >> output.new
../../scripts/linux/error-test-witj 28 2>&1 | cat >> output.new
../../scripts/linux/error-test-witj 29 2>&1 | cat >> output.new
@


1.19
log
@Added test of C++ assertion failure.
@
text
@d63 1
@


1.18
log
@Implemented the C++ canonical try block macros.
@
text
@d62 1
@


1.17
log
@Implementated class AssertionErrorException.
@
text
@d60 2
@


1.16
log
@Added code to test WIT-J's response to catching an instance of an
unexpected Throwable class.
@
text
@d59 1
@


1.15
log
@Added an error test for casting Attribute to a different value type.
@
text
@d58 1
@


1.14
log
@Exceptions
@
text
@d57 1
@


1.13
log
@Exceptions
@
text
@d56 1
@


1.12
log
@Removed class Session from the public interface.
@
text
@d54 2
@


1.11
log
@Updated scripts to use the version of Java installed at $JAVA_HOME.
@
text
@d52 2
@


1.10
log
@Added type checking to Attribute type conversion methods.
@
text
@d20 1
a20 1
java                                   \
@


1.9
log
@Used the -I option of the diff command to filter out irrelevant differences.
@
text
@d25 1
a25 1
    u 2>&1 | cat >> output.new         \
d51 1
@


1.8
log
@Default values.
@
text
@d55 7
a61 1
diff output.good output.new > output.diff
@


1.7
log
@Default values.
@
text
@d50 1
@


1.6
log
@Minor revision.
@
text
@d49 1
@


1.5
log
@Minor revision.
@
text
@d27 4
a30 4
echo                            >> output.new
echo "------------------------" >> output.new
echo " Contents of Tester.out " >> output.new
echo "------------------------" >> output.new
@


1.4
log
@Minor revision.
@
text
@a53 2

gedit output.diff &
@


1.3
log
@Fixed a bug in the test-witj script.
@
text
@d18 1
a18 1
echo "Running standard tests for WIT-J."
@


1.2
log
@Fixed a bug in the test-witj script.
@
text
@d35 14
a48 14
error-test-witj  1 2>&1 | cat >> output.new
error-test-witj  2 2>&1 | cat >> output.new
error-test-witj  3 2>&1 | cat >> output.new
error-test-witj  4 2>&1 | cat >> output.new
error-test-witj  5 2>&1 | cat >> output.new
error-test-witj  6 2>&1 | cat >> output.new
error-test-witj  7 2>&1 | cat >> output.new
error-test-witj  8 2>&1 | cat >> output.new
error-test-witj  9 2>&1 | cat >> output.new
error-test-witj 10 2>&1 | cat >> output.new
error-test-witj 11 2>&1 | cat >> output.new
error-test-witj 12 2>&1 | cat >> output.new
error-test-witj 13 2>&1 | cat >> output.new
error-test-witj 14 2>&1 | cat >> output.new
@


1.1
log
@Added a script to perform the complete set of standard tests for WIT-J.
@
text
@d35 14
a48 14
witj-error-test  1 2>&1 | cat >> output.new
witj-error-test  2 2>&1 | cat >> output.new
witj-error-test  3 2>&1 | cat >> output.new
witj-error-test  4 2>&1 | cat >> output.new
witj-error-test  5 2>&1 | cat >> output.new
witj-error-test  6 2>&1 | cat >> output.new
witj-error-test  7 2>&1 | cat >> output.new
witj-error-test  8 2>&1 | cat >> output.new
witj-error-test  9 2>&1 | cat >> output.new
witj-error-test 10 2>&1 | cat >> output.new
witj-error-test 11 2>&1 | cat >> output.new
witj-error-test 12 2>&1 | cat >> output.new
witj-error-test 13 2>&1 | cat >> output.new
witj-error-test 14 2>&1 | cat >> output.new
@

