head	1.24;
access;
symbols
	latest_sce_4_20_20060523:1.17.0.2
	sce_4_20_20060523:1.17
	latest_sce4_20_OSL:1.13.0.2
	sce_4_20_OSL:1.13
	sce_4_05_20040511:1.11
	sce_4_00_20040201:1.11
	nextGenBranch:1.11.0.2
	nextGenRoot:1.11
	sce_3_30_20030627:1.9;
locks; strict;
comment	@# @;


1.24
date	2011.08.25.23.29.49;	author rjw;	state Exp;
branches;
next	1.23;

1.23
date	2010.11.22.22.01.48;	author rjw;	state Exp;
branches;
next	1.22;

1.22
date	2010.11.19.23.24.14;	author rjw;	state Exp;
branches;
next	1.21;

1.21
date	2010.10.12.15.07.16;	author rjw;	state Exp;
branches;
next	1.20;

1.20
date	2010.10.11.21.32.04;	author rjw;	state Exp;
branches;
next	1.19;

1.19
date	2010.05.28.22.07.15;	author rjw;	state Exp;
branches;
next	1.18;

1.18
date	2010.05.24.16.39.15;	author rjw;	state Exp;
branches;
next	1.17;

1.17
date	2006.04.19.22.34.37;	author rjw;	state Exp;
branches;
next	1.16;

1.16
date	2006.04.19.22.14.19;	author rjw;	state Exp;
branches;
next	1.15;

1.15
date	2006.04.19.22.03.13;	author rjw;	state Exp;
branches;
next	1.14;

1.14
date	2006.04.19.19.56.43;	author rjw;	state Exp;
branches;
next	1.13;

1.13
date	2004.12.08.17.22.37;	author fasano;	state Exp;
branches;
next	1.12;

1.12
date	2004.12.07.18.42.11;	author fasano;	state Exp;
branches;
next	1.11;

1.11
date	2003.07.11.15.00.28;	author dpc;	state Exp;
branches;
next	1.10;

1.10
date	2003.07.09.15.40.32;	author rjw;	state Exp;
branches;
next	1.9;

1.9
date	2003.06.30.18.34.30;	author dpc;	state Exp;
branches;
next	1.8;

1.8
date	2003.05.20.15.52.43;	author fasano;	state Exp;
branches;
next	1.7;

1.7
date	2003.05.01.13.35.33;	author fasano;	state Exp;
branches;
next	1.6;

1.6
date	2003.05.01.02.21.35;	author fasano;	state Exp;
branches;
next	1.5;

1.5
date	2003.04.30.15.22.33;	author fasano;	state Exp;
branches;
next	1.4;

1.4
date	2003.04.28.19.51.42;	author fasano;	state Exp;
branches;
next	1.3;

1.3
date	2003.04.28.18.47.25;	author fasano;	state Exp;
branches;
next	1.2;

1.2
date	2003.04.28.18.14.33;	author fasano;	state Exp;
branches;
next	1.1;

1.1
date	2003.04.28.17.44.48;	author dpc;	state Exp;
branches;
next	;


desc
@@


1.24
log
@Revisions for the removal of COIN from WIT.
@
text
@# A new Linux makefile using Power machines makefiles as a template 

# $Source: 
# $Revision: 
# $Id: 

# needed when lots of data will be in memory
big_data =

# $Source: /gsa/yktgsa/projects/w/wit/devbase/config/p_linux.mk,v $
# $Revision: 1.23 $
# $Id: p_linux.mk,v 1.23 2010/11/22 22:01:48 rjw Exp $

# Set variables that depend on the machine (hence Operating
# System) being compiled or linked on.

# ds_static_link_flags is only for use in setting other variables in this file

#ds_static_link_flags	= -lCns -bnso -bI:/lib/syscalls.exp -lpthreads
ds_static_link_flags	= # -L/usr/lib/gcc-lib/i386-redhat-linux/3.2.2

# ds_make_depend_flags is used to tell makedepend where to find header files.
# makedepend knows where C header files are, but not C++ ones.
# The -I/ is needed because makedepend can't find files with explicit paths
# (such as /usr/include/stdio.h) otherwise.
# The setting of this flag was moved earlier in this file so it is done
# conditionally based on the level of the OS

#ds_make_depend_flags	= -I/usr/lpp/xlC/include -I/
ds_make_depend_flags	= 
#make_lib			= $(DS_DIR)bin/dsMakeLib -s
make_lib			=  ar

# sep is the directory-name seperator character (Unix: /, DOS: \)
sep			= /

# obj_suffix is the suffix for object files (Unix: o, DOS: obj)
obj_suffix		= o

# cxx_suffix is the suffix for C Plus Plus files (Unix: C, DOS: ?)
cxx_suffix		= C

# lib_suffix is the suffix for libraries/archives
lib_suffix		= a

# exe_ending is the ending string for executables (Unix: nothing, DOS: .exe)
# "exe_ending" and "obj_suffix" have different words at the end because
# exe_ending includes the seraration character ("." on DOS) if there is one.

exe_ending		= 

#ds_comp_std_flags	= -qflag=i:i -qhalt=w







ds_comp_debug_flags	= -g -DDEBUG -DDEVELOPMENT=1 -DERR_TRACEALL
ds_comp_slow_flags     =    -DDEVELOPMENT=1
ds_comp_profile_flags  = -O -DDEVELOPMENT=1 -g -pg
ds_comp_fast_flags     = -O -DDEVELOPMENT=1
ds_comp_demo_flags     = -O                 -DDEMO -DTIMEBOMB
ds_comp_beta_flags     = -O
ds_comp_released_flags = -O

# Notes:
# Profiling
#    Note that '-Q!' is used because some long subroutines
#    (like commit in heuristic.c) were not showing up in 
#    gprof output (because they were being inlined).
# Inline fuctions and xlC
#    If you want xlC to inline functions declared inline, you have
#    to give it the -Q flag.
# Big listings, if you want them, use
ds_comp_listing_flags = -qsource -qxref=full -qattr -qlist -qlistopt

# Flags for ar
ds_ar_update_flags	= vru

# needed when linking ND OI GUI staticly:
ds_static_OI_flags	= 


# Flags for linker
ds_link_debug_flags	= $(ds_static_link_flags) $(big_data) -g 
ds_link_profile_flags	= $(big_data) -lg -pg 
ds_link_slow_flags	= $(big_data)
ds_link_fast_flags	= $(big_data)
ds_link_demo_flags      = $(ds_static_link_flags) $(ds_static_OI_flags) \
			  $(ds_static_fortran_flags) $(big_data)
ds_link_beta_flags      = $(ds_static_link_flags) $(ds_static_OI_flags) \
			  $(ds_static_fortran_flags) $(big_data)
ds_link_released_flags	= $(ds_static_link_flags) $(ds_static_OI_flags) \
			  $(ds_static_fortran_flags) $(big_data) 

LOADLIBES += -lstdc++

ds_link_reloc_flags	= -g -r

ds_math_lib		= -lm

# Executables for generic commands
# Using GNU-make defaults for
# RM - the command to remove a file
# AR - the command for maintaining libraries and archives
CXX			= xlC
#CC			= xlc
CC			= xlC
reloc_ld		= xlC
AR			= ar
RANLIB			= ranlib
# Command to make a library (Unix .a file, PC DLL file)
# definition of make_lib was moved earlier in this file so it
# can be done conditinally based on the level of the OS
# make_lib		= $(DS_DIR)bin/dsMakeLib -s


#====================================END OF PASTED POWER CONFIG FILE

ds_root_dir             = ../../..

ds_comp_arch_flags	= 
ds_fortran_lib	=
ds_link_std_flags	=

#ds_static_OI_flags     =

ds_comp_beta_flags      =  -O
ds_comp_released_flags  =  -O
#ds_comp_beta_flags     =
#ds_comp_released_flags =


CC                    = /usr/bin/gcc
CXX                   = /usr/bin/g++
reloc_ld              = /usr/bin/gcc
#CC                    = /usr/local/gcc-3.2.3/bin/gcc
#CXX                   = /usr/local/gcc-3.2.3/bin/g++
#reloc_ld              = ld -L /usr/lib/gcc-lib/i386-redhat-linux/3.2.2 -rpath /usr/lib/gcc-lib/i386-redhat-linux/3.2.2
reloc_ld               = ld
LEX                   = flex

# change compile flags so informational and warning msg are OK


ds_comp_std_flags	= 


# GNU dummy include
dummyInclude = -I ../linux/dummyHeaders

#-------------------------------------------------------------------------------
# Macros to facilitate building WIT and WIT application programs when CPLEX is
# to be embedded into WIT.
# See ds.mk for the meaning of these macros.
#-------------------------------------------------------------------------------

ds_cplex_lib_subdir   = x86_sles10_4.1/static_pic

ds_cplex_as_dll       = NO

ds_posix_threads_flag = -pthread
@


1.23
log
@WIT with CPLEX
@
text
@d10 3
a12 3
# $Source: /u/wit/devbase/config/p_linux.mk,v $
# $Revision: 1.22 $
# $Id: p_linux.mk,v 1.22 2010/11/19 23:24:14 rjw Exp $
a128 1
ds_coin_libs            =  
@


1.22
log
@CPLEX
@
text
@d11 2
a12 2
# $Revision: 1.21 $
# $Id: p_linux.mk,v 1.21 2010/10/12 15:07:16 rjw Exp $
d158 1
a161 3
                        #
                        # The subdirectory in which the CPLEX library can be
                        # found on this platform.
a163 3
                        #
                        # Indicates that CPLEX is not to be linked in as a DLL
                        # on this platform.
a165 4
                        #
                        # The flag to link in POSIX threads support.
                        # Needed when building an executable that links in CPLEX
                        # on this platform.
@


1.21
log
@CPLEX
@
text
@d11 2
a12 2
# $Revision: 1.20 $
# $Id: p_linux.mk,v 1.20 2010/10/11 21:32:04 rjw Exp $
d154 21
@


1.20
log
@Added ds_pthread_flag.
@
text
@d11 2
a12 2
# $Revision: 1.19 $
# $Id: p_linux.mk,v 1.19 2010/05/28 22:07:15 rjw Exp $
a153 5


# Flag for multithreading support using the POSIX threads library:
#
ds_pthread_flag = -pthread
@


1.19
log
@Removing the DISGUISE logic from WIT.
@
text
@d11 2
a12 2
# $Revision: 1.18 $
# $Id: p_linux.mk,v 1.18 2010/05/24 16:39:15 rjw Exp $
d154 5
a158 1
# END COPIED TEXT
@


1.18
log
@Removed RWDEBUG.
@
text
@d11 2
a12 2
# $Revision: 1.17 $
# $Id: p_linux.mk,v 1.17 2006/04/19 22:34:37 rjw Exp $
d60 7
a66 7
ds_comp_debug_flags	= -g -DDEBUG -DDEVELOPMENT=1 -DDISGUISE=0 -DERR_TRACEALL
ds_comp_slow_flags     =    -DDEVELOPMENT=1 -DDISGUISE=0
ds_comp_profile_flags  = -O -DDEVELOPMENT=1 -DDISGUISE=0 -g -pg
ds_comp_fast_flags     = -O -DDEVELOPMENT=1 -DDISGUISE=0
ds_comp_demo_flags     = -O                 -DDISGUISE=1 -DDEMO -DTIMEBOMB
ds_comp_beta_flags     = -O                 -DDISGUISE=1
ds_comp_released_flags = -O                 -DDISGUISE=1
d128 2
a129 2
#ds_static_OI_flags =
ds_coin_libs         =  
d131 4
a134 4
ds_comp_beta_flags      =  -O                    -DDISGUISE=1
ds_comp_released_flags  =  -O                     -DDISGUISE=1
#ds_comp_beta_flags      =                      -DDISGUISE=1
#ds_comp_released_flags  =                      -DDISGUISE=1
@


1.17
log
@Removed osl_library_dir.
@
text
@d11 2
a12 2
# $Revision: 1.16 $
# $Id: p_linux.mk,v 1.16 2006/04/19 22:14:19 rjw Exp $
d60 1
a60 3
# RWDEBUG is used by rogue wave and *must* correspond
# the the flags that were used when compiling to make the lib (.a) file
ds_comp_debug_flags	= -g -DDEBUG -DRWDEBUG -DDEVELOPMENT=1 -DDISGUISE=0 -DERR_TRACEALL
@


1.16
log
@Removed osl_include_dir.
@
text
@d11 2
a12 2
# $Revision: 1.15 $
# $Id: p_linux.mk,v 1.15 2006/04/19 22:03:13 rjw Exp $
a105 2
osl_library_dir		= 

@


1.15
log
@Removed ds_osl_lib.
@
text
@d11 2
a12 2
# $Revision: 1.14 $
# $Id: p_linux.mk,v 1.14 2006/04/19 19:56:43 rjw Exp $
a106 1
osl_include_dir		= /usr/lpp/osl/ekkincf
@


1.14
log
@More removal of OSL items from the makefiles.
@
text
@d11 2
a12 2
# $Revision: 1.13 $
# $Id: p_linux.mk,v 1.13 2004/12/08 17:22:37 fasano Exp $
a133 1
ds_osl_lib         =  -losl
@


1.13
log
@defined lexer on linux to be flex executable
@
text
@d11 2
a12 2
# $Revision: 1.12 $
# $Id: p_linux.mk,v 1.12 2004/12/07 18:42:11 fasano Exp $
d127 1
a127 1

@


1.12
log
@Modified to define LOADLIBES so that the make file will work on cygwin
@
text
@d11 2
a12 2
# $Revision: 1.11 $
# $Id: p_linux.mk,v 1.11 2003/07/11 15:00:28 dpc Exp $
d150 1
@


1.11
log
@Removed reference to lex compatibility
@
text
@d11 2
a12 2
# $Revision: 1.10 $
# $Id: p_linux.mk,v 1.10 2003/07/09 15:40:32 rjw Exp $
d89 4
a92 4
ds_link_debug_flags	= $(ds_static_link_flags) $(big_data) -g -lstdc++ 
ds_link_profile_flags	= $(big_data) -lg -pg -lstdc++ 
ds_link_slow_flags	= $(big_data) -lstdc++ 
ds_link_fast_flags	= $(big_data) -lstdc++ 
d94 1
a94 1
			  $(ds_static_fortran_flags) $(big_data) -lstdc++ 
d96 1
a96 1
			  $(ds_static_fortran_flags) $(big_data) -lstdc++ 
d98 3
a100 1
			  $(ds_static_fortran_flags) $(big_data) -lstdc++ 
@


1.10
log
@Removed the -qmaxmem=8192 flag, which was not being recognized by the g++
compiler and seems not to be needed on Linux.
@
text
@d11 2
a12 2
# $Revision: 1.9 $
# $Id: p_linux.mk,v 1.9 2003/06/30 18:34:30 dpc Exp $
d146 2
a147 1
reloc_ld              = ld -L /usr/lib/gcc-lib/i386-redhat-linux/3.2.2 -rpath /usr/lib/gcc-lib/i386-redhat-linux/3.2.2
d152 1
a152 4
ds_comp_std_flags	= -w -Wno-non-template-friend 

# GNU Lex compatibility flag
lex_comp_flag		= -l
@


1.9
log
@Added dummyHeaders for GNU makedepend problem.
@
text
@d11 2
a12 2
# $Revision: 1.8 $
# $Id: p_linux.mk,v 1.8 2003/05/20 15:52:43 fasano Exp $
d63 6
a68 6
ds_comp_slow_flags 	= -DDEVELOPMENT=1 -DDISGUISE=0
ds_comp_profile_flags = -O -qmaxmem=8192 -DDEVELOPMENT=1 -DDISGUISE=0 -g -pg
ds_comp_fast_flags = -O -qmaxmem=8192  -DDEVELOPMENT=1 -DDISGUISE=0
ds_comp_demo_flags = -O -qmaxmem=8192                  -DDISGUISE=1 -DDEMO -DTIMEBOMB
ds_comp_beta_flags= -O -qmaxmem=8192                  -DDISGUISE=1
ds_comp_released_flags  = -O -qmaxmem=8192                  -DDISGUISE=1
@


1.8
log
@added symbol:  ds_coin_libs for building with coin
@
text
@d11 2
a12 2
# $Revision: 1.7 $
# $Id: p_linux.mk,v 1.7 2003/05/01 13:35:33 fasano Exp $
d20 1
a20 1
ds_static_link_flags	= # -L/usr/lib/gcc-lib/i386-redhat-linux/2.96
d146 1
a146 1
reloc_ld              = ld -L /usr/lib/gcc-lib/i386-redhat-linux/2.96 -rpath /usr/lib/gcc-lib/i386-redhat-linux/2.96
d156 3
@


1.7
log
@modifed to build released
@
text
@d11 2
a12 2
# $Revision: 1.6 $
# $Id: p_linux.mk,v 1.6 2003/05/01 02:21:35 fasano Exp $
d133 1
@


1.6
log
@changes to get wit executable to link
@
text
@d11 2
a12 2
# $Revision: 1.5 $
# $Id: p_linux.mk,v 1.5 2003/04/30 15:22:33 fasano Exp $
d64 5
a68 5
ds_comp_profile_flags = -O -Q -qmaxmem=8192 -DDEVELOPMENT=1 -DDISGUISE=0 -g -pg
ds_comp_fast_flags = -O -Q -qmaxmem=8192  -DDEVELOPMENT=1 -DDISGUISE=0
ds_comp_demo_flags = -O -Q -qmaxmem=8192                  -DDISGUISE=1 -DDEMO -DTIMEBOMB
ds_comp_beta_flags= -O -Q -qmaxmem=8192                  -DDISGUISE=1
ds_comp_released_flags  = -O -Q -qmaxmem=8192                  -DDISGUISE=1
d85 1
a85 1
ds_static_OI_flags	= -lIM -liconv -lsm -bI:/usr/lpp/X11/bin/smt.exp -lX11
d134 4
a137 4
ds_comp_beta_flags      =  -O -Q                    -DDISGUISE=1
ds_comp_released_flags  =  -O -Q                    -DDISGUISE=1
#ds_comp_beta_flags      =  -Q                    -DDISGUISE=1
#ds_comp_released_flags  =  -Q                    -DDISGUISE=1
@


1.5
log
@libwit.a is now building with this change.
wit executable is not yet building correctly
@
text
@d11 2
a12 2
# $Revision: 1.4 $
# $Id: p_linux.mk,v 1.4 2003/04/28 19:51:42 fasano Exp $
d20 1
a20 1
ds_static_link_flags	= -L/usr/lib/gcc-lib/i386-redhat-linux/2.96
d143 3
@


1.4
log
@removed -lfl because only wit needs it.
@
text
@d11 2
a12 2
# $Revision: 1.3 $
# $Id: p_linux.mk,v 1.3 2003/04/28 18:47:25 fasano Exp $
a102 2
#ds_osl_lib		= /home/wit/linux/lib/libosl.so
ds_osl_lib		= xxxx$(OSL_ROOT_DIR)linux/lib/libosl.so
d132 1
a132 1
ds_osl_lib         =  /home/wit/linux/lib/libosl.so
@


1.3
log
@added linux specific flex link option
@
text
@d11 2
a12 2
# $Revision: 1.2 $
# $Id: p_linux.mk,v 1.2 2003/04/28 18:14:33 fasano Exp $
d89 4
a92 4
ds_link_debug_flags	= $(ds_static_link_flags) $(big_data) -g -lstdc++ -lfl
ds_link_profile_flags	= $(big_data) -lg -pg -lstdc++ -lfl
ds_link_slow_flags	= $(big_data) -lstdc++ -lfl
ds_link_fast_flags	= $(big_data) -lstdc++ -lfl
d94 1
a94 1
			  $(ds_static_fortran_flags) $(big_data) -lstdc++ -lfl
d96 1
a96 1
			  $(ds_static_fortran_flags) $(big_data) -lstdc++ -lfl
d98 1
a98 1
			  $(ds_static_fortran_flags) $(big_data) -lstdc++ -lfl
d103 2
a104 1
ds_osl_lib		= /home/wit/linux/lib/libosl.so
@


1.2
log
@added -lstdc++ library to link
@
text
@d11 2
a12 2
# $Revision: 1.1 $
# $Id: p_linux.mk,v 1.1 2003/04/28 17:44:48 dpc Exp $
d89 4
a92 4
ds_link_debug_flags	= $(ds_static_link_flags) $(big_data) -g -lstdc++
ds_link_profile_flags	= $(big_data) -lg -pg -lstdc++
ds_link_slow_flags	= $(big_data) -lstdc++
ds_link_fast_flags	= $(big_data) -lstdc++
d94 1
a94 1
			  $(ds_static_fortran_flags) $(big_data) -lstdc++
d96 1
a96 1
			  $(ds_static_fortran_flags) $(big_data) -lstdc++
d98 1
a98 1
			  $(ds_static_fortran_flags) $(big_data) -lstdc++
@


1.1
log
@defined lex_comp_flag
@
text
@d10 3
a12 3
# $Source: /u/wit/devbase/config/powerGen.mk,v $
# $Revision: 1.4 $
# $Id: powerGen.mk,v 1.4 2002/08/15 15:45:13 rjw Exp $
d89 4
a92 4
ds_link_debug_flags	= $(ds_static_link_flags) $(big_data) -g 
ds_link_profile_flags	= $(big_data) -lg -pg
ds_link_slow_flags	= $(big_data)
ds_link_fast_flags	= $(big_data)
d94 1
a94 1
			  $(ds_static_fortran_flags) $(big_data)
d96 1
a96 1
			  $(ds_static_fortran_flags) $(big_data)
d98 1
a98 1
			  $(ds_static_fortran_flags) $(big_data)
@

