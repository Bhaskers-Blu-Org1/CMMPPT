head	1.19;
access;
symbols;
locks; strict;
comment	@ * @;


1.19
date	2011.08.25.23.30.11;	author rjw;	state Exp;
branches;
next	1.18;

1.18
date	2010.11.04.20.32.46;	author rjw;	state Exp;
branches;
next	1.17;

1.17
date	2008.12.08.15.54.14;	author rjw;	state Exp;
branches;
next	1.16;

1.16
date	2007.07.16.18.08.52;	author rjw;	state Exp;
branches;
next	1.15;

1.15
date	2006.12.28.21.03.32;	author rjw;	state Exp;
branches;
next	1.14;

1.14
date	2006.12.26.22.24.25;	author rjw;	state Exp;
branches;
next	1.13;

1.13
date	2006.12.19.19.27.32;	author rjw;	state Exp;
branches;
next	1.12;

1.12
date	2006.12.06.19.53.07;	author rjw;	state Exp;
branches;
next	1.11;

1.11
date	2006.12.01.21.36.54;	author rjw;	state Exp;
branches;
next	1.10;

1.10
date	2006.12.01.19.55.41;	author rjw;	state Exp;
branches;
next	1.9;

1.9
date	2006.11.17.20.22.31;	author rjw;	state Exp;
branches;
next	1.8;

1.8
date	2006.11.17.19.51.06;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2006.11.17.16.58.03;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2006.11.16.22.32.21;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2006.10.19.21.54.43;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2006.10.13.20.47.48;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2006.10.13.16.06.41;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2006.10.12.20.48.50;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2006.10.12.19.44.20;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.19
log
@Revisions for the removal of COIN from WIT.
@
text
@//------------------------------------------------------------------------------
// Source File: "extOptTest.C".
//
// A WIT application program whose purpose is to test WIT's "external optimizing
// implosion" capability.
//------------------------------------------------------------------------------

#include <wit.h>

#include <OsiClpSolverInterface.hpp>
#include <CbcModel.hpp>

#include <vector>

#include <stdlib.h>
#include <stdio.h>

//------------------------------------------------------------------------------
// Class ExtOptTester
//------------------------------------------------------------------------------

class ExtOptTester
   {
   public:

   //---------------------------------------------------------------------------
   // Public Member Functions
   //---------------------------------------------------------------------------

    ExtOptTester ();
   ~ExtOptTester ();

   void testExtOpt ();

   private:

   //---------------------------------------------------------------------------
   // Private Member Functions
   //---------------------------------------------------------------------------

   void buildProblem (WitRun *);

   void callCoin ();

   void prtRemFile (const char *);

   //---------------------------------------------------------------------------
   // Private Member Data
   //---------------------------------------------------------------------------

   int      numcols_;
   int      numrows_;
   int *    start_;
   int *    index_;
   double * value_;
   double * collb_;
   double * colub_;
   double * obj_;
   double * rowlb_;
   double * rowub_;
   int *    intIndices_;
   int      nIntVars_;

   std::vector <double> colsol_;
   };

//------------------------------------------------------------------------------
// Main Program
//------------------------------------------------------------------------------

int main ()
   {
   ExtOptTester theTester;

   theTester.testExtOpt ();
   }

//------------------------------------------------------------------------------
// Implementation of class ExtOptTester
//------------------------------------------------------------------------------

ExtOptTester::ExtOptTester ()
   {
   }

//------------------------------------------------------------------------------

ExtOptTester::~ExtOptTester ()
   {
   }

//------------------------------------------------------------------------------

void ExtOptTester::testExtOpt ()
   {
   WitRun * theWitRun;
   int      scrapVarIndex;

   witNewRun    (& theWitRun);
   buildProblem   (theWitRun);
   witStartExtOpt (theWitRun);

   witGetExtOptLpProbDbl (
        theWitRun,
      & numcols_,
      & numrows_,
      & start_,
      & index_,
      & value_,
      & collb_,
      & colub_,
      & obj_,
      & rowlb_,
      & rowub_);

   witGetExtOptIntVarIndices (
        theWitRun,
      & intIndices_,
      & nIntVars_);

   witGetPartScrapVarIndex (theWitRun, "C", 0, & scrapVarIndex);

   collb_[scrapVarIndex] = 4.0;

   callCoin ();

   free (start_);
   free (index_);
   free (value_);
   free (collb_);
   free (colub_);
   free (obj_);
   free (rowlb_);
   free (rowub_);
   free (intIndices_);

   witSetExtOptSolnDbl (theWitRun, & colsol_[0]);

   witFinishExtOpt     (theWitRun);

   witWriteExecSched   (theWitRun, "exec.out", WitBSV);
   prtRemFile                     ("exec.out");

   witWriteShipSched   (theWitRun, "ship.out", WitBSV);
   prtRemFile                     ("ship.out");

   witDeleteRun        (theWitRun);
   }

//------------------------------------------------------------------------------

void ExtOptTester::buildProblem (WitRun * theWitRun)
   {
   float consRateD0 [] =  {2.0};

   float supplyVolA [] = {79.0};

   float demandVolF [] = {30.0};
   float demandVolG [] = {60.0};

   float shipRewardF[] =  {3.0};
   float shipRewardG[] =  {2.0};

   witInitialize              (theWitRun);

   witSetNPeriods             (theWitRun, 1);
   witSetMipMode              (theWitRun, WitTRUE);

   witAddPart                 (theWitRun, "A",      WitMATERIAL);
   witAddPart                 (theWitRun, "B",      WitMATERIAL);
   witAddPart                 (theWitRun, "C",      WitMATERIAL);

   witAddOperation            (theWitRun, "D");
   witAddOperation            (theWitRun, "E");

   witAddBomEntry             (theWitRun, "D", "A");
   witAddBomEntry             (theWitRun, "E", "A");

   witAddBopEntry             (theWitRun, "D", "B");
   witAddBopEntry             (theWitRun, "E", "C");

   witAddDemand               (theWitRun, "B", "F");
   witAddDemand               (theWitRun, "C", "G");

   witSetBomEntryConsRate     (theWitRun, "D",  0,  consRateD0);

   witSetOperationIntExecVols (theWitRun, "D",      WitTRUE);
   witSetOperationIntExecVols (theWitRun, "E",      WitTRUE);

   witSetPartSupplyVol        (theWitRun, "A",      supplyVolA);

   witSetDemandDemandVol      (theWitRun, "B", "F", demandVolF);
   witSetDemandDemandVol      (theWitRun, "C", "G", demandVolG);

   witSetDemandShipReward     (theWitRun, "B", "F", shipRewardF);
   witSetDemandShipReward     (theWitRun, "C", "G", shipRewardG);
   }

//------------------------------------------------------------------------------

void ExtOptTester::callCoin ()
   {
   OsiSolverInterface * theOsiSI;
   CbcModel *           theCbcModel;
   FILE *               coinLogFile;
   CoinMessageHandler * theCMH;
   const double *       colsolLoc;

   //---------------------------------------------------------------------------

   theOsiSI    = new OsiClpSolverInterface;

   theCbcModel = new CbcModel (* theOsiSI);

   delete theOsiSI;

   theOsiSI    = theCbcModel->solver ();

   //---------------------------------------------------------------------------

   coinLogFile = fopen ("coin.log", "w");

   theCMH      = new CoinMessageHandler (coinLogFile);

   theCMH     ->setLogLevel (4);

   theCbcModel->passInMessageHandler (theCMH);
   theOsiSI   ->passInMessageHandler (theCMH);

   //---------------------------------------------------------------------------

   theOsiSI->
      loadProblem (
         numcols_,
         numrows_,
         start_,
         index_,
         value_,
         collb_,
         colub_,
         obj_,
         rowlb_,
         rowub_);

   theOsiSI->setInteger (intIndices_, nIntVars_);

   theOsiSI->setObjSense (-1.0);

   theOsiSI->writeMps ("app-opt");

   prtRemFile         ("app-opt.mps");

   theCbcModel->branchAndBound ();

   colsolLoc = theCbcModel->getColSolution ();

   colsol_.assign (colsolLoc, colsolLoc + numcols_);

   //---------------------------------------------------------------------------

   delete theCbcModel;
   delete theCMH;

   theOsiSI    = NULL;
   theCbcModel = NULL;
   theCMH      = NULL;

   fclose (coinLogFile);

   prtRemFile ("coin.log");
   }

//------------------------------------------------------------------------------

void ExtOptTester::prtRemFile (const char * fileName)
   {
   char command[101] = "";

   printf (
      "\n"
      "------------------------------\n"
      "File \"%s\":\n"
      "------------------------------\n"
      "\n",
      fileName);

   fflush (stdout);

   sprintf (command, "cat %s", fileName);

   system (command);

   printf (
      "\n"
      "------------------------------\n"
      "End of file \"%s\".\n"
      "------------------------------\n"
      "\n",
      fileName);

   remove (fileName);
   }
@


1.18
log
@CPLEX
@
text
@a167 1
   witSetCoinSelected         (theWitRun, WitFALSE);
@


1.17
log
@Removed some calls that set mesgFileAccessMode to "w".
@
text
@d168 1
@


1.16
log
@Changed the message file open mode to "w".
@
text
@d99 3
a101 7
   witNewRun              (& theWitRun);

   witSetMesgFileAccessMode (theWitRun, WitFALSE, "w");

   buildProblem             (theWitRun);

   witStartExtOpt           (theWitRun);
@


1.15
log
@External opt implosion.
@
text
@d99 1
a99 1
   witNewRun    (& theWitRun);
d101 1
a101 1
   buildProblem   (theWitRun);
d103 3
a105 1
   witStartExtOpt (theWitRun);
@


1.14
log
@External opt implosion.
@
text
@d118 1
a118 1
   witGetExtOptIntVars (
@


1.13
log
@External Optimizing Implosion
@
text
@d62 1
a62 1
   int      numIntCols_;
d118 1
a118 1
   witGetExtOptIntIndices (
d121 1
a121 1
      & numIntCols_);
d139 1
a139 1
   witSetExtOptColSolDbl (theWitRun, & colsol_[0]);
d141 1
a141 1
   witFinishExtOpt       (theWitRun);
d143 2
a144 2
   witWriteExecSched     (theWitRun, "exec.out", WitBSV);
   prtRemFile                       ("exec.out");
d146 2
a147 2
   witWriteShipSched     (theWitRun, "ship.out", WitBSV);
   prtRemFile                       ("ship.out");
d149 1
a149 1
   witDeleteRun          (theWitRun);
d247 1
a247 1
   theOsiSI->setInteger (intIndices_, numIntCols_);
@


1.12
log
@external opt implosion.
@
text
@a62 1
   double   objSense_;
d105 1
a105 1
   witGetExtOptProbDbl (
d116 4
a119 1
      & rowub_,
d121 1
a121 2
      & numIntCols_,
      & objSense_);
d249 1
a249 1
   theOsiSI->setObjSense (objSense_);
@


1.11
log
@External opt implosion.
@
text
@d168 1
a168 1
   witSetAllowIntCons         (theWitRun, WitTRUE);
@


1.10
log
@External opt implosion.
@
text
@d168 1
a168 1
   witSetEnforceIntCons       (theWitRun, WitTRUE);
@


1.9
log
@External opt implosion.
@
text
@d168 1
@


1.8
log
@external opt implosion.
@
text
@d169 3
a171 3
   witAddPart                 (theWitRun, "A",      WitCAPACITY);
   witAddPart                 (theWitRun, "B",      WitCAPACITY);
   witAddPart                 (theWitRun, "C",      WitCAPACITY);
@


1.7
log
@External opt implosion.
@
text
@d98 1
d122 4
d142 6
@


1.6
log
@External opt implosion.
@
text
@d41 1
a41 1
   void buildWitRun (WitRun * theWitRun);
d45 1
a45 1
   void prtRemFile (const char * fileName);
d101 1
a101 1
   buildWitRun    (theWitRun);
d142 1
a142 1
void ExtOptTester::buildWitRun (WitRun * theWitRun)
@


1.5
log
@External opt implosion.
@
text
@d4 1
a4 1
// A WIT application program whose purpose is to test WIT's "assisted optimizing
@


1.4
log
@External opt implosion.
@
text
@d105 1
a105 1
   witGetExtOptProblemDbl (
d133 1
a133 1
   witSetExtOptColSolutionDbl (theWitRun, & colsol_[0]);
d135 1
a135 1
   witFinishExtOpt            (theWitRun);
d137 1
a137 1
   witDeleteRun               (theWitRun);
@


1.3
log
@External opt implosion.
@
text
@d13 2
d64 2
d105 1
a105 1
   witGetOptProblemDbl (
d133 3
a135 1
   witFinishExtOpt (theWitRun);
d137 1
a137 1
   witDeleteRun    (theWitRun);
d196 1
d244 4
@


1.2
log
@External opt implosion.
@
text
@d11 1
d186 4
a189 3
   FILE *                  coinMsgFile;
   CoinMessageHandler *    theCMH;
   OsiClpSolverInterface * theSI;
d191 5
a195 1
   coinMsgFile = fopen ("coin.log", "w");
d197 5
a201 1
   theCMH      = new CoinMessageHandler (coinMsgFile);
d203 1
a203 1
   theCMH->setLogLevel (4);
d205 1
a205 1
   theSI   = new OsiClpSolverInterface;
d207 1
a207 1
   theSI->passInMessageHandler (theCMH);
d209 2
a210 1
   theSI->getModelPtr ()->passInMessageHandler (theCMH);
d212 3
a214 1
   theSI->
d227 1
a227 1
   theSI->setObjSense (objSense_);
d229 1
a229 1
   theSI->writeMps ("app-opt");
d231 1
a231 1
   prtRemFile ("app-opt.mps");
d233 1
a233 1
   theSI->getModelPtr ()->dual ();
d235 1
a235 1
   delete theSI;
d237 3
d242 5
a246 1
   fclose (coinMsgFile);
@


1.1
log
@External opt implosion.
@
text
@d139 1
a139 1
   float supplyVolA [] = {80.0};
d147 1
a147 1
   witInitialize          (theWitRun);
d149 1
a149 1
   witSetNPeriods         (theWitRun, 1);
d151 3
a153 3
   witAddPart             (theWitRun, "A",      WitCAPACITY);
   witAddPart             (theWitRun, "B",      WitCAPACITY);
   witAddPart             (theWitRun, "C",      WitCAPACITY);
d155 2
a156 2
   witAddOperation        (theWitRun, "D");
   witAddOperation        (theWitRun, "E");
d158 2
a159 2
   witAddBomEntry         (theWitRun, "D", "A");
   witAddBomEntry         (theWitRun, "E", "A");
d161 2
a162 2
   witAddBopEntry         (theWitRun, "D", "B");
   witAddBopEntry         (theWitRun, "E", "C");
d164 2
a165 2
   witAddDemand           (theWitRun, "B", "F");
   witAddDemand           (theWitRun, "C", "G");
d167 1
a167 1
   witSetBomEntryConsRate (theWitRun, "D",  0,  consRateD0);
d169 2
a170 1
   witSetPartSupplyVol    (theWitRun, "A",      supplyVolA);
d172 1
a172 2
   witSetDemandDemandVol  (theWitRun, "B", "F", demandVolF);
   witSetDemandDemandVol  (theWitRun, "C", "G", demandVolG);
d174 5
a178 2
   witSetDemandShipReward (theWitRun, "B", "F", shipRewardF);
   witSetDemandShipReward (theWitRun, "C", "G", shipRewardG);
@

