head	1.6;
access;
symbols;
locks; strict;
comment	@# @;


1.6
date	2011.10.07.23.01.53;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2011.09.09.21.17.38;	author rjw;	state dead;
branches;
next	1.4;

1.4
date	2011.09.09.16.09.14;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2011.09.08.23.04.31;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2011.09.08.22.43.38;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2011.08.11.23.41.49;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.6
log
@TemporalVariable ==> VariableByPeriod, etc.
@
text
@
////////////////////////////////////////////////////////////////////////////////
// WIT-M Source File DoubleByPeriod.Java.
////////////////////////////////////////////////////////////////////////////////

package com.ibm.witm;

import static com.ibm.witm.Utility.rejNull;

/*******************************************************************************
 * A DoubleByPeriod is a VariableByPeriod {@@literal<Double>}.<br>
 * This class has no factory method; instances of it are constructed as needed
 * by WIT-M.
 *******************************************************************************
 */
public final class DoubleByPeriod extends VariableByPeriod <Double>
{
////////////////////////////////////////////////////////////////////////////////
// Private Non-Static Fields
////////////////////////////////////////////////////////////////////////////////

/*******************************************************************************
 * myDoubleArray[thePer.getIndex ()] is the double stored by this DoubleByPeriod
 * for thePer.
 *******************************************************************************
 */
   private final double[] myDoubleArray;
   
////////////////////////////////////////////////////////////////////////////////
// Package Internal Constructor
////////////////////////////////////////////////////////////////////////////////
   
   DoubleByPeriod (PeriodMgr thePerMgr)
      {
      super (thePerMgr);
      
      myDoubleArray = new double[thePerMgr.getAllPeriods ().size ()];
      }

////////////////////////////////////////////////////////////////////////////////
// Package Internal Non-Static Methods
////////////////////////////////////////////////////////////////////////////////
   
/*******************************************************************************
 * {@@inheritDoc}
 *******************************************************************************
 */          @@Override
   final void setByIndex (int thePerIdx, Double theValue)
      {
      myDoubleArray[thePerIdx] = theValue;
      }
   
/*******************************************************************************
 * {@@inheritDoc}
 *******************************************************************************
 */            @@Override
   final Double getByIndex (int thePerIdx)
      {
      return myDoubleArray[thePerIdx];
      }
   
////////////////////////////////////////////////////////////////////////////////
// Public Non-Static Methods
////////////////////////////////////////////////////////////////////////////////
   
/*******************************************************************************
 * Sets the values stored by this DoubleByPeriod to those in an array:
 * For each Period in the ModelInstance, the value stored for the Period is set
 * to the array element for the index of the Period.
 * 
 * @@param theDblArr The array
 * 
 * @@throws NullPointerException     If any argument is null
 * @@throws IllegalArgumentException If the length of theDblArr does not match
 *                                  the number of Periods in the ModelInstance
 *******************************************************************************
 */
   public void setArray (double[] theDblArr)
      {
      rejNull           (theDblArr, "theDblArr");
      reqLengthNPeriods (theDblArr.length,
                         "theDoubleByPeriod.setArray (theDblArr)");
      
      System.arraycopy  (theDblArr, 0, myDoubleArray, 0, myDoubleArray.length);
      }
   
/*******************************************************************************
 * Sets the elements of an array to the values stored by this DoubleByPeriod:
 * For each Period in the ModelInstance, the array element for the index of the
 * Period is set to the value stored in this DoubleByPeriod for the Period.
 * 
 * @@param theDblArr The array
 * 
 * @@throws NullPointerException     If any argument is null
 * @@throws IllegalArgumentException If the length of theDblArr does not match
 *                                  the number of Periods in the ModelInstance
 *******************************************************************************
 */
   public void getArray (double[] theDblArr)
      {
      rejNull           (theDblArr, "theDblArr");
      reqLengthNPeriods (theDblArr.length,
                         "theDoubleByPeriod.getArray (theDblArr)");
      
      System.arraycopy  (myDoubleArray, 0, theDblArr, 0, myDoubleArray.length);
      }
   
////////////////////////////////////////////////////////////////////////////////
}
@


1.5
log
@Class renaming:
   ValueByPeriod  ==> PeriodValue
   DoubleByPeriod ==> PeriodDouble
@
text
@d8 2
d11 1
a11 2
 * A DoubleByPeriod is a ValueByPeriod {@@literal<Double>}.
 * <br>
d16 1
a16 1
public final class DoubleByPeriod extends ValueByPeriod <Double>
d66 42
@


1.4
log
@ValueByPeriod
@
text
@@


1.3
log
@ValueByPeriod
@
text
@a7 2
import static com.ibm.witm.Utility.concatenation;

a64 9
/*******************************************************************************
 * {@@inheritDoc}
 *******************************************************************************
 */                   @@Override
   public final String toString ()
      {
      return concatenation ("DoubleByPeriod ", myDoubleArray.toString ());
      }
   
@


1.2
log
@ValueByPeriod
@
text
@d49 1
a49 1
   final void setByPeriod (int thePerIdx, Double theValue)
d54 9
@


1.1
log
@Started classes ValueByPeriod and DoubleByPeriod.
@
text
@d8 2
d23 7
d34 1
a34 1
   DoubleByPeriod (ModelInstance theInst)
d36 3
a38 1
      super (theInst);
d45 22
@

