head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2011.10.07.23.01.53;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.1
log
@TemporalVariable ==> VariableByPeriod, etc.
@
text
@
////////////////////////////////////////////////////////////////////////////////
// WIT-M Source File BooleanByPeriod.Java.
////////////////////////////////////////////////////////////////////////////////

package com.ibm.witm;

import static com.ibm.witm.Utility.rejNull;

/*******************************************************************************
 * A BooleanByPeriod is a VariableByPeriod {@@literal<Boolean>}.<br>
 * This class has no factory method; instances of it are constructed as needed
 * by WIT-M.
 *******************************************************************************
 */
public final class BooleanByPeriod extends VariableByPeriod <Boolean>
{
////////////////////////////////////////////////////////////////////////////////
// Private Non-Static Fields
////////////////////////////////////////////////////////////////////////////////

/*******************************************************************************
 * myBooleanArray[thePer.getIndex ()] is the boolean stored by this
 * BooleanByPeriod for thePer.
 *******************************************************************************
 */
   private final boolean[] myBooleanArray;
   
////////////////////////////////////////////////////////////////////////////////
// Package Internal Constructor
////////////////////////////////////////////////////////////////////////////////
   
   BooleanByPeriod (PeriodMgr thePerMgr)
      {
      super (thePerMgr);
      
      myBooleanArray = new boolean[thePerMgr.getAllPeriods ().size ()];
      }

////////////////////////////////////////////////////////////////////////////////
// Package Internal Non-Static Methods
////////////////////////////////////////////////////////////////////////////////
   
/*******************************************************************************
 * {@@inheritDoc}
 *******************************************************************************
 */          @@Override
   final void setByIndex (int thePerIdx, Boolean theValue)
      {
      myBooleanArray[thePerIdx] = theValue;
      }
   
/*******************************************************************************
 * {@@inheritDoc}
 *******************************************************************************
 */             @@Override
   final Boolean getByIndex (int thePerIdx)
      {
      return myBooleanArray[thePerIdx];
      }
   
////////////////////////////////////////////////////////////////////////////////
// Public Non-Static Methods
////////////////////////////////////////////////////////////////////////////////
   
/*******************************************************************************
 * Sets the values stored by this BooleanByPeriod to those in an array:
 * For each Period in the ModelInstance, the value stored for the Period is set
 * to the array element for the index of the Period.
 * 
 * @@param theBoolArr The array
 * 
 * @@throws NullPointerException     If any argument is null
 * @@throws IllegalArgumentException If the length of theBoolArr does not match
 *                                  the number of Periods in the ModelInstance
 *******************************************************************************
 */
   public void setArray (boolean[] theBoolArr)
      {
      rejNull           (theBoolArr, "theBoolArr");
      reqLengthNPeriods (theBoolArr.length,
                         "theBooleanByPeriod.setArray (theBoolArr)");
      
      System.
         arraycopy (theBoolArr, 0, myBooleanArray, 0, myBooleanArray.length);
      }
   
/*******************************************************************************
 * Sets the elements of an array to the values stored by this BooleanByPeriod:
 * For each Period in the ModelInstance, the array element for the index of the
 * Period is set to the value stored in this BooleanByPeriod for the Period.
 * 
 * @@param theBoolArr The array
 * 
 * @@throws NullPointerException     If any argument is null
 * @@throws IllegalArgumentException If the length of theBoolArr does not match
 *                                  the number of Periods in the ModelInstance
 *******************************************************************************
 */
   public void getArray (boolean[] theBoolArr)
      {
      rejNull           (theBoolArr, "theBoolArr");
      reqLengthNPeriods (theBoolArr.length,
                         "theBooleanByPeriod.getArray (theBoolArr)");
      
      System.
         arraycopy  (myBooleanArray, 0, theBoolArr, 0, myBooleanArray.length);
      }
   
////////////////////////////////////////////////////////////////////////////////
}
@
