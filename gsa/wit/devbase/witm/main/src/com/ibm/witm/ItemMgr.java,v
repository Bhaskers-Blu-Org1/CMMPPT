head	1.12;
access;
symbols;
locks; strict;
comment	@# @;


1.12
date	2011.07.19.21.13.12;	author rjw;	state Exp;
branches;
next	1.11;

1.11
date	2011.07.15.17.42.31;	author rjw;	state Exp;
branches;
next	1.10;

1.10
date	2011.07.12.22.39.59;	author rjw;	state Exp;
branches;
next	1.9;

1.9
date	2011.07.08.20.45.59;	author rjw;	state Exp;
branches;
next	1.8;

1.8
date	2011.07.07.19.05.02;	author rjw;	state Exp;
branches;
next	1.7;

1.7
date	2011.07.05.21.15.04;	author rjw;	state Exp;
branches;
next	1.6;

1.6
date	2011.06.30.23.43.49;	author rjw;	state Exp;
branches;
next	1.5;

1.5
date	2011.06.30.23.25.40;	author rjw;	state Exp;
branches;
next	1.4;

1.4
date	2011.06.30.22.03.39;	author rjw;	state Exp;
branches;
next	1.3;

1.3
date	2011.06.22.22.09.43;	author rjw;	state Exp;
branches;
next	1.2;

1.2
date	2011.06.21.22.18.04;	author rjw;	state Exp;
branches;
next	1.1;

1.1
date	2011.06.16.23.36.12;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.12
log
@Embodiment ==> ModelInstance
@
text
@
////////////////////////////////////////////////////////////////////////////////
// WIT-M Source File ItemMgr.java.
////////////////////////////////////////////////////////////////////////////////

package com.ibm.witm;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

/*******************************************************************************
 * "Item Manager"<br>
 * An ItemMgr {@@literal<I>} is responsible for maintaining the Items of a
 * particular ItemCategory that belong to a particular ModelInstance.
 * 
 * @@param <I> The type of Item being maintained: either Primitive or Tuple
 *******************************************************************************
 */
abstract class ItemMgr <I extends Item>
{
////////////////////////////////////////////////////////////////////////////////
// Private Non-Static Fields
////////////////////////////////////////////////////////////////////////////////
   
/*******************************************************************************
 * The List of all Items maintained by this ItemMgr, listed in the order
 * in which they were created.
 *******************************************************************************
 */
   private final ArrayList <I> myItems;
   
/*******************************************************************************
 * An unmodifiable view of myItems.
 *******************************************************************************
 */
   private final List <I> myItemsView;
   
////////////////////////////////////////////////////////////////////////////////
// Package Internal Constructor
////////////////////////////////////////////////////////////////////////////////
   
   ItemMgr ()
      {
      myItems     = new ArrayList <I> ();
      
      myItemsView = Collections.unmodifiableList (myItems);
      }
   
////////////////////////////////////////////////////////////////////////////////
// Package Internal Non-Static Methods
////////////////////////////////////////////////////////////////////////////////
   
/*******************************************************************************
 * Stores theI in this ItemMgr.
 *******************************************************************************
 */
   void storeItem (I theI)
      {
      myItems.add (theI);
      }
   
/*******************************************************************************
 * @@return An unmodifiable view of an ArrayList of all I instances maintained by
 *         this ItemMgr, listed in the order in which they were created.
 *******************************************************************************
 */
   List <I> getAll ()
      {
      return myItemsView;
      }
   
////////////////////////////////////////////////////////////////////////////////
}
@


1.11
log
@Category ==> ItemCategory
@
text
@d15 1
a15 1
 * particular ItemCategory that belong to a particular Embodiment.
d27 1
a27 1
 * The List of all I instances maintained by this ItemMgr, listed in the order
d31 1
a31 1
   private final ArrayList <I> myInstances;
d34 1
a34 1
 * An unmodifiable view of myIntances.
d37 1
a37 1
   private final List <I> myInstancesView;
d45 1
a45 1
      myInstances     = new ArrayList <I> ();
d47 1
a47 1
      myInstancesView = Collections.unmodifiableList (myInstances);
d55 1
a55 1
 * Stores theInst in this ItemMgr.
d58 1
a58 1
   void storeInstance (I theInst)
d60 1
a60 1
      myInstances.add (theInst);
d68 1
a68 1
   List <I> getInstances ()
d70 1
a70 1
      return myInstancesView;
@


1.10
log
@Compound ==> Tuple
@
text
@d15 1
a15 1
 * particular Category that belong to a particular Embodiment.
@


1.9
log
@Class ProblemMgr.
@
text
@d17 1
a17 1
 * @@param <I> The type of Item being maintained: either Primitive or Compound
@


1.8
log
@Period Primitives.
@
text
@d6 1
a6 1
package       com.ibm.witm;
@


1.7
log
@Implementation ==> Embodiment
@
text
@d64 2
a65 2
 * @@return An unmodifiable List of all I instances maintained by this ItemMgr,
 *         listed in the order in which they were created.
@


1.6
log
@//=== ==> /////
@
text
@d15 1
a15 1
 * particular Category that belong to a particular Implementation.
@


1.5
log
@Re-arranged source code.
@
text
@d2 1
a2 1
//==============================================================================
d4 1
a4 1
//==============================================================================
d22 1
a22 1
//==============================================================================
d24 1
a24 1
//==============================================================================
d39 1
a39 1
//==============================================================================
d41 1
a41 1
//==============================================================================
d50 1
a50 1
//==============================================================================
d52 1
a52 1
//==============================================================================
d73 1
a73 1
//==============================================================================
@


1.4
log
@Various revisions.
@
text
@d23 1
a23 1
// Package Internal
d27 8
a34 1
 * Constructor.
d37 6
d50 4
a73 17
// Private
//==============================================================================
   
/*******************************************************************************
 * The List of all I instances maintained by this ItemMgr, listed in the order
 * in which they were created.
 *******************************************************************************
 */
   private final ArrayList <I> myInstances;
   
/*******************************************************************************
 * An unmodifiable view of myIntances.
 *******************************************************************************
 */
   private final List <I> myInstancesView;
   
//==============================================================================
@


1.3
log
@Tuple ==> Compound
@
text
@a7 2
import static com.ibm.witm.Utility.*;

@


1.2
log
@Revised comments, etc.
@
text
@d19 1
a19 1
 * @@param <I> The type of Item being maintained: either Primitive or Tuple
@


1.1
log
@ItemMgr <I>
@
text
@d16 4
a19 2
 * An ItemMgr {@@literal<I>} is responsible for maintaining the I instances of a
 * particular Category {@@literal<I>} that belong to a particular Implementation.
@

