head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2011.10.07.23.01.54;	author rjw;	state Exp;
branches;
next	;


desc
@@


1.1
log
@TemporalVariable ==> VariableByPeriod, etc.
@
text
@
////////////////////////////////////////////////////////////////////////////////
// WIT-M Source File IntegerByPeriod.Java.
////////////////////////////////////////////////////////////////////////////////

package com.ibm.witm;

import static com.ibm.witm.Utility.rejNull;

/*******************************************************************************
 * A IntegerByPeriod is a VariableByPeriod {@@literal<Integer>}.<br>
 * This class has no factory method; instances of it are constructed as needed
 * by WIT-M.
 *******************************************************************************
 */
public final class IntegerByPeriod extends VariableByPeriod <Integer>
{
////////////////////////////////////////////////////////////////////////////////
// Private Non-Static Fields
////////////////////////////////////////////////////////////////////////////////

/*******************************************************************************
 * myIntArray[thePer.getIndex ()] is the int stored by this
 * IntegerByPeriod for thePer.
 *******************************************************************************
 */
   private final int[] myIntArray;
   
////////////////////////////////////////////////////////////////////////////////
// Package Internal Constructor
////////////////////////////////////////////////////////////////////////////////
   
   IntegerByPeriod (PeriodMgr thePerMgr)
      {
      super (thePerMgr);
      
      myIntArray = new int[thePerMgr.getAllPeriods ().size ()];
      }

////////////////////////////////////////////////////////////////////////////////
// Package Internal Non-Static Methods
////////////////////////////////////////////////////////////////////////////////
   
/*******************************************************************************
 * {@@inheritDoc}
 *******************************************************************************
 */          @@Override
   final void setByIndex (int thePerIdx, Integer theValue)
      {
      myIntArray[thePerIdx] = theValue;
      }
   
/*******************************************************************************
 * {@@inheritDoc}
 *******************************************************************************
 */             @@Override
   final Integer getByIndex (int thePerIdx)
      {
      return myIntArray[thePerIdx];
      }
   
////////////////////////////////////////////////////////////////////////////////
// Public Non-Static Methods
////////////////////////////////////////////////////////////////////////////////
   
/*******************************************************************************
 * Sets the values stored by this IntegerByPeriod to those in an array:
 * For each Period in the ModelInstance, the value stored for the Period is set
 * to the array element for the index of the Period.
 * 
 * @@param theIntArr The array
 * 
 * @@throws NullPointerException     If any argument is null
 * @@throws IllegalArgumentException If the length of theIntArr does not match
 *                                  the number of Periods in the ModelInstance
 *******************************************************************************
 */
   public void setArray (int[] theIntArr)
      {
      rejNull           (theIntArr, "theIntArr");
      reqLengthNPeriods (theIntArr.length,
                         "theIntegerByPeriod.setArray (theIntArr)");
      
      System.arraycopy  (theIntArr, 0, myIntArray, 0, myIntArray.length);
      }
   
/*******************************************************************************
 * Sets the elements of an array to the values stored by this IntegerByPeriod:
 * For each Period in the ModelInstance, the array element for the index of the
 * Period is set to the value stored in this IntegerByPeriod for the Period.
 * 
 * @@param theIntArr The array
 * 
 * @@throws NullPointerException     If any argument is null
 * @@throws IllegalArgumentException If the length of theIntArr does not match
 *                                  the number of Periods in the ModelInstance
 *******************************************************************************
 */
   public void getArray (int[] theIntArr)
      {
      rejNull           (theIntArr, "theIntArr");
      reqLengthNPeriods (theIntArr.length,
                         "theIntegerByPeriod.getArray (theIntArr)");
      
      System.arraycopy  (myIntArray, 0, theIntArr, 0, myIntArray.length);
      }
   
////////////////////////////////////////////////////////////////////////////////
}
@
