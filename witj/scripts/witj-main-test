#!/bin/sh

#-------------------------------------------------------------------------------
# Sh Script witj-main-test
#
# Performs the main set of tests for WIT-J.
#
# CDs to the data directory.
#
# Removes the old main-new.output file, if any.
#
# Runs the Tester with argument "unit-test".
# * The Java Class Path is given as:
#      the directory that contains the bytecode for the Tester and
#      the WIT-J/Java Jar file.
# * The Native Library Path is given as:
#      the directory that contains the WIT-J/C++ native library.
# * All output is directed to main-new.output.
# This performs a unit test of WIT-J.
#
# Runs the Tester with argument "status-quo-test".
# * The Java Class Path is given as:
#      the directory that contains the bytecode for the Tester and
#      the WIT-J/Java Jar file.
# * The Native Library Path is given as:
#      the directory that contains the WIT-J/C++ native library.
# * All output is directed to main-new.output.
# This performs a test of all the StatusQuoExceptions in WIT-J.
#
# On WinSDK, runs unix2dos on main-new.output.
#    This is done, because main.new-output has a mix of Windows line delimiters
#    and Unix line delimiters, whereas main-saved.output has 100% Windows line
#    delimiters, because its line delimiters are specified as "Platform" in RTC.
#
# Compares main-new.output to main-saved.output, storing the differences in
#    main-diff.output.
#-------------------------------------------------------------------------------

cd $WIT_HOME/witj/test/data

rm main-new.output 2> /dev/null

echo
echo "Running the main tests for WIT-J."

#-------------------------------------------------------------------------------
# Unit Test
#-------------------------------------------------------------------------------

$JAVA_HOME/bin/java                        \
   -Djava.library.path=../../cpp/$PLATFORM \
   -enableassertions                       \
   -jar ../bytecode/witj-test.jar          \
    unit-test                              \
    2>&1 | cat >> main-new.output          \

echo                                   >> main-new.output
echo "-------------------------------" >> main-new.output
echo " Contents of UnitTester.output " >> main-new.output
echo "-------------------------------" >> main-new.output
echo                                   >> main-new.output

cat UnitTester.output >> main-new.output
rm  UnitTester.output

echo                                 >> main-new.output
echo "-----------------------------" >> main-new.output
echo " Contents of copyData.output " >> main-new.output
echo "-----------------------------" >> main-new.output
echo                                 >> main-new.output

cat copyData.output >> main-new.output
rm  copyData.output

echo                                >> main-new.output
echo "----------------------------" >> main-new.output
echo " Contents of unit-test.data " >> main-new.output
echo "----------------------------" >> main-new.output
echo                                >> main-new.output

cat unit-test.data >> main-new.output
rm  unit-test.data

echo                                >> main-new.output
echo "----------------------------" >> main-new.output
echo " Contents of unit-test.exec " >> main-new.output
echo "----------------------------" >> main-new.output
echo                                >> main-new.output

cat unit-test.exec >> main-new.output
rm  unit-test.exec

echo                                >> main-new.output
echo "----------------------------" >> main-new.output
echo " Contents of unit-test.ship " >> main-new.output
echo "----------------------------" >> main-new.output
echo                                >> main-new.output

cat unit-test.ship >> main-new.output
rm  unit-test.ship

echo                                >> main-new.output
echo "----------------------------" >> main-new.output
echo " Contents of unit-test.crit " >> main-new.output
echo "----------------------------" >> main-new.output
echo                                >> main-new.output

cat unit-test.crit >> main-new.output
rm  unit-test.crit

echo                               >> main-new.output
echo "---------------------------" >> main-new.output
echo " Contents of unit-test.req " >> main-new.output
echo "---------------------------" >> main-new.output
echo                               >> main-new.output

cat unit-test.req >> main-new.output
rm  unit-test.req

echo                            >> main-new.output
echo "------------------------" >> main-new.output
echo " Contents of solver.log " >> main-new.output
echo "------------------------" >> main-new.output
echo                            >> main-new.output

cat solver.log >> main-new.output
rm  solver.log

#-------------------------------------------------------------------------------
# Status Quo Test
#-------------------------------------------------------------------------------

$JAVA_HOME/bin/java                        \
   -Djava.library.path=../../cpp/$PLATFORM \
   -enableassertions                       \
   -jar ../bytecode/witj-test.jar          \
    status-quo-test                        \
    2>&1 | cat >> main-new.output          \

echo                                        >> main-new.output
echo "------------------------------------" >> main-new.output
echo " Contents of StatusQuoTester.output " >> main-new.output
echo "------------------------------------" >> main-new.output
echo                                        >> main-new.output

cat StatusQuoTester.output >> main-new.output
rm  StatusQuoTester.output

#-------------------------------------------------------------------------------
# Compare
#-------------------------------------------------------------------------------

echo "Comparing main-new.output with main-saved.output."
echo

if [ $PLATFORM = "winsdk" ]
then

    unix2dos main-new.output

fi

diff                                                                     \
   -I "^         Build Date:"                                            \
   -I "^         Platform:"                                              \
   -I "^         Run Started At:"                                        \
   -I "^	at java.util.Collections\$UnmodifiableCollection.clear(" \
   -I "^         Lot size tolerance:"                                    \
                                                                         \
   main-saved.output                                                     \
   main-new.output                                                       \
 > main-diff.output                                                      \

